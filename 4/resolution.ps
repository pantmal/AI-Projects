%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: resolution.dvi
%%CreationDate: Wed Jan 25 18:01:44 2012
%%Pages: 87
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentFonts: LCIRCLEW10 CMSY10 CMR10 CMBX10 CMMI10 CMR7 CMMI7 CMSY7
%%+ CMBX12 CMTT10 CMTT12 CMCSC10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe resolution.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2012.01.25:1758
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 65 /A put
dup 66 /B put
dup 75 /K put
dup 77 /M put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{14 -250 1077 750}readonly def
/UniqueID 5000772 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EFB5EA2C1CC5BC4
10B9F2CFB15EF40B4B89C2A46D55B44083CE513F274692BDA4214C3589FD979D
B2CD9A236F4956726C25F6B312833A1725FC7BFD0E32050766FBE0B52A41B892
AA204DCD9E13997B76642DB5CFA68C3758C96E22AB22CA014FDB7FFACE8100D8
6EA5340E38D8EA9008D5ADF2AFAE730F90F8AD9983E6AF08B88025F164164150
DA506AF61114182AB0700EC3FB50C6B25D5E9620CAAFA900142A4F10D81FEAB9
A09A91E6A2956BDE942CDF1A891C42ED3C68C45AAB5345E25574E4A4DBDE20EE
89A9D60674D0C54EB35F3EDEC4AB4F288DF2E67BC4CA0FD6720B8E4C70A78E39
293F6B47872FE37478C1EA6E5F4C743C7DEF0E14798DF084AEF57C76A8FB3029
43AFF4656E4C3F1936D4DA34DAFD5F13DC3F041BFD31E514B6CB2E1079820F8F
72957A61141D174A3A2251A041C26AAF4A7E044F3BA2AE0214543DBB177E8DB1
379FE6F4102FE13F79D6398BD3F14F2F307050552C6AA630921A10EED75A8642
711E4A180C514153F148FDC620C195FB4B23B4871DC872FE5B430FF764026579
1992C929FAD86170EDA3D878AD9A436FD2C1835E49EFE677903571C4F62CFA1C
49EAC7DA11D0AB5F8C24511843A296DD2E7937A514AA2CD914A87F3FEFB71ED9
D7A05FD3DC8DC6533584966DBA93352E9AD0EA53A5F37F188569317B90357017
BCF38CC31A28E5B46A777190A43B9CAE304213C5169B0251435ACF67FCC6F8FB
CDDFD84FD890C6618EF3CC08A040A5B497D42973C83B1EFB76B0710FCE274A1C
6596C597CE44EB334D0A1A1AC972E99CAB3ADC778014825E9AC4159648DA2B34
83BF1D727273F44A59CD4699428BE2B74F3AA2B8AEF84C36BCCB04B82F0963BC
6BC08CE991E59D24F1D0D44551B84F6406375AEDD300D69AD5A89541D4CBF9DC
E5D3F2FBFFBF941D0E5AE6B77FC92DA7C9DEF93BC032E03F689E8D4F8D4FB80A
1C05E1529B0F673F088D4C57C079601D793CC3A46354B25D5D75458FB245A1CE
C656E40BD253899384398A32D445B1230E5B24A818158F229335EF9D3EBF75A7
21AD7DEFA907546C018F47E887BCD0A993A7720640CCBC12D2D42D2CA90AE71F
908940EC2E6CB39591A9D8E30D637EFD4C8343C1E4A88671FD27108DAF710AFC
FDB7DF6566EE45CF0A76F6BDBF021B71D412261062D739E75149D6B937119580
8669B473EA9183E70F462EC105A0665A295708D1F483F9389895B374FDD67881
7F417BECF2D2EDB34798D5D3A5A3F5BF92282792F8CC96361F601169954764C5
8D593F790572C25F3B26193035ED927CD2602C554AE757B4FE987B877EB96CFD
08BD018DE07C7E5CC150A304BC2F387D67F2820F0D264AC3884B442D93A5B0A0
36E8609C00A4374C7783477C2AF0A7134BFA248D30160D38F368F079F4616D52
D3A9476E7D8596E9A3D9BFBC2019619DFCE7AB4EE644D857A7DD3A2AFC11FF9D
289015137E3114C63868D50B249949F1230823DB2796EC0F1B14868ADDB5DCE6
0296295045E8E36D5864DA158F9F639C28A7DD9944DCB65171D2EF09EC05BB77
F4EE8759AACDD84B0879FC1806238203200B03B10DADC2FF2F9F8BBA214797A7
91ABA7E1B569361DF3112126A3DA49B17FE9E73877D3FC8479F06241F3AD8B84
BF0A18FA58BCEDF5C167301F064B491AA3499899A4A6935CE151CB364A9D685D
A399ADF9E9D26EF437E17CE944178F29471FBE916E70DCE20A46754959C194A8
FC4F1ADB48EC62BE50F188504B66D4168FB67E6D446E8A8D51F6D45EE31D30F4
0E188F0D0949DE4CA8A29988F47EAD91D63219E3920E3629F15796B5234AB563
D0AE0C1E7E3697BE03714D2585BB02BDEA7129A4C244D6FDEEF5B4495946BAF0
5DF2AFDD4ACEEDE36D33DA51CEDE6A9A0CDA55E913E4E0E3D5614D204C691D65
4B99AF53ABB928374B509D95F018DAE2FD6D4ADDFDC2F1FE5C1D6E6D73A43674
89E277C65E5D12C27868C44BC3DA5184C46399913EEAA026FB0A2F859F407DAD
345E2FB9CE7119FDC77AB5AA0C1A0CAE7DFC1AEEB11348A10D5F4A59CA6E24F1
C41ACE4B81553FEE3CD454D89708FAE41BDFE70ABE7E108FDB0D3D33BE4FEFEB
A9703A573F4C186623A321679D025C1B7A9539F96F593B3B8319BFFCC5C02D37
E3B5394CB13242A96FFE09EAE88BF6C758E08C3A03F76421EB7005450B5A507B
5E33F8DA38566CBA12266D7B566F2490DAD9A545F3055325F67AB31985D61E59
0203C9B6131FBF0F69E089721463A30A219AF5726D5D4174B3B8E5EB34C6C8C7
4DD038433E77E644034A6BE35C39B004F82A9DBCA444692721B4CF9DBCC94776
CFBE55D551B19487881B9777D94CB880E59B5E4799E3A597603EE8F477580BA2
DF2D8E7B09E845DD6B494442B5490282A4CB1F874FF45ED8E6943375F645511F
DFC8464DBC46D5FBA91916EF056DB3020A7DF95F34B789CAC170E2BDC7604271
5C0DD4FFB031C3AE709B03B1BD7BEF53A20929C651D05EEF0231C832C59B3528
EFB413F8E56024802A0EFBE42E46604FC504DF635385CA451BACFB23151B911F
4D819A4994D15A56E3438897B2B6B85090987C6958E8B2011F2C6A8A01AB2E50
C46764CA9D67A5D55209BDD9E2D8044F5544E44B57C88D1DBAD24297F4BD8C80
1ED43C57AED3FA2AA049AE82434F8BB2D8F747D848CE3B452796B9858D0CDAF9
872AFA8467079D7B851BFCB2E6779512FF9EAC57B9165E58CD3C5D02B794800A
C53309B4B75B23515D59910168A7E5AD78E57B4095537FAEC3A06F1466CE081F
9E312F9D52E42C97C55C4BE32C646A880528CE5F8102F232E95B08141C42F8C3
C7A7D2056C6B4B230CA168C99EFC1E971F3DDE0A9E04BD357844B368288492CC
5E17153FED3A43F6689C1DDD5229F19A775DE8894A12EE5A197D38C752087988
AAC538257328FDB54447B3BFD402368F2DF49E33CD3F9A82D8889C53FC75A4C6
643ECB16638E5C6CD8E787AA9BE3965D04F951A3F354A77040F3E5F76A7EA4D0
3FB498FE66DDED322C93AAD5186728FDBE376F7FC4BAC346FA0AC06B11972AF6
0AE1BD050B30234DA4E5EF29F4047A2F34A18B24565285253FCAF16AC570B2F5
85449BCAFDFFB6A07C4141BCA92AD1D005C8DABE3E962715AA47C7CEEDE96E63
DA807B8E325DB3890EEBFA7BB372C5750ABAD2032D37F7C68DAE5F443B002886
BC9C91589B2FD9F179FC6917501E4001E807FA3156E5B73BBFFBBF9559D17A2D
25B2A63D6A345A9677D5677912ED93E73750F89A75B7B54606E35C62E77C4FAF
EB3F84CBF1C772B6B13E7FDFAF1F219F5B04B6B14B17CD3F07821F0798354937
8222E85195AEA671DA92CDFBFD3058896E86BFEDF13A62950DF4E3DA8604841C
F0D78AB2904A318E660B6B335E4F62DCD5898AB4F333CD746774DD87F11B3FF4
C5274527E4A3CA9E511D24C48D56985455AFCE3662984F49130839E2B38BD3E6
67BA25CB90BAA0A45E466991EA65723C37F2B0955A9CA1DB6FFE69927FBAC3FA
397472CBD54319AA97920BA6FB25F991DA1ACB500EB26211E473BD72E940C9D4
AB6112A03FC3A8CE36834DC7EB03F95EB32B403D019C16C11610959B2328A4D5
1691BC891694ECD31E2E5EBC3FB12078189C5A969615A4F87CA74C15A288E347
5D3C9ACAEBCF06D49278A4ABAE8CF01A5F150DC29A7792CE8D77B466AA299FE8
E54BB5CC22A9DB3E69D2364EF491DA97FCB2770318C8AB56871B210AC8E85BA8
CA74D23AD0DDC11EDD57A3E72A6DD89DE0FAB990A22873F2BC94F1DE03C960FF
4A75A37152A0E12E0B49A3627BD9C4AE4AAB0CDD819AF5F1771E58A2992DDFF0
0EDF1763F8927DC30E1230E1A7F9525D988C1D740C08904D0D50FDAA091414F3
B494590C40C0CB40D5CA6D566E28B939A52F7D8F420887C8317DDC9D157C21C3
1B0844DF100CAC270F973EFEEBE94D67F723E44603F337AA93D55BD0418D25C8
994F4ADBCC787D8E51F91CE1D4691D92E6D8297DC04C7BBEE8764E0FD964E315
E82EA6C75539847BFB8B3435549FFFA075D2EF1F8DF4CD544DE71C95D655A4F9
E68D31062353297825414F380BAD3A6C0E4A439F6988BA7FC99C0118A8A799C5
B1F3633102CF2B0BC0A45046246E2823450736727A1FEFC58326E488C67E070E
9F37F9E4EAE6AEFE2D1D316C54F6589E3F59874A3FB90C4A842E160B9E48F3A1
CECC5A2BD40DBEC2CE677575BF488D75B6C32BA43263831E4BE07DB5723C79FD
69A85AE2B2BFA1D4C799E1D72C7BC064E7A1D90D844127073B282B5F171A26B2
5E7CCF9586230E638590A8DF79808132C9E6B9511623A3D5771F629363933912
19A0B3AE95D289B978BC8F911CACEFA9431E05336CCBA8DDE134A08F901FA85C
BD06DC3DA23F50D14DBFD09E05473A2CBF619567D26C5E86C7C393B34900DCBC
C8997ECFAA195969B139B623C6EB22856EA878F1CF4F5F5F893442F88E227D12
00CD0D77792CE4386AA96D21DFBCB96D683AF80F19C4E7B67FDF7916401A86EE
DF17C56E3D6CC82377C0B4BFAAEAD4B4855AF9CCFA2E5775E433E89850673D1C
8D59A21D0C650B647978A7B3811DB18D78A37BE5CB17356E462A2E87D368E7BD
9B76AE085EAC7F88517DB92AC468D885540CEF519934B1FD3284CEA357E6D858
42A744D60E493E863DE9D3EFB3471806F0C8F3DF827EE84C5F7014C429E4E80A
C9F14C93F679E3A1FFA46B15BE98C998816B1ED83AEA193CEB3DB6EF0A5454EA
A23DBA49C0D73AB05A767AA770FD7C53212F1C8272356D996E56F7195D2475C7
00561F2A6001BC268F96BDD6238C70B293621073CE1301DC942C4E0238BEE728
301D691997B23C601E6FCD8E84F5B83E694518C3A751D98FFD4CEA832505883C
90497571DB47CB24BFAB0E803CECA934CE86E4936EC36C835823D618A6710171
B7C59C3BDC4BFD9680A59EB45211A1B376A7C8729B021D670F45B282593BA941
B6CFBA53190C523DF1DDA8BA7F473F1BC92C2B1AC61E86D6D890009C4519CFCE
E62C8763DA5E4DAB46399BD1E40A71BEB4625822DD927E23E570F752B73EE952
2A925BA2421B9649456FCEC10A70B8E0D4A07A9BD9ED7B1C1BB97C40839DEF72
B1710980E028185C512D10D2C825F946840914BCEA2A6554B84D5F12557F1AD7
560B34048EBC1491EEF08B194610FF8EC6543900F295D08DF1CA591331A18FD6
031F58D1D42FE8C3FCF7DA11E974FD196D675B3AC6CD673A01FADB0CE37C4234
1F6E4C675DFAC7199E8FD48244C321037EB803B5F6CCBA75A087AB0309FD1A2F
B63778B1881C19E284DCF8EB9496663A5E5003520B0B6A9F0996D73E0E0C9F3F
9C7483492B35879E09F6BDDB94B4DBA488E9B6AD7CC3D82A11CBD15BFE9234C3
5B6EC2D7D0FFD5ED04D17A614096570C5AAC44F18B413F599E582B5C6C1C1B42
057EA1731861241C6ED43565BB5C59723C7805A4F9C18BA26C78CD5860B1AEEA
3A7E25A6BDEFFFF9115A891A69EBB77342F6171AFEB78B229B51C8B359C3058C
A6172250C80AF4A94736E2FFC7F79DFD109DCEC00DF31356B2E73CB15A4FADE6
B1B552EC46BD271B7EBB953456DEE4B47BA64E33B286AFC2F5B257F77AA32228
57F1420E6BF8DBB04EE05F66DB69AAB6BE81168EDB34E68E1D969F79B2C5D6DF
98F6801E80060AC830E3B127D950488BAA0E315B63929F19FC3582DC40E4BEB4
58589F0110D987ACA0A79325FCA42A9ADCF10032
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.0
%%CreationDate: 1991 Aug 20 16:45:46
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 63 /question put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-1 -234 524 695}readonly def
/UniqueID 5000833 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660FE13FF01BC20148F9C480BCD0E
C81D5BFC66F04993DD73F0BE0AB13F53B1BA79FE5F618A4F672B16C06BE3251E
3BCB599BFA0E6041FBD558475370D693A959259A2699BA6E97CF40435B8E8A4B
426343E145DF14E59028D4E0941AB537E34024E6CDE0EA9AF8038A3260A0358D
D5B1DB53582F0DAB7ADE29CF8DBA0992D5A94672DFF91573F38D9BFD1A57E161
E52DA1B41433C82261E47F79997DF603935D2A187A95F7A25D148FB3C2B6AA32
6B982C32C6B25867871ED7B38E150031A3DE568C8D3731A779EAAF09AC5CE6C5
A129C4147E56882B8068DF37C97C761694F1316AF93E33FF7E0B2F1F252735CE
0D9F7BCE136B06EE967ABE0C8DF24DCBBF99874702ED252B677F407CB39678CC
85DDFC2F45C552BA967E4158165ED16FECC4E32AC4D3B3EB8046DCDD37C92FDF
F1F3710BB8EF5CA358ABACA33C7E5ACAD6BF5DC58BDFC3CF09BA2A38291D45A4
C15FF1916FE2EC47FDC80911EB9C61F5D355BEDFC9DB17588547763AC5F0B1CC
12D2FFB32E0803D37E3281DA9CE36C5433655526ACFB3A301C56FAB09DF07B5D
048B47687348DEB96F3F9C53CE56DDD312B93D3918CD92AF53FB9461864D11B8
0138918D0B1270C54873C4012CDE6F886DB11BCEA04B023EBB43E0D0A06BE725
741D08B9DB688731A6C9886C15A83C28DADCC81385EA239E045E8F3670CE03DB
9EE77ED067036595C9F3B1854343BE3A12E486B6E5A2F8AC44FA5378D28DCCEE
306B0E283AA444423F9A4FF38E2B56DCF67A39CEB2C643DAE86865517D5D0371
CB8797208ADEC637330A3A57902C9A88EDB75A7C16FA9850075D9F19578EC666
1353CC1FC512D59DFF847ACCD3D472F96D5B55BA96D27D3D3E69F0541379AEC1
1984945F260D44E56CA7B05A670EFE675376AF77CF08EA2DC1F7B1CD755A802E
E437D861B14F5AD8077BFCAE413D7ACBCB70F46A1A26323DC89F9353872994C4
95A63F8B45673EE841EB756649E27AF5F0953D9568E8E91593CFC8D7D0BC4BCB
7A839F46871AFE7660ED74F23FEDA827AF05D02C626E7C6BCA08FDB3F9C065F5
6E7D28A645CC77FC719D6FEC4A6E9C74B037A0408C80E2AB7E4DCDBB64958017
3374DFFA5DCA1D6BBE5E9C2537C9A0FD08C41DACAEC177F4F2C99837D740C5B3
D1311C392A5BF69102B56256CE0F1F4EC22AC5AFA60D7EE888746B42C7C5BAFE
C0AD7A9B5EB8BE7CD845CEE17F9A9A3D43C730C40BF2353B454920088ED8FDD5
1C3472B8A6957C179C9B58A21EE2E5785D235CBF95356AD832C0B99F5166DFBC
E03A8AAA529B6FB84C9FF92CE422920E68DA49841B627E7CE33E5C000B7FE4C1
7F7C8CB1350C1768F0711CDBF801EB4A01D33990D867236D9E5EAAE507F4025C
8D82FE0584C4192D05788A24257B363008E6CDAADA519F2F23169C900F67A255
80EDE65E51AA7A63C57102B92E08EB28435016F6AFA660BEDAE189A6EDD22816
948DDBD9F7D203DD94634C9E981040003DCBA7E8802F16B2475C0B480E5CF331
01FA6CC7E0EB26B904258B620FAF8BB608AC0A22C079995D46F7CB52DC1807AB
2066708BEE3D9B08B856DCE1852E00AAACFC408FBA52E973CF0A33279B5FB219
3EBDC6ED0FA78E4FA0DADF5B1E069B5605AA134F4AE8E8296E0835D849BDF045
C6AFA7D855102EB5ACB98A6653EFCA057078DF669A43D3B169B488A0BEF080BF
3569118B277EE0972664C6618F8E2C75A50FD6F28AF88BA0D84357B8DA101182
144F204E066079E675AF1A2DF083E7CE76E263FD881CDE349A66448F7A369655
AFDBBA3FFE21D7B2217A8C0B7417136E69C066A8731774A02465726F3640FB45
B0CDFA7CE2C8A1E5DAFFC06B6D699094CFEB808AAC4E020965D1A9BC8C61BC98
B5F0D8F89C39C39812F35F6425715FF7C96D54EA3FD7FEF42EF5AEC00C0F9CA4
11585D1619EF8A87FB7C3081AD2B58652A100ED001AC23084B4B3F3F1CF907BB
4961567F91F5F2601DFC14907E927DA5213671DE1893F062BDB71AF09C92167B
300A2EDD42AD6BD7CA23F711580D2E7E778F683D7D1F535B56577664E3AE44B3
D7583764D618039DE1B9600731B9FB4E4A7A8413BBFE47F7913927C6FA7D2E9D
A160642CD81F7024EC80C1B2AD29D581541DAB042B141B687AAC4054F80D32E7
8E1639DBAC43C2C1E5C032DA306F4F2A9704EA0249E6A444C17E2B136BCBB060
49F441E79A6E0B4E02CF0A97D8767C48DB51C72AD5C1B47717C7E0C2F1552C44
2744CDDDCF302BC3F4813A201CE1EECCCB3B89C7A65355EE874A220BC508197C
BE36EABD741FE8C1691A3ED3963364D3E27ECA196DBD3AA168FD19B616FFD6AE
6DDC24F564A72EB7F900A4559E71216EF128C4FF2DFCFB0C6C413F9C8215EC3A
AFEC0C5A3D3BACDE944FD8123C806AEAA96CAEF4EBDDBD30013089AD5A578084
FD098424C240B6D4DBD771A0B9EB2FA797D48FA243BD663399D908F19F59272D
00E14A8582DB8571CD2D1933F1C494F2FFA3F1004E6FA9EEA0C1859EFEC0CE1E
C30FF110C1308E0DBD6D77EA25ECA7A5166B6C7679FEEE17B9942D85B20A41A9
9E5E295BA2DBF0497C2AFF9F48F25D42D78FDF70E4E6CFBE635789AA6F56F0E5
2DE8EBE865FC95244C88BD6283BE3242B6DBB2FDA4A3F15379FC376EB9FBAAC1
4334D96D81B29386576CC3163192B786069100494CF1AAA5B2696CC772690805
7E2265E02A06FE1F7B20E51D3383FE92D4C5652A0B9EE394B3D49648DC02DB86
28B9436235262C458DDB41B9CA80F8B540559F2850E34C3F78BD567F17111347
1B24F4E2E3A9671B6D695B95604D4905AC811784344AFADFA63D2FB9CB67CEAB
0A7570426A036AADFC3E839B659650F76A1AE58B0A5688ADEB814FE17F5B78CF
46AB07E199B63E0877A3822877767835964958B63C450B3081C2103BD84A6239
9183B77D95578BEE62A3FA5A982088C89677B9E8FD9CDCD8ABE78C3745373D34
974859158E59FE904669276D46A9FDB949C8B69B78521A8C5B5CAAF603465A56
4AABD25ACB850F72473F0A893A6060DA3AF6960DDEFB2A89185F484AAC3F3188
2724E5AE2EAB0904B3E353FE0FAD9F9A7123110E2EB6129CEF2F5CE06FCE1944
19C0A26C47ECF006DE9D8602CB12F5A9FC16FEC87F4ED36CA486E1E69003137C
0C3F033739022F2EC2407A37513AE497A0881615FD876078FA8B1CBCF0EB24F4
E396874E11502115B1FE048AB7A9349D622766B44D7674EEFA253677D788029D
6D08A0EB749606BB693D50151ECF994BD83E58B192B99B2E8E81E8037F0B9369
72992CA401FB3E148ABEE0662A35D301E8FA351F710B6DD579A470806B26DFD5
89877127F9BCF6EF91713633681E6C4005A66EF14E0E58F078A9F09B798D03E0
B8EE520D73290270557A17A1FAAAD92CAABFA6F8DC753CDE4FD33AEBC59CB415
5A8B86C7EF87850F3B317F5D7CA297C0E0154EDC35071B323A3F912839F48687
EEEC272586D7FEDA868D280CDEA6F762FB70CADD87DD3B385204F780FB929D84
B73E09C8F17127AD9936B0D8FA469461EB27D7C7334FA8FAC9213A25C91D4385
40BB96CD3EA9EB41AFF9BF1A028B8D8BD98C7591D0D09EC7B57D7B6AA2150091
127673B7C57F191A2C77E49E73BA11A210BDA35B557946F611CE4CE66AEE5224
22563E8A670E47E93AE962D6A96F6D3620131BDC2A21E90DAA441B8034949F97
232E0C646F55D9ECA240D122FFECC99FC53A6D5543A9F1C5DBCB2908E999341A
E343A0FFBD914B3488D6C7B842A376B0180BD88747C2EC6A2E0D76B752758923
51C718637DC7122F18AB9CC5EA7CB039B0E09ED7019458A6EBB85FBCB4C7165D
9C32D0A786D3A3F875B5694DE9B13BC85515F3F91D583E506ECD024A1CEBB9B7
A257B6A7CE7FC7F88BA35D83182D6FA726534B91888BE446D040F4AA22F93AB4
70EC8707E4572814692B437A20B3876A262ACD6405C878F7845A5E90BCCE0039
869F93FDB04774A489E84690393CBFDC12D74F51FCE68A883F6EA440137150B5
EF2CC7F14EBBF9C6652AFE89741A954064176768EDD3CD1DB492E830B2E76DD5
290CD94D3A64575970E9A04AA7B211156021A9A5CCB6FA067828F93659125A7B
03BD26BE3A7DE388173617BAB2EABEC3397DA7315563913240C1EDFDE15F6335
F6A56D8BF4A5FEF882CEC33461DD720735A0A740D4CC8C5ED9E49D4A0EACAFA6
B824697869124BE79787B8C09C5EEF417314082AFF2E8BBF4A5E42BC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 67 /C put
dup 69 /E put
dup 82 /R put
dup 84 /T put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 122 /z put
readonly def
/FontBBox{-4 -235 731 800}readonly def
/UniqueID 5000832 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC1A6ADAB001EDF5C9D6FE45735098A304A8BD4A0AC9980
7FFE62FEAD3843EF8C45E1203E303D028897CFE1D4D0AB8BBA74CE279275A67E
81AEA417A3E49397386B7304DC9247290A5CE2408114441EDD82F9B3A8E49C4D
D9745142652BE8B82C2A9610B26EA1A71212CE97781A06B58C3DDD9179016AB6
740166FF986AE856AFDD2D8955D95B2D0C57BC179F1D9136BEFBB6F17E8DE96E
921502FB19F0C21F0A491F951D83972DECD70AA8987112F05C939A6FB073A5EA
495069A1DDF11DC589D2E91C1514C2799C5B9549A3CEBDEEF87B000E2686DF86
A256B3BDB4FDC79C218947A13035A3DD2DAC7684B9DE946538F20649476C08CF
8E15487FFEA1EBC887F047AB4743681630367BE8E18BCB399923CAAD1FA80328
613FABA04AF25F0A82F1114AC09880F80827DBBE528FFED610DEF8DAC339FC7E
C1F754501658641CFE800FC449C91B44A5BDDBCB612A4A7453D932AE04BA89F1
62CABDD1C0F6FDD69FCB153FB6D5CED171BE801527FAB3987D25866EF04080E6
0FA31EE6C23FBF532ADEE1A34A31E867986EF67FFF02FF5918214A94887DC1F9
00EEB4FDC3C6838AA47EFB32A0116DC11790E8767A6BCAAB7DE97992115E62FC
B066C58DC0960B055900D321DBD79446FD296270F06E35E04C09CF87EF3E24CF
50578A5B323413CFAD528D7413195194590F5479F0D8437E0B19C0B80BA5DFD0
9923F16F3816C9775FCE5AEB0B4254C8ABAD9DBC5697EDD3FE027115851FDCD0
91A55B99CC5D07D83E5D44720C0FDE2375719E962AC042C96ACA77FAA23EB755
E22B3C6FC3016808FD13A21E9E26A0FDA2C539AF4520C8614D4FB1125D6377C1
B7215369A1664EBF597174DA957123B31E06F32309C547BBCD32A467FF829316
E7B9879BDF5ADC95DE0C8ED4C0BAE5AECDDBCDB50DDD003DCDD9D4561B8141A1
C444A55DB289BD52D4CCFCF833C1522522D8B5497AC97294D410BEB9C061CBC8
BD86B81531ACFAACE1D2AFD3D9A79EA7B9BA687B89382110163BD59B775BE1A7
B2111357E22E6D9ED4E5811721DB50F7515A2CB1AE62D6AF26729490CCAF4CA8
A7F43531617AA51208B5CD91816A8EF0C9C66AEE8E28157D9AF34A5C00FA2E06
5171652593CE33FC4F4EFC3B8B19E33196050459A6CF87DE93CCD2AD1EDC20E9
A52EFD2DD5B44F23F5D501BDF6EDAD77683E19B199827981B57BFAF398AD38FB
D1227398D59FACBE06CEB48BB80860A28D3D50BA4D8642A2606B91422F2439A0
7F7A31F72253F483B04ED1CE40E8AB16453B93490506404213413594B851315A
77AA20C6D8ECB8B07347A2F4E62591AF7F379F6F363E10A14E15E7E9D351A4C1
C955F26866985D7C236A07198A8BC96F1DD11E029A81C7ED728A23B3336789B6
8A790630E7A9ADB27665019307F2A18F1FF0B0444C644BDDF2F2794690EE81D3
976CFAB487A02D144597D498B5E49036E471C46ED53D35160A95241302DBF93B
D9934CAAA6C6C9A718EFC8A729AF0E522A55FE4AE0E813ED0C544A851C7E6D5B
23B4C10EF2DFB89157A6AF991A283ABC494CED7D87844472DC3A1699BCA28DCF
0F56409F0DE68C0FBB6A72AEB1AFCBF246B8483C2C9DBA3CC287927820016C39
14EA1E952A1984F41A9419064F3778AF97C9F5261088A4EC21BBBAABC0946D81
FD25C14BFEA61EEB15155D35217DAD7DB0B3DEB637757F6C89C39D8E0DB496DC
A67D35AA4B873C117B047418BE246A8D5FBE805B7EAEDF87E98AE69959350FF8
EF4784BA9F8954D9A0102430B18755E352651DC46366E9D07ACDE5958FD9EF7F
2FD8B33F4D83607AE4B70CB2BD7E8E1CC4599666E2D7E2E78B91F8B88E9419D5
81BA721F4121DB3A381D724A0B4BAECACCCB26B790973E2F5FC95ADCF4DD228B
0A176F611D64611D05F9E84309791920A5D85C507E5EAC6AB379B4F2F837D927
6A97AB5BB1D00B35D106244D6574F2C40711E132A7A70F26261A805D7C66E3E7
4943981DE0DAA6A0277CFCE7365F7C8E9621BEE2987195B942FA168BD99EB3BF
AE6C0B39267ABBE032054F4B99DE2BF97050F6440C74E54F1EF393C9C95B756C
58A164FD865B6875CF4C9F535D742E302BEC57822165C5AEDC16AFBC5AB25307
433C203FEF173C4DBC8CC3A1411CD83A5788FE2F52F35DFA7CB2F42585DCE0A2
321B670FB2882CF3B95D07A746D725482A24D2B06189CAE2A16B26DE1A18783D
A47DF573AC0AC8647860B4F25DEA7C996889E6F1690605C2C4727D6CE128DFE4
13CD71D7720BB664A7980A850511B3E9553C3AD80057D51ACF87823C47EAA576
AE9819427E8C13CF50DB7A5EC2EB25C1C9BA9D2A7E31DAA38A94DED8DCEBA08E
3439586AC72EA9296F553574EDFFE77659D626EA42BAC05FDD5A820D3A9D8617
C1F0F3EBE91D26F0CEC417354AB576B902460622AC1496F845C57ADE0F269CA1
C9C74F0FF300183246956E59E6AB55559D986A3F736DCA06E9AE234A4E1EE276
A52582638D7D85F7A5C466F21E9616754695F44E7F3682EE4C9DDEC6150084FF
93FBA7E4EDD8FA41198D4E51BD72F22728E9490BCECEA56D879BED1141A4BA6C
C47985592CDA9079B65FA0BE431BF95389DA852A52285A1C11A73CC2B0ED123C
C5F560587757302520418592D861759EABF9D3CE3F8803DA50679132C7536E28
6091166EBD8BAFE9D702386DD46899FADDCF7ABB9A01B94F63953521003B48C9
AEA54D2704B530EDABF28976790778D914F07D9DED8EADFCDF480374854F75DE
52EC3163D21EE4598AECF0BE30198D31211854E61D0648CF479A2D793254C551
BDC1C422BCCD77569F451C96CFE9740EB7844C3F3A3CBAAF7CD867321D47A71D
F765EC4E55A26AEB0F52A798A095DDF61FD6020713DAEE1F5A83F9B6E4AB6AD0
109991BF7155F98A7E3D2F47D3FC76AE8680D0E8ED88EC81A3E73C47EC146B1B
5CAA31F9DE65EBA17BCF68C15F4883A58854555CFAE6A4B98BB532E6AA9E1634
D5B52015641D312D9D78AC38D50E992A8D5312AC13C342DA9A2E05F0BB5516E5
10A4DE0CDD9DE25B99CC5B4214B75F1CC1B7B9E2847277FDF5405E58C07E9BA0
AFE280A5BF85B48D39BAB70B58C39412A30A2272899953E8936E19499DD843EF
5F2493031517008A376BAD2098E119EB2856AB61DCC2A21654634ED85FD7D808
6BBDE8F96D89E9CC58EE184F68A4BA934F6273A4DBF64812DD94EB9397365806
815E11D6951242FF73E18A9DBEA3F8D8A01468775A7A3C5BFE8D0F2E6F869544
9647AFCABEDAC04A5DE0E79FD1E5654F66FEC5646C31C0B1B4CE0F107F4F4B87
07F1478C901390B05410B5022388328E3D84FBC4A800F3A91E0B28F29EA8EEB2
DB8635F4706575508363085DF6398FE4B8B3463DB0E7248A6BDD366360F6ED76
CA782025E636D5C727207C0EB0C86335D526E542C59F491D9C44A29E6A428C18
43BD175033C033ABB5AAB1920D580E2F9D50D7968062A87288B5B018CD11EA99
CA2CD6F023F7937AFE62F1C0E250701FA28B4780CF741A17D62DE872C12CBB83
89AAC2617F6694D3AA4131C17C408CC8C27921C88A51F499B1961F68552B0D5D
8EC4241628A10808A13C4AF2BA378DBBB619BF669F490ECBE258A9B2396D70AE
A60156E5456CCF15947981CF6380F50E2D3F555D3E373E31D3EF4CC01B9F8B9C
BF31520B625003CA63B21D077E8571CB2628B127F007B6B7E157EBBDD6E4ECA3
02C281103E1EA87FB7EB96FA92E90E75E0C42A3BBDDC30AD89DFC3EF8EF75F2F
D6EE33154DB125D25F627AC2C11E858236C7B887CE257590AE8503FFA54F116F
2EBFA742439B20AF1C282F40957EB1F9A14344292060125270321F91C059686E
44DC40E10A18E73B74A459B1B8E6610741A14C07023870FB64ACF564343E5587
870849F73FD58D1E85A536CC580254806F25E830ABFC3469B097CAD2845A883C
D49BBB9DDA2625242A30A195DC73884032E4A41051F6713F329DDC463DCED363
C8223926BB93442D1747B3B6FDDD9B01D18E7274349DB87037ABC50797590380
CC4D16A4C03C44C52B4E0BA825051BA1328C27B27FA93AA988931E7A2D2D8930
2F76AF8A5D84BB1210BCF948E897311A73A279C0579445A2B9BBA01082D96A83
1DB0879CA180121850BB30B2682756991D6252E9C5E7A3468F822972D070B5DA
314CA147A07B850DA34067730499EE4B681C22CCE7DED6C9221447A4000B1F53
CACE1D705591845FCF82E9162B6F0519F57AA11147ACFCD42E689F79F97E99F5
27B92CB93ACE1A670AC6AF61A296A08E74AFD1F277555BE39D751148001CD032
9F4371F05FAA57ED1DD94CD13BC292F94014F5E760B13EB553474AA485B42DBF
91E4C7986F441A880979C2653366AD09723422548BC42E33BE4D4944A64A52A5
813776880CCB481B7CACD7CB331522B8F6F70F4C3BB134ED06C232A14A01DE85
420CF3F475C67CB022615F8378C631AC2231BE0B903DAFB3F7B6FFA5AF407A15
28B6A4D48CE38B9FFB75FE3C80D8EC690ABAEE7A8F28799F3233A40EDE0C6D7C
BFD7CB6539E68AF09F2090FF05F9EAB61587980C772EBFE880D7427DC77D87EA
D1CDE9AE9410CED36C425749D7A271A51D39018A8C1E5333AB4CF23AD700863B
82088F70FF049B4E11092ED51DCB47372D8458CDD74DC772F43055B735769047
5E5E23CED72214735FA82D3C10B55AAB489F74F0E80CE21E5BEAA80F9CA9E03A
D1684CF87E2BA6B0DB65AD764E4EA35C2D3B41E31D3B4F3DABC56B700C39BBB7
3638D014C6597871C707F87B62C0F14344FF32309B126E8D5446CA3B085D8ED7
323E5FAF40C2760AF7E27DC48C24427B9F61FB9F1E5DBC0F991576F39A0E9CC1
68720ED0D402B6D935F4E81979F1D673E3547B02173D4F1B74075277AF076533
08297A96481E3737D160568F22C0192B49BF6C3A4EA8F00D1D53D3E016BB8C12
D3F77D24A20E92BE14DF64A88E4F1266BAD092D5D25F8217342DEEEF389D829D
E3E6F12635BD520C8EBA92A7CAC68B008E09CB915CF42DDE2969C14C706EDFA4
58CBA2010C0AEA8D418659BBEBA0018F48B3B4A522720F3B0A2FA1AAE8EA92E7
CF68E4A690DF224BE2A39046132E08AD781933CF8600977D7E1B9CCE46331C13
5B6ED7A4EC2C1B1CB9421DB520D0D9904CC220FD53F21E31B7A1401468AADA70
3BB8AC70917D882A322A1C1451AF7E815088D75B1B86DFB4B9E1166BB437512D
C41146A59ED926F06E7781742BD3BA5FB0C0A80C933856C6FA81402288B66F97
607257CA40C4D6CA46081B76EF96A4FDFF645DFE399ADAE12829317BA379EF16
5F8CB8FB8D63AD9A440FCFDD10CFDE7697D64F92252CDE64FCEBB1C19FC4C99D
F046A760E9D87A025FB56867E23AD4EF444341777240AB94293291C2E7C8FC5B
E356A0CB557A5192229ADFE7679D9F156FF973B8D1E40D68201D1CC0DB1815E2
6CCD32AA07A7696AA25B57657642B526D7D5A697C89F26A7441B92DE793AD6D6
292F8178FD4FBC24F9DFD9001F149ADB46E32D46B7BF8530C0D869559A70D3B9
0A9247A4730206963D585D2067B6F64D7BE5D335D4FF245349E08ACED0270BF0
E4A884764587FE9C058F153127194D3C14A3EABAB84CF0C20891A0C3B971AC05
22C5715B61787B6924B081ED893695F0169F577C7D89CC71F6FA364211CD8E97
AAB8D007B63AEB670AB982776FEA5A7CD0497A8F8418C41B458DD0792B910059
C3D4E2DCA002B49449B0790DF2A374A9B7A27767B3EC48EC8382CD07C2F55416
8CEA828F38E922C1C54A4ED3ED3957347D79B705FC2C04F6292C98A0837D8060
98C2A1E709273EE1034A9F1FF7F51BDE30836BF661CF5F358551886F214BECEE
BEFEFF2E0EA68E4A7B13C738DB3361E80AFA8B1DD75D0DA5681E56E05C6935CE
3CEE6683658F1907F155DBEB2ADD515332588F28770D78E91110AC00F9654BDA
318A9049B9D2487C864473B8A9E25D18CCD04A734A48943F8B67CE6511BC2654
FC4201C2B9C20F21068E5B86A015DA8FB7194E6576E9E7A2587DBFAB18E42484
069E13891B3BE7B27F8631603ED6CD71CD2BA6B7AD39D2AA7D0D42778561DFB2
17DC57EBBBDA57F25C033F3D6DF17A2A60C5BAFAE34096A19EF11872D3C22565
8433470070249E3508BDD3D4DCED917E4D9E9661F05C202C36DEC7DBE049FF36
732D3F8F4E70D96012CED7C0CA5459D66CBD6EFAC0C61E7002C6C58084B7B87A
5D627D44C2F58ED285B9727B8C7A04B1DA09AE7A4755E893AB831411B5CDCFBF
040CE41A6901B4B8E6E75AF0D43D8E55CDC95CB7A77A57DAE931442220979774
5E2E774AB3C2F2B8AA21AC42D4FCE76FFF4122F21FE4FB03744F4F1BEBCB2131
5550721DE519008E66ECE37E7B8F5490C41249F1D7FE7D6469C1DB9F30792F31
92C45AC75C85503E9C30D4A945D3C07BCBCD7735C8A0873F4684875A9FC0C33D
69CCFEBB1DFA3533B001874D38E90FEC34304B9F34938C132E1715F33E0A958C
2FC5FB43E5DC85E4F4A70CB0761D665C86A2720BDDC63B7D6171F38B02B74CAC
6A2833970043BE614019295489D7D99CF498193ED25CFB0695D2326E36331FE1
CAC436769FAD6176209910108B42497F5FC0952F786C5C98C18AB9C993F812AB
AC339A5D54472E7B2E05DB28A4485667E7DCA9311E9FA1A2F69FFFEDF6A777C9
AC2196DF4AEA3DE13EF4E7E82B579267F92D3270639E856118B516F54CC52B29
8E7F8FC0F087F8C825CC4725C6B480BE900A9E9EB261879F8D3E1451EC483840
A417667340C9D9919092BB396919482B06DC613F31B783A02F524D0FF024315C
82E008B3015E07F5FEE54048325522CB67D789B36330B30738A33CD940A93443
E23177245AAA2EF1024A5EBE97CB68579012B880645786F899FB253E7F58C8C5
7E7D7DAEBE9B442B5F0094D87F01BCF5D3D3D2CA6EE85AE0662E6D7165C09799
B72580EC54AD9B361A5CE150E348742C005274FA2E2A32BECEBE5C7DC75B079C
B7AD8A37C94A8EB65C826BF8408BE8EB81ADC40D5B36E9321D0DB922806A855B
8D8FDD0B202E6A751DB885A4991ACBC8F8C32E1B58D1C0624C47056CE1DA7D8A
8420849500CA3D2F0748666A3F40E877274D002CAF88AE863F71CC1B99FC4BA6
84F834ACB42D1AF6992151D3DD4E31E0EC2202385344E8CF263B7FBD50CBE8DC
686383E4ACA561BC072618B839FE5FEDD5987D45668ED34DAA30C1E1D819C947
773A5EF32B3A86D251A56E96791EE64CB702FA69DB13A5C89686E26BE5D2CE17
0CCDFB352B0441947F6AAC210541579A54A682CC64E64AC5732B3646C749906D
F7A1382A6AF7D24A898208C47F73F2589221A6AC9C7A9CEDD7D331FCE131A39B
6E4B7EF84F4CF2ECE847E85BF83726F0DB1F00E9F2A652176CD8220E143B37D4
98AED9B45A42C313D92472DF7EF570DB31871E4D74F340C6186491C2A2185FB7
A01FDBD53D89F3FEC3283F54DB736822CCA6597A09E685C1C4F8636007A3929E
773AF6E290984FBEE06C846E6FCEE694E88E61A0355C611DB8FE93799689C561
95E61261185F3587FFA2465D321B51EF0DE06D156586A57AEB1D2423F67AA407
7BEE6A0AC35EE37A309FB54FBC5E5D0D105BC07C60DEC6CD7B1396C069C6FBC3
63859177CF23207E4FD4C88495EEA15DF9F0E3B56DD44E20E15A8DC833B398AF
2AA4CD3CC5DF46F46C4E9E7DA035D397034ED9190BEA1C8E1BF933A3DD96DA33
493BA67A055D5F5F13A29D5A9A764AE4C8E60E3CB3F8C79DBF37BB4DEABCD998
839AFBD9EABB6EFEA86017DE714024C652A3FE4311747C2059EC9C9E0066DA02
7EB6D19754F875E59E210947C6FA128CA935F94897EDD56BE4DDEBF017F7F471
A3A4192D27C31717E8B2D26FF04B64B97D7188865FEE950FEC5214CFECFD985A
E99D35103B5EF6155E61BEAAF99668182418E18E05E8AA313092981C788EE9C7
EC668CBCC4EAA3EDDACA392B1EE0C93EA97A2E41843D8A3C5B0FCB119BEF835F
8EB0913DE76E219FB3A49003A140D0C357A7CDB9059E4421BF5761D29F40F6A8
8E3549A38B08B198CE93347BB4EE3F1B8640874D46F6831802A3F050E0A92629
32B97CB4E83A9C32AC924D1D4BE32C0F9660B2CDF015A974AFE3DEAAFF340E9A
2249856DB939DCB358F1609D48CB2E74DD6A13C6DEBECFC942ECA7F0235F88B4
8C3CCF0533EBE695B91C4F95FBE9D9BE63F053CEB88ADD90996220F9C81D6114
51283417CB6F140C0E367BF7A5800392F484C649F6323C2939853C3AF2141490
53EBD8DB80F1FA2AF3D035657026773CD993825C0DB558344C465110D1361E47
2F5E1D7CC680868B189EB88C43DB49FBBC9A312F2792C30459E7AE84587CB2CB
74397D5C0D8C9D89C7B8D3B9644075443C525A7556E9833463EDC9F63288A080
5F9AB9693077CEB2162DB63824E4B064E204B1ADFEDDAEC3CBE17FEF6D752950
14BA5561CE1C8F385F2ECAFEEB2948CABB972EA5F9C57096FF1FA2ACC75CC12F
A1361255A57538C3F59F9B95B72A8EF8B9C812F90F77F180A54B114555692CFC
BDBF1B1B8B17A98C8FC4E245946EA0723D1477980469D1BFFD7DFBCFE6C4141C
5C60A4DB4CC4AE2DD8C8568100BFB016740B71F711F78F1850802C96EAB4898D
5BB4C19DC62ACA84FAFBB844161015BD9FA3D01963A81F63EC821A342C206B48
A5D28B4F96BFDDA8B4AAFD26A6818B5E71B7C677BD477D6CAF2679CD40C3C1B2
C7D0F5FDE5684B4A27ABDB069FB0DAD293D1A0B9B4C85D452008BCE6A30ACF26
7AC32D18182CC07792283C010FEFE5F0654412A0FBC840C01F207501F2DD9BB9
60DFDE3B3ABCFF323C0B7C7A24B54288ABBAE9D9D7CB96CF211721F61EC6210E
14ED119ADCB160DE418A0C2465742933DFCEBA49B19E36996BDE33A104D5DF23
6A6C2D1EABB729C2132556C875AE9BC87DDEAD9B71FD03B54ABD654E0160E981
ABD54D654BAA235CC5D13D070B05829760E9B580B4AB57E6129F20BD5A9F99C2
FE44145B3DE4DADE244D0D50D728205C306C6CAB2BC8F9DFD9BE137F09E7111F
7B734614484E158EE5D83E8D323197422CAC49AB33D944DCE7D56A38A507DF14
0323A9EAA3F65A659F9893579ADB173601A182DFE6DA47710454A5C63ED0CCAD
4344608EF469ED6C1F1D6DB86B610B75B4E599BA908B9A45DA71130E44B018C5
ADFD870EE6160C826E0374C7F396490CCEBF654B81FB6042DCF71FAF9806E52F
C5369FC06DE31D1B1BFB0874805A7C81F07C5A7BF542A7BD8BAD6D7140597059
56128EBAAB298F176063C8C2C5781A694DB9C9599C9ECA195F815BE1D970D43B
425ACD71436289111CE730AAB6558085354DF6A905E3FDAAD8297085DFBD1F57
07197A1F3B2233ED7919FDBA217421052AEBE82E3378FFAFB289BA46F50C2345
E6EE99D9FB958BD206B2B039A5B90E95185870F8487C175E1B9501C2E6667729
727F148720954813EDB9EC3082C82FDA487CAC83655F510F6D85A19D069B1D19
9D6EE3CCD2B450FAA1C6F1F9A751E5A568835A531D78B43125C06FB86685579F
FD71E466A2A26CB38236E8C4270E02FAF41EDFBAC43D8837F314D8D99D8B9299
B71778DD31969AC3BFB5C6F35C71F1B5EC8C7AFA70E427A64F5231E480BF23F6
1E0BA9E6815284887D8E980D818AFCB861731AD10B0DBF3C6B2A1A6D17E3FAFB
1B02636E30EF48C6EA3B6DC9C45D25F6AAAE6361F95DDFDFEAEF5B658C08293B
82461BC53FCCC8C0A05D29D66F7EA34D7E9F1942F68F3B7A0310EA6F0875FC0F
395B5CABBFD55A7557B2E864AE8D0690558BE22D247745BBEF992A128FFF3BA2
9D01203C469C7F7C98209B623F663B26DA5CC1F7F7C09D18B49509571B21028F
75A4005AC1B5BFB2F7B5FCF632D5295D68D32CCBD02D5C359B5FBBA79D6F3FD3
A1D24A7BEF3B7A2850403BC3E56CB3A46B8C3C256F1DEC6D8B15B2073FD34853
D6375FD11C561C7B2621023A8FFADD8A5351D9D3F07172F14878A17A57EE0DB0
4E0569EB2AA9717D12C19C47DB4967DF587C2283AE2E90EF7B9F2AB812E78DF9
F94678C7A5E366CACC53CFC75ECDC84695CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 78 /N put
dup 80 /P put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 127 /dieresis put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE286C2DE5
50D4B9269603CD211076B33342E3C1972EE3A75C76B4C485732760BDA3217EE0
BBEA9BCC89110A92F20D97E3F6CAF40B732751DED37621462AECD1C5218232F6
7408EB17EB1B6E933306917D56E62324574AD5865D60E78602AEFAE90378065C
708D4BEDD3EDB93DA102B753B0F08F9BCC70A1BB52B2FBB582EBDF746A0C4E63
5455933AD6527228A67F7D62CEE0A6C53BB55AF5C384B3C9373733C08AEFC4D8
65F6CB5B2F312DBB146083426C0A49EC86D49C66A814F7274244AE92FA13BF57
1E769B6C148BBF35B0983C1CE5152772AE2454AF089B19DA2683831D676070F6
BAFBC0334445434C5BB92DC7A22519FC1A219831FC73A688B854A22ED9251728
0CEFA8778043D03332C7681E9B9F42BD96F7ED2B0F6976A138B8407F13C96C9A
5D8CC4417D61D8E450067231D394BEA8E64D8D3DC8A92BA453CC4ADCFFB2221B
07BDF54488BEEEEACA165E80AF013B0376DCF3F1F532A65F408E790C47952EC6
5AF1A22C27B2819C0E0279CCD84CECFA991D2D8B6CBB3FBC97AEFE22DAE6C4CF
68FC1CD36F7E7526EB366FD88508C7D15241998784FBE858A7E9992EB9B0CC80
868C8D42AB2EF9F402AEE07796C30BFDE6BF72F4B5B643599AE7739D64240BF9
8E738713C4C1FCC6E94956413FFD95F3431910395CB6B194699ABB0DB1251B69
D4987208B9E1B86B92A080ADA8BA9798D73D8091A82DAF8B96F29326F1CC9F47
A7BC46A9152541C822C94A9E89119D2DF068AE33DFFB12F480DBD1CFDCD1C243
41676FC94CF5992A3CE43CCFE877B3E3465ED3A4AD379656C90C43973A63FFF8
C56402DEF787AA2BE4425C946AD5EB13900D3F703C1852FAF9D3C632DB732783
570A190F833B1D58280607E922E66336B7A0AFFB7E7AE1A07E0138EB21AE4DCF
A5A750A3F711D97FCB5D0E70248C0F263B08F363259B3285A9D607E1A17DF7B0
CA65BFD777C1B2669C7C409E5A074A29D189CCCFA034B6BB0C8975F290B14AF8
0FB8586F96EB14CDBE18D9A965B1477502189643D5F656765CBB2C531D1904C9
5BA51436877A2E366C0C5E2BC380DC0624CE45E21E2C087A2E549D5BF5CFDD05
786B3E9F894DE20575163704A05776F197F0B1D53CC59C91D7CDF1EE22F2517F
7A44073E08D1B458C4E6CB19BC13655FB9C1662B5CB8D19C59274F45BD3D8B18
DA81F9712C3A19C4C79D3FB1D4322888AB6ADF4277B3C46B6CAF9B68B51B8189
FC45CE53033589533BBCFACE397DDBF454E80CFBF2FB933F8D7DA1E595145014
132B4C5F691CC35EE059268D829FB816EDB8436A57C59095991C6EB83F0DA4BC
D518F55DE13DE13D3CFF91F3D74A187EDB64694CC4457326F66C4AE4E402D9BE
A1E5C2E4FCB5FE039D876E2B61167C332B90E17F2D3DA9F284A5E702873B3FF4
713E1E4801DE0057F38BC7CF0BAF8AB1D1D7EF930833CA075DD18202E66A1566
4DDA8149ED3C09FC5B2C9FA5F6A05E96820FECE84B6D4A1783D45D3ED497BDC9
261DD03569D7BC745A7E9DCBFF42E70C5C0BFCD49F97D1A4E6586B9149A91317
F4F1214402FE32F09DA2A1FCB7A3B101AAFE06EDDB5F9A4D485BBC8D3D831501
24EC6A81F59C072A42B965739FDF424FE3BF40DAF1D1E7256DAA910565FB1E16
67A345F85450EA5344503F19D1079A7019152F9A02651145DF0C6C3E77B15331
7A5A82E16A7AD34175A34E995D5FFF01F57B320F49020EA1211B9F62C313B3C6
497D9005276E21F361117E36924EA86DA1604B9BC936A8CEA2CB4663E34E937D
19FBEAFCAF07EBEF0239FA0D21D669133889AAA458DC08BD1F0D14E588C3B330
DE6BCB4B1405C738CF35FCD0ACB107065C3A2F797FE14F4A5FFC32541991A7EC
84A5D86B5AA72B9BB63C73C13099748E1A66D7DFF96C559C122DA5635344F0F2
2F32A68E6B6D9075E825BF3DFDB9D9B43FBA8ADDA97AF655DE18FB3627AEE7C5
43E53B3280ABAB5D2379DA3A6DBFB4FED1DC3E89AC3B04F03BC71090C7689F55
7482820B8542834D0B7D4AACDB98580EA15A7555CB567594E237ECCC738E0E3B
869A2672593F7679F6688EFBD0279B69756DB5C2459245AA74DF2739A900D087
B225F90F82752FC561F20F365DAAD6885AA2362C54841E653B2BB35929B42B7E
97BFF80F2B4A65A0ABC1FB5BDCAB90637FE40BFD96595C55BB5F50BA7038F24A
48CDEF86FAC01F1A25816A0D7A1EAECEF5E4DF554C4DF2CC826496CC7FCDCAE6
0E0B35B88C5FAAA1941511C692F049002B37A51E6C7692C38DE0727BA8614ED0
DB700E44733E2DE4289B75A664147CB089441980A734E704085DAEA2EC51F5D7
7751169B1A9166AF16DADF6E0294497FD0DC18713C4EEB05F6FD2F5A62C6B0B6
44F10F88737D41B515254C9F3D0BB78EC4873A075E6825986943BA1BA1372199
1E8A29CEDD10C67CD767E3D7E3AE1F5161902F80C8836C829EE93FA07E5206BC
3C605D82F61CE9186A79415F113D599C1F868488EB90748DA2AE2FECF19C89DB
25BD28E80781F4132048B34EA002072EADF89379C4DE1F745ABB171EC030DF9E
780491F44DD135198B5FA5AF8D6500CC0D652B3C7FDB0D3C09A850BBB517EBE5
2AA9B00BE41BD93A31DF8CB39674F0AD4A62CE9EF059CD89A7B0F485B0E044E8
89041D63AFA6AEDFFBE4E71F76650A13BE7F2C13DB173B2246B032E9D9FA337D
9EA13E21616F6893BD652E33CAD01E89738428FAB92A0523B3ED9C0FD5BDA936
FF05C38EC3B4FBD4C9FD87CFF717E62DC0585A7AAD318F7062FB84F9ED38CABB
63A138AB947A8BDE112A6C68FC62DADC3485C8707FD008616B75BD175AD6A666
5BB79BFE5898C73961EDC8DA5378FE3AAA07BF197AF54EB7231B3B6B8927B776
AF9C87A6BD3879F208165A315930038C3DFA7DEC4095C952646F38361C97C940
301F446EEAA598CA4B926939BDDDE7BD4AAFBFB2673FF4817B0778929E2AD8CB
49C18B2554E4908DFA756BD2E8A69E092F1F8D39E3C472F39EB2AE19C882BB3F
5E3A2A9346D7538A5F7F90D278B197C615C39E78CC63490A60041E278A787619
A63CB3EEF96C31FE5E62A2E63E6B428DE66409F5D19C547294F04B9F9BBFE9BE
BCA2E32F3AB64A48F26D8CCF905E418F255FFEB46A5F6F3C5D8B21CCDB5B1BE8
C6F1E2C84BA90BD126EAB7D81608B6D60DD6D8C1331B9C163163BFB5AFCCBF39
12F7C56EBA5DF2FC1A6FFA1492F44ED0D41AF94A44D9A403EE77188F2A6B4F39
D1E31CC94AAAED49F514D29698E61D3078CB09DBEE367BBCB29DBE1C588401B5
05FE314DC199C23DA9D36432E49CAFF95D0264AB934CCB5AF50E8D52E4002BA6
206DE7E8AD7D0CE309CC3225399D944CEC01D97D6F29426709118A6AD8BA8A3C
66E51A12277ECDA15B742B3594D94706642456EA6FD5ADE96F76B73927C02298
335C70B910D55E864551BC135B4BC38CBF9E5EABC818CF6D296CFB19624A9B03
503860125EAF4FFE522288670C6F2574EA83AD8B9179D9A349C62BD7DF3D3190
806F567ADA54A3F582E0CCF3144E03203665AB91BDF6FF554475B71775A76440
48561BF84A0F6DF9C448BAB0083FAD10A47043A71BBF61FD8C3C8E3F36861CE8
F4D6521743B0F23590ABAD334556041058BE84E6A4741CAD552F7C69C2FE758F
DBD3B69F1C6D16895F474E9421DEFAF53DFDE0BF13041487566E365457F8F117
336B3E7767A90F02DD383FD812326BD02B97CCB75E0D7022EE3D7B0038BE1BA7
4CCA9E82ACB353667C1A9E80337719661A58934CD6E7D9A6679F4E1F2723AEC3
377ACFF6EC91DB336E740BA1F4B67F93BA11DC19A8A050E0E97E0D357222C98F
0049B53DB581DD1C038FDDBBA68FCF4E97B83D589C4099B3FCC5CAC66CE62D31
B1D7FEDFAA7030BF7926BB0BA69BA3C3F4D858FA9AAF735CBCF166BD4D2E9CD0
D4127E66D1DAA314155585F2C2CCC0EA74E1BF014DA27D23C1785614808E52D6
5D6368592F857ED10B6A12B9DCB1CD81912121DD33B7377BF823E1A645C64C19
A33905B053100E4FBDB72A1D8A88651A91595B2B8DA622C8F68A6B4C1529DF57
FD560E4F2C0064609E7EC4C800A5CB0B4FA8F2052226DE2D9226CC53EF8C3B7B
BB457C146F22B128BEECAE8EE54E8312EE9B49D9AF90432C420E6FBE9CE47728
F923E0E5FB982C1BDCB7DB1A7C1B3259FAF7D0B8AF4EE6CEF10CA23F18743B27
D2F40BE16A7C437E35EDECDA0BA25A9150EA50C5600EEF4A3DD27A01DF1500AE
C4B03DD0366324951C352C01E2195E43DAF4D32EEF08975204835862178E86C8
112305E686376BC7E32C76AAD79068B218FE4EF5670AF44F4EEE2E0974124F20
001C7345F9593C268009C3888472247FA55C626A0A6CFAB6FDBB7332ADCB2942
6E84DAE1A786CE6B63AB56D8809E904F78CB6C97A790D5259BA57CB7CE037059
A7BCE6C7B7A2FCDA4E07592494E14A33140FF82513CAFE7BA6A641B105BAEC1E
24A29C4E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 48 /prime put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841FE9D089F27B314C2B7095381853
3E28E2A3EA5E789DA4343DB3BE83B18FE9D7725C3A96CFD8038B3518C10A68BC
9A67AF6D30543F6C7CBF40C7875E5E2AE8A0AA5E69E169CDDEB9958F11724338
CFDE66C32301830F03E713231FAFFACB9DBF58438D5EEB82A848BDD41ADE36B8
706776A8BA69BDFFE475BEF2DC4132506CEB0A9C86E3C6A84C126FF4962ABC81
44201BAD8034020B73C306926E892A27C84DFD6474F2BB7A94C82EF5EEB908F4
85B4AF889342EA7177DF14881FF6228281B538E90CE91BF934B3A0E18FD8933E
89B7EF32ED04E2E621769276A9498B6E4EAE691E08AF3DA827C893808047302C
6030A0B13D1E31861221D202AFD5DDBC81883AF4676F0921F3AB6E2006CA8923
BF54B19FC3764A233EDC6C2A7883F678061E11A7080A56B0AE2D4F01F1E84689
98
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC69C6F2AE63E19FB4633FEE6B85717F34860630F0668E0AABAF1A0FD
6FDFA62F4784167FBAAF752614C58072B2B1476F81D93F604DA9069837E4F32F
8173A0EFC596CE43796D918D3CFC66C279B88FA71F0ADE862394F913AA8826E6
715E550E442A16E9C0E9493A2E67538326A58270A2F5504F6263BB408974C0CE
87217DA37404EC727B8EC87580F9344DD4AFE228E7D00BB1E06F813C2605FEAA
859AC83BF94DEE60BA58E6C89AF7AD46AAE87A99FDC90ABA69510777923F2AC7
B1C3AA88221D7A9F9C6BF4D2962D3107B8EF6F027086E3906CA092918FF5F61B
50B46BC8BEA7AA458992FE459A17772A9EADDF21F326567ADA5BFBD82AF7211E
12AA7049D8BA2247353F748452A3694F6AE2AC3ECDF11402014DF8C937FBF16C
CB2ABC6F5CBFA634A0273CC14AC5883B47F0D0025CCED37A1A8046180EBCE94A
856AD97583C3583D24563B0CE417F0DB052F200F8921E76CD1318AD1E9D25AAF
DD65BA9D37992ED31692D86073FD4735D521954CB2FC7C40A2C3A021BFB4D0B4
4B94AF680E280D68D44564973CC9CEDAE79ABB6955BE5C9E07B4E99BD8CEDC09
EE9CF3758AE4DB6B1107113CF240A46236410B1E3157E88A74D10EEBA0110957
7AC64117B9F137C84CB8665D8DBDE5CB14470FDC4B10E106F326D08FEDA6DC5B
B14E4E90EA9AD66810B300AE80B35D83040A746FDF9AD451054562CA25994025
B70EEC0A5D62B0045D39F1FDA9FDC03C8A9F3AF46BC3CC621F8F03A395ACD060
45868E0B62D7FF3F67379D8D6E8F66DD2D219BB822E78C307738DF81BB2D09CA
0E582176B624C7DA5BF2297A368F45A85245B85B8DA52D647B6EC36C2DFB5088
C10FFE8EEFADA50079A8E6315974FEE737E09894573D717CDCC364CF8400E051
F785573BFBD18DB427B730C1FC5B047A19A70C10DC4FCB42EB348245F156D0D4
3F4FDDA989A88CFDCE05113239B6FDA4DC89BEA538E5CEEF51B7E3D27BCAB703
94FC2836970A6CBFCC40CDCF96775873FF89F1CCC598F83DB08DE8CBF6A9BC05
BFC82845EF70824333EA35DB1C9AF95B96F88DB9678AFD89D11F35BE002F64B6
00A466619453C26EB35CCB6B690F28DFDB56F625159175E42A16FADD2CFDC740
E5B348A34B3072FABF93E99067022CE00EC672FABFB776991FB30CD9ED464AF6
594212113A3DA0610A258C25F0B66494D0FDE064541CACD2F2029519932DDCF9
78128B23EFE30F71161A5B69E994AF6E4FC4FDE8D398E3327863A8CE9EB028B9
C4849B7F30C96AE5775FAB7FA6A63B7E068113090D60BE5D07B8318381D5B773
A337F395A157DAB155FA70B062B3DC03B57657011F7C43BE9F2A5D270B5E480A
B745B54DC7D1CC36AAA1ADBF774DCDBF9735EDD770E32F6772C2E3120E6039CE
6F33D0EAF6BD9E94A6CA878940F447A175FF94F77434102FDDCD344CECACB202
605429F25EF37E079F26C2C2EC454A655178EEA243266C46C565A177F64501F6
702BBFEC14AC652F49F2078B134DAF1EF559410C612FE1A6D4E6FE988EFA13F1
A8D2EB74B32F2729C6C51D73ECA8F0B87A5252EC3A109F07F455B91903E04052
066426F4EBF615416A06873DC70C2C1141DE4C53B608D4A215DEE6CA41047DA4
08325A7878C12F5D9106B307D14916C1D8CB08655769BE65EA74AD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4A78141CA32C
B3C74E1A0AE0520B950B826B15DE578F550237E512C9CEC074714A5431ACC693
69C1A9396231E3B9CCD2C9FFD12ADCA568CFF80040EF077055865236A1D128CA
5D9903513520CE559BD3D71F0C442F55330DB1F7F649D820EF50A8ADC395ADA5
6CADB6A6BC4C97DBD770F99076A8A610F970F008757A4E99C5E7C67FED5D00AF
C6ECF4C4A10C3176F89D20676F69B26A688146820BE30AFA0346EFD8DDE54F63
6ED95709A5FFD910894928A0419519A9F31222A46AAFE14543D16D4CFB3CBF79
86F4F6426ABFF3F223887571A8DF0A752F4B90E0FC825DD4B5878DE7767A11DB
45502DA3622799A80F4488F1B75897312F6E390F66A4108D12239A659FBCD558
2998C10C0C56C819AC6A5AFD76A2C583D2D94FFB6DD917F1D54C25603B45CC16
F10C0148841F54106185AE7CFD114C266C91366D89ABBFC87696B95140043421
C67E93979D5F331FC08B1CF9C9C06B0541F0054D573DD4A5DBB75735928001DE
C190C2709DDF67040AD5CB05351324F0525B5BDCE0F6C46D06C38815FBB8E008
F3BC07F6EEC7FECC24FFB1B56C62C1CAE9C4611326B039B1943C7DCB501E3A6D
76A6A2F2EB55C5CDB74942427CF4FF1ABE944E215661CB8D4A1393DC1ECE6D85
A6EA7E0FB5A3FEEB6AD16B61FE44C1788CE84239A4AEABD84827B715D7D8355C
67BAF52FC8C8F920F2EE5CAFF91902751FD7E4DECCFEF3CFD987304540D38BD2
74B19E556D3281F19DFEDD34F772F4BF69183EAE6312D6F6E83409731965D634
F80F0EE7A599C3F65CAB5B44C6D0E70CEFA1D72E654587F250F644BC1E809C8E
04CB443715600A529445922734B4DFA565A93D7789141C91D7C003ECE6F98018
57E5803AF19A35AECD88D75B4141AA66420C02BBBF805C041D267E8AFA9B168A
906B448DD0E062A1656179BBBD6D42C87BD758C2B04AF1F767D98D0FAD725B36
B6EFBA56F119846EEE89F76348D64878153ED8DA64AE06C6677DE188B9008D5B
B5095BEBE18EA7D5C935DF43
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 18 /theta put
dup 27 /sigma put
dup 30 /phi put
dup 32 /psi put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC27E4A7E07D09FB08355F6EA74E530B0743143F2A871732D62D80F35B19FD2
C7FDF08105847F13D50934419AC647CBA71DF74F4531DC02BBDA22AEEA3FBBBB
407E0ACC52BDC60D01A29407CC4F93EB8BF6D4813E9BA858D54F38918AC82720
4956D50291F0546E50FCAFA6DBD0099123F5ECD4AB338DB310DB4CAE11337A89
8ED99B6F483940C97544F888EAF0CBEB11094A13C073D0061808662A04A82BA0
AD35E8782F854AF66C20C0FEF18D0ECDD1646321B93D327E53D88CA0E825FA95
05AA57BD74265591060CCA149176D3476D01E4A1758AB4ED77DD0309BFD56662
4B530E8E12B5F0A76836969FC9BFA8F6959BCAC35AF13C03E99705F3191EF443
8AED9F3AE700677944A98907203FBC2DCB76B1966332899E023FF9CA5165493C
2D3733B6BF636E8A6B56CE98442014817E5AAF9EF75018327CA5B2284C529B22
194A2FF2576139EE1156F0E6983E4AE3BBD2C1C865CDCB532797700907B97FDB
B2D3AE74D74B5E373E72A5C083F95492F1F53B347B5AC97F47686EC117D29887
4807FB04F5626287AE6A821D3FB37BD3622696870D51636D4711CE082C7A2A45
780FE252E05E694B75EE2E804F9C19EF0139940BADCD63986B79F9A67D5DDE3E
25B7244CBCDF82099A9749C33789503F735DF71CDA2F52D248155EEF71DDA94B
4EB17ED747767FF9F51B61EEEB9422E66885935DB9C1F6DF99014E71543F88F6
83DA9C156A675773DA53E52F722C788C484F7B758F2D27FD025C984759859066
475C4F363253013A5873CE8CDB08D7FAC917423DC34968F2A451B8BCA5DCDC7F
657E160AB8A8510C5B3A1E61B3B2E0C900AD984885509BA5B19F8183BD9AA50E
809DCD707BC2F76095D7BC886620936DCC8FC19B5775681AE83279D14A6DF32B
9DC2A6991418993C7889C1853625FC5FB971AAC5A4E15108559A1724DD7D6845
3592BD000CB825EC8BA41DAAB3B70244BA229814C24CB6032BAF7F9E93C20767
FFBC162E8CFB0AD02A55CBBC624880E5186DBF632841E49211E75110B137EBC6
C23742DA069F4883F02BE2B9445C7229F5DA7E9332C6257E76FB214D543EB9E6
E599E91BFE326AEBCB134EDCC81590995A6AFCEDAAF1ADE2DD76816C7BDDFEF5
E73F2AEEDF169173CF20F372EC058CCB3741B45DD6EB55F0C50FABEA89B16EEE
4B681C22FD22C627658CF58BF006DBAC4C2BE73B2967BE1EEE2202E99D81F2A8
1E266C5E20F9A40E7D40E5C82680E12D0BD91B090C9E6B13D107DAAE39CE2D45
500DB5D781275886D4475AE4BC14BCBEF45E9B38A8C0C041E9A00F96465F63CE
C2F32446B09C42631E66ACF8F474C3916E1531E3943B9A0AD1182BB36B164711
97B6AB22747435F0820CCA1D80AFBB8FBC9BAE0E72C886E02FBC1ACAE21F14B8
6BDC0CC2627AB038FF5A40772347CE5CB25145EF884D9B96809404C70CDE65C9
A640663F0332DC568A980DAB890CA7D5456DEFC7EDE915536146C7929B94219C
ED3157B52E17BCF5E5C1E68891001FCD21B4C9CD98FD05EEF0EDF45967F5822E
49BA08B6EE1DE76F0E7C424EF73B45DAE4FA5E0811765E142AD5E3C0E9EB6771
94186A1E20F7B08564A2AD139C4F5D23083462488DDDD5968E54FA472E79A264
0DAF38D02E3CB97A08B82B41CEB140363ADA04A95E2EB72C563B0846152B1BF6
4E2B7ED1956C727C2B252551374A7A2E9E8FFC2A84A52FD1978EFB634D09E7CE
4EFD0E347D6F5F8636EC64E5E29C9ADAF3004B16245120001701050EC20ADF2D
8997366AADB297FE0574E5847E9655B9504F257257D5A366D305DBB60C50DB82
FEDBBED9AC4DC080AFDE33C99D6C8C8F068CA3DBBFA29D869DD884F5BE0CF851
6219C81E433170774EF638AD8120C3E0CB8318FED6B841A4D4C40E363B3D3F1C
1BE55B972D6ACD2A62092604DCFC7CE3E57904DAC5A687E27D31DAD0D23FAC20
F0FBF7C15EF43A4C5B7AF41EDDB0A18EFDECC0FB76E2D25366B4C83F364E50EF
2B385F93064C2B088FF10D7D42F66521ECC1C6C295A346E7A9A48D8579422C20
35F8F92322A36C8E4D21D265B471EE35B75B00818EBD98FD73FE4A919896486E
64C16ACE62D99E58DBDFF18A755A952890E711999F835F0E75464D44BD433D3B
BFEBF805B06BF87EB40281AAB7B1EA5873C50389569C6DF7737E68FA76813953
84D2788B9A1A0D3AAA479963ED03E8553487B570B83D87F75D80507724BCC772
6E463F23F96242133CF260AC4C0E94536978C69709D5F680773E3EA254538A74
B4B18E7063D700B3E6D1D245C1042361D7D2796AA391DAF415C9B530F92D6463
F1294493F6723AC4D95D579D8698B82E149E3FF8606D460D52424D4380348DCB
4BB2C3AA501B65106913DC7E090F660E6D0E1066D0D04B10D3553DDF91D5D77E
753537AC3613C6E5FDE2FCDAD219071FC782DC302A2A056001280E44F8D3D0F5
EA253275166696CA68B8A2F65B09D14B74A52A58A66C812C5E043FF76A95B103
E3DA151187614F6B44215773C0B3303B5907E460123E226BD69DC87F4F1F00C1
9E295BC2AFDB8A567C2523CCC927ED34FA59B2BB581CB3A6683F2BDABDD13B6E
8C3748D51FB7416585F282541CDBA02B2FB41305B804F6BCCCBD7C20A46B6DD6
C771A6B6ECB9EECF674C68E8C1D40B63335BC11EAAFA3426E425BF1DD2A36B38
DEFA3337EAF80A6949BFD51028416D47CF029C0B02D7242FB4F14B95FBF14B7C
A21640F58223633AFA28D3E8B23F835F7E25B05D9F7DE5221343867BEB8C0734
7EE582F53C30722C25B3C2C9C6EA8079FF4819DF7FA033605FFFEBA5938A02B2
1AD58F4ECCF53F0FD626BE30DF6114D2D9E62E0D9F0DA31F086E8EBF6E117D2D
6F7666CFB20A8A2952A1D4FED3D65771DC9305765F7E48876D5834C592A4CF31
DA09F51F317C2BB76B38A8D28C767325FE8A9E0907D10CE49A442FE0C77CA28F
4538E2F8854D50F48818DD15037DF198D3DCA1BF25B197B0C66415EAD44F66AC
7D7D9E06C922BE927003F74EAC1A8A64504BAC2EED1A166D14FC8928A3363A74
9A485C1DD54AD92B659F032F880D04AED91A9BC13CAC9D325E96222BCA895697
DA07920969AA135A916DE3CA24C3540D8F3642188C380E77808FCB9E29DAC8B8
7F6862B87D3ED95FEA24AC5847D37D52663FDDB963920BDD1496FD8670D23577
0EBC3FDACDF9E73ACB01BA01B73B2A347875E51BA836C8FF1814A94BDC277CF7
25E28B2154DE28298480EB5CC6192B4AD809FFEC623305064D8D667481FBAC33
637BFBF581791780345F1B0D4B49CBDBD9C9756A9CD55644F0BDD696CFD10A5E
1631072DB559D075F096CBA70F9657B83B6897EE82DBF8AD8555017E08326FB1
48BD6C6B92815C631D7A74A0214C4847C236F37470633228F5C3193C757195BE
A6C3B19C8E8A88FF668E85E2F48CC123150A76151F1DAA10F907A64001558BCA
F21D07B16F6A98D0C648716D64CEE286653549D685D2196199D707B2327F5E0E
F4DF9D6E713929A327DB2B6EF61DF5AA202A2D9884AD008394874DD94E30396A
DD987C5037D190541EBAD0C5186F406EA36224550C261AB7DFD79D7A4A599F14
9509F50A9D6EE77619C0F8B18438779B61F547580ECDF9940DCAB5BD9F3A93FC
1388AAB6C505B262AA3F9DD7CE8E0FEC93C233D65A25B7947236FC1FD9685940
A6E058297903E1D177B017D118583F474BD0B83F03B797932F9C0A755F7A64DA
183FFE3D5CB96D603279F936F14B48767306058F75ACD84606E0A5EFA98BE24F
7021DA04B5752F54C022786B575A4D9A0D4886460FDA345A22D7F2A70D633F45
F4C2A4C3C55302DC824A98EFB1EED59BB3C88E4322BE69A4CF6986B0EF727ABC
224875065625AD7801ECED29AE00DEEC0A86049B2640E96DDE31941490830F62
53428A8804A6E594119299ABBE196B2C1F4518394424F536237B8F38D1EE3EDD
079E25140814615135F0C8B54F99E42D17743FDF4624B276163C2D1A65805865
48149FDD2395E98B39FEF6A9EE894320D31EBCF72C623FA7AE4A71801C9748A2
A8F4827201078008795D743488902DE883CCFC2FE94BB3CEF188424FA252DC74
09052DF5D5AEE03BED9BFF20A9D0916878FC05AAC07CCBFA53DBECFA6C0386C3
B44A1F5C769A48205F4D3ACA84F2C9E63C2458AA52DAA00148E6FE27CEDDF665
EAE7A6C1A73A0C17D0F3D654DD27C3770DCA246EAAE53229F1DA924C0D2E2E94
365F13B105BFD1B885D9AC7D53221145731649D567D1D083D6F6D3A57E4EE2DA
CE8AB923984ED45EAEDEDAEAC96A401D4963C610B1EF21BBA920D93E707AAC6B
2089F9141EA4D4547B9E6093A6590911A119E392C9E1C909782DFAC330724B1C
70BB594F448A1D2333A4107641785CA8E56F96FDE17BC5937C566A097C2CECAB
567C606F5A03514A13C744646CE61F74E426D70348323B28DDB7A27795E6554C
B2990F922C09BCD572E3AA6C63F1F690E036165280744990173FE428FF7B09DD
844C22A657A41FF724071F58F125123419C6CBE67AD6DD1C2DF72A44FAB1EB12
E6BD7E7C40A4E6D00E73F6650EFE8836905079C00AFAB2F40AD6EB6ED7AE90AD
7ADF8047168CCC1D0A3D5ED41815887812D2BEA3BB2A306541EA981DA0B027EB
5097936E319B2D864CDD87539EE1A510B7163FCEAA2377F76A3452A8359A3531
EA111DE0994A947AFE6D84EE03A55CBB6E63E6F9B1DB11F47968DC7C245A0D3E
B9F65FAFAA5AB8141DB9CAF37D5A07B4D6C9731E05D862B5DE3712B366DF4176
C73B34AA7BD73BEA73371679838CF4BFD24F127C92807415A9F32EBD65938FA0
7A4A81EE619BCA1B866F27E1E20DD369203633B59ED54E814B6394AA84FA77DB
36216D50538A89845E692312D2F0BC5E7016937D7CD0212F66DE21F745871F7B
A15BC20BC2590A5C788BFAE2C53060CC700C0FE170FE9F901733726B644879E4
DE8021D06C38F878AD2798C23EA6A4230E5EA20EFF084E35A62C30161DEF9BAA
8A5BA7BEA5B8BE3C4BD818FA1071A785BDD400319704D086784BA761B2CD876F
9E217C33E7A73A7B468AB5CF57FD0F48441781D55D5EFF4F9D9FA4EED0800DC0
21DDA3B26C489C10CBC91CA682925BA80E927C25A45CD1815628E936DB456B9C
DDA700C0E89CD5C009647A505643CFD3A04D7A3D6F75303E60F59AE61A5BF502
94DFCA5C2FA52F554B577854364F2BA6F41A3B7BBEDF479F0D35264A5141CFA7
FFC8009AA26022D610FD8B9551E55CD95A36CD22EAEA09785BD86EDF041B5441
BEA3B364E4B474E5380FA1B91F9CED8CAC9B52780166EBE658BA2C3EF6FFE9EE
716BAC4C063BAA25E9E214426CCEFC9C652F4911AE955802F6CEA2FF4BA52429
2AC72A10F1314840AFB40DB2FBEC37DB55A0A9E4C472C2AB0C3E55D92DFC82F2
B62D0FB59FDBAEA9B18E946689E01CA56F978A81877D6156C32DE8FF9254E094
CC480B50EE4113A6062990291EB71EA6B17D52C5D300E7B80761EF222FD1C10F
4B8F710B11B7A688BE53E34478C2DCC58261F7AEE0433B5FA4A6B6BA66EEA845
2C28FED6ADEEF829BD3B5F529BBD6B00BD126E875B635CAF2A24C96FB6B32BC8
76B348A91A98FE8635A01D3166D6B5EA2CBA391F553EF5EF74E955046FACE619
C00CF374D8C7C19A1B925D68AB016404AF442BB0C975A7DBE32373B970F2D0BC
E2E3922C138D2230480DE5D90E50F2A91880529D37B5BFA7B4C39699EDC4FE24
51CBBA7939C2B3964828C3FDBDC0F7EEBFC25107720393F9A9E32B742E82F20F
6D5A354311A735A00B3BCC85CADAA38F8A5F10CDBCBA6FA38EF7A7BA6795C961
E4853707822A78FE42D6B3F85A7A330C9F370C4A8AC48C1A685D033EB9A03C9E
F718A4F5D1E6590680F9C5074FCACD15ADC39BA704FECAA775798C58A31C38C2
03C3BB25D1A804871584CB96F921C02974A4A3712873104876471723F08CFDFF
BA9F05DF5AEEE8926C0D577D951E61E77FF9F2DC119BE503E99959E301C5DC4D
142D06B76FF0A26F184AD6DFE3B19AEED8636AE4758F37A19A605A8A154D8216
B4C02F864923C845DA68722EED04FF0015A47595CD12B2A29CD14CD5A12FA85B
5355EECDE65B055EEB75679206421A6942F3815025222B836E64D24D17A89FA8
EEB6782FB591F7C1003C9E1B62135F66771830D908F832D3076E90D26108D87B
533CAB1DD298A19CBAD8081E2FC01609EE1191466F2EC0275B5E1BE6B25C22E5
D685856EA6AD14CEDBB2560F4633BF617BD57363C835FD5EF7321E15FA19D03E
B10EABFA5EAC3643CA27539C5C12E63676CF728723E653330DC15BD33BC0B1E7
B995095FEE2D525A65A1D09496C56CE44EC4861629ADA9273D72D1A7888E1254
946AAA4B879C7AA7DED5DE966155CE0DDB1B77562D977E35B7B286ED0665730C
65068BEDEF5707AD1C3D26E79BBA1566BA390DB4266F0E9DD61392FE5B082953
268B4E7DE0751CEBEE1B84C970EDBDFE2288E41747254CCA756C1FF445E5E58F
1A55FC86D86DA059633125AFC15BE3DBE2E0E14178BE4BF2F6F2C0FC6071C21F
0B5294365DE37B184CDB4019B06719E504287738DC849CC1F7018073D327885C
7FF704553A982371CEA182ED4C0E6A8E6E01E202B1588AC92D0479FBCC9A6CEC
89116BD6ECD0C115B16B60265482881BC342C5040C7E9303BE25F973C672D9DE
2E3354CED9E2AD7466D45131487B742F05608FAF15302E2BC3524E099F163F7A
9A12C8C5945CE46EBF24EC716B3FD8A0B09E957276995CCF039FE5E738D95ACF
DD9A96352A295DF732690F23A8D49744B38B203BBEF511FA8455136AFA2EC163
07795995DEDB173364DAE4275E56505EDC12715E3BFD0FD25A7703A49D45F4EF
ABBDC04CB6929C74261029D1EEFFC581953380266D151300DD4798B083AF907B
3A5A6455410D73D4CF935700C63AD7F2BE5DB432BA6FA200D5281199941F8E3F
01A1CE777B1A56276739DE8FD1204CC2FE15B4E9BEE217FAA66CBABD7BBA899F
BE6C8048AAEC60F2923D8EEE9B5B1C95BB8E21D2B8D77CC97F61EF22CB088484
7FD510E165D2FA5B810EF0F3C4E5747F1997CC71916939E73DA17FE7805933AB
5ABA603F1C138C56D8F8932FFA1FD92324455B99776912BF30797C7C517799D2
41F399057E40DB8C784654D153A3195D4EE22BFBEC05C0933378A1B7E42ADF3D
D2DA39F012A644BA42B1E41A2798C1EA578E15F0DD363006375929FA87F3A30A
5C5A56187DEDCD57A4CDCAB0B5C2BFACE1BF1C0AE4AA23F6A134C5653B758CCF
5306180DD6A7A57972BEFD059F8E028C797B33E86F49FA72C9B1611B02867881
E33BDE9080A11EAA9F9346E857F07CBCCCFA0D637816AC8F89508839AAB34E02
082B2C228EA5409D76FBFB3F7AA2143699BD7A3E9A6440360F2A11AE6EEEBAC8
F2BBBF1DB512147DB3A66B61C4BE7FE582E5BBE83BA75C3F5E244D7DEC4800F8
8C4B24704F49EE76465F978BDC3F0AD731861A7ED4DE21F98B2675342718E113
8DFC4B25905C23F98FECF835EDFB195C5AED2862C7BA7F0FA26DF2E37DE559BA
14C80736C771C3194B2AFE7AF7EFC7702671354A4719819E222511CA4C4666E5
9464918CDD0FC14CC41377C1D6067FC79A143673341FCD5AF4510087CED39B12
A2DE3DC9A3B51400F27C5A39258E2B21C890FC7A93CA46785C2BC50BAF56C865
6723762175E4CCC1E22706D3189193FA6059D79D477E93B2E8C88C6084D20C0F
388EE4ABD03A3E12F55AAAE472FA9F74F77B048FDA40C30F0D2FD57D885493CE
576286688DA705E424025FEA653384A5FE308B0716678AE5B70EEDBB4BF24ABB
F62FFDF6C43080BE5080DECD997EF3444696E8E497A718F43322054FEF2A2163
46F1CB660F34B36F521C4F44E515633506C5B082D7459F1932E6FB12D54411FF
908D41B65518E900AF0C64C594B655C2F75DBAED2CE5D0B2D72889431AC53DF0
5E3A5095B9F31910E8A4C3AD23EC18F41F16275D38B45D55267D590C5A725887
506DE9863D6FC14BABB00E21582CB1044EF7D5202C698708B70430D362139382
2184282A8A25E3A7779C79493A6F2CCDBDDB664CF3E2EF7270631223C289B6D0
BF81E2E326A7298EAE2AC094E0BC544D35984BECEA6CE2D2DC26B2F096409C60
789EC4D62D0C55C4200CD7664E88C4CFD54B3BD50062F245EFCA5FE3A2E58BF8
3E6CCEDBD70C6834A1CE8BE67E837C2037938B51A98BD25EA9FF96284707628A
49185441478D473F3B365525EFBA80D41485DDEF2229C785C82B861B67C8449C
067347449BD6875E90993D6DF95E2E5805EB2CDB3E9C346DDA5C5C8FF86D7C78
4CB583B090F44F168414CCD7F6739C5A1949D8B931AC42C1BCBC6F0CEE496AE0
7C7CBABA3AFD3E0B750CAEBA5900753885F455CDA9975CDAAF9619B559B885A8
47E7E57D78A2A9D9D0FC061A36D054C99472B092DC2A7D936275797E8454F9BD
33B7C0EF826309B170B957E58CFAB3717F2FB01847702366E44B127A72B7C214
B0150BE299B81BA33260649FC4181356F5DF48D69568E1E1F2A8AF5D62FA140F
E0348760B6AC2D12AF84127176AB3F714B58C30ABA1309062A6600D8E5527B5B
990E01124C2B296E1CD0BC6A2014FC2F56B4E01C8121199B0DE8B07DA721C015
2967C36FC3EF450845D62EDDD97F80D317545A4A147BE1DCEFF922D9F0F3760F
0131930686A03CB49C084045E27A76D1D7B3629E841A48AC9FB8616BA252D92B
06E7D63FB7D4DE3CBB8A3ADE07A8F4A64FF3507EB592AFBF0E827D75D30ED45C
765FD647B904C389C8448EE7A46AB2A4ABC9AEDC1AFBA4B50CBC333417999258
1B296EFA54DF33F161A6018194E71F1A436E12F7E1CE13D7587BFB368A6CDEFF
FCC7CD148448BCE4CFF8F04DB402FE9430E7131C0C6A894E08DBB9B164D70DD6
8E677E9ABE7F79534281F6170A50C545F394C42B414D865D4CE954C07FD33159
C75A1566AC156F2AB1541C4589BEA8FC45D42D9D60CC11F1D5C3D63003F00503
50533F75796389CC143233C5C9837E94D760ED504702A16F9BD7851EB8765CE4
1C788A918B95F1077508F352117F97CE7163E76FE868AF7017CBBCF2C351BFEC
7CF4609F07CBB162BD2E2855417ED53D16CAE1C3A15397F4AB7442C45A580D3F
8BD144258EB42A8C181F31DA49CC40B7A376F61A6707E81FC29DD18DC3A1FE2F
A7C2358E986F7D6E8F07CF33DAC6A7429B043703BF90CB672CC1736CE1B8EB6D
9BADF7B4C5796531FA27990888655C4A09DA47D39DE874BB1B16C35500117290
95D1C496D4F165ECEEA91EF4A883D8305754C92DE5B461950F0D8C5EE6A35727
83E0BEDC216D5B2302419F368D24D7E8982C3FE0F7A8B90FFCFFE809CCD7EA0E
47DC860E87573F2E30EA308E195672FF329153C40A72D36F8297387EAC58F8B1
0D59E8F37EBA7B3806E9D527C795B321C5492F83D7452C2D11ABC9F79A20AB77
EE7108826E4473D10CE790B53DC16A697650A1C8F537494E36AD3D958EA18A29
D33BFC4C1F4ED82E9149740D92393ABDCAAD0FD6A5A6CE93A08D9B4DAFE267FA
573227FA94614E259D6E12EA07AC85133E7570C3A0A3A3842D037FA898BC5930
CDAE6D4354782B962D8DF53EF394A226303C2F86E262025A1C8958AD04BE11E8
A3859FC933B62D5D37D24CC1B5F0961F3DA4DF5251C90128C23B1A69450D7C6F
F3B4591124363D26ACC4B18BC01A202B2D9196782AE49485E192EB8BF21C61EF
D4552FED44E02137E39263BCFDE6A28A5AC7BA76C90C81875F1487575AFCCC96
E9906C4C11669C66211B6C7548FCA00E07F32BA4DCFDAFEFA8437A261E8BBA22
D62112E0DCFDF6905F55CDFB1140452AC0FECEDFD0559DAE17D2911DC20A585F
74A20ADB18553CA9EF05232417A0BCCE906CEDBA4525934ED437B8CF2B882996
E02C30FF38307E7FEF01D318B3D20CC307163502F0058C516A4B6D536BB6E3AC
5734FA2F74A3B412F2A82FBD2898FFDE960F9CE6C957580EB1C83AEE6210E849
D82AC86448492641B75590C7DF1FC88034FE1F107E96B6B35C1167C59B27E8B3
34229795EA1F0FD9CB73F9EE385A212E9E44C30E3A6BBD86A1DF03BACBA264BD
324944E98683883A016A891A14F4182E2D971BE0539011AADDF00C1DD0A8B734
08696F5D4FD785F0F04C23C7B8C5933F17126FE759E49FAE5BBEC864B0ADEC8F
86C2D7E107CDE0DB034C5D1E59E8B62AE5F52612CBF8327AFE13ECC0E012FA2E
FB8A7C132197343844508F43ED290963FF072FF528400865322248D1F6B62B60
A24B075BFD9B4D0DDA708BFC47134FB5FDC739C94716AAA922DF72A622BD973C
26153D1F4D59CC8C77CAF72675F1FFF80AF72AA7437A3C675DB4B93CD88F0A5B
D8E0CB7830A22B2031EA39733179F2F9A4E777CFDA5716C059414C19713603AD
7D26A02B613F84336CBC2E5A6491B24B40B84B5B4291549F5F0E344A0BF9731B
2B6A08D886FA138D3911ABE4B23A915145BDC77F6625FCA95C9E97C1F5F0EDE8
0B22BD0F1A69902AD21A9C83EA142878A409B6C63558500F89EAA578BAD1B736
7927DA416F330BAA9410B16A768ADE00E896C22B39A937035815FEF2DEFBBACD
AD542B7670351F950B83E144E6A2ABE287A822F145F4C4C94DA2A57D4E9B28CA
EDA30A4526B6F993D885F4A3346AB4AE0717F7524FE423BEDA38AE83C88774D8
976772D931E1FEC3680FF3AFF5CF7C49E9E425E07DC5991C44F3B167F86A5198
8550CB97C4F1A96414EC48539E67F17F4AEF3D055DB30C1940C47C2E2FAFF679
F505EE3F886C78479C874DCEB145E51DDB8447F9CD364530D767C0897718BE70
187BBCE264D50B70C849DF98FB664CB5C9CADA638D94A99D6786432721CB8FC2
2B4B667120EC1FCE4CEECE5CC3EDDF4BA9017EB2CE7599605BE50A1852DA96E2
854C4AABCED153AE76E1AEC9F083FD18FCFA212742BE30037F08D221D76FDA3D
6C6A17219254DAFA387B8F7A10EAC0E23501615ACAEBF6C8F671056B1ABF0FE0
59F017E3E6D47C0E748CBFC5A98DDDDE2F21C78779B79B7CE3EF9CEAEE15E444
6CBE27DF8DEC66874E39AE1BD2040B01C3F7A8EE08B5F60304C51AC983B78F30
F20E69894CCD2C0CB0B38BC53BA9CFE2DC56ABAD1775F9914C83D502D035C718
62ED9A0B79EEE7CE7A80541E25AC66659C3D874FD1DB8CDA96A02A80762FD4D9
58E436B1F2C6AB05D54544B69ADE8935707E2816DED31D5D9F48717009CEE4A4
19FD68756E4BFA27754645CF72909C44DA989683A5FB6548D9F6F998F471BAF0
E7AD70D57723D0F076813E9B9407856F8548C532360A43C9F2221E6EFF3CEB9C
CDF6390F482268792F3CC9ECAD1E5E1A8CA6776B25EC7F7CCFDC6C719FFEE6EB
F7C15FF0A5090B0FA0BF8273EE3FCBE8DC9A088F12047AB8BB69474338F93BA6
C539C7912D588B9F237D8738858954E39149F003F09203A5D0A51C3530F0D8E6
73AC6F15893FBD05E429B9EF821027E734A4707D68E8753A578CA1A22693832A
16337646CDDD49243E12BCDA1203E0931A30EEB7366DBBA2244C1346F425113C
B719F2CB3E29C23752565517FFA64225AA85C18C3B3B2007D0EE2FF5C5D9E597
3EFED9D466AA64B30A2C980617E9EDC1304CB9AEF60E43E2055D8C899D48B493
27AB5FF3358E468DB6160CD2AFA299F722F01D694C863629EF886840FAEB656B
34956923BEE59FC5304B6E6C543F5166168BBFDA78D4255EAC70600FABEEEEDB
480BD9F636EF0A425CE9A960907BC4BA2263DA5CEC989BC677DED0B98DB38E26
B3C0CB419312A738BA01322F44130DAB5AC14777E3EA71795C57D0FB9F0B33CB
D29E1FEB92DA96A08738257FC3443B01AD80CACA75B38277061935AEC02A0F20
9C5884DB8E5A4632B78070318DDDD1DEA88E9ED3379ECA810BF6265BDA4587C5
EAF85F70A431DB97A8B90D61971F4F233D6348395CD1D7EAC34030D0D73E8F78
B5AB5070F115A3AF4793B7F65F32341B6BC45C38F366B82512FA148A3712E8F4
A5D5EB812CC3D20E6E19FB2F848C79AF6EFA1828451CCD6E470C338F29D6183F
C46DC21B6B46B67AD9A508C45F873918942BAE09C2715B6D682E25DA45036EEB
C6CCB72A4F3ADEA9186C082B0F97393B178878379464B979093B453EF5B5D292
E330BF88162F1D8B5FF6A0C6D2C76230630EF00E88FA4EA1F46E776FA591AB51
4BD9A7ECCAF51AF18F33427EBBF8F3974F3345CEABDD0F43EACE29E6BBF2A9B8
21868641DEDD3B8DB95558273D7DA21B1805E78C989BEBC665091588847FB41B
25ECE01C5C3425D432E684551C3C5FAB5A396013C0EDCD8AF87CB590DF8271A0
B0EF2EC4220C4A649DE130005C8DB154BF14C0DDCBDBDF71D5C5786483BF121D
772545503E9581A393A0F5567CC84EF7F396EBCB18F5CFDC67531AEBF5625C5A
F43DBB321CEBF8BF58AF9A579A0D9B3DD091C44610DCA392695DA238EEFF7D6B
7BA14B95896E864A3CF94F6BE6B4E2A8DF44D9391221C716C8DF046C18BB6E34
8095C9251F226A9FB15F65E2490218931504228E6694E4BDE7EC0FC5395F5232
7A8CD51FDF11283966406264A67BAD82BB03BE966B8C3DC37108C2385CE81140
67EA027B710D766FCC5B881532472A9835EEB98965E132B0BA1021975AE73D40
60BAC04EF2445A5D21D45B2AC243EBC8362BC363BE2E5EAE4591B17C79702216
73D04884253C1069B6E8B84388831EC66263F3DD95820AC3C4CEB79BD4FA345E
0837E269CE2FA6B0648304CDE23676B7B7315D63EEDD7AD0E993DE8DA48E61B8
89F4C1FC9BC77B612AE42D181B6000F63DFD0F83D54CBD1FFE526454B81D6A63
960551633401B5995B0E985A63BB6FBC68C150FAADD136D032C6980DD1B4ABC1
D2C1B242E490181CD8F765A3061233166BD0520D43DDF01FC9D73DDBC83F7354
8F5DC620694DEB0B85958B7269B41E928E14592A14AF9013713AAE72E521F36F
2FCE20D4907C6CABFA484F0D4E1EA2F9EA7871D444F71FA593D786FF83603247
DDE08663242D0BF889AAED778F63A0C0F721BDC76B0A424A89E242935DA2F5F2
8DF109A57800E26248F8176E9A8094EA7748FF9F74F480125A7850B58C328AA1
9886C572B6C61D37A5195BD548B663CC4C6D6C74132764E329204E18004334D5
E681CCB09A29C2623BBF83B0F7AD4DBAA8FD53F4A24F776E296C0123F70723F1
99605B4347BED6615BBB90007055C703BE989991FD12FC5C20A8E657C2A81881
449F3B28B08AE869772B2AD77A649F6C6737756290A747DDC3D88017FAB5AA4F
FD350F78B7CE05C3B100C9B01E01FE03B01469A4CF46F603D4AABC698852CC81
CA8FA3A8FCD986C184E2254E58B18754BDEE7A55CD64DA134A5B7BC358C2BE98
0B257143B276F6036BC181062474296E22233F62E7AC524236EC9D7CE06EC59C
2327899C534A531EF4D62700C656827B4F4350E0D4FEDEA33A249DDE8768B14C
CBE095534BC6237046113B375A529564D353246D872344B57C1CD64BDC8A350A
3A11189128DF7CFCDC5AFA8C33DCB343FF4018D05F6BC69C4138F97649C3F0CE
A473A540F25FA346E4BC1ED1B4BB50936658A89BA7A2EEA0FB41610EC0B4D2BE
C73EFF2A38B7C9F7B9F0B666E36E76448D2C1516204B39946C6E306D0D9FEE94
0CAE23A0477C1615DBCC115589D6282BDFD9575E8E75070B346721861C8CDC10
D700AB04DE8049CC48EA1916128C15099E0D4F0F8787DAE8102C986B010DDA11
E0257EEE4B919EC5BCDA43DB769101DA86D35DF0D4CBEF881F246B0888D6ADBB
0070F2A7AF2EDE7FCC3BA11C1E2D24C8EDDF1C55A5510671EC52BC20FB404006
873ACFEB0A3A39019FFEED0A635E9F2915B034011C75A347CD6D13ACFBD8C9AD
D617837CA71B3F3A3A9974B8FDF42405E4502507214E98B9B638827F77C50B5B
386FC61B75A9B7D55BDE375E551272660CBC25EC41A970F40DB218F7BDFAC0E8
C1DEA870E87A6152F1F7E56B303C9DCF20D07FC856B31D547EA09E05D18453E6
CBBCCB4C69A4267417648400896295B4DB401F9B049EAA6318A9BB0A2C03CC18
E9C0F6B9F9CE8DFFCFAD378A220DC6E226BD45A94D4A8D7C2B7C7C5A667E8B3E
BF6A187057D7C18D4FCB7A960334D61637957C83B1E09038D0B830770CDA7A95
811E1C29B70922680F9B1A0EC30B8A5C16E77A9A6AF08709FE37706F57F979A3
A25479E106B24A2E3A14AD9733FB02DB7AEDB3ED348B60C64DFB8D3A5D06E10E
86E46A50CD4240C5024BCBC74C8DDB29E8BDC56A5FDD07041527F2F76D6BD263
53A9B5BD5E34829024BEE1091E58AF04F46747722DE79CC666DFA1A8FDABCEB2
C6C774EBCC59FC1ABDBAA64DD7F6294CE777F5DD60216D45029DC3E8F1956A5C
0A9F452D98DDB9EE275C14D835EAD40AE010FEE45B595027387342250177392F
40521467BB4EBB0965314A2794D115AF8D2A7DE51FD9963712DF3F5EBAAD78CB
B41705F9FAC6197A37384B401EC953563C4F1A09EC77CD8BC24E773FEB9AFF6E
77861BAD8C8AA38B6334CD54B2502FA7378F550EB2DCA06B140C4AEA7950E04A
EF425D35B908CFC94AA92E8C6BBFE61BC573F90DA1DBC4EB6AA204BC31E8CC13
D9C76E94DA9BE308E7526FAC0465E51B19F36E879EE958FCECCBF9F66DBE042B
ECEE8578277718007EDE4CA4333CB5C39CF3939E1B4B4DB94161842212EB2B8B
8A5985EA8E157A947B2523514510E9E5C68AAF69494223522346BBB7C70B6C43
668C41A3BCB9AFCDB735F25BC49827E29094BF7D034E1CD26AA4EA8E4F9903B2
51BDE4C67E48D118933E1A7D961D2D2C1A825B9B367A9CE510DE99BFEF6191E1
6D5AE2DF9BF0E496BC416D9EE4E63455F9378045A479A354B21784822131AB8F
D93A1FFF4ED12E378A7EF83CCA350E2DFEC3FBD9EB7AF91D1170E21702A652A7
4F13B0355CDF53E754EA0936C5B62A0DB9A5EFABA3CE356087A99B88A15200F0
59564209308A16BF38D07C884A4E7F80701744AA37E56D82B109C686C409F820
200A67ED4866031476EB71EE96DB5176EB118DAC8F7603D3082D56DD42C6F5F8
62163901D48FDAAAC35E54DE6E258222FD2C8805CAC04DB2DAFA36CAE66BB69A
748D7481003DD0A73A3DD63666BD07C29E302EC8BFC910401305F07CFDE4A260
B0E5EC87E744997179ED82A91336FEBCAB45E809C50B7D8543BF398B60E23E1B
E4B9B5FF0AA4C44CF1E921A011A861C47DFDDDCB2B70805A4496227806373545
23598A2E5620079F2395E93804F90219525EC710663EFADFBEAAAF1211FD817A
F908A1CBD68DA47EA3CFCFC016A5655971DE694C1E877BF1E503A474102D8AA5
78B2899B2F87CE6EAF776EA2EF13C56CAE9A1E3448A66B5DC6DFABFEC1C91820
FDB9324D869BA6F112C1EE51EE5F75D110999DD58AF08A807D07E759BF43196B
D0F2DE8CD0A808B942933B8301C600B9AE04C31A602C0058395234F495AC075A
012C6DB420673167ED3732C3A5DEEB0714CEBF4CD0D44126083304B1C101554B
22126949B9630954677963CD82EBE914FD8134906CB9E394B502955B49ACD175
BAF5C11AFDE30B1400182A36F55C1D30572AEFFB358CF3A39B1C6988474B045C
84695AD07319339340F6EE2B6B40479BA3E60F50F7E41CCE7D6DAE7157DA33B2
5F04A76A3BBF7ABB5591CAF6704464DC6F6573555F2AE5D28A13701CA87C047A
111FA010553D16D9DF4FC7DE1A32B83766EE6B0F3E042945F61272B114A09B3F
3A9C24DDA9F0CC6B61020EF0908C1C7B9B563938B3490FCFC5F97B3A0159DB0A
7F16C04FE3C4FD1CB5FD3CFE46F4A086A9280D1BBA7B1D916B70A8A40713D167
4F20B981C0E99BAECCDB4A5D45BE98E24A240BFF3B74526357A105E5AE16948A
ADA878F338AE74155FAF14295329811000E43B732FD496318A739C9FCDB6270A
5EEC79B427679EA07BFCFADA66A9C8B4A14EE68BD895FA71EB2C529252949880
BBC646FC6C4E92FA9700080DC6E28032A402E192886DCEADBA3A733BBD9B3A75
135797CBEB0FBC0A70F80533E65AF874EAD02DDA4FBA14F9BB6AEAC1E1A29FEC
DEE504D9AA2C8FDE0526449F7E70181060C50B8D1FD3A4C11432B69FB258C807
3C8A747DFFDA0B693DF0D51EEB0D0CB959575082C5E93F4DA32F6A66C6EF65C6
B05E59C602BA5F58B627720700D10914AED5823960F939E4BC0AC117E730699B
701C65D4BC92335C98FC9992B6E3F24FC39C2A1DB70B09F7D17FF8A81F5E72C0
825FCB2A93B4829F8D0E009DBCEB7B9131C21EB7331C79986FE520F676630253
8FE52D4D315B23005038C797C76EFFA98516A393E1E4E84ECBD7CA014D15A293
8AE2AEC75021C981F2951C0415DAA4818E01A412F704BC29E71E7474A7F1C028
94E002B62F71953625A282F22A50F6E88D6D83426725A9856024D9506661FE76
48959F77A3C2A2DD700D135381D74CB25239D736C1C22458FA6756ABDEBD52F4
AC23C83146A33053182327965FA05F89ACE6E7D766DABFF2708340ED9B69E1CB
719B17184224FAC65312ECFD13A328D2E4E58778CA2163E4567CEE3A41B1C237
93BDAE85C732BCD04E9B803E17157C837EE0E28650559B70F3FC397EA32D9024
644C7E80AFD3CE1B70B806C32874136164C59AAF6227F7371176269D8DAA5D02
4BC72CF7415D6027BFCC612D6BAE35576D20403A643A86BD7807946DC7D52E98
C3827400863CC58B23BF2A3F8F9896241D433D59051500140A2657ED0B66C59B
E5C8C054186D4BB33967BF0BB64A2C4176D65A2B15E6458A01B5AC2C1D1FB523
435A2DE1AA5B535534AAE41557731BC71FCA9927C5DC669A6B8AB5B207D4BBA6
FD0CBDF6E1751E1C918D8D06E5A7B771F76DC95EFA90A79DA92443629BB3457A
41E37EC1A46FF4F3BA8DA8462AFD67FCC348A127092E5B3E4935F5C227C43852
325A56AE5B5810D11C3FDAE532638286026871AD91B86849A89A33D3FA7330E7
EBC6413FB80152EBDBB904919C284AE1159AA31266252A6CD04472A9E94C92DD
B7644A7A9E68BA0EC52FF9B0ECCA4F0BA113984D46B97CB30C5EF341138B7D94
5D55653A66F362EDE9F67B9B39BE27412E904824A069355B71FAE0A1C4DDFC18
AED6510202A5FBC6A935D34D53AC872B50B78E148E2588974383AAC1DEECD745
B589F7A884F805C9DC2C16AA2237C46D26DEF04A36225F89FA6B4FEFB82272BD
E3995A267BDCD578C683359C1AD9E2B59BACDDF12313E2AEC1C959D77E68072B
2B3BCF12357AF6C3D01BAA21C648E59AA314071B21BCF9EF2C3F0FD725BE5C96
C35BD41D35FA7469467B4813E7F0F87CB41F0E616F6B01582A9F16E0C6C89BC7
089046F857E09F3C7D7307923792642E810A6703FFDCF752CE8DE467A7F8D0A4
ED59D8AF48BD8A728E694D815708DFACD09E7C9F379AEB6F3756688D7FF72D0B
A7EA3D317EAF9C2E8F490FCA2A2101929645BEDF8760AAED2A343DAE01CDFDB2
A9E6DAFEA29F5D84604BA4AC806380628A32E608C53E2E123D6846B8720285D6
FC8EE1EDC4190C02AEAB4DD3112D1722B5A98C261BCC6BF7F4576322176CDDC0
B71F9F2A0BB1ABF12FABCC27155E76E07BA4237FE89E47BFA48C64F0A6BAC1FF
776CF3096587CCBE17A834ABC4F28E5A62965F46B187AB441562E5CA53CDE275
555F8F6F3AC0D44DAF8412923FC08AB5D6EE0701CACF232510DCC9B10743167D
56B952647C1EDB2280B4010D33F6EF729E3C0C71680385711FCB5A58695B6EB6
C3E3567E70FB5DBC09D504D2E1890E2584EEF6CFFB304342D808BD49D8B36A5B
6A501500F978C3CCC33C7886D7BD29014AF594A0132D9A221E59AD61490C44C7
C952AFFEF6AB1FFEA5848F645669EE0B606387750E0987FF1EF8EFD72BDB9E5B
E418BA4F7EEDC4E1C49BA01B0D151022561DAA2E07D5FD1BCB8B532701D241C6
4D5E98413DCBFC01247AF289ABE0705B33929A9E9677C4A1DFDCD27CFA3D28E5
4EFB4F588FE49EB3EBE70899A2B9AC36F5F09D9BEB2F0E2500339BAFAC1682D7
C13653680C1A248DE1D8FFCD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B78188FA4BCFB0B51692D07B0BEBB930C6F0997B437E2C51B876B
61A563A2673932C2045833FAA35DB22ADE12102335D5DC734AE3AC5EEE6658D7
92EB62131E1DFBA441F53EFF9021D9D4C491F26BE8F54C61165CAD778CE8695C
EEAF70E3B20C64D4C2B34A084B5770BAB2A974E898F62BFE90F132A37E2DCA4F
43E13DB13C94DFA8ECE2B7374827AE168634FA007F8981ADA046CED3448BF453
FCD9A4F194FA648F9FC0971734BB69CB75348A88CC361FF06E984C86AF0EA429
DAA5808CCE3583664AEFE0C59EDA04A147FB51227A5AB0C13942323E9B3733DD
3EE7DF7F774DE5D0D0980DA8C0192983F1E3EF18481EAF1EFEDA0068BCBDB28A
7FC7D9191EFFC574588DEC1E180341DC959F8EF56ED5B19F50AA82A4653649B7
CDCA11A1FF27AFA7FF189A7E8A7C099AEEE0CAF3E121798B2721ABE8808D20A4
AB6E704C0C376BD242C4966325D4C939669E28B55BC335405C47C34D835DB493
AECF6389494276FDA492539D1D529EFE0F998FBA52959223F553610C12D62496
06537173F16868EB1DC5AED2DF51C753E473E21EB8BE0A8088767F42131319C2
B08BEB451836FFA20A22DCAC455DEC481956C911F744201EC7BB5073136D839B
E054B6602C2BF46F794DAF2B18BE63F29D8A4E0C1472F6402A8B6E60326422B3
417B44320690E84E298FCFAC33DC9A5C0145AFEAF6D6AB1260600B3FC34FA812
5A48C5B9F04028B09102795EB3887BC24976BBAAC45F088BC2322FE644F929E0
05007E35EC54593723329DA3F3DB8AF642E668D2830E3EB7566A850ABA5908A1
7C51326AFB3A7CFAE5AA32CE2A369B0ADE284A88CACA2EE3D65BFD4235426AF7
A9A7017B75A9B71633DC7697A6F6996BE2E5186292AE63444370E50311218D77
5EA8F59E5865CB63056690DC4E080EC50A8E4D23F8BA855B3D0ABECEC40386F0
48879DD71510A17F8506F58C074CB33E636797FB4D38DE3F890BE349B593C547
7DE04ADA53A16AC308B15A58DC0986D4FAC839F4D4F596F0FA0E8340CB88B11F
6F578E9BC8913AFDDBFFE3B50BE086BB23FF7B73F10716F037E55259A992BBEC
B66175B2802E987831FA3B92DE88EB6660B38706100E968966A34F5891EA373F
FEF2FA0F496088C20AAD0E1ACCD2C7875D1E66FE79F9FF968E8E6FC77BAEF4D7
A73768DC0A6A9A9BD47B5D6E5890BCA767707BFA0C26E74C0C724BB137B5DF39
18EB26C13AF043C136465C5C6F80D7DB5D24199D0B5ADC70E7247413CA122AAA
CD68497CA08CA6A3C501613285A713A005746697ECB31A61F98EE724379CB3BB
E737DCF5898E1BC3FA64A97994F8A7A8E8B878A0A77F19581D79F4196FA0BBBB
A0DC5A9EFB14815494F54D9BB1FB5526C72878D1EAF40DED768B2AC23F24330A
E3C852F9D90DBC373CD194EB31C4E7965EC4151E89411C5113738A03737962FA
A10CEC9674EB20E6CF526580DF200758BB3BCD2097C3A11FD3B8DE295DC76BEC
3F0F3251569B23B6571000F99AA9868EACC20395DF8DDAE506FBD30ACB7B9759
3D66AE2B82D598BB1FAA25DA82FEA39EE4A4BEE2AD2D1D907849DB063D08A563
980B479D01E2E598C8C46082134A89DFCDBAB00376912FDD004F9C5A9813F0D5
98D72D6542D9EBC9A928B0A9AAC4DCB383E0D866A774E51D69FFCA6F7F607D3C
C0392338B887B8072C068B6E9D2C86ED01F5B11BCFB0E13336F53E6FE4B07F0D
F95F5D58C0AEB164BB6884230693CB66C0BF852526E67B9042108D09E695CE96
1B2AD7269EF351BDC239FDF263158227FA716ABB4870F455897E518945B7C017
701E211AC202098578D0DEDC5ED5D8D1F1DBA09A3530D95CB5CA0D0A680279B8
18B35DED51F4A1DD5A0AD059DE3FCA4D009A1FA780DC3EBF05CA93CA1D604D17
BFE9C7D1B0FD1B6F97068483F7741DF0F32B90968F0448D62576834022CE2E0F
8D7C869C0E0B16520B45B5C905440EE9A71C2156A09C14E79FA273766F8B347A
D117002CA5EF6061B2CE13BA3F217EDE48D6B7CEEA7C37C930842B5A2594B454
A62A6E094E429A1E60ABC2E15AAABD4FDC41373D69CAE1036162E1EA11B6A123
BED93EA67B798A83CF0ECFC31711E453FFD642C40A57DED232F3DC8C1F6B1602
9D64D14E4938F0991480EFBE12F3A4C2F874B9AF34AA06657EFB9DD2698FD583
01F41C537131CEE68CFD8D6871A362E0AA054C3BC86189181E69858E3146908F
EF573C542A1D41A624A0EAB0B2A1AA7A4C922196A18C0922843A983D85B21B70
73B0DDAAB5298547827E73FAD239C9089DCE33449F5AB3FD08D93B19D3BDBC0C
A006B47CE3D5176C65F469FBF2D753439B12150E0663963A2C2EDA12F7B1EC04
B24BDF62951122D88272A7C6691196A426D76EB0E251B437E57C517322E30D8F
83025F34FE2A739C5E7F249DB7965EB0EC7DAB8759A2A6121B76580BABDDA32C
35F318675ADAD83C1611A0E2BDD4265588BB1E3B81C543A2A506334AE3F298A7
4C61337139798CB7B58163E9D9269DB2DC45B75CF54B7256F94C0A056C87EB5F
124E5BFCBF0A0A665CBAFFE1983EA83BCCB0D93FBC7CC1BB6225BCC4A56BAFB6
11B0C01B4AF7EA895D13FD560549D71E5F8701C6DC04777DF8C9C25DCBFDCD62
B02D9D965C784728B431CA0F465D7BD04C461C4D6E44911AB78B162EA7684CB2
8BA3F7CB67BD2CF8F631F1083F00E9B5CE3D58AB00241937D0573C31D8019FEB
10B4F29ECC55DFFD1B928C57389616894F40D96F2A66D40E6F3E086C4ADF27EE
9E1A4EF9E32DA85C7F06572C4C84E6C69ADB48FBD5F1F31274F43B57F62103E1
2C9135B57DFD6C4902AFF2D7FE6A4DF50DDE55E93E8CBC317461F691ADF4FCFE
6CCBDCAEAB5BC6B5ABBDBCF2477289A7B66291AC6A206CFFDE3E92508C83C5B2
7AB3160665EB4D39B04EC98ED889ABFC2AC0AB864EA4BF77568FDD7B50425481
F63ED479A593024AB1AA8DDA3ACFD1658127E781DA8E54DC315A0BE721E5FCE2
F852171C774D1B0FA53BE605F3A8F7F0D50821C7334D8BAA98FC66A48F6CDD20
92BB4D98066740AD022EA993CF78892F3C43126BEF956D2F1EEBC6D5F95794E4
B75390227C89F4C6E9F36C5FEE5BCD2CA71F4C25BED5CFF2AC051E5C9588B9F4
F87686D2966A266A286E16DE207933F5E9A4F77B3820704EE52D5BEE34E7DA84
2B4E149F462586D94792F337EE1BC80E260AEF1704B5CF9CF96A12C0B9086F55
5AAC3EA39549D378AE48DC6404B139C83B806FD5D418427DA2253D773F44656E
E7D97C96DB1B3BA9546B74486D26BC3DC12D245D6428ACAB5EA878DD8B05B7AB
0B920249E3865AFAF3BE983627F8C907F2EB2466FA6DB063F8DB7936C0FDEA96
C1BB1979C884AB58D7F8D04490B038ED8BFA775303B5CB89229AB2B05151A0FA
607BD86FAC37C55A232E36C2C570BDA46E368CE0D09B4A22D9FBE7AB4FF7E5CE
90A60317D124231F32E9CD922EC54872BEA39A3D8489B9A64B6E897031AE7851
D87A16554F3B5473AE30B0724B33FB4918711F22E2D3BDD125E1C286F5BEEF5D
3437DCD179E698C45653D842A0FF45991A8943A6DA771C3691C99DD2BB3D3561
2222D0BF71A034A16495394EE3C640732AB4DFAF0443A38BD7BD3BC2ED852E63
A122066C68A0AD9C34B7BA8B82A8CD7E73F52B3754975A8499869813F2380972
28AECD3EADA172A70FFEF13D8F160B364232153F2C7174F92CAFBD9A689DE2F9
259216D3A6A73E8D8EDBC04828F321D1AD9C1AF0FDBD4328EEBBFB2814512DB9
7F258949D37B6C44916138BB209357D1E71F6A29D8C740B0088C39C56D45133D
C1A89AFAD3F31F5BF869E29AF9C3BA23164A0F6E1AD7E47E772C39CD3F18C79E
05C588AE3D5870C1182EFCAF60EEDB867EED09994D3B937F16EC384F137A2383
01C6D33333A512178F13C10CF9D7E4B847962536111CE25FDBD170643C02F77C
4CC9A5ED20B97E41AEC6801608A2EBF42485F2802B9F6C1BB28034C33B3BC3DF
9AA0A06F966B04408E17E0029BDCA6FBDC0C8D50F8F96A1917ABA777DB8CF5A6
AFC0FAA4661E34581DBBD30A11B0AAF72593E666BD7EB8B2C98977B77DE69913
2D20DC9C7E038802556EFC25D305644BF185DB52E5F3DE24180EABDA49A4DE0D
6A268398B93A72832E425A74C9727A4D46E264897AA37DC46D7EA401FB7F54E2
16C21624FD0A312A40F3A2F2AC8CEBF798CF69D56B6E9C08D6DE2FB5CA246F13
206EA0A9CDB3249946163326767305103F2FB1C68D1D5874AE0A128EDF616D63
BB00CE90729F94E04781E093256B9664D2A200B78F1190211DE521AD832082DA
8E82912D7B43DD7F49B17CCB9CE24C0486CD4832315FCA6840C250C41CBDD3F2
82233ADE22836BF8F123194B899A5A7FF7ED60A7BC3D7E19A0048324D445576A
B5ED7112E4A3D572AE8CDC817E93232C5B2816D07A743D1620AE296BF6D1A71A
18EA8E9FFFCB6C3957F71453AA1566DA8BD44B2DD2935454B746BEE9B36CCFC5
384B7965FE1D68E7F55C5DE774F2A0B52328111260735B064BAC852C6BD0510D
C798928205A201BDA6C716C15F5A97CCFE96411B20EF9B9413C1462609EECDAA
70AF52E7B4274DC9CDB733D96B0369C7C0FC9161B4D372CE2582F1BFCB26C3F3
0B8C4E489DD09CBC2B498268C75BC57F39B71CBF0889085128464089EAE11ACF
DEBC68E6C79C76ACECADC9E0B8B06B0CA2A01EBF6F98CB317F12B955E6381B03
F9827C68BD8E7FCB5A37EC4A5EAA0F64D9EE43D6E68353AE1B0E7E5A7894AA61
14040E07F7977CC3CBA4B14AD9398F885E62BAF76ADC7BC0C8BD91C10C5D0D43
650F292810FF87A7C8916BAFECAFCAB6063FDC04DFEB9B6B0CC8339E6136A40D
7AA1F652910ACEEB197A98FD90D525F1D23B49D8B31A24A995D3FFC9D9890257
3CA6657EABBBC1DF7B770B51113C1EFE7FCD609BE74B5386C9048DBEDFB08C7B
9ACF517A05C75EDBCC40E3126EC9C2B1F4F22784798EEB73CC40AACE8610741E
F74A50F2D6944D930FD990E243C63E96C30170AB1E63D99F347653EE38C512BA
F7B1AF7DA54339D853B84AFBC086590ADE862039D97FE8FE70DB2E0BF514D551
D138678AC70BF68BE2552267C7082CDB445875A0304ADC449B8382AC85F3D0E1
652445070C9F98A02D1A9503624FD4CD9B0DF0C16913A089CD45F6406E714AE7
A520B91D03A510FAD71F44D64FA0E75A24407A25B7456B0C2FCB3370C7AF6EFC
39B50A09A9E2F43E96FB257F5DC3B51E2C49EB1A613D1D372F1E191AE9CBED2D
5CDCBE5B7AA0D86038144396952E2A4CE086951EDAD8863972A92372336352FF
2E8A098565B3579086CC60D4F6B106071D60BF791A4234BD028A1D56CCB22DBA
B51BD43FB80EBE940D1434EAA3E911B85B49A9D498A39FCDDB6F92B78A067534
EE190876EB3E47C1901C15145BA2D282CD49E30DF838F95EE8FB138A01EFDD82
6441194D90701153E2E19103301CBD3A24017A0DB72AEA3792B25F19B553586A
3E0B538B5B322CECB8614EE85E4974BA7C23350BA4A374979671C61F6498B47F
3C9A76B1F4F36B1DE7532E1464EA1D596636AB2895B34EE22F86A5666DA6AC6A
7CDD44301788D9E9CAB55A97911FFFA9473C0C11E5D8875E8507ACA744FEC3D3
53D154C5C7B2F4389EC0BBFE0E82E495EC43D8F3DBF68C92D35D7B24B728745F
B372645D6E188BF264DD90CCDC186F169EF4141EC71C6F41EEF0E421D5014F8C
4021D8B07E1EDA8A27CD5019EC627D98846573A09BB275E701E5897F57BF0935
F0E8C44CFD6185D0C973501AA89040F474FDE2AFBC502EADE4D7D0B4F352D977
182F699E63A056161CBFFF3F10C3483E297B72CB5BDCDA02ACE5863588E16B40
908BF8354DE6669D350147F995FA93F50FB1A268A22284C39EB855B4B04353E0
67A6556445D7D5D394F9A06EA926BBB9A9E6AC94F7759A5A1159892E306FB0F9
8C530DE54887150DD4B78871A8CC3EB2EBD617109353007622C3121DBF7BDE5E
199ECE52D0124C70857AE7833F15DD26FB54D393E6B08EB1CA923FE894133004
3C53348D6511F7BC436DF8AFE99BF476D336D4E17F8F6BD364FB415A7E1E089A
77796C3DC333EA7979D3EC8CF8E2D975CE5DC42647BE373443B181E6BE9A0F28
2993E2E9C03A2B3908D94A2167DB7825A83DB4AC6467AE14CC803FC1255EC280
E01DF0F99BC889C3DB1BA2919A8EE6782EF82DF743E753A5BE4C0C6326D91443
363D4636AAA0A1A5A2188D1C98AA63E4548817A5620919FC2BC9874FF3599918
0B7FFE144AB089EC26834152E6B07F421309326A1F5F971A335C34C762A412D0
02ED9F58CC40BDD8CD4FC87F0DA6BD3B3EB360F4115F8BC6CF9316079DCEAB90
45D978AB69F3AABDCC0CB01C6279F3D6F5E275866DAEAA73D1D4883B976093C7
50D232D239EB9F50FC10D4A7D53D8BAE1EDE76D34E17C50665EAE132C5F1BA44
19EF31B94CE7194C374E3A0D5F2D10B3C20AEB3FA76D07D3232835DA2A25BB59
EFBB4A6BC2BE26CB3DEEA3D8A3F18D33F93EFEAE35952F8F9576B3889A5DFC21
72F661DBA2A0E3474F9A36C2FC5FF1A368517EB6A71A00FB0F39B5FE0186D58D
3695D5F744F069952FEC205F2653959E21D22DF6F54CA2D410379D6C563DD477
CCCE21D60A1675E85A23FAE5438015C0CA75A9ED4BFC1DB0FB2CD1BC816F4173
AD1D3B6F7DB55B649BF8179914128BE754D3A0CAFAA9784C14AB583EED8D40FF
0B90C0E899554546B42C3DF46C2645F93781C6959B9F3FDAF8AAFCCA6D1ED180
DDF5CEFD34D14A6E552AF59B98566A1CE601CD9161A9ABC699A8F98F78C5C589
EFC4D56686DC678996F1DE9591C9CB8D554D4218B91286F12449989F952CFCD2
44040E8E1236BE15C7D5A43387502D88A25BA4A23A5207BED31842F23C0FC8FC
5D2E3AB1E12966829416C158A258AD94597F3A6B83FF350C7B674E2EC6A5DEA3
77B2EDC886244D21165BFE49891DB9D17328C4C53B493063B2E1EAE33164E20D
BD8080E12E8F4C6B55950A6C6EFF50A6BB86C16E23AEC277864C07CDFD743BC6
CB30EF19CC68E6225CD7E909ADCE282121F23B4B67EEC17A97E102AAACB11A67
CAADC3F5DECDDF27167E0E73A49BCB7E3C5C12EA2A4116BC151FB53FD97B9D69
CDBAC03E530390414C48D03E15B8AA2CE019935F8C3CC03A479BE2E25EAFF8A7
B18A4A7BD360E2906D62638BC7B38D92E4872C8591D86C16DB4C9638ABC8BA14
DF09FA03084F43E5A125E0D9358210F9642149DB82C8403A6B5E7876023236B1
8D2058DB54C8D92185C43F8B45DD8EF410DC101CFFE3748E7DB1BB2B0E18FEC0
2CA6836484CF0714365C1C21A4AFC336ABE9E02F50525BDADAD25CEA02A1489D
01748EEF37F181144CCF0D9DE63964E2A5CC8054B21C0F48FF14C7ACF1CAAC8A
A16B3295795D97DBFABEB9888317ADDA990DE3FF63821DF08E742E1E125F0B8B
4571E10FD7930DFB9D2B8A163887CA155EE04FA3BA5F9D5FDF36FCEB96E75511
6BB67600CDA2DA53E9B6B020B0A4C69AF67982B9D4B4D35A9759164AC4B2748E
4F856FC808DC044D43CC6537DE39E146FC2D726239B7309634351425486607EA
2753D649AF29BEDF9015C5CCA42A758FCD2364F3F3FD603A0C9260059F1ADE31
E43644BFD4FF7B893CA280CCE62224CB0292247A912CBE469EECFB5E1A14D40C
B31125AAB76D5596A3C33C4076B39EC232584798474BC74ACE93BCBFDBC4A33C
6B300EEAC97FBB9D76E516B6F901FBDC8EDF5F9C0F816277772E572E5E3053C8
2671F72DBF1C9AAC745B1D3E94F7F631037320D2C87A0F2F267714F7942C10A7
62D173FA7B0FA94772A66AC3FF0128F27F0C3FA1356738F0B9A2F9203CB9464B
CD79F53EE3FDC1D32143F94C70D693B1D3E2EDB76CF04E711813F9B8BF62B43E
ADC200F80A89D7181D3549C03617E3AC45F834A596502780533D27CF31EA88B1
550F32820392D791A16D9530B86F82C1D6EE5AD559EB9CB3FA2B593A2A01AD72
076AAC34E70BD5E781EE69C52CA47AC0213D27D2988D2EB6DF1A5E90DFE84A0C
BA0FAD997BE38C5D3D0DE832D14D5FE724B9D72A76907FC474942255FDB2055A
39915BE1820F36AAE0B74B2411FC8BB01D7E81E827C2E8BE34CF5890BB750D76
3F321CA5274E1627B6B853F1284BE9BA05B4E79DEBC4371A678A6BF5151C8785
78DEE58FEC017924BB3BDD084DBCCB0B214AA31A0EDA6AC554A3D6C0AF6ABB5A
9120A586C6BAF5CEC9EDA845326111C3F811AF01A7497CC10882E92082F29159
692B02B1E2BDFA832B958C5EAE72D8FC5BE2C905912AEF57E3E336B96641703F
785D3376F0AEBE50D77CC1502E35ADDA8B502C50BD8971368DC418078FB2B48F
487AE46426F40F9773ABBE7C824C5CA632A457A02C47CEAFB92BDE9270310354
38BC61EF907B090D8D1B1EF37320325D376A7DDDFEE5B8C31C31D1E684185D0B
FA2F17C49AC72712968C0906419E14386A7409588CC6FE26A1C60D469A62BD43
BDE557F5FFDEF2142EE18F5011E58C5A0B2C369080FF04FB8354F7C11271F391
A9AEC9195A5690AE421CB9E78E92A1693A97293D4CEE903EBB2BBB5EBDF8842B
D2447DFB9892687F79011B70D900F46F7E1DFCCD5F12BD9FC2C400E9385B3CBF
5F61783AD68BE2F6706A08C64327F8BFE217F5971E1841A353648B27ECFAE5EA
CB658BA3E1AA00837FA5D93B2D476AB0FA1B786E529E916C3EAA7565F7378639
CA4B2E5640C25CC9DC3E5C3247DEA1FEAA62B3F1164F5287D6D4BE7C7670B0DB
18B0ABF767028D0F8EFA730F4F57EA8B5D31F63B76531886DE3F27B7D9308D38
DF4DEE2FE6B357B04201C8DDEA9F28D431AC9E4B8C7BF2B4781EB4389B5B8D9C
006D181FFA57B9D29694414770B6E6EA49AAE9C2B1C94640F0E03802094C5E1F
08641A34C5BFD6F60B85DFA6A66560464DA937C70454DE94E1CA415085BB2012
F3578EA6743B654E575694748E921DBEC9DAA1D97347AAB536C46F296B556CFF
A55534A358A6A4A5E4B764DC52711C9C1880058978088FDA6212384BE18854D3
5088C7143289F64040733BB1337D74419C559FCBDA6984DC6814601402877466
AA5A82FFA41B7E0342E5EAC1FB5B31BF269CA759207862103DDA9418E3103B2B
E28A36F8B90C72FBADFA523CB9E05FDC98106BBD23DD73259B73958C82FB00D3
BFD2524543DE7A5A52146C66F014D28E872E1A0A1B14099C8DF9ED06A26D28DD
5E87E6FD57F7CFBDD28A2E02BE3A5C3C25375A2719BBE0155A39DA76D7C4F4C7
4496E02CF74EB3552926219E6F63FE19B0282F2B173D87A508895EBB52AC64F1
17C24F8DE87C2AAD03757BFA5546D5E3EE38C344161F593143DE3F8BF4A5D45E
7FFC568C93A0BCEF630CE0214EFFE82564B2C38F6E548C76C006F1D2CC67A04B
95020EE4D9198037D6D592C680C2D7A6E89F7DCCAA7FBEDEFE0FE772CA9AA0D6
863C3DF7BE480E54EA66EB033BF94CC4DCCFC8289DDA1B3DCBC75DE541817CF5
239E445DC71A0BE2710AB44FBF1030D36E1C7BCB51D2959304991F9CD3AC6225
676004175B124A0B42343C3C6DF242CB9AF010E0124E4EE2B9F5D252A87806ED
43694BC3879A1E5EAC31064C62E31C1B9E5FB53B44EAA702ABED631C3A22BF36
FB92A59A67A29A37D604CAFCD5D790B94294B98B13390041FEA1BB680ACF7A45
0AD555F93408F423D199E00C52FD9B538BF06CF2B87C2609D4F38F167A0A20EF
3E66AEB06732B73C7372B08F0F21A5D87EB77BF12358B542ADE2C91F2D89F6E7
FCD122ADBB3B85D8BF914BB1A8B9AF07A52F3B2D177AF73FDCED89AB792A6CFD
613C0A4E196499140B3D44ACA5A4C0CE925F1883F12E662EB391026A26678A25
3AEF1C2E79EB6259938A34EDAEDC19A8454A6D43776E93DA16BC1DE7275CFA9C
1D3CBD6FA81D29EEA9D969011007ABFF6B36111CF8D9AADFABEE7D0CBDB05044
0FB9D957BA34818CD014C32649E2F9001351EA1A7E0060ED1C310F1CCB50C149
FDD8F8F78BF055A8DBF3B9A93763ACD34BBC2B1BD38F851CC762DB032AA817DE
1C3A3CB07E7D875024C0854546F6DE8F00493621261D5C8A40E4CBFD3758B4BE
348D3C76768E1CD030969E8002F02FB66BC11B71BF85143CCE9CB4D78D772A96
31171C4E81187BE39FD13CA4089061C47904DE9A2B8CC3388B3CAD817BED9A58
7180BDD9BA4C9E5CD099B8C8C2EFCFD9B63BC4B20E00F910BC25E2C9F70C2C55
A977B9E1CA94C7CA5B75C0108AA59151BF5909B4D892FB1359E8FDE3AB8F0ACE
A267F973DB454C86823FA750E82CA77B7A34F8F41286EBA237CF9BF79CF1F19F
F95310075ED8F2B5F3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 12 /fi put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 127 /dieresis put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F0371C96EDEC11B2330ABBB5A7964685AF858407C63473931277
82533214A55E3D1AFDF27146CC5D6F0214A6AA8EF53CF7C8124DB0C04FD8E749
DBA0FFB2C835C9A69FE98FCF9B688A88AEE1051A3EDDF332428C7649771919C5
309A1F1DA238E479F1D9A4D1598596C6DF22D816DB22097AF5BD0BF8F100FF57
033A1752FF06AFBBBA4F4B3A668F9BEB9034F918B03F190C3BA952672EE59332
9F17D87B69A71A85CA748C5AC92CA48A1CC4F9D1A7A659C822B7A93C27F3D482
CECFB6EF2B84AC2E39039EAFF922E54CE7C9A348E47BF3C42B75CC1D1EA5F8E7
7DAC9D8FF45547B6FA4A29D61B1A2D9695130DFB4457DCF6A6AF092422F820C2
B58FC2680A297D39F39AF24D780465B6B993D9FD92E88FADDB38686EF45DD300
7F8BB64A986882D9FB9F5B02415B88BD08B33AAE88451A78A2473EBD72F6D366
4C5D0355F8BE90A17596FAC421059F16244930FD4C3D0B0A5D623E7C453B014E
EDF4BCB881866B806B9D971DAF83EA858AE2A76AC7B3BB0329CBC2C311939FD6
B27A8F7678300DAAF70BF9AF2DD046172E87402DF3168F7EDA89FC2B9B5DAB6B
01F84E3F6B01673EBFC95ED0046692A40F6120DB2796E1E08939D2F7AD9425FA
7D80B4A7D80DA2600328A3EC2780813546373736DA0C3810C1B7A3B35C1C6195
16F0C68783E0A676EF40F0B1FD936B691C92E7ECC359345A76C5C385CF96BD66
C53B63B2D049ED0C1CD0745C108B4A466962C44C451D3075761844DFA10483C2
0D87FA6133021211D25D84080E1D6D8B4A049473AB0BEFB8641BF869E42FC542
FAAF99ED80EE653071218A1D0F52C47ECFF1F06148E5690F17D958136440F588
81001BCAACD3EEB67E256379A863677DCE24A14BFC52E9210C8A692738339D39
2E8A943CF7BC33943CB32D1B452646103357AB67FB2362297BCC1A0FBA8E217C
DBFAD61A655B79079EFB56AA11CA7B92263076C2DC2017B11EB36517E7B1251F
9B1728E12C225883ADB46C08CD85F730E703E3EF7BA90B027B796EB69742CB31
1F5B9A21C875DB19E1EEE2999B2CDAC0F0370307BC6CA5E7CE474F62D5EA99A9
CC556229232CCE5446606A8D2018DAEB7AAB1C39AF0B886D594E3962DFD17FB2
C090CBD573725712788DC9B3C1F174F5947630A0A36AB7E18361553DFBFC441C
8E894CB97FF27348B1CDE9069C98B692F833A4B1DB174526F7E317BA2948CFCB
7DBE8A5AC206A7B42143BC3D9AF9014565659F634CA5AB96AADB5F5BCDC3BD26
6ADB75B7DCFDC73D6C49EBF786DCCB36E1654AFB81943E776E9CD1C491A61C58
D57CB57B3EB05801E75FBD2E8B119CA712BB53A222DA772889DEB008BA06CC17
B27DC1DDC9F312A714D67A987B72498892C35D9E572E6DDF855153B3C710ADBD
39A9553CE0AA02AB3E20BE8D9123EA73F0063654283604E9301C24A6F73CEACF
875C839AB34D3E1467520C5D9CC192F4C8663D677C2C08934A21231BFD03BFB5
4F326E3F165FDE89610D763981D7E439B194A6519F629DD6138FC13C4D172E8C
382BCBD1F1454D866670D0F7AD87E1EAEC65E88745696DBF522E3D19C8D26E34
69220132E800D1955C62B028647AFF326D342E968435D291BBC102BD65E2FF56
3E2B527EBD7F2E619284901348FB06DF41F3D89477480749DF21FC3F95D7AAEE
163973094DB643209C9E6F7AEC777AB60DB9A31C42840130EF8027033923F4FE
EEC80189B4E8297B9BF8CCBFC299E794E89A2598CAC441E5676DFD3FF32DE712
8CD707710A4FA1F863792CBD1A8AE0F43585FAF5E028A0297E51AE7D746D1802
0D12DC58234B0A742D7596C9CE5E535FA8D347D0CA365EA97AFD433A1689E1C1
48966A615E8C4B8C52BCAF151731675CB743974D2AF857A3B191C2501715BDED
B5FF271B2C73684E90B759113FD8AB808C4476CC1343DD54DBB21CEB1661917D
117501EE8D03019980404C496AC18F2721E71352423CB55C9C53B58EC13D45B6
45D00ADCEE3148A248E92AF3AA9FB00478D8343075F36F4E6CD03FF4DD9F288F
27710A47EA455F8168C0BA52AD73ED2C41D016BD09CA4590E9856803B27A9AB4
92E07418CE495490E432E15742757445A4FC11C098423DC78FD97A4E985A17E2
852C4961D5FD63D92EFB43A563B05EFCD30EEE05B242C52CAAB0B28B8362EC2B
78FB10BA36736505600DF6A29F0E06D109C87EAB34D9C098D2D715FB804342FC
6B7F6F78D91A7A5DE220E156B5C8B577BCE3E858AE1F2DA5FED222FC220D46CF
3F3E307194561FFB1D4A41B6B7CAFAC2C5A5D668E871379A588CCF6E988D232D
93647A0F4A465E36B06788C22E5E2E7490AB10327503E9AEF5254EC4EE2D5C01
29CA28178A188F05E03E88589A50C6E89ADA959EA6E8ECB2AFA895CC8431803C
98472D2374095E85341CEDFC578D66C83422A85A30E59D961472D4A94F914B60
B4B767A86853B3A161B3AC777C8D4BC77657C712BADF64A7DE2CC6DA5861C23D
7EA3E0AE45E20289A1A5BC36DDBBB7DE436B7C962C59B02DBDA92E9F28944810
ED55639D01EFDBE09B10E5C88C16AD07B5FFDD5A09996C16A34EB34A2292CBBA
EE0FE869F41CC7FC51EBBAA7237799B1A77A764CB90B26806CAD9F20515E9150
37C1764F676AA9C1087C63E8DD08FF6BE8AA61C96D96351B7F2CACF35A96FFA7
975459FAC9D1B43933BD1B6FA7D3241D908731E3A357BA0D283251223CDD304F
73C1668B314FC420463C9904F6A5A40CA99CDF997A23D389600F124514356729
7761AA55EE729753C029A0C05E80AF40C5500C161A7C30F804855B89C164555B
BA418AC7157C08183C53804BC41A2F7F552616047C498DB16541A8D56C42F8F1
C69780A4182B8055CD48D2BAFB779E65EAE334DD70721097824C329FC5DAE9B3
EF9010F5AD54C7DDD97DD4440E6E27DC5AFACC76BB8FFF7FC90F8D6188F4561B
D2B5E68E674F9DE788212F7FB71E0900279AA8367FC5A6CA1FFF9BD0B466FAF2
7DA909853ACF47C138FFF60A64A9D0B7F6918706EDE8074B4589283AFAB8382E
AAEA32840FB22F165DB64E493AA0B0D126D48082A5B5DF435C7F863782A0CC18
414BEB58AB989E15CD783CDDD44922BE5BE936F96736A0D5FC3C796B89F951B9
CD97868F397E9BA3652DBBF879ED8B561FA6D7CC646CA2BD9A3D19195937598F
A1394C2B38F4DC4EC5D6B2AFF9DAA53D0222B042DADDECCED700F88C298F86DA
5569E3FECA1335D347A5C0E5E92EAA57E8993E077897E1AD7E9047FB7D3CE89D
5B4A42EED104996BBE970EC0DC70B92955A6475181646C1C52FE9E5DD04A4C73
BF395FF8742275A88C2BB2545F07924113612E0203BE17434B10836A3D3758DB
EA21761A78A60AD76BE3E8EAB06FD27BAA51352721853FECFE71FD52D8BD048A
8D4D0736266F79546A60CB7873462733A73D5892694B8DF225B832F667234370
F57CCD44B3DFFECC7D314BC4C9FF5DE89096D109BBD53C3364790BCEA7E180D0
6547C9EE02FBEBBD2D4545EDF012B70BE8BE56593D7744EC521DE02D94CBEE32
F1F0A8037506DFCA2902957EE055E94ED1F183B8AA9FB52AEDEB262BA1483A52
EF2C2080C7FD330F04D1FBD399A86015BD6A2B07A65692B5F38889D1604617D0
4A1648F4D2B8A903CEA155F0ED1B3C9C6CC731BFD5B58B212020CAEEB4E8AB1E
83E1C4926F05558EBE090260A815B9A59B9931A46C93C5CD38B377B8B46A9A13
DC2787E00C7FEE070ABB86B2ADE6F88D209B30C015918058F3F76EE8529C304B
25581AEB20882D15811137A157D2F9505FECB453F59C7833E6E3E46DAB987C11
7CC79A37081872952513A319C1C76F5E20D30F3A499F47E222CA48688936529A
42DA5CFAD3D9934686505A540FB1A01E189D80B645FC2D5B882F990CC5A39B16
F2F2DC30156487DC0A8ACE51ADA8D88000AF2F80260F5041F62035B0677AC8AD
3DD9ECEC82666DFB16B6396D8C20E0B0BDEB240A80ADBB6C687B8A0DAB883983
CA941095B5574968CE1DCAE40BBBC36537032B255C11512249E76FADE341EDC6
7ACCA99529A2566148EEBE69A76DCBC7821D856F95831AD84A3346A3C79751DF
00607BCD64E07D6D668F63AA4EE0D7F32A73BBA4EA77228789F06D9E2B2C127B
77ECCA301BFBF752A0E39AEB2E8965A6F56EC006BCE3DD256E9897DBDA83E95E
10C98C8BE4DB52FB7E138DB92738C3F61E3367BEE442AFF9E0B8A6A4ECA5A1BD
39E3C2D2C7AD2A10BD6F21B1A08DD5C035B6451666D57290B80BBF7DF740FCCB
4110A0E4F9C1F738BE91A2A3C5A1724755AB44B71D08D114CFFE85619E5C6321
B353759BB116704FFE199406F687E180C4C347061468BB3FE981895D4D1FFC8D
BA229978809AEFF8E7B14709590537BCAF5BD9E585F5CA83E2E389AFA8746C7F
3F89F453CC9B0EFA1C84B0E11049DE6C9B0DD0B50B7BBB717C3E0B74AAC32D58
E11CC89056A66690A7297AF0244B138A305EF1919DA8ED850B95FE06DAC2B901
81C0E85FF980025AE1F0F974E44A71CAF2E6AC9BF3DACC8703AB953E9B881124
5220A1AB7BA7E08D5296A9E8FBE2094DBEA582C3D22E6AA51054E358B39051EE
55A550D474520C65E68829D0AB550478BBCAD4E63475DA817718997FCFC8090F
6107CB0422529EBBBC8BA2990D63E29E49819603CC894FFEB688014025B487AD
66539AED9E62295BC39B9D2DCA952ACA55C88B805E3C7CFDF1294E6D7387948A
42F9EFA304600A3478AAF75BA24905BA073347EC4E61360499ABFBBAB7140F6E
6D198F7978C29AB3D226B540D12E76F44D194F5B418CCF6B04794519B8B06674
1E3847D3D4E34349C6775A385370AB5819C142ED9E1D14BF7E84D9D71D680048
F140859A118EC9282C1318C76A0E46EC44DDFE805780A34A934E1B6A191D0901
A88ECFB41A75F6F676D8615ABD44FDEAD53E266F654A347E38650C28E8088707
C638E5AEDC3EC3D90CBC6281952DA7EE90AC702CDC243BBA146654F8AC44ED87
D9D7A6AC1AA949E8BC8798246C9D847188ACBBB681D3A242F3696DAE80F33592
38EEE34031B5C1A0BFDB43014F60D6BCF985856DBC5A55AE9BF1A33258946574
94CA8F357CE868CB009AEEE02FDFB25FAA81EC6BA435B7C8D7C92110927B84F5
93C99C84279135E5663DAB26B223E3646B354E5D13EAE5AEED3C081E090F16E4
1CEDAD8043FF7F6FD0CA554F05CF406190F4DE3CE3EF9361036006015611C149
99F9E551ED9A7EAF59B3715EFF5437D0E9C5D840125FB927E20919525E050554
A8BA40D6245D8B6E71ADE3353FF8F0B176A60157E0B34F599F3F57D6C79C3EA0
0A8407B7373D5A31515161C0206142376BBCF6C40D18ADE3334BB2998EC33761
EFD39B2F8B47BECB144FED547620EC9560BE9CEC306382226CFF207A4ABA2751
641C4211A2B3242F56634D9A0BCDC2B496BC9E05B8B747B638822EFF28F86058
06DEFD2505DCB4AF850D16C10CE314F816AA7B8EF5499E143944AA5149BCFACF
1446EEECAC7683A9F01477C75D9A13657509CA0C0B032608CF99A7D009269F5B
C8D38D143B65E3A6811727B565B6946E2427811DDE3471508FF052D243BD5097
4A54B19A6DDA91927CF80AFD02890A02317CEDEED93ABD74137C55E3EDA9C977
99D309394C376E14232CF9628713B7C40756A3BC56A0B28A0C3E7B89D5104B13
44546349D3D9B890BCF8BD70FF224EC18E2FE32EFA70B214ADE144EC77872F49
C6E857B587923B6504CD2598F1B44F6F155CBCF7EA54D02FAF3B767674660FC7
9EF52F4D48A2D9E5E957E0BC94BF11CE7EBCD7563235F3991AE1068628D3AE81
511617C2668DA97BE002E7971B311A69F8CD267E366C4F9F2A5CB52A706B3BDC
63E47F19320BB23B019D4885AFD44995BA95F871B34F659CF59A906E184B848A
32E570425517C5668C5D82E6CFF90438E15A43454B6DA9B685D92C363F12B7A1
07343ABD8517EAE00313960D5F96C0ABC52DBCB61B91D10173AAE03EF337F20D
894F53D7EFFD8046EF987A8F416FA41033238EF1AD74EA3062EBBA1311C8519D
BBD9B3EBDCB2DA92DA6726D68B60175DCA243EFBC096422EF7459DE1A70A2922
8A3C76AE76E1BE012E9456B479CBEBED97F43AC06A9382C7FB9198E1A003C363
A4FE0E459C30A5A616C862963E2FAC1598B5415466E894DDC657798A027409A5
AA95695EE6542936CDE7CB8331F03B1BF6B94B0895C75F99F2F6A91AB4B169D3
DCC33863F42EAA72A9E716529B6072BD221757A6726C76D9BB2E8B196777955B
8D32B069607E0DA195889290371C26C48A6777CC50999CB95E3EFD9B51117A59
D128B065196F6B73851EA7E0241F159D76937D88C9067836D344F214C7E4B025
6629E8F291842F1F806B3D9F74BC09106CC714B1F3D579BD0A827D24B806B247
C1729C3E08E138BCCF35F4883D51EE26DD71BD379B266B6E2CED16642FBAC30F
5780D0974D7B1C0BF1CD7C6DA5585C7AEC7B31B1E4610847BD67CCE9E029D22E
2BDA1481C4DEDF4D774482B821345E69B0648B73411B604692D110A09C5232B4
57188CC27C9B6C5908186F2A83936EF4DDBE5F51BD9017D3CBBA9859F0BA243F
59C6D725538ADEEB586F46A33CFA081C46B11D68A20716E55C0DB84A75458D86
4C6E074D82617DC6E60E49588AB5EE4683BD0CCA70CBF9A3DEA151201DE31980
DE9C19DEADA23F8FFDC22CA538C9C7D5C1E7EB0C65E982085398D6980F62ACA2
02740B74FB7A6A743A8DDCBBD7120CBA9FC728B546EFB2FE6ADC3602622D8EAE
3F7484729EFFE6927D20DA61549A9C5B9F2D4A3ACF6A6E948E93F0D99586C70F
6959F26D08FCB0723060F8BF3B6122C6170F793832E81AB0B5143B4859773190
358A7CDE8188A2DD8198B173CE4F5576D64369E7089FCED5B7E6A556049DE2AE
A8AD72867BDA12086EBA765CD2996AD2C2296D0F8A07B00C631DC07717A152FF
67213C4878295723B5DF2B8A7CEE22C36FD110B0FB256A150CDCE9B4B3B42933
11AFDB4B80F46A44379037B8E09F830F2C5FDC2A828BCD74FE7A375328DC8723
FEAF29411BC27C051EE98CAFB53DE2A4F34226BFC302F0C180A562ACB5F40D2A
36962889A208A1727FD7B39FA4F72434F243BC0E0E4FB1BD98B87650C474CD19
14D9E71368367EE724BAB3F34338889CD169C714BCD6938E35C9A58092DD0431
4BC99325584820E72B0BDF2714402F18BF20DE8C6118D5246E378AC2518F43B6
C0287855722EA022F76D280FD8377FF41DF88848037C2C5E06F74EEFDF394829
BC7FA107355864D0E8552EBD8FDE68ABB878341EE6D56F5D2E75F46D0B7E8925
A55488935300D45A33A7D593EAEC9B98D4F8AF45A99EF890307FC485DF5B647D
85ABEECE86EA967D3A1566ED24ECE65BAE80FFA5D9CD7E4E930A06A807715AB1
4FB44DAA951B292E522CEA75C2890307FEC5402225036DE4D1A605070AEE9189
7F3A5BDB5BDB4F371F4943C29EE237931755CE98F526961AC7F0B4F3EE781348
6C8C227C917EAD5DBD746AFB18BD2E6665E312A2EA3B3C8D0AF1EE360DADFE7D
7B4A3E2ED48CB528C741D2A06E234A680AC32C42B71C1DBF934C8B12A5C24E65
C82CA375DFA9D0EA576DC98C0739F7D3259C44180FA001F8A0BF60DECE391A6D
0C0580E3899FAAA8355EF278BD044B5D708012673B01290D17292F2867EA058C
9A0AA78A0951B1E2A1F6D27AD1C7E16BCA5F50D9DF0BDDB0D7D93CF15C131ECB
69E49D73CDFB8CC15DB3CE875DCCDD4269F7D68B914EE2ECAFDBD5B1EC1562E4
B94D3718E9D679E50AD400CC404C7A92E9FC034D59987940E26F938288099D5A
8CF6EE0442CA22A880E3140D1327D564129181BCA308A36A302325F18209C43A
EE4618AFECD3B4D263328AB27DEBCCBBB622BB9C3BCEDA58AC2EF2E424503E9E
DC0427A343B61EB7CE0F9B2259337BEBA58FEFFEE441406F7A66D856106FB728
2A86F4BA06E301EBA82BFB27814B04F78000BE1A205C185AD291E99B54FE267E
5410BDAE372931457FBEA5A4BD659A2695D3F6B00C4D76F522A248992F49C458
B5AA01779CAE6DB7A76A650B08A67CE7602B0D2C30A8F7E7F2686BE5B934EDAC
A6B62B32488D3CB7F4BF77D8B5E83F4DA924862D5148ADE7DFDD6C1BC3D964FE
7B7B5DF4673782B0C06F2C543CC7E5F0D1C60BD25F2A0DE5200B9F97DD2D0777
2829E451C860E1515B693B13D171BC7CE7828B1841291E32125D67D620B38046
24EEABFBD397736FBD508647E24AEB9F5E0BA88F211D3A1E871663B62080AE5D
F53C24F880EECF7ED723C388221FC23BC5BF1C9D7424A5A0C6A9E10B0E45E678
CAC58CAFEC502CD9F57A06E418977C6AB7304D5E52914ABAA9DA4BA6B8194A9F
F6CFCCB63C7FEAA25423CD3AAC4EBFB327F7A0D8DFD79C8E7DBB732A497959BE
C57B73E5AECBA76A398864308432B144562A09A279AC0A0584998DCF379D4C20
0B5B15A6F27C3259230761EA19435586C4E1C9B2227536B9F37ABC0B0052B845
80292EFC3504A644AE982DC7E663DD75B4C6B417F2BBDEB29DE1DDE9275025E0
3ED457D023AE0F622DC7870083D8EE1310771DA5880317642D4F937D8687A10A
21F9C87FAA2E769B3F671A285FE6EF328DDC761DD2A19F3667D72CE38B7DFB1E
45C36D4DF770D70019492E939F4690E3C7E8F676DAC22A7E476491F3C95AE48E
D9EC1C8AE349A91D07468BFCD4C038369773A35C8796E6BD3806C35DDA270A79
52BD4701D6272DBB6C1621C287920FC9332B6BC4BD636484D399E025B16136C2
CF742FF4F18161AB0C4B0C43807916CBB6FF6C4AD0DBF8C5A714F5DAEC33234A
15FBBC96165DF085550B3B4EEBE9BBECBD820483EA708AFC2C98E5AC5E4B33D2
7C0052EFAE5199DF8DC738DF7F4C25C44822AC2264A90AB73044F0E8B2EA9763
FFD80973CCFF16B130D1F260E3305ED41E5A8F0A6DC1B5A578391CD62CFF0B32
1865CB3ED2704CDFE5F530BF52DD27F9DEF5A97A5392073BA1CA19FB3879B6C2
BF17215F34C826C471B6186C226A24872FE380D46FDE28B85D3770C7246581C9
EBA5A24005D07754C1221B0BDD58EF1DF5B79D5011B2AAB2E8C2B3A00B74A1F2
EB8B83A61803CBCE1F84A961F14C08B65C6363E66304C4EFD08A001CA07C04F0
73850E0CFC1B7A2F0119DED77B51A463500C3F39F26DDA7009E4B98696343BA1
8C84C3D6CC0C36FA2C416802331E6C5C0B97CE851BDEC60BE411D89DA860725C
17455FF3BF0ACB41647511833B923138FB8255D73BCBBD666DBF0A06E1C4198E
39C85EF7B54B3665D0CE9080BFA80D8975282A706EB68F5C3B4A227D17545075
3D04D1A136EEA7DF21DB5AFADE061BC36D0B99C2516D2DADA652A9D42D4E2FFB
7EA7490F3CEB7104759B6D6781EF00485488D35697D482FAD896EE346F4894F6
97DF06127124A9DA4922E2A30BF8D939B509AC58A3C3B280A7AC397D48634898
9074E9C446F55798EF2189F779C48475AFA868FE93B7ACB34160DD423E213F46
318AD7D4138666CD9AD8133ACADBDB11DDAEA17BB6D44727B4253CB7FDE632E4
BEAFA24D796CADD9A7A8DFF892641315B5CB0FAB899A674AA282787FF1BD6C0F
F49EB871C3684342F48DA46B54422228BE6E22E3B2751CBC5E518FEDFDAE7C78
1229A095241C86B8F7CA110D7800F58C59BE14B31F675432B1AEC3049874C667
3B684E21301F27A334345E89491AD0575076D27E935168850E37D39FC47612BF
F660DB5E2A06787B631F3948E56440F8E575543862B6203AB2461B5FF0E36117
BF247EC37A261C31A2ABFE104A597ED6A8CBBC904083C68BD4437811A9A69511
36078E9AE29F6C002B0843661D6890865B396CF2865BFFDF9A15320B38F761BA
CEEB8BB4570FA68442644CC5557345CD4769359179ED70699F795092A2FD0335
5A11DD8783CD2705C83C8E5F2BAF5DE0C6F5A10F8DE5B84611BC250CD999F9F4
945E8447BA262297E4D85D8A253830E244B093A80974388BAD432085C4D363BD
B516B9F36F7301D1E8D2744E922DC818EB7B6CFFDEDAE090F274E73C687542C9
0CCFEE3183A7A816EB93552C797532BA7693B4FFC9DA0446B04C21B7AE15036B
B55B8797B317FF35B71128E7354879D09A5277F375DD57039B8491154F74F27B
F9509ADCB9DC5394BBD96E6E39669BC5008A2B14AB7D4B0629ECF7CF5F820FD1
B53C56A77EC13EA350A7A86411958C9CA6E19B57A6AC4436813832A0FA946CCC
1635262725AF07FA6C6BF75C49C0C442EC01D72226C9642E6FEE33C95D993A03
83C003D9AFE450AF15BC935FCCB76730A62C40E40A0685CB5B80F8E407A28F39
10F86DF1EE34A67E57E2FD27E54795369A34E03A824519202F5202327A567AC3
7B51BD8AB719C8CE2BB40503A7D7E4971978FB8E7534CA6F85B534F11EAB4418
DF8CA96453333BC03C4F23AD21E5A977A08D2AB0A37B4C65FDFE714D08FA2FC9
EA024503AD47CF86126594071B428BAE123D625702C63BEB50FE0AA5B2A26DFD
EDA027D609FB09B44A6A447D203090668C5F5A039A6D082C5CABD88C047F4609
7DA3908B699A14D1A9D593783035E6EAA0A2B0C85499ECF926648622EE0183A2
D4356F8DB38227B7B63186B47DB9A95471A93BD3E3563A8B61D1359AE45AE8F4
BA6CD656855ADE755B3A48820BC780BA49BBC0A5FCC3D0A129F29ADA0E0C14CF
AB6EBE3B01F1C44C0F4679B4C5C82B956D68B274ADC3CAE477BD1E26192A4AB2
277D41D39C0CE562E275208A3CE86FF003C171D01DE982E62CF5E1294BC775D1
DB0D86BA9CF953BE57782791648D7E7B6C85D3FDB37A32872B465D3FFA3D52A4
17BC240464EE21D4AA444F25104612AD4A8E7F25A105D3DDF5DFA2D2274E439A
13BE61CFE6EBA9AF5380D2D0BE56996C262AAF43911CBC4766C8D10210140FD7
5CD2511F70886923352853F79D77D3ED5A6F795744FE37A0EE571E20BF9BE882
E776B1B69809731034A7BA987D44593546E5923B202B4262BF179CD26663A723
A9E73F54E81F4CD366F42048C1AAF6DC0CF6771AD9ADF3AD22B2A852182C4900
E071A045C87C1B56E297D7F1CA7160E82C8EACD16659C18120FA8F5CABAF7AAC
741A1F3860D518DC86F60F34502435987B9B1BECF4F59459E59470F9B1B0F2C6
F22D4BBC7B7E7F23EB8973D66ABEA4DC085E4699FBB30CF36284A439EA7AF977
C9D74052DD248D1BD23859D9E30A93843F9F3642DA6143CE5AE7C3AA8AA942DE
4100B06869334780CD9105CCF1F62905D366F944A42640C7F79B5EDE899FC472
1D521B56F5240E23100EAACF170B2B2CECC5BF1273D4EA079EE2C22B44386736
FEB6B5F087346BFB9642DD4C1DC10D341088ADDE67FE9E43E3BA30AE9A00651E
BA08C51A6355EF8AFB8A6963CDB83065704188CB15EAA90DF16D2E023E8DF9B5
A9E14FB704A6852E560E780BE5A0B2BF2BE45C2C0D93467EAD5A4A243F207AE2
4BC182E9535336E8DE4130BDB58722CDADA9ED53282C3616C99C86EFBDB8F29C
300EDD02A09AF3EF744AD90BC59BA12324257A8DDA13B1DB84F1365E9FC5B326
1F0732BAB58682079521613B2FEC54308B5F003C89F9355CDDF68CA0DB5E72BD
115DB35B8AEBB8D0D08FB73401909B330E11152E0381DD9E91559F1B9ADE028B
B36235FA00E0AC8F1C1D3005B00D24328AA6A660C6CF4844E15BE1D0E8433CBB
AC4366983E0070ADE8375C00F6F3A111F12D721CD6508ED3C95030FE47E3786E
AF49570122F82A1DECA7BCDB7AE570BAB4E6A1012D3CFF7D21DC6D473541BFD5
EF09E9C324C76A747AAEB0406D0664FC5AF799AD7BFB1F31F4DDFA4A67572D40
727A8E680FB87E3D8D67972D4C0D2804C1C029AA3EC3AAFB5562FE05321B9A2C
99AF4AFBCBF5C97C24EDF7D3C1C1758DE4EE7E74856923B2D72D3C5D750252CD
4C820DDB2B181AC6463111324612A5BE87B9E58EDB4FD0225B92375EEDFDAA9E
0C201FA4BC357CCCD98A0EC79AF1C6A449F0686E3BC893F9903ACF124A9B6211
23BF3771BDBD1C2F68CCCD7ECD8709D25C5571F89FD67C46AA49973336A3FEF3
C875172F7B35AD4332B404D6EEFFD1AF2824B5B4CBD084CB37C08EA5FC8899EE
D0FD3A35850AE65283E7A3D555128C950DBC882227E0FD55CBFCB44E7BF811F8
C8466CBA35E2C1278C7302A30F11F90335C293D5F6D73E243479F463AFA8982D
CC47AB05AD049B6E426139622BBC3D1CCC9FDBD99219202E2791C6E383F5D842
46EEAAD3A008ED4EA4F0AA170E490EB8360532E32B872AFD2C60C6478C77ADE0
8B6E9353256B8A557F4CE216614EDB451BE9C3D3A7415A8742A1BB88AC6B686E
146227CE93198AE4CCE0567BC51C2D783352AA92163EF8D8154E682095630923
CD0E8567CA3BA40201C791C6F8D8FC54E59D1CDD374EFFBB99AE9816711C9364
406147CF6FB33B5F11F2BF0D6431403A2040024A26178FF6ADC51810DEA6CF8A
40AC4E7E73F3BDB4EA5A5F4F9455AA1DC4A6F5A351DF4C1280DF51C179B555C8
03EDC9091CA3E284228F2C1FBB8FEBFE7885A7C0C293A8CF7DE14A409DB76914
F3472F5BF29C28E6FCD968B835FC8DD8D9BF5170D2DCDB7FC8A6F362372F1FEE
5DC9710FB4A078E3CA3F5BE3245D76CC7C92D0466C5AA2AAB9F19A2735E76393
B4C19CD50609B7C121A33E35E93D165CAD88CC847BB5806EE8F1BD5F23E0A190
7ABBDD33E540915A6652267E887CC50F1E8870512035B4F08B0ED769385AAA10
2BD52D72F0D6D9F8B5F7C2E640B6D591F7881C427F64FAECE96DD0A0A7031548
FC42F8EF0C926AE61F58E664E7F8BD3CAEE2FB9F8A698836B47ABF654E708867
2B8165115D9042361F291CA952388D807D93FE967098F11D44AA32FC30E700B6
8522BD9CD727FED1DE80D1DC3B87D0993BE32A21153093ECC75E1D91D1082D84
4641BC2432E576CD7A2C90A20521803E1CC681460B20DCF90231A488388BCACC
C6CC4C62E8FE8B4F4BBED4A6E1735DE002B3593E915379F9A855FFCBF3542938
60E15D83BA0A8FADCDA13E1E5EF889742D03D8AE44FF2449E7F20C60173EB251
596DEA9052CE7646D309B9C1A7FC5B61800C834B25375788E7BD09364DD7B8CC
F74BF4CF376BF14EF7FAD039425DF17A29082C3FECF08F823D1D897B8280A2F6
DFFAB5EA97FB1AD17B10B5D77B0C36D7AE561E8BAC1DD3D088D98D0468EF5279
D87B51CD371383EBB5FEBE147C18061761DE05DF3661031174871157EC1B0FC1
C3F8E4FDC281AAA72E3EA80F0AE981899DE0ECEC05EA2B4C78DB803A61F9F553
82485EAD88ED47BB6187E78C47194173C11F6CAA86B0C6D5C53B7C01B5428B58
407BF2C842C4D9398C8B42ECE7C22D05C14D03AFF1C807C89ABE43565FB7B35C
44BA6EA4471A78AAEE56BB9A937BB845122EA0293DAD3F3704C7AD42DF51DC2A
5085D9661F611F8D80BA4E00B08C24404E0B88E5B680DA96736B17A4A97417C1
812077CCF1C924D93A898E82CBD9BEADD559E23B018D49704A761225C8BFDE55
FAC11E94C01C9147869A52EE808B5B388F83354D6956AA3A333CDAC9593B0780
4A99232706F43E9A8E5783F4BC64AD5039CF6004A33C42D81B6B3F1A644CB1AE
D5988EB51269DE962B7B3DFEFEBD061E67D230A488DC9AC8A5D435743DD6BB19
F54E69A66D87053FCF8B88F9262A1D18C32890CFEB0865E14F9D164B9D06BC70
1C9B41B9553E8C57E1FAEC1B0AFB1FE417FA77A9D9A1ED3293537703021151AA
A578BA3ABC265BD005089A2013FC8E043D26F50DD2052A48E5C83787970D4421
3988B078AA2CADDB3FC1D0214E49E5944D40523B5AA0D9D30F0C95192A451927
42755502A7FF9A675AED6CE35F65CA37C31CEEAE94F57858FFD3BF1B4F0C26E6
1D1F8A7AB9F1573D77F33879D37130C83A44CD532D67F45D5D5D9643343B0547
95555F5F8F9FBE306DA26D486138A9886CC28A3628F1FCD23C132E4ADC6CF991
B8DB07957AA231F2EB4AD1E6FF6781AF85134E1FC36ABFA996D3815396C2BB40
124353A95B7A73BE50F6A2102BC8F0E5BDE712E85915719AACC71D3C7F24E864
E1B2693AB51DA29A36E45D1AB12CE69D749BEFDC5CDCD089E5419E5FBDCEF9A2
FFA7B06254B7D1401ECC02F813A67050612978349DB4915EC4182446151053B2
F406EF5C775B21946E962E66ADFFE44191EA69A080C62B98ED58593F896D74CC
B669AE6E8E0ED15921EA2BC22F3862CAE1956074DBD6BA5B584EE2E7747AD18D
287644F670B62C41F30D8A1E2FA3F12DF8B8C9C6A0B26CB4D4F78526E2EC0636
251A6B2EF13D6306DAC70800DDFBE32545F0541693DB28F78885992D9B09563E
EDFB4DD2D9499F6371E7580110E9F16312F99FAAE20DC221582861687A441A86
E8A369366ED071D9ED9378164D49B7CBB57441B69FA7C6349A9E4CA665B19283
90DE2D18FA5B4106669FE0543D3413D605D62AC0E45DE7B21E6288FD5F8A8FCB
642086A0D937EC0E43916D485709E4E7641D6A6CCE66465D536858BE54D63C3F
1414C5F4F1BD598282BDCB0DE98E9431C50AD2D065C758AFB67A8A8E6791D2FF
22CDAF401D6C87255991A313DEA585108D94F13CCE89D0C8AF38D956E9D1E3EC
EB631F5F98256EC906F3FCB463B60C034E7730D45A49FAFFB7718F51F2913CA4
916419EB65DDD8ADB4CEA8259983B1418D0F4DA3BF1C3A7437277FE5699FE945
F6F140AFF2A6442ABD28AC3802F71EBFA3E3B496EA98CC841F672D4D6A263B9D
2BACB2C7E2F536EA83FF4AB1EA6EBC009F0F210C580587926DD734EB438A1162
464500F1FD63BE4C9C7F5495EB7015B9D6FCA5B36373E5A680BCF25BF09D58C4
3C57BF07763F81624AA45A9F08184CD26134B6BAEAB6355A76C2F2E248CA7900
46199BD46EE7605923A7007EB6F898BB0FC3C08C965A6FB2BDB7A47491921342
B1E9C3153907838B60B99641948B4A3979F32C8D5A5D96485CC93DB424DB3F46
45ADD45017C7BEB5D6C01C882A539DC4B01B0D9813B990851AB25B51847288DC
8FF91C3EEB1A41B2C7517FC1512A434E470A3C1B69919F6A343EEDFD8CEB2BF6
0DE731852DAA5E8B6F713DF223B904347951E8B790A0E3D839B85943B077D500
944786F96EC7A25848E34D34F0E5AE950511C7B573097859E4BFC4B2D973447D
BE62901C4D29B554C6049179C578026D091CC61352A364A700431E07C800422E
F86787F1C3CCA25A9C15CBF587FA9AB97C25FCE7CB72642E7E98BEB72FF65C9F
3F031DC3CAE9619ACD7535AB319436F60B753FA09CAAB5951FB21B54687FD6E4
5C65C7BC1344803EFB2767A67186E375E5119DF6CA167A16666866196237794D
45E3D1C987295B939FABA4768133DA2A8CA936D6385101B082A713C329FAB222
BA3010E47188C184471FDC1B8409ECDC376698B24A4260A463804CB0F9DB31E2
03695587E6914B86346FE9913DE062EE746D4297FCBFDD4D95A9BBA43A33A327
03FEF11F9A5C2EF80AB0E4D42BB8FB9EB4C1D8C057E2C2B839E4681A726CA1CA
7B8D4658A407BFDF4358586905B27DF5D2E1C8DFF42C060CF42AD7CF4DA71A17
5AD65981C59ABD0075142C70784B18B6EE8A9D5C99D249776B552EA8EFBF3166
CDACBAFB904E62A5CB76AE0AEAA31483A3FEDDA50AF9E12A5B3AE699F371A8EE
FE0149C0F3FF7AE1D95E2774B43DEF14E9524099F09CE15895C1DE9A9CC41522
C7A1F07DF3B5DFA6E4CE8EDCCE79C7BBD862E7CB613C402269F4F84625060747
60C72B43481B8AC491632D47F89F5E7399247252EE4B307AE6658871E2FC73F5
4BD0ACD2622B3583BD732AFD8638E81591CC782BBA010E378429FFB1460C73D5
7118EB8EF3EED6C6AF689AF1BEA87063CCD67B6F161DCFB5135680DFD5833F78
A98A9E33CC8037A90680B03CB7DB8047967BFC6C1D0625DF15F21A26106A72AF
8118C086B56512BEBF4AD74699B5E9AF4A29CD7ABB8D08FE411EF04552BEDF1F
740D8A867B861A12EC85D8D8181D54199CF70784A1BCA3BEBF18F7BE074666CA
E38CFE7F1B4087669C1F0A7573B1A9BE822BB188A27E01C66019AFF16B5B3AA0
D911FA1995B98DC1330D42AA469AB86C05E3FC4E5D454B2C49DDD4A1BF8F67E8
D4687616A9DDDC6E8627D720D208DB595E7DF726A0C2E997C219CC02ADE63B24
56795F6563DE4502917038D5530B7C898E0667769ED90C9F0D8796973FFB03BB
ED748FE036B53056E1E41399D5A3A8C28F74F45F35BC05C9BF523A77ADA43154
586C6F25A3A3485CCF89B17A27A6029590E388A5E43C717BE0B562C2DFFC05BB
809631704E804BCDB08683916977FE43B09A15A7E2FD9D62F92CE04CB5C4E4C7
DE57C8D2814AD58FB5A3DD0E1608DD01E7EE12384EACB0B3D985C031A9A24267
863B4442F69144903BFFCD72724311433AEB4E2B77DC39D8751AF38C23B31A15
F99D64AB36B766333044A39705BD5F96DF8FCD1432398198A49DB14A71527EE6
CF5F783504A372AE17A5105DBFE5E7E9A6BD86BBB24F60B62FF167A684ADD872
8AAE0DB6A473A18815109BC399D41886A8079E32776D4F5DBC2D036101A0D894
522D7B6803E783E0A98700AFD64B437DFA03D7AA1C9C1467871F73C4AFC27A72
265314B6A7B1C9BF912E9711E9EC0162D2DCE0C0887C22A9FA462AEE1700DEE0
876969C238CADA98ED3A037346B67046E8CAA0280860AB9C64986FC093BB9631
0CF578EE8A1D693AE0FDA221AEC7E54B59406AE6AA5D30D147827660554269CE
41952BAD313CFE0F3CCC7523B6ADD602E5243FF005B32A1F6FD8721BB19EA3B5
03C868797E5ECFCEF274D3626488CBF58E0C4D7D4EF6EFA3EC15F0B96A76ECA6
4B32320CF21ABCD4F51F9B0E468AE41451BE35AA148385CC827FE2A1CA9C00A3
9B9B42A856385378C53B2689F0FB4D40DFE3ADA0A797E6E9C198E02B319E06B8
1A325BD581B85BACCCF4EC82779033F97EC98E0F4F028E062E307D6133957DA3
6DDC4A30DB372E34
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 15 /bullet put
dup 17 /equivalence put
dup 20 /lessequal put
dup 32 /arrowleft put
dup 41 /arrowdblright put
dup 44 /arrowdblboth put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 57 /existential put
dup 58 /logicalnot put
dup 91 /union put
dup 94 /logicaland put
dup 95 /logicalor put
dup 96 /turnstileleft put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 110 /backslash put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57037035485513F9536881EEBFBC47A32
CEC9B92B352922519DBDB79176CD65BF9BF7DB1D9D5A0E7837B6943ECE40219D
5FAC26F19B015B3E19F13821D7F2E30796852C3B6F9004AC230FAA0422A4B856
BDF7832EEDC5147FBED02C02215C59050FC06B8F5073ECD57B338B09C15D09A2
1F2C15EC107220B119BA73F86B13BE9F46A1DCE09951A0E7EEEB7D3BAA7B7EE1
79ED1EAB01D99F8380A7991394F9EB02069637A9D5AF33E892AD65D5BC79370F
E2F3841D2A13594D48FE13A2DBA3A46943267D21ADBFF5C9B4579F0D821F63FD
67BB28B5F6A5077D2312CD96772835FE7EB4641085AC82A8F38CD1039AD9C53B
664E9ED07C825021F0DAA506F65B3B5E97B2BF41EF62C41FDEDF3283DB1EEB59
CE7B9CCAAEADF2C886A7A6C12F66C5E3934A4764D4CB35BD8596924E1CC7608E
C4764AE1F6E2E5F7A39D418442B7142FD53BA4280C9C3C47C047F17BEE3095E4
95592C044FF23AF0ACC06866F66758B5C2D733F2D8AB0D6A1DE2F379132D9D5A
48A716DB7D24DBBBA61490E47552E1C1D282614D0AB40F595087DE869205FE92
E06F4F00FBEE26F750A4E3A4ED51BBB5BAA5E9332628EC9C1BEDDA378D8F0A85
2C13C8E231C76A00F9DFA2DC4D17104B693B00BBC7801BE59ED0BBA1AA84D7EA
52883D0BA2B2F90BD74E75D565FD884A912878F0A2DBD767D4B148CFE39C2144
7470F0EDD8302D91909856B8022F50A7E1434E6464AA5CDC129D8FA404EAE3DB
807AAF177F6D6545401545629C7B3CCA4DE8FEB3067E99B77E6719436FF78DBA
D9A2E769D4074DAB8CC72BFC26F677C428371AA14DD0DC331962218E71D6355F
D5F9BCC1607CECE3F453345F1EB4AC752402828200A94EDCDB3A03E9C4D6FAD3
B1E6F0C6520FBA778814D63B81CA83620DC488D3F0AAF189CD916D32A03BABB4
342D9237437FD6A14D24B7F42EECD9C9ACCF043C7BBCC88FCE6110BF9E2571C0
7212279303457CFE9E4903C6C4832EF42B8AFEABAC60BF2B72F306641742D62C
418327062D9C430D4140893BF509D3F2FCAC995111BC1AE5B4CE25F05F50196C
55805C95E42D8621C92E6EAD19BEEF69A5ACC4BF9379D4640C3278CBEEAE7F60
95304C8E565F0B6E44E2F594BB9ED4BD11387C8D39EF00DD55343E87FB81799E
BCC322A177192AB6CF9A78811C1C4AC45F5F4E152B472CBDDC98737134AFBC91
B0307E7251429B985F46CE4B8C4B9C69A81BAB11EE6122F2E225B5285F73D943
16E67FB8D1269CADDC3598EEDB8C998C204CC16FA240C9A8896D3777F0B5405A
4B421A70B04EB78B51A3B79EFAA2DBF0600709DA10C24D962C682FD6F4C44AD4
33EA8088AC176935FAFE1F525AD3784A034F293E283D998AFCB7828E798FDE3B
1FB598B0F9487CC4494F4710D7F89DB60DE62D3C765FE1E0C14385C131CCFC1B
20F41A313CFAF4E9E154DD2EEB4D90E13CF43F8127D456FB7AA7680BE9315442
F7EC661C7DDF2118927A6344D296F40DFAFA664A83AD9141CE948EEDCF618862
52CA52E28D82FDECC60B20E5C9A315AF798C71F7C4B1D8751FB9646716157D45
D6637E8BB192BE81C02F5D412985BDAA519BB95955CC59D78638151C4C2B38F7
624DCDB3E508545C16EC54294608EE66B2043929B2F1B77EE19741C8F2807864
0DC3A9F449D1D7D6E3EC1CA244588481B0399AC458258DF6F868728C953E0B74
0D58566D5DD8DF9F8FFED65FD1B54045AA9A01342FE08707374E0702A818BAD0
F238E108A183F11A0D776683300D4DD1B235AB8E56E71E7F21AF3DCB9B9B1203
5600559D675A37E0D51893A88340DD96942F7AD86B1FFB00264360E102168F8E
15B7D523D95F4D4617C732EC55E54AE378ED0C1163FBB86B808D3DA3F19985F3
59AABF89924EDF9084B8024BB38D9E2DC74CC0018C0189832236DC5645A1F6AC
FDD3CF333BB1187A9169802DA943D279B3C43497ADF77E1DA67C8A5E0F964B35
C67CAB2332486F59BC78E808A371A79F2AB8C9C60357552461327AD1EEDDC659
546C9E9C6712CF5CB7C3647B01471F36F48C1D5B30662E8EEB07DE76723E9192
424F73806DF2E10F9B8406E22DD3BEE37001D4FF00AE40029C80B2F8D6DF5366
094894B81A8F40A74F05A84DFE64DBD7CB3C52CB79D5E4E5CB61036EBE1BE4E3
E07323E11208AE2F0FE510EE6B593109FDC0DEB07049724F64ECCF906A9F6489
2953C707020B218D601EDCEB2AAFA8391D26F8DA2D05C70B647CE00F2B5480F4
CFF74FB5AB71F6EF9030C5B567327007FF02630F48CB342432C60C99B3757BC2
D691375CA017EF7594A69C1CADC2325D74EB8C6A6156C38C74B035E2157FD93A
5BB3DB8DDA8BAA13D2DFA609ED9F47B2F8AAB29FD2FECB6A62BE1DC59B87EA31
8728AB48DAC092F5BA24A869758D3E7718A0A1901D5BFDA85B8EBBF42A70DE32
73D6047FE450286AA2158178981A8E27AA67805CDCA7E66407E2F1B42A79CB54
6C6864901E2FF6C3B9A1311BFAEBBFCD161AE18BB034033C5E1D8BE89FA463B5
BCDC031370A93910C509EBA12329A60C886A386524F02F33B81A1D65A9B443B5
6BE9718ED3DC3F3F66EE958786DDFF45AD41346AC163F98AAB9493D98AF2330C
93969B153336277BDC459A54A58913A04D196CD6B7ACF403C4074F869D1340CD
9521AD24C405E59D525ABB504FCE24649B09B4CC2A43B80A6B2602E6F5F9F06C
3311116BCC9DC48EFA0A62D4E9FEFBC7EFB61E23C51EC82C985C729E5806842F
DCE4BAA2FB1EA7046E0BD4B9E1370EDD710944DC3A62058DCA2E943B97CDE3B4
B7591DB81F02117C60DEDF06A7024F7240EAD22933D4F38FA3BC64A129321498
11819251678D2E8B72FB1F39DFAB93DA7A2668C2F8287327CF41F655B67753B9
E96D115D165A1333BA44290B6EB1C9DEF5770806CF253AACFDB45A6BA6B4D3B2
D758A7E090DFA866BD2F45E6962650ACC670A70DF4E166E240C33D95396D5AA2
C2F582539BDA662491F8492B5BCE4CB5156F304ED87516EC225FF69238414FB8
3B87F6915459811B693B53AF4E0A4B4222D7D93385394965F0AC2A7DEA624C1F
541B1C58C190DD7AFE92F01BAE0885994886EFF60907B6B087E3E48CAB53A77B
132011FC065DD5B24AB14F0D573E03B44778041FC05463A5313523EF9FCD6CC1
8AF33FE95A37A139B1E66B2E2227A5A315C9533FD78E05D9549D94F4AD4FB2A4
3BCFCD36A6EE2B8658E00EC0E2BBBA02315E328AEE46AEDF50977EBBD6840328
084070514FC12FD53C1A2E01B57A2D5D8E8018517C9ECE335C222AD494B76C89
659D42DE79111F632E648ABEE13A073FB455349E6875287C07B6E0710A9F124C
C3A9B73A9AA886A3938434127D69465A046A26EA1D1352324A985EE31C18784A
AB7CC1E2824690B129E03910F598D5050A615B398E80E0DFD524203E338F99B7
68819241086100322EC03DA98A9AFEEFED4BB5AECBAADE28A02132C721BD5A94
455D96603FD7B20F83C9F7F0C49FD4CCBF0FE59FA89882CB59EB33BC5AE9AEBB
10868A27F43C5AEC0B797221D90509CE593115240B75205C174E7E5156EBEB28
39034E94EE771CA2AD76E5E70608A5719DA921EB4978511DC69B6C7550A9BB82
CCED61BB1E5683880F9604566CF154372222C4E04861960B84604DA42877E78A
804E8602A92C6EAAC0A7529E284346D2294EF33D77BB5A00D444878EDA140BEC
E2558A6FA6821C4CF718297017C9824B06B13C72E7DE1A06568F5BD7474BCFE3
506BB4932723EF1D07E4875FDBF757C20235F4F75BE3227A24D5825FCA6C8050
BC4D6BDF1452BFAF9CC546DAD661F43DA5E3142888F79B0F93FB6D7547E2014F
3A2B52BE223932B67B76700221500D4D8984B5EF863F76AC7FD1D45EA9E1CC3D
95B2BA58F31A20C54B1519C17B39C59705A838DBC38A7C80430E79A35FE558
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LCIRCLEW10
%!PS-AdobeFont-1.1: LCIRCLEW10 1.001
%%CreationDate: 1992 Oct 23 20:22:00
%%RevisionDate: 2001 Jun 05 20:22:00
% Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.001) readonly def
/Notice (Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved) readonly def
/FullName (LCIRCLEW10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /LCIRCLEW10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 36 /a36 put
dup 37 /a37 put
dup 38 /a38 put
dup 39 /a39 put
readonly def
/FontBBox{-2000 -2000 2080 2080}readonly def
/UniqueID 5011943 def
currentdict end
currentfile eexec
D9D66F637A9E5292A4933615152D29EEC26E1BED2E48CAB7AC058698EA30B07E
F8BDB66981B14445E1107420FDAF32EDBD5C26E35B334E3AF24373B2A13984D9
1D56801ACCF98612DE2C19685E0F4D52369AD642D169AB57DAB10665C6C01538
497544391FABD08A483766E9B5C7ABA9A537C053A8ADC16DEBD8B5C9E1EDEB21
E4E89B0945C0737B96F0194585BE0D9B958F1030EA84710C31971BA7E93777C2
0658995DC8702442780303E948079822B9EE0C531A5CC49578EB9E683CB77495
DF613FBDC4536BD7A90F044B7EEE6EACA2042539F62789EA39AA16433AC4BD0F
98AAA04894F5487C279D2766B50B23E16D7F1023E387F60757E6C80FAE85A8AD
149D104B38BABA49C58CCD52B719D635E892DCE74F3D283407537FE6CF45E192
54BF678237D2B8B3C0AE474E96765078627EFAC8AA84DBF87784E5E755C587AB
BE50DF55D35CDD05D96F562153E2016C3D23ED27DEF2C3908BD0BE882E838796
BA837E4B671E2CEC2471BC438FAFA250F12170D86934A19C468D5EE6C8B2428C
AF1EA0FBCE58BABD5BD3A354CB89003AFF34BB325334141E622CAC8CC29F962F
E4E4FBB6C0C21D4B0835248F760476BE1B36948376B6A4FBB98E9D9F49D97132
7166B1D32CB3E6590B11917FF0244AC94551E6EF79FCEB8FD65D947E2B209930
4DEFA82AF22E5320B8A19C0B968D88806CCCC1FC5934ED4B8FCA05AA42A725B0
1FB85D31D75E9F198EC6D3A0920C9298E2F1535FF124C0760E00054F631218AD
BACF10F693891EFB272786596ABEA45AD4A2860C4E346515C79FCE68FE8B973D
F54F8D267370670A62546B001E39136F45CC78192A31EF35C1415522DBB171A6
E36B3DD83802C2305228A4989C062F84219987A9585C33DDBD17150A39A3CA2D
A2A91BA35367D7A031E6F0965F920B26577B7FE34FD3EC315837EC1D91E1442C
2C3515DE36B9FDAB2AB6C742C7D27B63843146711159C1202B67BFD05B61C2C2
B9F2158FF806B504D8F4256A8A26071309DE213B55DC08BD1B7736E37FAAE154
EEDC361EB417EECB1EE914448060975EE3A7373C3A15976847AEC4038561D115
426C6C845E231D04C6564890CF70B6DCEE7B7CE3A568B4C09E61DD5738D23B49
7FEDD6499F86D41E18C61DBCCEEAA9A02D6156A78432DEC18E88F8EBEC7D07B6
F4017E912D4F3DE3D30CAFB8138EE026A23D075FF4D5F48C803A19A5A19B76D5
E0BE53F3F707811A4C8E6FDEA1AF8B6E248FADECB70C4A871EF96A5473B203AE
A2D0297812B488DE4F370B3D988DAA41B01522042EB9126FBFAB4183ED91DA3D
969490C487D9D6A413B1AD090CCDE06D4FDEDB94EB4EEBD615646F656CB3D157
566DC313A54C9F4E3169E7B7B7D918E0FA5735061D2EDACDC2C44E4AD595902D
3CAB28A815F1574B59CBE9D48D7BEF5A2EDD6D9D499A02C9E54F6CEBA2FC47E0
F61F72A562308BACEEABAEBDAFECB2A8586BD8CBA5069AA30DC9041BD7D78F34
F373F575E299C4131310A7F42DC15F9406ACD0EC6078D0EBA31613DB1364AB13
79BB022B49A823C79B40A3CB03A069C7D6E78D14F21E19F4E7190937AFE051A4
5199557792E12DE9088F8016F9A5EAC1CFA2C7CCBADB2052044A2FE28E38029D
95705EC84F49A5E5285AADE0EABBCEE554BCE3637C8384B11086FA354388C7F4
5F43F8D7822DC1DF51868E0B3C0D185E6815478801CE8AFDA1207494D325BCE9
96D968EFAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 55380996 39158280 2074 600 600 (resolution.dvi)
@start /Fa 134[106 3[106 102 79 104 1[96 109 106 1[88
109 1[52 1[110 1[96 1[102 1[106 12[135 105 1[145 128
2[170 1[145 8[133 140 19[65 45[{}24 172.188 /CMCSC10
rf /Fb 140[106 106 1[106 106 106 106 7[106 106 106 106
106 33[106 17[106 106 2[106 106 40[{}16 206.625 /CMTT12
rf /Fc 133[90 2[90 90 1[90 90 90 90 90 90 90 90 90 1[90
90 90 90 1[90 90 90 90 90 6[90 90 90 3[90 1[90 12[90
1[90 3[90 4[90 90 1[90 3[90 90 90 90 90 90 90 90 2[90
90 2[90 37[{}43 172.188 /CMTT10 rf /Fd 128[116 9[129
90 1[95 2[116 129 194 65 2[65 1[116 1[106 129 2[113 16[159
1[182 6[183 146 1[178 168 25[90 90 40[{}21 206.625 /CMBX12
rf /Fe 207[40 47[108{}2 120.531 /CMSY7 rf /Ff 145[85
122 1[73 57 106[{}4 120.531 /CMMI7 rf /Fg 204[69 69 69
5[106 43[{}4 120.531 /CMR7 rf /Fh 133[80 84 98 123 83
99 62 81 78 77 87 83 103 151 51 90 1[59 99 82 84 80 90
75 74 91 7[100 143 163 1[118 101 106 131 136 111 131
138 167 117 146 95 76 143 1[111 127 143 123 131 129 2[134
86 134 48 48 25[112 1[103 2[98 8[81 4[89 97 110 11[{}60
172.188 /CMMI10 rf /Fi 133[88 105 1[143 105 110 77 78
82 105 110 99 110 165 55 105 61 55 110 99 61 91 110 88
110 96 13[110 2[135 1[155 1[119 3[155 1[125 1[152 143
141 150 19[66 55 2[77 77 27[110 12[{}40 172.188 /CMBX10
rf
%DVIPSBitmapFont: Fj grxn1000 20.74 56
/Fj 56 237 df<EB01E0EB07FCEB1FFF49138015C04913E0A290B512F0A35AA315E05A15
C015801500485B5CA2485B5C5C5C485B91C7FC5B485A5B5B5B485A5B90C8FC127E5A1278
12101C277CFA21>39 D[<177817FC16031607EE0FF8EE3FF0EE7FE0EEFFC04B13804B13
004B5A4B5A151F4B5A4B5A4B5AA24A5B4A5B5C4A90C7FC5D141F4A5AA24A5A14FF5D5B49
5BA2495BA25B5D5B92C8FC5BA2495AA3495AA25A5CA25AA25C5AA35A5CA35AA25CA25AA5
5A5CA7B5FCB3A57EA7807EA57EA280A27EA3807EA37E80A27EA2807EA26D7EA36D7EA27F
817F817FA26D7FA26D7F7F81147F6E7EA26E7E140F816E7F806E7F6E7FA26F7E6F7E6F7E
150F6F7E6F7E6F13806F13C0EE7FE0EE3FF0EE0FF8EE07FC160316001778>46
171 109 256 77 I[<127812FCB4FC7F6C7EEA3FF06C7E6C7E6C7E6C7E6C7F6C7F806D7E
6D7E6D7EA26D7E6D7E816D7F7F816D7FA26E7E81143F816E7EA26E7FA28280828082A26E
7FA36E7FA282157FA282A2811780A317C081A317E0A281A217F0A517F881A717FCB3A517
F8A75D17F0A517E0A25DA217C0A35D1780A317005DA25EA215FF5EA24A5BA34A5BA25E5C
5E5C5EA24A90C7FCA24A5A5D147F5D4A5AA2495B5D5B495B92C8FC495A495AA2495A495A
495A5C485B4890C9FC485A485A485A485AEA7FC0485A90CAFC12FC1278>46
171 117 256 77 I<EB3FC03801FFF04813FC000F7F487F15804814C0A24814E0A2B612
F0A215F8A415FCA27EA27EA27EA27E000313FC6C13F838003FC0EB000115F8A31403A215
F0A2140715E0140FA215C0141FEC3F80A2EC7F00A214FE495A13035C495A130F495A495A
EBFF804890C7FC485A5B5B5BEA01C01E3D739B37>44 D<B912F0B034107EAD42>I<EB3F
C0EBFFF0000313FC487F487F4814804814C0A24814E0A2B612F0A86C14E0A26C14C0A26C
14806C14006C5B6C5BC613F0EB3FC01C1C739B37>I<EE07E0EE1FF0163F167FED01FF15
07151F157F0203B5FC143F011FB6FCB8FCA415BFECFC3F14C0EBE000C8FCB3B3B3B3AE00
3FBA12F8A8457172F063>49 D<0178181C017E18FED9FFC0160702F8163FDAFFC0EC03FF
03FF91B55A93B7FC626262A2626297C7FC61616119E061614EC8FC6018F018C04DC9FC17
F802BF1480028001F0CAFC92CCFCAEEEFFFE031FEBFFF0037F14FE0283B77E028F16E002
9F16F891B5D8803F13FE9226F000077F03C0010114C04AC8804A6F7F02F0834A6F7F4A6F
7F5C91C980017E701480133C90CA15C0A21BE0A27214F0A31BF8A41BFCA2131048B4FC00
0713C0487F487F487F487FA2B57EA41BF8A44A18F0606C4918E05C5C6C4918C091C95AD8
1FF019806D19006C6C5E626C6C4C5B6D93B55A6C6D5F6C01E002035C6C6D4A5CD97FFC4A
5C6DB46C017F91C7FC6DD9F003B512FC010790B75A6D17E001001780023F03FCC8FC020F
15E0020192C9FCDA001F13C04E7376F063>53 D<93383FFFC00307B512FE033FECFFC04A
B712F8020716FE021F707E4A834AD9C00114F0902601FFF8C7001F7F4901C002077F4990
C800017F4A6F7F4948163F4948707F49488287017F834A8401FF83A2874884A280A2487F
A28014FF816F5D03F05F15FC15FF04C04A5B826C03F84A5B04FE5C706C92C7FC71495A6C
04F0137F05FC495A6DDBFF015B06875B6D04EF13C095B55A6D4DC8FC6D5F19F07F6D17FC
6D17FF6D846E17E0021F836E83020317FE020F83023F8491BA7E4985010713F94901E083
013FD9C03F8249EB800F90B5D800038248497F48496D6C814A141F484902078148498005
0016804849153F180F484915037215C04890CA7E191F858548481701A2858686A3741380
A37F6C1B00A36E4D5A7E6E607E6E4D5A6C6D4D5A806C6D4C5B6C6D04075B6C6D4C5B6C02
C0033F90C7FC6D01F0EDFFFE6D01FE02075B6DD9FFE090B512F0010791B75A010118806D
6C4CC8FC021F16F8020316C0DA003F4AC9FC03001480527378F063>56
D<93387FFF80031FB512F892B7FC020316C0020F16F0023F16FC91B9FC49DAF803800107
DA8000804949C7003F7F49496E7F4901F06E7F49496E7F90B56F7F484A6E7F484A838448
864891C97E875A8748844A84A24886A387B5FCA28587A41C80A84F14C07EA47E61A26C7F
96B6FC7EA26C5F6C80607E6C6E5C6D6DEC0FDF6D161F6D6DEC3F9F6D6DEC7F1F6D01FEEB
01FF6D9039FF8007FE010091B500FC15806E15F8021F15E0020715C002001500030F13FC
DB0003C7FC93C81500A261A263A363A2EB1FF0D97FFC4C5B497E486D60488096B5FC486E
5FA2634E5CA24E91C7FC62604B4A5B6C6192C8485B4A4B5B6C494B5B02F092B55A6C01C0
4A91C8FC02F002075B6D6C021F5B6DB4027F5B6DD9E007B512E06D90B712806D94C9FC6D
16FC010016E0023F1580020702F8CAFCDA003F90CBFC527378F063>I<EB3FC0EBFFF000
0313FC487F487F4814804814C0A24814E0A2B612F0A86C14E0A26C14C0A26C14806C1400
6C5B6C5BC613F0EB3FC090C8FCB3A2EB3FC0EBFFF0000313FC487F487F4814804814C0A2
4814E0A2B612F0A86C14E0A26C14C0A26C14806C14006C5B6C5BC613F0EB3FC01C4C73CB
37>I<1AFE963803FF80A24F7FA24F7FA34F7FA24F7FA34F7FA296B57EA24E80A34E81A2
4E81A34E81A24E81A34E81A2DE7FEF80A2DEFFC780A219874D018380A24D010181A218FE
05076D81A24D486D80A260051F6E8060053F6E80A260057F6E806005FF6E80A24C496D80
A295C7FC4C6F81A24C486E81A25F040F7080A24C486F80A25F043F70805F047F7080A24C
486F80A25F4B7180A24B90C96C8194BBFCA24B87A24B87A34B8704F0CA123F033F7280A2
5E037F72805E03FF7280A24A497180A293CBFC4A7381A24A487281A25D020F7480A24A48
7380A25D023F74805D4A6C7380010FB57EB800E0030FB912FEA8877879F796>65
D<BD12F0F4FFC01DFCF5FF801EE01EFC8A787EC7001F02C0C8000315E0E1003F800A0F80
76807680768076818977808C898CA27780A47780A96865A36865686568535C9DC7FC9AB6
FC525C525C5214F00A1F5C52148099B6C8FC090714FC98B612E094BA12800BFCC9FC1DF0
F5FF801EF01EFE05C0C9003F6D7E0A0714E00A0114F87614FE777F77807780778077808C
77808C898CA2771580A221C0A28AA221E0AA9BB612C0A4531580A3531500A2535C535CA2
535C535C9AB65A525D0A075D0A1F92C7FC51B65AC012F8671FC09CC8FC1EF81EC053C9FC
1D807B767AF58D>I<F20FF0F23FFC507EA297B5FCA24F80A24F804F80A24F80A24F80A2
4F804F80A296B7FCA24E82A24E824E82A24E8219FC4E488186DE3FF081067F6D8019E006
FF6D804F7E4D018082864D0100824D6E8160050F6E814E7F4D4883874D4883057F6F8060
05FF6F804E804C4984874C90C8824C70815F040F70814D814C4885884C4885047F71805F
04FF71804D824B4986884B90CA824B72815E030F72814C834B4887894B4887037F73805E
03FF73804C844A4988894A90CC824A74815D020F74814B854A4889023F75805D027F7580
5D02FF75804B8649498A49768192CEFC4976815C010F76814A8749488B013F778091C1FC
498CA290C3FCA24822804822C0A24822E0A24822F0A24822F84822FCA24822FEA2C5FCA4
907876F7A5>68 D<C012E0A48BA4C7001F02F0C81203F3001F1C031C000B3F7F1D0F8989
89891E7FA21E3F8B1E1FA21E0FA31E07A28BA21E03F203FEA5787EA4080792C8FCA31A0F
A21A1FA21A3F1AFF1903191F94B7FCA89438F0001F190319001A3F1A1FA21A0FA21A07A2
F707FC1A03A2F70FF8A51F1F20F097CAFCA31F3FA220E01F7FA31FFFA220C066A2666620
80666666669BB5FC531400651D0F1D3F52B6FC1C0F0903B65AC0FCA567A376757AF482>
I<037FBA12FCA892C84ACBFCB24D6E7E4CB87E043F17FC0303BA12C0031F19F892BCFC02
071BE0021F02F0DAFE0F14F8027F0280030114FE49B5D8FC00DB003F6D7E4902F0050F80
010F4A7114F04902800501804991C770804949737F90B548737F481F80484A7314C0484A
7314E0481FF0A2484A7314F8A2481FFCA2484A7314FEA3B61DFFAA6C1FFEA36C6E4F14FC
A26C1FF8A26C6E4F14F0A26C1FE06C6E4F14C06C6E4F14806C1F006D6D4F5B6D6D96B55A
6D6E4D5C6D02E005075C01036E4D14C06D02FC053F5C6D6CD9FF804BB548C7FC021F02F0
030F14F8020791BA12E0020098C8FC031F19F8030319C0DB003F05FCC9FC04011780DC00
010380CAFC714ACBFCB2037FBA12FCA8787675F58F>I<BF12E0A41EF0A4C7001F02F0C7
1201F2000F1B01757E0A1F13F81C07888888A21D7F1D3FA2F51FFCA21D0FA41D07A21EFE
A21D03A6F501FFA49AC7FCB3B3B3AEBB12E0A868757AF477>I<96B512E0067FECFFC005
07B712FC057FEEFFC00403B912F8040F18FE047FDAE000ECFFC04BB548C7000F14F00307
02E0020014FC4B0280033F7F033F49C9000F6D7E92B500F8040314E04A4A70804A02C070
6C7F4A4A717F021F91CB6C13FF4A4972804A49728091B5487280494A7280494A7280494A
737FA2494A737F498A4991CD6C804B86498BA290B5487480488C4B86488CA2484A7480A3
484A7480A3488CA24B87482180DC07FCEE07FCA34821C0A203808794B9FCA3B61FE0B16C
21C005FCC91207A303C063A26C218093CEFCA36C21006F98B6FCA26C68A36C6E505CA26C
686F626C68A26C6E505CA26D6D505CA26D6D505C6D9CC7FC6D6E4F5B70616D666D6E96B5
5A6D6E4E5C6D6E4E5C6E656E6D4E5C6E01FF061F91C8FC6E6E4D5B6E6E4D5B02016E94B5
12F06E02F804035C033F01FE040F14806F6D6C033F91C9FC030702E092B512FC030102FC
020714F06F6CD9FFE090B612C0041F91B8CAFC040318F8DC007F17C0050F4CCBFCDD007F
15C0060002E0CCFC837A75F79A>74 D<BA00FE0307B81280A8C7001F02F0CB000702F8C7
FCE4007F90C8FC68F7FFF8545B545B0C0F5B545B5490C9FCF67FFC545A0B035B535B535B
5390CAFC535A535A52485A525B525B5213805290CBFC525AF4FFFC515B5113E0515B515B
093F90CCFC515A515A5013F0505B505B081F5B5090CDFC505AF2FFF84F7F07077F4F7F61
4F804F8096B67E18034E814E814E81604E8105F1B8FC05F301F78105F713C394B5008181
0701814E6C814E7F4E6D8006E0824E6D804E7F95C76C804D844D6E8105F08074818A7580
8775808A75808775818B75818776808B76808876808B76818876818C76818977808C7780
89778077818D89778178808D0B03B612FEBA00FE020FB912F0A88C767AF59B>I<B800F0
0A1FB712FE716471647199B8FCA37163A2C7001F6F5003F0C7FCA272F207FBA203FB6EF2
0FF3A203F96EF21FE3A303F86EF23FC3A2706DF27F83A2706DF2FF03A2706DF101FEA370
6EF003FCA2706EF007F8A2706EF00FF0A2706EF01FE0A3706EF03FC0A2716DF07F80A271
6DF0FF00A2716D4D5AA2716E4C5AA3716E4C5AA2716E4C5AA2716E4C5AA2716E4C5AA372
6D4C5AA2726D4CC7FCA2726D4B5AA2726E4A5AA2726E4A5AA3726E4A5AA2726E4A5AA272
6E4A5AA2736D4A5AA3736D4AC8FCA2736D495AA2736E485AA2736E485AA2736E485AA373
6E485AA2736E485AA2746D485AA2746D48C9FCA3746D5AA2745CA2745CA2745CA3745CA2
745CA2755B0103B512C0B96F90C8001FB912FEA2755AA3755A755A755AAF767AF5BC>77
D<0603B5FC4DB612FE051FEDFFE094B812FC0407EFFF80043F18F093BA12FC0303DB8007
14FF030F02F8C76C14C04B02C0020F80037F91C8000314F892B500FC030080020302F004
3F13FF4A4A70804A02800407804A91CA6C804A4971804A49718091B548727F4989494A72
7F494A7280494A7280498A4C84498A4991CC6C80A290B5487380A2488B4B85488BA2484A
741480A24820C0A3484A7414E0A34820F0A44B864820F8A6B61EFCB16C20F8A36F62A36C
20F0A46C20E06F62A36C20C0A26C6E97B61280A36C6E4F1500A26C676F616C6770606D66
6D6E4E5CA26D6E4E5C6D666D6E4E5C70606D9BC7FC6D6E95B55A6D6E4D5C6E6D4D5C6E6E
4C5C6E6E4C5C02076E4C14806E02F8047F91C8FC6E6E93B55A6E6C01FF030314F86F02C0
020F5C030F02F8027F14C003039126FF8007B6C9FC030092B712FC043F18F00407188004
014DCAFCDC001F16E005014BCBFCDD000391CCFC7E7A75F795>79
D<C412FCA8C7001F02F0CB003F02E0C7FCB3B3B3B3B3ABBA00FE49BA12FCA88E757AF49B
>I<003FC012E05AC1FCA220F0A27EA26C03C0C912036C6FEE00036C6FEF003F6C1C0770
060114F86C6F727E6C6F856C6F190F6D8871846D6F846D816D6F846D6FF17FFCA26D6F19
3F6D816D6F191F6E811F0F6E816E6FF007FE6E816E81807218036E816E816F816F1CFF73
836F816F816F6F94C7FC81856F816F8170817081A2708170817081708182867081718171
8183A283715D714ACBFC715C62715C725B725B725B4E90CCFCF07FFC4E5A4D5B4D5B4D49
EF01FF4D5B053F90CBFCEF7FFC4D48F003FE4C5B4C5B4C5B4C491807043F90CCFC4C5AEE
FFF84B49190F4B491AFC4B49191F4B5B033F90CD123F4B5ADBFFF81A7F4A5B4A491AFF4A
49614A491BF84A90CD5ADA7FFE62DAFFF86249491A3F49496249494FB5FC494919074990
CD123FD97FFE0703B612F049480603B7FC4890BFFC5A5A5A5A5A5AC112E0A27E7E787675
F58F>83 D<000FC012FEA5488BA303FCC76C9138C000070380F1003F4AC8180F02F81B03
02E01B004A884A884890C973138049894989A24989A24989A44989007F20C0A3491E7FA7
4848F63FE0A5CB97C7FCB3B3B3AD4ABC12F0A87B7479F38A>I<DB7FE092381FFFF09126
07FFFC4B7F021F13FF027F02C05C49B600F05E4981010F6F91B5FC496F5E498149705A90
B85E18C048715A486318F048715ADB003F94C7FC4801F0010713FC02C001015C4890C801
FE5C49157F4992381FFF1F484861715B496F13BF48486F5D96B5FC715D4981A200FF715C
A249705CA28463A27291C8FCA262606260A24E5BA26D93B55A5F007F614D5C7F5F4D806C
6C5D6D844D806C6C5D6D92B66CEB03F86D4A6FEB07FC6C01C001078102F04916C06C01FF
017F02E7EBF01F92B700C790B5FC6C188719036C7215F86C17FE4E7E6D4C16F06D04E07F
6D4C6D14E06D4C7F010393C76C14C06D03FC6E14806D6C02F06E1400021F02C06E5B0207
91C9EA7FF89126007FF0EE1FE05E4E78CC63>97 D<933803FFF8047FEBFFC00307B612F0
031F15FE037F6F7E4AB87E020717F0021F834A834A8391B6D8FC007F4903E0011F7F4992
C712074902F86E7F4902E06E7F4902808093C97F4901FC167F495B4B8390B55A4B163F5D
4891CA7F4A177F5A5C5CA24A17FF5A5C61A24A5E6361A2614A4C5B614F5B96B5FC4E5C60
91C72603FFC75C040F90B6FC4C93C7FC4C5D624C5D621AFC4984861BC0708207EF7F7002
837F70D9FC007F040301806D7E93C9121F747E1C80867413C05B7413E0A21CF0861CF8A3
1CFCA51CFEA462A362A262A262A25013FCA2626297B5FC1CF8614F14F06D5F6D5F6E4C14
E002E05E6E93B612C002FC4B15806E15076E6C4A150003E0023F5C03FC49B65A01FD9026
FF800F5D01FC91B85A6E60021F606E6002034DC7FC020017F8033F16E0486C010F168003
014BC8FCDB003F14E0040101FCC9FC93CCFCA9487EA9487FA7487FA6B57EA96C5BA26C5B
6C90CEFCEA07FC57A77DF863>I<95381FFF80050FB512E04CB612F0041F15F893B712FC
1507031F16FE92B8FC14035C141F147F91B9FC010318FC5B4918F84918F04918E0491880
90B700C0C8FC480380C9FC03F0CAFC4891CBFC4813F814E048138091CCFC485A13F8123F
5B485AA25BA212FF5BA97FA37F6C7EA27F7F6C7E7F6C7F14E014F86C13FE6CEBFFC015FC
6C91B512FE6CEEFFF8F0FF806C18E06D17FC6D836DEFFF806D18C06D18E0010118F06D18
F8143F020F17FC1403EC007F030716FE92C81207F0000F19031907193F051FB5FC94B6FC
4C15FC5E4C15F8A24C15F0A21AE01AC01A8070ECFE0019F87014E07014807001F8C7FC47
6278CC58>I<EB1FFF017F13F048B6FC4815E04815FC16FF4816E017F84816FF18C0D9F0
3F15F0003F010315FC49C66CECFF80031F15E0030315F849010015FE041F6E7E04078116
01001F6F7E6D150F1703000F16006D163F0007170F6D16030003EF007F6D171F6C6C1707
6C6C17016D6CEE00406D6C94C7FC80EB1FF86D7E6DB4FC6D7F010013E0EC7FF86E7E6EB4
FC6E13C0020313F06E13FE6E6D7E6F13E00203B512F8020F14FF4A15C0027F15F091B77E
010316FE4902DF6D7E49D9FE0F8049D9FC038049D9F00114F849496C804B6D7F90B5486D
7F4870804891C76C804A6E804870804A8048857180484981727F5A4A6F7F721480A24883
1BC04A81A2B57014E0A3841BF0A285A66C7FA31BE0A27E80A26C1AC096B5FC806C1A806E
5D6C1A00806C4D5B6C6E5C626C6E4A5B6D6D4A5B6D6D5C6D6D4A5B6D6D91B55A6D01FF01
035C6DDAE01F91C7FC6D91B65A6D17F8023F5E6E16C002075E02014BC8FC6E6C14F0030F
14809226007FF8C9FC4C7A78F85D>I<92B7FC021F16FF49B912E0010718F0131F137F48
BAFC4819E05A5A5A4819C0A25AA2BB12809138FE000F02C0EB007F91C8120701FCDB007F
1300491607F0007F4994C7FCA25B127FA2ED3FFC003F0107B5FC023F8091B67ED81FE381
13EF6CB77EA27E7E6C82485E5A5AA2D81FE75D13E1263FE07F5C021F5C007F010349C9FC
9138001FF892CBFCA212FFA21A406DEF01F0190319076D171F6DEF3FE019FF6D16036C6C
160F02C0037F13C002F00207B5FC6CD9FF8090B6FC92B8FC6C1980A27EA26C19007E7E6C
60013F17F86D17E001071780010104FCC7FC6D6C15E002074AC8FCDA003F13C0445078CD
55>I<EC03E0DA0FFCEEFFC0DA3FFE030F13F84A6C033F13FF91B56C4A14C0494CB67E49
6E4915F8494C81499538C00FFE494C90380003FF496ED91FFC01007F4C4A6E7E494C4814
3F90B64B814C49486E7E5A4892C748486E7E15FC4802F092C87F03C04916074891C78402
FC5D5C4801E00203835C485B91C84917805BA2484815075B64491CC0A2485A60645BA264
A3645B99B5FCA2636C6C1C806363050F5DA2003F5014006D61001F505B98B5FC6D60000F
4F5C6D60000771495C6C6C4E5C6D187F6C6C95B65A6C4E5D6E1607D97FE0041F5D6D6C4C
92C7FC6D6C93B65AD90FFE92B75A902603FF8018F06D01F0606D01FF495E023F90B9C8FC
020F18FC020318F0020018C0033F94C9FC030716F8DB007F1580040102E0CAFC9326000F
FCCBFCA44D7EAA4D7EA84D7FA694B57EA64C80A4705CA3715B7190CBFC715AEF07F8627D
78CE73>I<49B4F1FF80010701E0050713E0011F01F8051F13F0017F01FE057F13F890B6
94B512FC486F030314FE486F5D486F4B14FF705D486F5DA2486F5D7092B7FC48607018FE
4860714915FC1DF8714915F0B818E071491580D9FC01F1C0009026E0003F6D4901FCC7FC
496D4B5B49010717E06F6D5D6F92B55A6CC76E92C8FCC94A5B047F5D706C485B62706C48
5BA270495B068F5B82069F90C9FC7013DFF0FFFE8261A2705CA2715BA2618361A28361A2
8396CAFCA3715AA2170F84A35FA385A35FA585A25FA98594B5FCB2715BA2715B7190CAFC
715AEF03F8606F7BCC6E>I<D93FC0ED0FFE2601FFF092387FFFC04801FC0203B512F800
0F01FF020F14FE486E49806F017F15C04893B77E486E48826F48824C82B66C4882A26F48
824C1780A26F4817C06C4891B9FC023F19E06C486CB7EAC07F6C486C9226FE000713F06C
486C4B1301D801804C7FC74CEC7FF86E4B143F4E141F4EEC0FFC8095C81207A25FA24D16
FE6E18035FA35FA35FA25CA25FA25CA25FA34A180794C9FCA45C5EA21B0FA35C5EA21B1F
A35C5E1B3FA45E6E187F5E806E5B6E90CAFCDA00FC17FF92CBFCA462A562A662A862AE74
13FCA27413F87413F07413E0F33F80577B7DCD63>I<387FFFF0B57EA55CA65CA27EA45C
A55CA691C8FCA65B123FA55BA514049038F81F808115F06E7E816E7EA2816D481380001F
5B90B6FC16C0A57EA316807EA216007E5D6C5C5D6C5C6D5B011F1380D907FEC7FC224E75
CC31>I<953803FF80061F13F095B512FE05036E7E4D15E04D81053F010313FC94267FF8
007FDDFFE0EB3FFF4E6D7F4C496D7F4C90C76C7F4D8204076F7F4D80040F834D6E7FA204
1F834D8189A2757FA2898789A283040F84A287718316078316037183A2707F707F728071
6C82717E717ED91FF86EB4FC90267FFF806D7F48B500F06D13E04802FC6D7F4802FF6D13
FC70D93FFF82260FF87F01E06D13C0D9F01F6D010713F8D81FE06E6D13FF6E030014E7D8
3FC06E023F90B6FC6E6D14071901007F6FEC003F018018076E050015FC71030FECFF8000
FF861FC0A21F80F687001E80A6EA7F00C799C7FCA86563A465A46563A265A365636E62A2
714B5BA29AC8FC6E95B5FC64836F4C5B646F6D5C714A5B6F606F6D4A5B6F6D4A5B6F6D6C
4990C9FC6F02E0EBFFFE6FDAFC035B7090B612F0041F5E0407168004014BCAFCDC001F14
F0050014806A7A7FF871>I<D93FE0F007F02601FFFCF01FFC4801FF4E7E000F6E4D7E48
02E094B512806F5E486E4C14C0486E5E6F5E62B75E627092B6FC4F1580705C4F15006C48
6C6D4A5C020F4C5C6C486C4C5C6C486C6D4A14E06C486C93B65A260180004B5DC84B92C7
FC037F4A5C704914F8033F4A5C4E5C4E5C95B6C8FC031F495C4D5C4D5C4D14E04D5C177F
94B6FC16F9ED0FFB4BB7FCA262A26060604E7F18C04B5C92B65A4A5C4A5C4A5C021F4A80
4A5C4A5C91B64880010392C7153E494A6FEBFF80494A040313C0494A6E6C4813E0494A03
FF14F090B648168F484B93B512F8484B804892C8FC485C4B81485C4B814B19F04B814B19
E092C97E4A7015C06C49824A7114806C497114006C49050F13FC6C49050313F06C6CCCEA
7FC05D507BCD68>I<3803FFE0000F13F84813FE486D7E488015F0B67E81818182A2826C
81827E6C817ED803FD80C7000F7F140302007F81031F7F816F7F81838181707EA2707EA2
161F707EA2707E160FA2835EA2845EA24C7FA393B57EA25D845DA2845DA24B80A2845DA2
4B80A24B13F985A292B500F07FA24A5C727E4A14C0854A153F17804A6F7E1700854A4913
0F855C4C6D7E5C4C6D7F91B5FC4C8149824C8149824C8149717EA2494A81737E4991C8FC
737E494983737F4949837313F890B5488373EBFFC0484A18F07314F8484A18FC7314FE48
5C7413FF485C4891CA7EA2484983864849831CFEB548837413FC4A7113F86C49F03FF0CE
EA0FC058797BF763>I<D801F0EF1FC0D807FCEF7FF0486C4D7E486C4C7F486D4B7F8048
4D7FA280B5FCA75CA45CA391C9FCA26C4860A35BA4003F5FA362A2121FA4000F6160A27F
A2001F61A26D5EA3866E5DA2487F95B57EA26E4A8074EB01FC6E4AEE03FE6E1880486D4A
EDE0076E4AEDF81FD9EFFF4A92B5FC03C0017F13FB01E7D9F001B516FC01E390B712F119
E101E105C015F801E05F00FF6D836E4C6C14F06D6C03FC16E06E4B7F02034B6D14C06E03
C06D14806E6C91C70001EBFE00031F01FC6E6C5A6D010101C0ED1FE092CEFCA37FA47FA2
7FA36C7FA280A280A26C7FA280807E80806C8081A26C80817EA26C80A27E6D5BA27F6D5B
6D5B6D5B6D90CEFCEB00FC5F7A78CD6B>I<D803F8EF01E0D80FFE4D7E486C4D7E486D83
486D160F6E707EB57E6E707E806E701380806F6F13C0816C801BE06C6E167F6C807E0003
6E17F06C807E6D7F7F6D806D18FF6D807F6D806D5F6E7F6E5E80704A13E0806E5E6E7F4F
13C06E5E6E6D5C1B80037F92B5FC6F6C5B4E14006F5C4E5B6F5CDD807F5B6F91B5FC0581
5C6F01835C17876F01DF5C94B65AA26F5E97C7FC61705CA261705C61616196C8FC705B60
18F060606095C9FC17FC5F5F17C0705A94CAFC4C4E78CC5D>I<93381FFFF00303B67E03
3F15F892B712FE0207EEFFC0021F17F04A8391B6D8F80013FE4903C0EB1FFF010792C700
0713C04902FC6E7F4902F06E7F494A6E7F494A8290B6486F7E4892C97F4B82484A188048
4A7013C05D481BE05D484A18F0865D481BF892CAFCA2484919FCA35CB51AFEA24A5FA45C
A262A44A5FA26C1BFC97B5FCA36C4E14F8A2616C1BF06E5EA26C4E14E0616C1BC06E5E6C
4E14806C95B612006E5D6C4D5C6D6C4B5C6D6C4B5C6D4C5C6D6D027F5C6D01E049B65A01
016D010792C7FC6D01FE013F5C023FB812F86E5F020717C002004CC8FC033F15F8030315
80DB001F01F0C9FC574E78CC68>I<0103BB12FE010F86133F5B90BDFC5A5A5A5AA25A5A
A25AA2BD5AD9FE0190C80180C8FC13F0EA7FC01300121EC7FCB3A65C86A34A83A25C736C
EB03F874EB07FC4A190F4A71131F4B04FFEB3FFE027FF0C0FF02FF7090B5FC5BA2498349
1BFC5B494981491BF885491BF0851DE04B6F15C0856D72148074EBFE006D49040F5B7413
F06D490400138001034994C8FC6D90CEFCEB003C5F507BCB66>I<D803FE96387FFFF026
0FFFC095B512F84801F05F487F4801FE4D14F06E5FB66C19E06F4C14C06F5E1D806F4C14
00816F4C5B6C96B5FC6F606C6E4B5C6C606C6F5F00036F5CC7003F61020F6D4A5C6E5E6E
6D5F6E4C91C7FC6E7F037F4B5B6F6C91B5FC031F5F70495C030F5C6F6C5E606F5F71485C
6F5C05C05D6F4A91C8FC17E0047F495B95B5FC706C5C05F15CEE1FFB6270B6FC62628262
7092C9FCA2618261615E615E614C5C5E614C91CAFC5E6093B5FC605D5D845DA24B805D85
5D5D4D7F92B5FC4D6C7E4A14F84A6F7E17F04A02E07F181F4A02C07F4A150F05807F4AEC
00074A825E91B56E7F4C81494A7F49844C6D7F494A81737E494A8149717E4C824991C86C
13E049F1FFFE4B6FECFF8090B57015C04B19E0484A6F15F048844B19F8484A8186484A82
5A4B824891CA7E487314F04A83B548050014E07513C04A061F13806C49953803FE005D79
78CC6E>I<923801FFF8033FEBFFC04AB612F8020715FE021F6F7E027F16E049B812F849
834983498349844984498490BA7E4885A248854885A2489339C0001FFF04F8C712034803
800200138003FCC9127F03E0163F4891CAEA1FC002FC170F14F04801C018E04A170791CB
FC13FC5B484819F0A25B5B5B1A0F90CCFCA21A1F5A1A3F1A7F1AFF614F13E06161616C18
7F96B512C018036D160F6D047F14806D0303B6FC6D151F01FC4AB71200D9FF80133F91B9
5AA26262A248616C6C606D606D606D95C7FC01875F01835F01815F6D6C16E0021F168002
074BC8FCD9E00115F8DA003F14C06D010101F8C9FC92CCFCA26C7EA27FA27FA27FA2807E
80A280A2807E8080A26C7FA2806C80A2817E81817EA26C80A27F5D7FA26D5B6D5B6D5B6D
90CCFCEB00FC4C7978CC5D>I<0403BA12C093BB12E0150F153F4ABCFC1407141F147F91
BDFC13035B5B5B5B5B90BEFC489238F800070480010014804802FCC8001F9039C0001FC0
4802F0030701F090C7FC03C06F7F484A03007F4ACA6C7E4849717E4A717F4849717FA24A
717F4849717FA2747F5CB5868691CCFC881B7FA288A58098B5FC7EA3626C7F64627E6E5F
6C63626C6D61626C6D4D5B6C616E616C96B5FC6D6C4C5C6D6C4C5C6D6D030F91C8FC6D6D
5D6D6D4B5B6D01F892B512F801006D02035C6EB46C013F5C021FD9FF9FB61280020791B7
C9FC020117FCDA003F16E0030F1680030003F8CAFC040391CBFC634D78CB71>I<010FBA
12F0013F19F890BBFC5A5AA25A5AA25AA25AA25AA2BC12F001F8C7D83FE0C9FC13E0EA7F
8090C8FC121EC9FCB3A583A483161FA2831AFE71497E715B725A706D481380F0F03F95B6
FCA282A21B0082A282628262715C8362715C715C050391C7FC050013FCF03FE04D4D7BCB
5B>I<EA01FCEA07FF001F6DEE01C0486DEE07F04F7E486D83B5FC6E8386737F85737F6C
727F1A7F6C861A3F6C737EA26C737EA26C861A07877EA27413807EA25C6C1BC0A51CE013
7F62A25CA262A3625C62A262A297B5FC013F1AC0616E5EA2011F4D148061A26E5E010F4D
1400A26D6C4C5B96B5FC6D6C4B5C606D6C4B5C6E5D6D6C033F5C6E6C4A5C6E6C91B65A6F
1303DA1FF8010F5D6EB4017F92C7FC6E90B75A020117F86E5F033F16C06F5E03074BC8FC
030015F0041F1480040101F8C9FC535179CF63>I<030E18E0031F4D7E4B6C83037FEF03
FE4A486C4C7E4A6D844A4E7F4A6D844A6D844A727F4A6D707F91B56C707F49737F49747F
494A717F494A717F04E0717F494A85494A717F4991CB6C7F4B8690B54884484A72804B87
4888484A874B737F485CDE03E06F7F4891C8EA1FFC4A4B6C834E6C8148498895B57E4A86
484C6E82A25CA2B5751480A25CA2715CA76E6F90C85AA26C1F006E62725A6E626C71485F
6E626E626C71485F6F96B5FC6C6E4A6C4A5C03F04A6C14076C6E4A6C4A5C03FE91B56C13
3F6C6E6C486E90B65ADCF80FECF80F6C92B66CB85A6C4D6C5F6D4C6C94C7FC6D4C6C5E6D
4C6C5E6DDCC0015E6D4C6C5E6D4BC7003F5D010003F8020F1580023F02E002034AC8FC02
0F91C96C13F8020001F004071380714F77CD84>119 D<D93F80EE0FE0D9FFE0EEFFF800
0301F8030F7F486D92B57E050F80486D49B7FC041F168048D9FF03B8FC92B9FCA56C1A00
A26C6100016127003FFE7F5E90C7B812E04A4CC7FC4A168006C0C8FC4A02F0C9FC4A49CA
FC16E04A90CBFC15F84A5A15C04A5A92CCFCA2147E14FE5CA780147E147F03C0EB01FCDA
3FF8EB3FFF6EB77E856E82800201826E7E8192B7FC1403140F5C027F5E91B8FC495F0107
5F4994C8FC4916FC4916C04903F8C9FC90B648CAFC16C04802FCCBFC4814C04801FCCCFC
14F04813C091CDFCEA1FFC5B485A5BA2485AA3485AA77FA37FA26C7E7F7F7F6C6C7E8014
F06C13FEECFFC06C14FE92B512FC6CEEFFE06C17FCF0FF806C18E06C18F86D17FE6D836D
18C06D846D846D840100846E83021F83140702001880151F030117C092C81207DE001F13
E019031900F27FF01A3FA21A1FA51A3FA21A7FF2FFE01903191F0603B512C0051FB6FC05
7F158094B7FC4C1600624C5D6262626262704AC7FC19F87014E07190C8FCEF1FF04C9D78
F95D>I<EF03F0EF0FFC4D7E4D7E4D7F94B57EA34C80A3705CAA715BAB7190CBFCABEB03
F8EB0FFC49B46E48150E496DF03F805B90B56C4E7E6F855A89481B3F6F85484A181F895A
4B180F48885D92C7FC4801FC8614F002C06E5A91C88348481C805B5B645B5B00FF1DC05B
A34962A364A364A299B5FC007F1D8063A263A263003F1D006D6163001F64636D61000F97
B55AA26C6C4E5C626C6C4E5C6D6000014F5C6D606C6C4E5C6D95B65A6E16036D6C4C92C7
FCD91FF04C5C6D6C043F5C6D6C93B65A6DB403FD5D6D6D91B75A6D01F060DA7FFE609126
1FFFFDB748C8FC6E90B85A020318F0020018C0033F94C9FC030F16FC030116E0DB001F4A
CAFCDC007F1380DD0FFCCBFCA44D7EAA4D7EA84D7FA694B57EA64C80A4705CA3715B7190
CBFC715AEF07F862A978FA73>I<D93F80EE0FE0D9FFE0EE3FF8000301F84C7E486D4B48
7E06077F486D5D063F1480486D92B6FC5F1707171F177F4CB7FC04071600ED803F6C02C3
B75A92B85A626C19E01A806C96C7FC6C18FC6C18F06D5F010F1780902601FE1F92C8FC90
C74814FC4B5C92B612E04A15804A92C9FC4A14FC4A5C4A5C4A14C05F4A49CAFC91B55A49
5C4914E05E495C4991CBFC5D4913F8495B5D495B5D90B5CCFC5C485B5C5A5C485B5C485B
A291CDFC485AA25B123F5BA25B127F5BA35BA212FFA35BA97FA3127F7FA27F7F6C7E7F7F
6C7F806C13F014FC6C13FF15E06C14FFEEFFFC6CEEFFE018FC6CEFFF806D17E06D17F86D
17FE6D836D18C06D846D846D846E83021F8302078314016E6C1780150F030017C093C712
07DE001F13E019031900F27FF01A3FA21A1FA51A3FA21A7FF2FFE01903191F0603B512C0
051FB6FC057F158094B7FC4C1600624C5D6262626262704AC7FC19F87014E07190C8FCEF
1FF04C9D78F95D>I<183C4DB47E4D7F4D13F04D7FA24D7FA285A25FA2615FA2616194B5
5A616196CAFC4C5B60604C5B6060604C90CBFC5F5F160F5F5F5F4C5A5F70CCFC160693CD
FCA7DB7FE092381FFFF0912607FFFC4B7F021F13FF027F02C05C49B600F05E4981010F6F
91B5FC496F5E498149705A90B85E18C048715A486318F048715ADB003F94C7FC4801F001
0713FC02C001015C4890C801FE5C49157F4992381FFF1F484861715B496F13BF48486F5D
96B5FC715D4981A200FF715CA249705CA28463A27291C8FCA262606260A24E5BA26D93B5
5A5F007F614D5C7F5F4D806C6C5D6D844D806C6C5D6D92B66CEB03F86D4A6FEB07FC6C01
C001078102F04916C06C01FF017F02E7EBF01F92B700C790B5FC6C188719036C7215F86C
17FE4E7E6D4C16F06D04E07F6D4C6D14E06D4C7F010393C76C14C06D03FC6E14806D6C02
F06E1400021F02C06E5B020791C9EA7FF89126007FF0EE1FE05E7C78FA63>136
D<F10380F11FF0F13FFC4F7E96B5FC874E80A260A460A263A24E91C7FC62624E5B626262
4E5B97C8FC614E5A6161614E5A6196C9FC604D5A606060EF004095CAFCA6D93FC0ED0FFE
2601FFF092387FFFC04801FC0203B512F8000F01FF020F14FE486E49806F017F15C04893
B77E486E48826F48824C82B66C4882A26F48824C1780A26F4817C06C4891B9FC023F19E0
6C486CB7EAC07F6C486C9226FE000713F06C486C4B1301D801804C7FC74CEC7FF86E4B14
3F4E141F4EEC0FFC8095C81207A25FA24D16FE6E18035FA35FA35FA25CA25FA25CA25FA3
4A180794C9FCA45C5EA21B0FA35C5EA21B1FA35C5E1B3FA45E6E187F5E806E5B6E90CAFC
DA00FC17FF92CBFCA462A562A662A862AE7413FCA27413F87413F07413E0F33F8057A87D
FA63>160 D<1A78F103FF4F7F4F13E04F7FA24F7FA287A261A26396B5FCA263634E5C63
98CBFC624E5B62624E5B626297CCFC4E5AA2614E5A6161614E5A96CDFC181E180C95CEFC
A6030E18E0031F4D7E4B6C83037FEF03FE4A486C4C7E4A6D844A4E7F4A6D844A6D844A72
7F4A6D707F91B56C707F49737F49747F494A717F494A717F04E0717F494A85494A717F49
91CB6C7F4B8690B54884484A72804B874888484A874B737F485CDE03E06F7F4891C8EA1F
FC4A4B6C834E6C8148498895B57E4A86484C6E82A25CA2B5751480A25CA2715CA76E6F90
C85AA26C1F006E62725A6E626C71485F6E626E626C71485F6F96B5FC6C6E4A6C4A5C03F0
4A6C14076C6E4A6C4A5C03FE91B56C133F6C6E6C486E90B65ADCF80FECF80F6C92B66CB8
5A6C4D6C5F6D4C6C94C7FC6D4C6C5E6D4C6C5E6DDCC0015E6D4C6C5E6D4BC7003F5D0100
03F8020F1580023F02E002034AC8FC020F91C96C13F8020001F004071380717C77FA84>
184 D<141EECFFC0497F4913F8497FA2497FA281A25BA25D5BA25D5D495B5D5D5D90B5C7
FC5C5C485B5C5C5C485BA291C8FC485A5B5B5B485A5B6C5A6CC9FCCAFCA7387FFFF0B57E
A55CA65CA27EA45CA55CA691C8FCA65B123FA55BA514049038F81F808115F06E7E816E7E
A2816D481380001F5B90B6FC16C0A57EA316807EA216007E5D6C5C5D6C5C6D5B011F1380
D907FEC7FC227C75FA31>208 D<171EEF7FC0933801FFF04C7F844C7FA24C7FA45EA260
5E6060605E606093B55A95CAFC5F5F4B5B5F5F5F4B5B94CBFC5E4B5A5E5E5E4B5A6F5A03
01CCFC92CDFCA4EA01FCEA07FF001F6DEE01C0486DEE07F04F7E486D83B5FC6E8386737F
85737F6C727F1A7F6C861A3F6C737EA26C737EA26C861A07877EA27413807EA25C6C1BC0
A51CE0137F62A25CA262A3625C62A262A297B5FC013F1AC0616E5EA2011F4D148061A26E
5E010F4D1400A26D6C4C5B96B5FC6D6C4B5C606D6C4B5C6E5D6D6C033F5C6E6C4A5C6E6C
91B65A6F1303DA1FF8010F5D6EB4017F92C7FC6E90B75A020117F86E5F033F16C06F5E03
074BC8FC030015F0041F1480040101F8C9FC537C79FA63>212 D<173CEFFF804C13E04C
7F4C7F4C7FA2845EA45EA2605E60606093B55A6095C8FC4B5B5F5F5F4B5B5F5F94C9FC4B
5A5E5E4B5A5E5E5E93CAFC150292CBFCA692B7FC021F16FF49B912E0010718F0131F137F
48BAFC4819E05A5A5A4819C0A25AA2BB12809138FE000F02C0EB007F91C8120701FCDB00
7F1300491607F0007F4994C7FCA25B127FA2ED3FFC003F0107B5FC023F8091B67ED81FE3
8113EF6CB77EA27E7E6C82485E5A5AA2D81FE75D13E1263FE07F5C021F5C007F010349C9
FC9138001FF892CBFCA212FFA21A406DEF01F0190319076D171F6DEF3FE019FF6D16036C
6C160F02C0037F13C002F00207B5FC6CD9FF8090B6FC92B8FC6C1980A27EA26C19007E7E
6C60013F17F86D17E001071780010104FCC7FC6D6C15E002074AC8FCDA003F13C0447D78
FA55>232 D<180FF07FE04E7E4D13FC4D7FA24D7FA286A25FA297C8FC5FA261614D5B61
61614D5B96C9FC604D5A6060604C5BA2604C90CAFC5F5F5F4C5A5F705A705A93CCFCA793
381FFFF00303B67E033F15F892B712FE0207EEFFC0021F17F04A8391B6D8F80013FE4903
C0EB1FFF010792C7000713C04902FC6E7F4902F06E7F494A6E7F494A8290B6486F7E4892
C97F4B82484A1880484A7013C05D481BE05D484A18F0865D481BF892CAFCA2484919FCA3
5CB51AFEA24A5FA45CA262A44A5FA26C1BFC97B5FCA36C4E14F8A2616C1BF06E5EA26C4E
14E0616C1BC06E5E6C4E14806C95B612006E5D6C4D5C6D6C4B5C6D6C4B5C6D4C5C6D6D02
7F5C6D01E049B65A01016D010792C7FC6D01FE013F5C023FB812F86E5F020717C002004C
C8FC033F15F803031580DB001F01F0C9FC577C78FA68>236 D E
%EndDVIPSBitmapFont
/Fk 128[86 4[77 91 91 124 91 96 67 68 67 1[96 86 96 143
48 91 1[48 96 86 53 77 96 77 96 86 3[48 86 48 3[177 129
129 124 96 127 1[117 134 129 158 108 134 88 62 129 135
112 117 132 124 122 129 1[81 1[134 2[48 86 1[86 86 86
1[86 86 86 86 86 48 57 48 134 1[67 67 5[86 21[96 10[143
1[{}71 172.188 /CMR10 rf
%DVIPSBitmapFont: Fl grmn1000 20.74 76
/Fl 76 241 df<BD12F8A4550480AF56>0 D<1303EB0780EB0FC0EB1F80EB3F00133E5B
5B485AA2485A5B12075B120F90C7FC5A121E123E123CA2127CA21278A312F85AA613FCEA
F3FF00F71380B512C014E0A214F07EA37EA214E07E6C13C06C13806C1300EA00FC143373
F730>28 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A314F07EA27EEA1FFEEA0F
FCEA03F0C7FCA6130114E0A31303A214C0A213071480130F14005B131E133E133C137C5B
A2485A485A485A120F485A48C7FC121E120C143371F730>I<EA03F0EA0FFC487E487E48
1380B512C0AB6C1380AC6C1300AD6C5AAC6C5AAC6C5AAD6C5AAC6C5AC8FCAFEA03F0EA0F
FC487E487E481380B512C0A86C13806C13006C5A6C5AEA03F0127C71FB30>33
D<14F8EB03FE497EA2491380A35BA25B15005C495AA2495A5C5C485BA2485B91C7FC5B48
5AA2485A5B5B485AA2485A90C8FC123E5AA25A5A5AA2124019277DF81D>39
D[<160F161F163F167C16FCED01F8ED03F0ED07E0ED0FC0ED1F80ED3F005D15FE4A5A4A
5AA24A5A140F4A5A5D143F4A5AA24AC7FC5B5C13035C13075C130F5C131FA2495AA2495A
A213FF5CA25AA291C8FC5AA25B1207A3120F5BA3121FA25BA3123FA35BA3127FA75B12FF
B3A7127F7FA7123FA37FA3121FA37FA2120FA37F1207A312037FA27E80A27EA280137FA2
6D7EA26D7EA2130F801307801303801301807F6E7EA26E7E141F816E7E14076E7EA26E7E
6E7E157F81ED1F80ED0FC0ED07E0ED03F0ED01F8ED00FC167C163F161F160F>40
171 111 256 67 I[<127012F8127C7E123F6C7E6C7E6C7E6C7E6C7E6C7E7F137F6D7E6D
7EA26D7E806D7E1303806D7EA26D7E81147F81143F81141F81140F81A26E7EA26E7EA281
80A21680A28016C0A2157F16E0A316F0153FA316F8A2151FA316FCA3150FA316FEA71507
16FFB3A716FE150FA716FCA3151FA316F8A3153FA216F0A3157F16E0A316C015FFA21680
5CA21600A25C5DA24A5AA24A5AA25D141F5D143F5D147F5D14FF92C7FC495AA2495A5C13
07495A5C495AA2495A49C8FC13FE5B485A485A485A485A485A48C9FC123E5A5A1270>40
171 119 256 67 I<F003E0A24E7EB3B3AF007FC0FCA2C11280A36C1F00A2CBD807F0CC
FCB3B3AF725AA2717176E386>43 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A3
14F07EA27EEA1FFEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F1400
5B131E133E133C137C5BA2485A485A485A120F485A48C7FC121E120C1433719130>I<B8
12F8AB2D0B7EAA39>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C
5A6C5AEA03F01212719130>I[<F103C01907F10FE0A2191FA21AC0193FA2F17F80A21A00
61A2611801A2611803A24E5AA261180FA261181FA261183FA24E5AA296C7FC60A2601701
A2601703A24D5AA260170FA260171FA260173FA24D5AA295C8FC5FA25F1601A25F1603A2
4C5AA25F160FA25F161FA25F163FA24C5AA294C9FC5EA25E1501A25E1503A24B5AA25E15
0FA25E151FA25E153FA24B5AA293CAFC5DA25D1401A25D1403A24A5AA25D140FA25D141F
A25D143FA24A5AA292CBFC5CA25C1301A25C1303A2495AA25C130FA25C131FA25C133FA2
495AA291CCFC5BA25B1201A25B1203A2485AA25B120FA25B121FA25B123FA2485AA290CD
FC5AA25AA2127CA2>67 172 119 256 86 I<923803FF80033F13F84AB6FC020715C002
1F010113F0913A3FF8003FF8DA7FE0EB0FFC902601FF80EB03FF4990C76C7F49486E7F49
486F7E49486F7EA249486F7E49486F7EA201FF834A15074884A248496F1380A24819C0A2
91C97E4819E0A34819F0A44819F8A24982A3007F19FCA800FF19FEB3AC007F19FCA86C6C
4C13F8A56C19F0A46C19E06E5DA26C19C0A26C19806E5DA26C1900A26C6D4B5A017F5F6E
151F013F5F6D6C4B5A6E157F6D6C4B5A01075F6D6C4A5B6D01C0010790C7FC6D6D495ADA
3FF8EB3FF86EB448B45A020790B512C0020192C8FCDA003F13F803031380477779F256>
I<ED07804B7E151F153F157FEC01FF1407141F147F0107B5FC90B6FCB7FC14FB14E31483
EBF8031300C7FCB3B3B3B3B14A7F4A7F91B6FC007FB812FEA6377371F256>I<ED3FFE02
03B512F0020F14FE023FECFFC091B712F001038249D9803F13FE90270FFC00037FD91FF0
010080D93FC0023F13E049486E7F01FEC86C7F48488148486F7F496F7F0007707F485A49
701380001F19C04982123F90CA6C13E0A24819F0007E83A2EA7FE0486C18F87F6D827FA7
6C5A6C485E6C5A6C4818F0CBFCA2601AE0A21AC060A24E13801A0095B5FC615F614D5B61
5F614D5B4D5B96C7FC4D5A4D5A4D5A604C5B4C5B4C5B4C48C8FC5F4C5A4C5A4C5A4C5A4B
5B4B48C9FC4B5A4B5A5E4B5A4B5A4B5A4BCAFC4A4816F84A5A4A5A4A48ED01F04A5A1580
4AC9FC147E4A1603494817E0495A495A49481607495A49CAFC017EEF0FC0017C173F90BA
FC5A5A5A5A4819805A5ABBFCA31A00A3457378F256>I<92380FFF8092B512FC0207ECFF
80021F15E0027F15F89126FFF80313FE0103903980007FFF4948C7001F7FD90FF86E13E0
D91FE06E7FD93F806E7F49C87E017E83496F7F484883844848188013FE7F02C017C04883
80A3805CA36C495D7E6C90C91480133E90CAFC1A0095B5FCA261A24D5BA24D5B614D5B61
5F614D90C7FCEF3FFC4D5A4D5A040313C0041F5B92260FFFFEC8FC0207B512F017C017FC
EFFF8091C7000313F09338007FFCEF1FFE716C7E717F7113F0717F717F727E85721380A2
7213C01AE0A27213F0A21AF8A21AFC84A31AFEA2EA0FF0487E487E487EB5FCA51AFCA249
5EA26C4818F813F013C090CA4813F06C7E1AE06C6C4C13C07F000F4D13806C6C18006D93
B5FCD803FE4B5B6C6C5F6C01C04A5BD97FF0020F5BD93FFC4A5B6DB46C017F13800107D9
F803B5C7FC6D90B65A010016F8023F15E0020F1580020102FCC8FCDA000F1380477779F2
56>I<F003C04E7E180F181FA2183F187FA218FFA25F5FA25F5FA25F5FA25F94B5FC17FB
EE01F3160317E3EE07C3160F1783EE1F03163F163E167C16FC16F8ED01F0150316E0ED07
C0A2ED0F80ED1F00A2153E5DA25D14015D4A5A14075D4A5A141F92C7FC143E147E147C5C
13015C495A13075C495A131F91C8FC133EA25B5BA2485A485AA2485A120F5B48C9FC5A12
3E5A12FCBC12E0A6CA000701E0C7FCB3A24D7F4D7F94B6FC030FB812E0A64B757BF456>
I<0170171C017C177CD97F80ED03FC02E0151F02FEEDFFF8DAFFF0013F5B92B75A616196
C7FC60606018E06095C8FC17FC17F017C0D97E1F01FCC9FC91CCFCB3A4923803FFC0033F
13FC92B6FC020315C091260FFE0113F0913A1FE0003FF8DA7F80EB0FFE02FEC76C7ED97F
F86E7F4A6E7F4A6E7F4A824A6F7E91C9FC017E707E85017C161F01388390CAFC721380A2
1AC0A21AE0A2841AF0A51AF8A61203EA1FE0487E487EA2487EA31AF0A25B604918E05B6C
CAFC007C19C0127E60003E1980123F6C4D13006D5F6D167F000F606C6C4C5A7F6C6C4B5B
6C6C4B5B6D4B5B6C6C6C4A5B6D6C023F90C7FCD93FF04A5AD91FFE903801FFF890270FFF
C01F5B010390B65A6D16806D6C4AC8FC021F14F8020314C09126007FFCC9FC457778F256
>I<933801FFE0041F13FE93B612C0030381030F15F8033F9038803FFC923AFFF80003FE
4A01E0EB00FF4A0180143F4A90C8EA1F80DA1FFCED0FC04A5A4A48157F4A48EDFFE04B5C
49495C5B4990C8FC495AA2495A013F7013C04A6F1380017FEF7F00494893C7FCA25A5C5A
A2485BA35AA25C5AA35AA2160C923803FFFC48D9000FEBFF80033F14E04B14F89239FE00
3FFCDA01F8EB07FFDA03E06D7F4A4801007FB548486E7E4AC87F023E6F7E023C6F7E027C
820278150F02F8824A6F13801AC05C7213E0A24A17F0A21AF85C841AFCA591C914FE7EA8
7EA380A27EA21AFCA27EA21AF86C6D5DA21AF07EA26C6D17E0606C19C06E1780017F5E6E
1700013F4C5A6D6C4B5A6E5E6D6C157F6D6D4A5A6D6D495B6D6D01075B6D01F8011F90C7
FC6EB4EBFFFE021F90B55A6E5D020315E002001580033F01FCC8FC030313C0477779F256
>I<EA03E0A27F487E13FEEBFFF091BA12C0A35AA31B801B00A248616262A26201F0CAEA
0FE00180171F48CB5B4F5A197F003E4EC7FC614E5A007E1703007C604E5A180F614E5A48
173F614EC8FCCB5A4D5A604D5A1707604D5A171F604D5A177F95C9FC5F5F4C5A16035F16
075F160FA24C5AA24C5AA2167F5F16FFA294CAFC5DA25D5EA21507A24B5AA4151F5EA215
3FA44B5AA415FFA65C5EA75CAF6E5B6E5B033ECBFC4A7977F456>I<923803FFC0033F13
FC4AB67E020715E0021F15F84A48C67FDAFFE0EB1FFF49018001037F4948C76C7FD907F8
6E6C7E49486F7E49486F7E49486F7E4A150749C97F49707E498212011A80498212031AC0
197FA21207A27FA37F19FF6E1780A2806E4B13006C7F02FC5D6E5E6E6C4A5A6C8003F04A
5A6C6E4A5A03FE5D6D6D4A5A04C0495A6D02F049C7FC6D9138F803FE6D9138FE07FC6D91
38FF0FF06DEDFFE06D16806D93C8FC6E14FC6E14FF020F816E15E00201816E15FC020381
020F6F7EDA1FF781DA7FC181DAFF8081902703FE003F8049486D804948010780D91FE06D
8049480100158049486E14C049C8121F487014E04848030314F048481500844848041F13
F8484882060313FC003F834982197F4848EF3FFE191FA200FF180F5B1907A31903A41AFC
7F127FA2F107F87F003F19F06D170F001F19E06D171F6C6C18C0193F6C6CEF7F806C6CEF
FF006C6D4B5A6C01E0ED07FC6D6C4B5AD93FFCED3FF06DB4EDFFE06D01E001075B6D01FC
017F5B010190B648C7FC6D6C5D021F15F002071580020002FCC8FC030713C0477779F256
>I<923807FFC0037F13FC4AB6FC020715C0021F81027F010013F8DAFFF8EB3FFC4901C0
EB0FFE4949EB03FF4990C76C7F49486E7F49486F7E49488249486F7E13FF48496F7E4884
4A150F488484484917805AA21AC048831AE091C9FC5A1AF0A3B5FC1AF8A284A31AFCA81A
FEA26C5FA57E6E5DA27EA26C5FA26C7F6C5FA26C6D5D6C173D6D6C157D18796D6C15F96D
6CEC01F16D6CEC03E10107DB07C113FC6D6C6CEB0F816D6DEB3F019026007FF813FE6EB5
12FC020F14F8020314E0DA007F018014F892390060000393C7FCA21AF0A41AE0601AC0A3
4E1380A21A00A24E5AA2D801FC4C5A487E486C4C5A487F4E5A615F614D5B91C84890C7FC
494B5A6C484B5A01E04B5A6D4B5A6C6C4A485AD801FE4A5B6C6C6C010F5B02FC90B5C8FC
6DB612FC011F5D6D15E001031580D9007F01FCC9FC020713C0477779F256>I<EA03F0EA
0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5AEA03F0C8FCB3B3A2EA03F0
EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5AEA03F0124A71C930>I<
007FC0FCA2C11280A36C1F006C66D4FCB3A9003FBF12FE488AC11280A36C1F00A2712976
BF86>61 D<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5AEA03
F0C8FCB3B3A2EA03F0EA0FFC487E123F487EA2B51280A314C0A37EA27E7E7EEA03F3EA00
03A613071480A4130F1400A25BA2131E133E133C137CA25BA2485A5B1203485AA2485A48
C7FC123E121E120C126B71C930>63 D<F001F84E7EA34E7EA34E7EA34E7FA34E7FA34E7F
A395B57EA34D80A34D8018F3A205078018E1A2050F8018C0874D5A85053F811800854D81
177E8505FE815F850401824D7FA20403824D7FA20407824D7FA2040F824D7FA2041F834D
80A2043F8394C87EA24C83047E81A204FE834C81A20301844C81A20303844C81A2030784
4C81A2030F8493BAFCA24B85A34B8593CA123FA24B85037E83A203FE854B83A20201864B
83A20203864B83A20207864B83020F865D87021F875D88023F87A2027F858A14FF498649
6D86496D60496D86017F01FC95B57E0003B66C0407ECFF80B700F80307B812F0A6747C7A
FB81>65 D<BB12FEF2FFF01BFEF3FFC01CF01CFCD8000702E0C8000F13FF01004A030180
6E496F6C13E06E061F7F757F757F757F757F7580888A767FA2767FA2767FA4767FA9525B
A36664666466646699B5C7FC515B515B515B515B515B097F13805148C8FC08075B081F13
F00703B5128093B800FCC9FC63F3FF801CF00480C913FE98383FFF80090F7F7513F00901
13FC757F767E767F767F8A767F767FA2767F8AA2767FA3761480A31FC0AA1F80A264A21F
0064666466646664525B525B99B55A515C5191C7FC090F5B4A063F5B91B56C93B55A0107
6E030F14E0BE5A9AC8FC1CFC1CE099C9FC1BE06A767BF57A>I<F10FC04F7E4F7EA24F7E
A24F7EA34E7FA24E7FA24E80A24E80A24E8019BF063F80191F067F80F07E0F06FE8018FC
05016D7F18F805036D7F18F005076D8018E0050F6D8060051F6E7F60053F6E7FA24DC76C
7FA205FE6E7FA24C486E7FA24C486E7FA24C486E80A24C486E80A24C486F7FA24D81043F
8494C97E4C84047E8204FE844C820301854C820303854C820307864C82030F864C83031F
865E033F727F93CBFC4B727F157E03FE727F5D0201737F5D0203737F5D02077380A24A48
7280A24A48737FA24A48737FA24ACD6C7FA202FE747FA24948747FA24948747FA24A8601
078A4A86010F8A4A87011F8A4A87013F8A91CF7E498A017E8801FE8A498800018B498800
038B90C1FC482080A24820C0A24820E0A24820F0A24820F8A2C212FCA37E7C78FB8F>68
D<BFFCA48AA2D8000702F0C9FC01004A16076E49EE007F6E191F881C03767F881D7F1D3F
A21D1FA21D0F8AA21D07A31D03A28AA21D01A51A1F777EA49BC7FCA462A462A262616119
0F96B5FC93B8FCA604C0C7FC190F1903858586A286A486A2F607C0A3F60F80A497C9FCA2
1E1F1F00A466A21E3EA21E7EA31EFE661D01A21D03A21D07A2535A1D1F1D3F1D7F1DFF1C
030A0F5B4A193F91B56C0403B5FC01076E167FBFFCA366A36A767BF575>I<BE12C0A41D
E0A2D8000702F0C8120F01004AED007F6E49161F6E18071B0187F43FF0A21C1F1C0FA21C
07A21C031DF81C01A31C00A31DFCA21D7CA61D3EA41D00B3B3B3B04A7F91B57E010714FF
BAFCA65F767BF56C>71 D<B900F0013FB812FCA6D800074AC90001ED8000010002F0DC00
3F01FCC7FC6E49715B6E49715BB3B3A993BBFCA604C0CA120FB3B3AD4A6D4D7F91B56C4D
7F010702FE4CB67EB900F0013FB812FCA676767BF581>I<B912F0A6D800074AC7FC0100
14F06E5B6E5BB3B3B3B3B3AA4A7F91B57E010714FEB912F0A634767BF53E>I<F07FFF05
0FB512F8057F14FF0403B712E0040FD9E00313F8DC3FFEC7EA3FFEDCFFF891380FFF8003
0301C0020113E0030F496E13F84B48C9EA3FFCDB7FFC70B4FCDBFFF004077F4A49707F4A
49707F4A49707F4A90CB6C7E4A48727E4A48727E4A48727E02FF874949727F4949727F49
884B8449884949727F92CD127F49884948747EA201FF894A86488A4A86488AA24849747F
A3488A4A86488AA44849747FA4488ADB0F8017F8A2028086A3B51E8093B9FCAE0480CAFC
A26C1F00A202C062A292CDFCA26C66A46C6D505BA36C666E62A26C66A26C6D505BA36C6D
505BA26C666D6C5090C7FCA26D6C505AA26D6D4F5A6D646F606D6D4E5B6D646D6D4E5B6D
6D4E5BA26E6C4E90C8FC6E6C4E5A6E6C4E5A6E6D4D5A6E6D4C5B02016D4C13C06E6D4C5B
6F6C4C90C9FCDB1FFEEE3FFC6F6C6CEDFFF803036D4A13E06F01F002075B9226007FFE02
3F90CAFC933B0FFFE003FFF8040390B612E0DC007F92CBFC050F14F8DD007F90CCFC717E
76F986>I<B900F0037FB612FEA6D800074ACA00071580010002F0050102F8C7FC6E4971
14C06E497290C8FC1EFC1EF0661E8053C9FC525A65F407F8525A525A525A525A52CAFC51
5A515A515A515A515A515A515A51CBFC505AF203F8505A505A505A505A50CCFC1AFE4F5A
4F5A4F5A4F5A4F5A4F5A4FCDFC4F7E18034E7F4E7F604E7F4E7F95B5FC4D804D805FDD0F
F37FDD1FE380EF3FC1DD7F80804D5ADCC1FC6D7FDCC3F86D7FEEC7F0DCCFE06D7FDCDFC0
6D7FEEFF8094C76C7F4C6E7F5E4C6E804C6E805E4C6F7F747FA2747F747FA2747F747FA2
74807480A2757F757FA2757F757FA2757F757FA275807580A2767F767FA2767F767FA276
7F8A8BA28B4A6D1AF091B56C4D80010702FE057FECFF80B900F0020FB81280A679767BF5
86>I<181F4E7EA24E7EA34E7EA34D7FA34D7FA34D7FA44D7FA34D7FA34D80A284057F80
177EA2DDFE3F7F17FCA204016D7F17F8A284DC03F080A28404078117E084040F8117C084
041F811780A2043F6D8094C7FCA24C6E7F167EA2854C82A2850301835E850303835E8503
07835EA2030F6F7F5EA2031F6F7F5EA2854BC980A2864B84157E8603FE845D860201855D
A20203717F5DA20207717F5DA2864A4884A286021F855D86023F8692CBFC874A86147EA2
02FE727FA21301757F1303A2496C86497F013F6D4D7F90B500F04D7F000702FE0407B612
C0B700F00207B812E0A66B7C7AFB78>I<B700C098B712E07062A27062A27062D800070E
FCC7FC010020E0027E6DE00FBF5B023E676F6CF21F3FA36F6C1A3EA36F6D197CA26F6D19
F8A36F6DF001F0A26F6DF003E0A36F6DF007C0A36F6DF00F80A2706CF01F00A3706C183E
A2706D5FA3706D5FA2706D4C5AA3706D4C5AA3706D4C5AA2706D4C5AA3716C4CC7FCA271
6C163EA3716D5DA3716D5DA2716D4A5AA3716D4A5AA2716D4A5AA3716D4A5AA3726C4AC8
FCA2726C143EA3726D5BA2726D5BA3726D485AA3726D485AA2726D485AA3726D485AA273
6C48C9FCA396383FFF3EA37313FCA2735BA3735B147F735B4A7E497F010701F06F494C7F
011F01FC99B57E90B66C080714FCB86C6D4991B912E0A274C8FCA31A3E93767BF59E>I<
B700C00407B712FC8282A28282D80001DF0007ECFC00D9003F6D050014E070063F1380E3
0FFEC7FC71715A023E6E715A836F735A6F7F83816F7F83816F7F84816F80707FA2707F70
7FA2707F707FA2707F7080A27080717FA2717F717FA2717F717FA2717F7180A27180727F
8684727F8684727F868472808784737F737FA2737F737FA2737F737FA27314807314C0A2
7413E07413F0A27413F87413FCA27413FE7413FFA27414817414C1A27513E17513F11DF9
877513FD1DFF8787A28787A2888888A28888A28888147F884A6C197F497F010701F0193F
011F01FC191F90B67EB86C170F1D07A21D031D01775A76767BF581>I<F07FFF050FB512
F8057F14FF0403B712E0040FD9E00313F8DC3FFEC7EA3FFEDCFFF891380FFF80030301C0
020113E0030F496E13F84B48C9EA3FFCDB7FFC70B4FCDBFFF004077F4A49707F4A49707F
4A49707F4A90CB6C7E4A48727E4A48727E027F864A48727F4949727F49884949727F4B84
49884949727FA24990CD6C7E49884A8601FF89A24849747FA2488A4A86488AA24A86488A
A2488AA24A86A2488AA4488A4A86A5B51E80B16C6D501400A66C66A26E62A26C66A36C6D
505BA36C666E626C66A26E626C666E626C666D9AC7FC6F96B5FC6D646F606D646D6D4E5B
A26D6D4E5B6D6D4E5B6D646D6D4E5B6F606E6C4E90C8FC6E6D4D5A6E6D4C5B6E6D4C5B6E
6D4C5B02016D4C13C06E6D4C5B6F6C4C90C9FC92261FFF80EDFFFC6F01E002035B030301
F8020F13E06F01FE023F5B9228007FFFE003B5CAFC040F90B612F8040316E0DC007F92CB
FC050F14F8DD007F90CCFC717E76F986>I<C112FCA6D8000702C0CA000FEC800001000A
FCC7FC6E636E63B3B3B3B3B3AA4A6D4D7F91B56C4D7F010702FE4CB67EB900F0013FB812
FCA676767BF581>I<003FB800C049B81280A6D8000303FCC8001FEDC000D9007F02E003
0702F8C7FC021F0280030114C06E91CA91C8FC4CEF7FFC6E6D606E626E6E705A525A6E6E
5F6F6D94C9FC1CFE6F7F6F6D4B5A515A6F7F6F6D4B5A515A6F7F6F4D5A724A5A6F8051CA
FC706D14FE707F505A706D1303706D5C505A706D130F706D5C505A70EC803F7002C05B50
CBFC716D5A715CF1F1FC7113FB6271EBFFF08362715C83627180727FA2727F727FA2727F
A2864E7FA24E804E80A2DEFE7F7F4D486C7FA24D486C7F4D486C7FA24D486C7F4D486C7F
A24D486C804DC7FC8805FE6E7F4C4880884C486E7F16074D6E7F4C486E7F161F4D6E7F4C
486E80167F94C98004FE707F15014C707F4B48707F15074C707F4B4882031F854C707F4B
5A037F718093CB805D4A48727F0203737F14074A6C727F023F874A6D4D7F49B56C4D7F01
0F02F094B67E48B600FC040715F8B800C092B9FCA678767CF581>I<007FBE12F0BFFCA3
8AA26C01F8CA12036C6DEF0007F3007F6C6D190F6C6D19031C006C6E737E6C6E193F6C1C
1F6F190F6C6E19076D7F1D036D6D19016D6D861D006D7F6D6E197EA26D806D6E193E1E3F
6D806E7F6E87826E7F6E7FA26E6EF00F806E80A26E806E6E95C7FCA26F7F6F7FA26F7F6F
7F6F80A26F806F80A26F80707FA2707F707FA2707F8282A2705B705B60715A173F604D5A
604DCDFC4C5A4C5A16074C5A4C5A4C5A5F4C48F00F804CCCFC4B5A15034B48F11F004B5A
4B5A5E4B5A4B48614BCDFC5C4A481A3E4A481A7E5D4A5A4A481AFE4A5A4A48190114FF49
90CD485A495A4A1A0749481A0F49481A1F49481A3F49481A7F017F1BFF494819034890CD
000F5B491A7F48480707B5FC48480603B6FC48BEFC5A5A5ABF5AA37E697677F57C>83
D<001FBF12F0A692C700039138C000014801E06E4AD9000F13F802806E91C8120349C917
0001F81C3F491C1F491C0F491C07A2491C03A290CA1801A3007EF500FCA5007C1E7CA848
1E3EA6CB1900B3B3B3AE4D80A2050714E0057F14FE4ABB7EA66F757AF47C>I<DA3FF0F0
07FE49B595387FFFC0010702C04CB512F0011F02F0040714FC4902FC041F80496E4C8090
B76C4B81487092B77E48704A8248704A82715C484F82715C4801FD6E05DF7FDA00074C90
38F0007FD83FFC01006D4A01C0EB1FFE01F06E6D92C7120749021FDBFFFC140348486E6D
4A6E7E496E4A498090C86C01E04A81704A5B00FE6F01F0F03F806348047F4990C9121FEF
3FF86294381FFC0F620078040FF10F00CA021F94C7FC06FE5B1707A272485A83A34F5A71
13FFA46283A7725BB3B3B3A895B57E4D80051F14FE031FB912FEA6717A76F986>I<DA03
FC92380FFF8091381FFF80027F13E049B56C5C496E16004980496E5C496E5D4981498190
B7147FDAFC036D5C48EBE0004890C7D83FF013FF49021F5DD807F86E7E4902075B000FED
03FC4902015D485A496E6C5A057E5C48C9FC715A62127EEF1F8F62007C160F18DF97C7FC
00FC16074894B5FC6183A261A28361A261A25F615F6C60007C5E615F007E95C8FC5FA26C
5E8594B5FC6C6C835E6D5C6C6C4AEBF7E06DEEE7F000074B13C76D4AEBC3F8D803FE4AD9
83FC133E6D4AEB01FE6C9027E001FFFE7F6CD9FC076EEBC0FE91B64814FF6D4B7F6D4B15
FC6D4B7F6D5D6D4B6D13F86D4AC76C13F06D4A806D6C01F06E13E0021F01C06E13C0DA03
FEC9EA7F004F4E79CB56>97 D<EE7FF80307B57E033F14E092B612F8020315FE020F814A
02C77F4A9039FC007FC04A01E0EB0FE049B5C76C7E4901FC6E7E4901F06E7E4B6E7E4901
80157E4990C9127F4948824948835C4948707E5C5A5C484983A291CAFC5A5B193F5B120F
A249177FA24F5AA25B604E5BA24E90C7FCA260494C5A4E5A187F4E5A4D5B05075BDCFF8F
5B4B90B55A4B92C8FC4B5C495E84727E856F496C7E6F9038F81FF86F90388007FC93C7EA
01FE727EF13F80737EA2737E737E86491703737EA286190086A2F27F80A31BC0A51BE0A5
1AFFA361A361A24F13C0A261A24F1380A2614F13006D94B5FC6D606D5E6D4C5B6D5E6D4C
5BD9BF80033F5BD99FC04B5BD98FE092B55AD987F81403D983FE020F5C902681FF80013F
91C7FC9026807FE090B512FC91263FFFBF5C6E90B65A02075E020116806E6C4AC8FC031F
14F8030314C0486C9026007FFCC9FC93CBFCAF487EAA487EA9487EA86C5AA2EA1FC06C5A
4BAA7DF956>I<943803FF804CB512E0041F14F093B6FC030715F8151F157F4AB7FC1407
4A16F0143F4A16E049B812804903F0C7FC4902F0C8FC4991C9FC4913F0491380D97FFCCA
FCEBFFF04813C091CBFC485A485A13F0485A5B121F5B48CCFCA2123E127E127CA35AAA7E
A47E127E127F7F123F7F7F6C7E7F6C7E13FF6C7F6C13E014FC6CEBFFC06C91B5FC6D15FC
6DEDFFC06D16F06D16FC6D820101EEFF806D17C0143F020716E0DA007F15F092C7120394
38001FF8180318011800A318011807F03FF0040FB5FC167F93B612E04B15C01980190060
6018F06F1480DC7FFCC7FC3D6179CB4C>I<EB07E0EB7FFF48B512E04814FC4814FF4815
E016F8261FC03F13FED900036D7E48010014E0003E021F13F8030713FE4802016D7EDB00
3F7F040F13F0040313FC7013FF706C7F003C041F13E0170717016CEE007F183F6C170F18
036C6C16006D17606C6C94C7FC6C7E6C7E137C7F6D7E6D7E6D7EEB03F8EB01FE6D7EEC7F
C0EC1FF0EC0FFC6EB4FC6E13C0020013F016FC020713FF021F80027F14E0DAFFFB13F849
01C07F01079038007FFF49486D7F49486D7F49486D7F4A6D7F49486D7F01FF6E7F48496D
7F8448496E7F834890C86C7F854882496F7F001F8483717F485A717FA2007F177F85845B
72138012FFA284A21AC084A584A3127F7FA31A80123FA37F001F4D1300A36C6C5F180F6C
60806C4D5A806C4D5A6C7F4E5A6D6C4B5A6D6C5E6D6C5C6D6C4A90C7FC6D6C4A5A6D6DEB
1FF86D01E0EB7FF06D9039FC03FFE0023FB61280020F92C8FC020314FC020014E0DB0FFE
C9FC427B79F851>I<913803FFF8023FEBFFC049B612FC010FEDFF804916F0017F16FC90
B9FC000318C04818E05A4818C09138F8003F480180010714804848C8FC01F8031F130049
15074848ED01FE49ED007E49161C95C7FC90CCFCA35AA2127EA3123EA2123F6C147F3A0F
800FFFC0027F7FD807C1B57EEA03E76CB67E7E7F90B6FC5AEA03E7D807C35C01C05C260F
801F5B261F00035B91CBFC5A123E127EA412FEA37EA219406D17E01801F003C06D16076C
6CEE1F80183F6DEEFF006C6C5D01FEED07FE6C6C153F6C01E049B45A02FE011F5B6C90B7
5A6C5F6C5F6C5F6D93C7FC011F5D6D15F801035D010015C0021F49C8FC020113E03B5279
CD4A>I<DA1F804AB47EDA7FC0020F13E04A6C023F13F8496D4A7F499338FFF9FF496D49
9038803F80943A03FE000FC049DB07F86D7E49494A1303494B486D7E49494A6D7E4B011F
157C90B5C75B02FC4AC87E485B4849023E153F4A027E81484919804A147C4890C8EE0FC0
5B5B001F04FC16E0495D5B123F491AF0A2485AA25BA21CF848C9FC1B1FA35AA21B3FA41B
7FA31BFF007E1BF062A262127F6C4F13E0626C1BC06D60626C6C4E1380A26C6C95B51200
00034E5B6D5F6C6C4D5B0000061F5B017C4D5B017E5F6D4CB55A6D6C4B5CD90FE0030F5C
D903F0033F49C7FCD901FC92B55A6DB402FB5CDA7FE090B65A91261FFF0715C0020790B7
C8FC6E5EDA007F15F0031F15C003034AC9FCDB001F13C0DC01FCCAFCAF4C7EAB4C7EA84C
7FA87090CAFCA2705AEE00F8557E79CD64>I<D93F80EF01FCD9FFE0EF07FF000301F805
1F1380486D4D13C0486D5F6E94B512E0486E5D486E5D6F5D48606F4B14C0814F1480B66C
18004F13FC01806D92B5C7FC26FC001F17FC486D6C4A13F06E17C000706D4B5BC76C6D92
C8FC806F6C495A61033F4A5A82031F5D181F6F6C5C183F6F6C5CA203034A5A8203014AC9
FCA2705B0300130160A2EE7F0360A293383F87F0A2161FEF8FE017CF160F6017FFA2705B
A37090CAFCA35F1601A35F1600A31601A483A21603A6835EA9845EB17090CAFCA2705AEE
00F8536E7BCB60>I<D803F8ED3FE0D80FFE913801FFFC486C02077F486D496D7E486D49
806E017F80B591B67E6E824B816E48814B8113EFD87FC349D9FE0F1380273F83FC1FD9F8
0113C0D81F019238E0007FC74949EB3FE04D131F4BED0FF0027E91C712074B4814031AF8
4C1401147F6E49EC00FCA24C157C1A7EA24C153EA25EA21A3F1A1F5EA393C9FCA55DA314
7F5DA414FFA24B163FA55B5DA41A7FA25B5DA41AFFA25B5DA461A25D6D90C9FC6D5AEB00
7C91CA5AA761A761AA61AFF10FFEA2F107FCF101F0487D7ACD56>I<EAFFF8A75BAB5BA5
127FA65BAB5BAB90C8FCA41404140E140F1580EB801F003F14C0EBC03F9038F0FFE090B5
FCA47EA215C07EA26C14806C14005C6C5B6C6C5AEB1FE01B4E77CB2B>I<EF07FCEF3FFF
94B512C04C14F0933903FC0FF8933907F003FC93390FC001FE4C486C7E94C76C7E043E6E
7E047E81047C141F04FC814C6E7EA20301824C140786A203036F7E5E878587A3737FA387
821501747EA28215008287167EA282706C143F87707E707E707E01FF6E7E000301E06D7E
4801F8147F4801FE6E7E261F83FFDA1FE080D83F016D6D7ED83E006DEB03FC6E6C6DB4FC
007E6E9038007FC0007C6EEC3FF0023FED0FFE6F913803FFBF00FC050090B5FC486E151F
021F160719006F043F13E01CFF1D80A2F43F0099C7FCA7C761A8631A7FA463A5505AA363
A34F5BA36E60705C98C8FCA24F5A80705D190F6E5F826E4C5A705D6E163F6F6C5D6F6C4A
5A6F6C4AC9FC6F6C495A6F9038C003FC6F9038F80FF8030090B55A043F14C0040791CAFC
9338007FFC597C7DF962>I<D803FEF007C0260FFFC0EF1FF0486DEF3FF84813F8486DEF
7FFC6E17FFB65E6F5D616F4B13F86F5D01E719F0D87FC04D13E0273F803FF04B13C0261F
001F93B51280C76C6C4A14004E5B02075F02034B5B4E5B6F4A5B02014B5B4E5B97C7FC02
004B5A4D5B4D5B4D5B4D5B61037C495B5F5F94B5C8FC5E5EA24C13DF4C5B4C133F9238FC
3FFE93387FFC3EEEFFF803F913F003FB13E092B512C0A2178017004A49137E5E5E4A5B4A
157F4A5B4A5B4A497F4A90C7FC4A5A4983495B495B494981495B49498149706C136090B5
48EE01F84891C89038FC03FC484992390FFE07FE48499338FFCFFF484994B5FC48835C48
49815C4A6F14FE91CAFC497113FC6C487113F8070F13F06C487113E0D803E00500138050
527BCD5B>I<EA0FFE383FFF804813E080B57E808080816C80817E000F80C7FCEC3FF86E
7E14076E7E1401A26E7E8182153F151F82150F821507A26F7EA36F7EA3150082167CA216
7EA216FEA24B7EA34B7FA35D83A25D835DA34B7FA34B7F16FC15FF8316F84A147CEEF07E
5C173EEEE03F5C834A01C07FA216804A6E7EA24A1300717E4A5AA2717E4A5AA249496D7E
A2494980170084495B187E4949147F84494981A249707E92C8FC49834A6F7EA249486F7E
854849150385484982727F4849837213F04819FE4A93387FFF80481AC04A82487213E091
CAFC4884498312FF497113C06C4883CD1380F23E004B7A7BF756>I<D80F80EE01F0486C
EE07FC486C4C7E487E4E7E487EAA5BA55BA3127FA25BA5495FA2003F173FA6121FA36D5F
A2187FA56D5F18FFA2123F6D5FA25F7F003E606D5DA2137E5F7F007E4C7F6D6C5C806D6C
4A6D13706E4A6D13F8D907FC91B57E6DB4499038FDFF83DBC00701F913FF6D01FEB512F0
6D90B64814F0806E4B7E6EDB003F13E000FE6D5C6E4A6D13C0020102F06D13806E6C01C0
01031300DB0FFCC812FC92CCFCA67EA67FA47FA37FA26C7EA37FA27F6C7EA27F807E806C
7FA26C7FA27E5C7E6C5B6D5A6DCDFC4D7B79CD59>I<D80F801730D83FE01778486C17FC
6D177E487E6D173E6D173F80F11F806C7F806C7F000F7F6C19C06C7F6C7F7E6D7EA26D7F
6D173F6D7F7F6D7FA26D6D157F7F81027F1780023F16FF81141F020F5D8102074B1300A2
6E7E4E5A80180F6E6D495AA2037F143F61187F6F6C495AA24D5B031F5B4D5BA2030F495B
705A4D90C7FC0307495A17FF04E15B04E35BED03E704EF5B93B55A60A2606F91C8FC5F5F
5F5F5F5F5F94C9FC5E5E5E16E06F5A424E79CB51>I<EEFFF0031FEBFF8092B612F00203
15FC020F15FF023FD9FC0013C04A01E0EB3FE091B50080EB0FF0010349C7EA03FC49496E
7E49496E7E4901E06F7E49496F7E498490B5486F7E92C9FC4849707E48854A1607484983
48854A82481A805CA2484918C0A3484918E085A291CA5AB519F0A25BA45BA261A461A200
7F1AE061A3003F4E13C0A3001F4E1380A296B5FC6C6C19006000076100034D5B6D5E6C61
6C6D4B5B606D6C4B5B013F606D6C4B5B6D6C4AB5C7FC6D6C4A5B6D6C4A5BD900FF021F13
F0DA7FC0017F5B91263FF003B55A020FB7C8FC020315FC020015F0031F1480030001F0C9
FC4C4E79CB5B>I<010FBA12E0137F90BBFC5A5A5A5A5A5A5AA227FFE003E0C700F8C8FC
130012781220C7FCB3A81407A284A35D140FA2187CA2021F157EA3143F187FA2027F82A2
4A4891393FC001F019E049EFF007499438FC1FF896B5FC4982A25B4990C86C14F0A24982
7214E07214C04A6F1480011F711300010F715A6D48EE07F86D4893C8FC4D4D7BC958>I<
D80FF095381FFF80D83FFC60487E6D6C4D1300B57E6E4D5A6E4C5B806E4C5B7E6E4C5B6C
7F000F4E5BD800076D5D01016D5FD9007F4C5B6E7E021F4C90C7FC6E7E02074C5A810203
4B5B6E6C4A5BA26E6C4A5BA2037E4A5B814E5B70495B151F4E90C8FC6F7E4E5A6F7E4D5B
150370485B4D5B150170485BA20300495B16FCDC7C3F5B4D90C9FC167E93383EFFFEA204
3F5B8260A2705B60A24C5BA24C5BA24C90CAFC4C5AA24B5BA24B5BA25D4B7FA25D834B13
BEA24B133F83EDFFFE4A01FC7F170F4A01F87FA24AEBF007844A13E04AEBC003844A1380
717E4A1300717E4A5A844949147E495B84494981A249496E7EA249496E7E494981180749
90C87F727E494882727E484917C0487113F04A93387FFFF8484918FE737F4849821C8048
4982854849824890CA7E7314004848183F745A49F007F8517979CB60>I<ED1FFE92B512
C0020714F8021F14FE4A8091B712C0498249824982498249824982498390B97E48DB8007
7F03FCC7127F4802E0EC1FF0480280EC07F84AC812034801F86F7E02E015004849167E91
CA123E49171E4848171F49835B48481880491707A25B90CBFC4819C05AA25AA35AA2190F
A3191FA2193F1A80197F19FF607E4E1300606C5F4E5A6C177F6D16FF6D4B5B6D1507D8F7
F0031F5B6D157FD8FBFE4AB55A26F9FF80010F5C02F8137F00F890B85A6D5F6D94C7FC6D
5E6C6C5E6D5E6D5E6D5E6D5E023F92C8FC6C6D5C020714F8020014C0DB1FFEC9FC6C91CB
FCA47FA46C7EA37FA37FA37F123FA27FA27FA2121F7FA3807E80A27E80A26C7FA36C5BA2
6C5B6D5A6DCCFC427979CB51>I<047FB812F80307B9FC153F4ABAFC1407141F5C91BBFC
5B5B5B011FDAC00713C74949C79038E0000703F0DA1FF890C7FC4901C0EC07FC90B5C86C
7E4801FC923800FF804849707E4A707E4849707E4849160F4A834890CA6C7E737E5B4848
717EA24848717FA28749187FA200FF865BA21A3F87A51A7FA3127F7F1AFFA263123F6D5F
121F4F5B7F000F60636C6C5F000397C7FC6D5F6C4E5A6C6D5F017F177F6D6C4C5A6E4B5B
6D6C4B5BD907F84B5B6D6C4B5B6D6C033F90C8FC6D6C6CECFFFEDA3FE0010313F8DA1FFC
011F5B912607FFF7B512C0020190B6C9FCDA003F14FC030714E09226007FFECAFC554C79
C962>I<013FB912C090BAFC5A5A5A5A5A5AA25AA228FFC00003F0C9FC48C7FC1278C8FC
B3A71501AB82A482A382150070EB03E01780EFC00FEFF03F70B5FCA382A28261705C8270
91C7FC705B7013F8EF1FE0424C7BC94F>I<EA0F80D83FC0EE01C0486C4C7E486C837F72
7E180085197EA2007F84A26C6CEF1F80A2190F001F19C0A2F107E0120FA21AF019031207
1AF8A4000319FC1901A41903000119FEA45BA21907A4190FA3191FA30000F03FFCA2197F
A219FF017C18F860A2013C4C13F0133E606D4C13E0A26D6C4B13C0606D6C4B138095B5FC
6D6C4A14006D6C4A5B6D6C4A5B6E141F027E4A5B6E91B55A91261FC0035C91260FFC3F5C
6EB75A02014BC7FC6E5D033F14F0030F14C0030391C8FC9238003FF0475179CE56>I<03
3017180378173C03F8177E4A6C17FF4A6C844A6C717E4A727E4A6D707E4A727E4A90CA6C
7E4A48844949717E4949717F49498349874B727E4949727E49498592CC121F4948737E01
FF874A737E485B487513804A1BC04849851EE0485B7613F0485B1EF891CE127F5A49047E
17FC18FF007F4C6D153F1EFE494B7FA300FFF41FFF5BA4715BA67190C9FC6D63A2007F1D
FE187E6D1B7F183C6C6C047EEEFFFCA26E03FF5D6C1DF86E4A6D5C6E616C932603E7C016
F06E03C35D6C6D02076D4A13E06C6D91260F81F04A13C002FF4AC66C91B5FC6C02C0013E
017C010314806C02F001FC013F010F14006D9026FE03F890261FC07F5B6D90B5486DB65A
6D4B6D5D6D4B6D5D6D4B6D5D6D4AC86C5C010002F8031F91C7FC023F01E0030713FC0207
90CA13E068507BCD73>119 D<D803F8EE01F0486CEE1FFC486CEEFFFE486C150F486D02
7F7F0407B6FC167F030FB7FC91B9FC617E616C18F00003029F1580C6D9E03F02F8C7FC90
C748148092B500FCC8FC4A14C04A49C9FC4A13F04A13804A48CAFC15F04A5AEC7F8092CB
FC14FE5C5C495AA25C1303A25CA7801301806D7E14FEDA7F80131F913A3FF803FFC06EB6
7E14070201816E7E150F153F92B6FC4A5D14074A5D023F92C8FC4A14F891B612C04902FC
C9FC010714E04991CAFC4913F84913C092CBFCEB7FFCEBFFF04813C04890CCFC5BEA07F8
485A5B485A5B90CDFC5A123E127E127CA35AA97EA37E127E127FA27F6C7E7F7F6C7E7F6C
B4FC14C06C13F06C13FEECFFE06C91B512C06C16FF6D16E06D16FC6D16FF6D17C06D8301
01836D83023F82020F82020182EC001F92C8148018019538003FC0191F190F1907A3190F
A2193FF1FF80181F040FB612005E4C5C4C5C616119C096C7FC7013FC7013E0DC0FFCC8FC
429479FB51>I<EE01FC4C7E4C7E4C7FAA7090CAFCAF705AB1017E6E5A01FF1938486D18
7C487F1B7E487F87A25A4AF01F805C4890C7FC1CC05B4848190F491AE0A25B5B127F491A
F0A25BA390C8FC486F4816F8A25AA21B1FA35AA21B3FA41B7FA3007CF2FFF0A262127EA2
003E4F13E0A2626C4F13C0A2626C6C1A80626C6C4E1300A26C6C4E5A616C6C4D5BA26C6C
4D5B017C4D5B616D057F5B6D94B55A6D6C4B5C6D6C4B91C7FC6D6C030F5BD901F8033F5B
6D6C92B55A027F02FB5CDA3FE090B65A91261FFC015D0207B8C8FC6E5E020016F8033F15
E0030792C9FC030014F8040F1380DC01FCCAFCAF4C7EAB4C7EA84C7FA87090CAFCA2705A
EE00F855AC79FB64>I<D803F8EE01F0486CEE07FC486C4C7E486C163F486D4B7E4DB5FC
17075F173F94B55A16036E010F5C6C037F14F0DAF003B65A91B812806C95C7FC6C5F6C17
F86C6F5B6C02F8B55A011F0101148090C74891C8FC4B5B4B13F84B5B4B5B4B138092B5C9
FC4A5B4A5B4A13F05E4A5B4A5B4A90CAFC5D4A5A4A5A495B5D495B495B92CBFC495A5C49
5A495A5C137F5C495A91CCFC5A5B485AA25B12075B120F5BA2485AA25BA248CDFCA3123E
127EA3127CA312FCA25AAB7EA3127C127EA3127F6C7EA27F6C7EA27F6C7E13FE6C7E806C
13E06C13F814FF6C14F06D90B512C06D15FF18E06D16FC6D16FF6D17C00101836D836E82
021F82020782020182EC001F92C8148018019538003FC0191F190F1907A3190FA2193FF1
FF80181F040FB612005E4C5C4C5C616119C096C7FC7013FC7013E0DC0FFCC8FC429479FB
51>I<EF03E0EF0FF0EF1FFCA24D7EA2177FA34D5AA24C5B60605E604C5B95C9FC5F160F
5F4C5A5F5F163F5F4C5A94CAFC167E16FE5E4B5A5EA24B5A5E5E4BCBFC150192CCFCA6DA
03FC92380FFF8091381FFF80027F13E049B56C5C496E16004980496E5C496E5D49814981
90B7147FDAFC036D5C48EBE0004890C7D83FF013FF49021F5DD807F86E7E4902075B000F
ED03FC4902015D485A496E6C5A057E5C48C9FC715A62127EEF1F8F62007C160F18DF97C7
FC00FC16074894B5FC6183A261A28361A261A25F615F6C60007C5E615F007E95C8FC5FA2
6C5E8594B5FC6C6C835E6D5C6C6C4AEBF7E06DEEE7F000074B13C76D4AEBC3F8D803FE4A
D983FC133E6D4AEB01FE6C9027E001FFFE7F6CD9FC076EEBC0FE91B64814FF6D4B7F6D4B
15FC6D4B7F6D5D6D4B6D13F86D4AC76C13F06D4A806D6C01F06E13E0021F01C06E13C0DA
03FEC9EA7F004F7B79F856>136 D<F00F80F01FE04E7E4E7EA24E7EA34D5BA24D5BA261
4D5B614D90C7FCA2604D5A604D5AA2604D5A604DC8FCA25F4C5A5FA24C5A5F4C5A5FA24C
C9FC160E93CAFCA5D803F8ED3FE0D80FFE913801FFFC486C02077F486D496D7E486D4980
6E017F80B591B67E6E824B816E48814B8113EFD87FC349D9FE0F1380273F83FC1FD9F801
13C0D81F019238E0007FC74949EB3FE04D131F4BED0FF0027E91C712074B4814031AF84C
1401147F6E49EC00FCA24C157C1A7EA24C153EA25EA21A3F1A1F5EA393C9FCA55DA3147F
5DA414FFA24B163FA55B5DA41A7FA25B5DA41AFFA25B5DA461A25D6D90C9FC6D5AEB007C
91CA5AA761A761AA61AFF10FFEA2F107FCF101F048A87AF856>160
D<F107E04F7E4F7E4F7E86A2197FA219FF62A24E5B624E5B62A24E5B97CAFC4E5A61A24E
5A614E5A61A24E5A96CBFC187E18FE604D5A60601703604D5A95CCFC94CDFCA503301718
0378173C03F8177E4A6C17FF4A6C844A6C717E4A727E4A6D707E4A727E4A90CA6C7E4A48
844949717E4949717F49498349874B727E4949727E49498592CC121F4948737E01FF874A
737E485B487513804A1BC04849851EE0485B7613F0485B1EF891CE127F5A49047E17FC18
FF007F4C6D153F1EFE494B7FA300FFF41FFF5BA4715BA67190C9FC6D63A2007F1DFE187E
6D1B7F183C6C6C047EEEFFFCA26E03FF5D6C1DF86E4A6D5C6E616C932603E7C016F06E03
C35D6C6D02076D4A13E06C6D91260F81F04A13C002FF4AC66C91B5FC6C02C0013E017C01
0314806C02F001FC013F010F14006D9026FE03F890261FC07F5B6D90B5486DB65A6D4B6D
5D6D4B6D5D6D4B6D5D6D4AC86C5C010002F8031F91C7FC023F01E0030713FC020790CA13
E0687B7BF873>184 D<14F8EB03FE80491380A25BA25BA34913005C495AA25C495A5C5A
5C5C4890C7FC5B12075B5B485A5B121F5B5B48C8FC123E127E127C12785A5AA21240C9FC
A6EAFFF8A75BAB5BA5127FA65BAB5BAB90C8FCA41404140E140F1580EB801F003F14C0EB
C03F9038F0FFE090B5FCA47EA215C07EA26C14806C14005C6C5B6C6C5AEB1FE01B7B77F8
2B>208 D<EE01F0EE07FC834C7EA25E844C90C8FCA34C5A5F16FF5F5F4B5B5F5D5F94C9
FC4B5A5E150F5E5E4B5A5E153F5E93CAFC157E157C15FC5D5D4A5AA25D91CCFCA4EA0F80
D83FC0EE01C0486C4C7E486C837F727E180085197EA2007F84A26C6CEF1F80A2190F001F
19C0A2F107E0120FA21AF0190312071AF8A4000319FC1901A41903000119FEA45BA21907
A4190FA3191FA30000F03FFCA2197FA219FF017C18F860A2013C4C13F0133E606D4C13E0
A26D6C4B13C0606D6C4B138095B5FC6D6C4A14006D6C4A5B6D6C4A5B6E141F027E4A5B6E
91B55A91261FC0035C91260FFC3F5C6EB75A02014BC7FC6E5D033F14F0030F14C0030391
C8FC9238003FF0477B79F856>212 D<EE01F0EE07FC834C7EA25EA25EA34C5A5F4C5AA2
5F4B5B5F5D5F94C8FC4B5A5E150F5E5E4B5A5E153F5E93C9FC157E157C15FC5D5D4A5A5D
A26E5A92CAFCA4913803FFF8023FEBFFC049B612FC010FEDFF804916F0017F16FC90B9FC
000318C04818E05A4818C09138F8003F480180010714804848C8FC01F8031F1300491507
4848ED01FE49ED007E49161C95C7FC90CCFCA35AA2127EA3123EA2123F6C147F3A0F800F
FFC0027F7FD807C1B57EEA03E76CB67E7E7F90B6FC5AEA03E7D807C35C01C05C260F801F
5B261F00035B91CBFC5A123E127EA412FEA37EA219406D17E01801F003C06D16076C6CEE
1F80183F6DEEFF006C6C5D01FEED07FE6C6C153F6C01E049B45A02FE011F5B6C90B75A6C
5F6C5F6C5F6D93C7FC011F5D6D15F801035D010015C0021F49C8FC020113E03B7D79F84A
>232 D<EF01F84D7E4D7E4D7E85A25FA25F96C8FCA24D5A604D5A60A24C5B604C5B95C9
FCA24C5A5F4C5A5FA24C5A5F5F163F94CAFC167E167C167816F85E4B5A5E92CCFCA7EEFF
F0031FEBFF8092B612F0020315FC020F15FF023FD9FC0013C04A01E0EB3FE091B50080EB
0FF0010349C7EA03FC49496E7E49496E7E4901E06F7E49496F7E498490B5486F7E92C9FC
4849707E48854A160748498348854A82481A805CA2484918C0A3484918E085A291CA5AB5
19F0A25BA45BA261A461A2007F1AE061A3003F4E13C0A3001F4E1380A296B5FC6C6C1900
6000076100034D5B6D5E6C616C6D4B5B606D6C4B5B013F606D6C4B5B6D6C4AB5C7FC6D6C
4A5B6D6C4A5BD900FF021F13F0DA7FC0017F5B91263FF003B55A020FB7C8FC020315FC02
0015F0031F1480030001F0C9FC4C7B79F85B>236 D<D803F0157ED80FFC913801FF8048
B4020713C0486D4913E04817F06E5BB516F8A66C17F04A7F6C17E06C90C76C13C0D80FFC
02011380D803F09138007E00CCFCAE91380FFF80A793C8FCAB5DA51407A65DAB5DAB5DA4
174017E08383EDF801020380EDFC039238FF0FFE16FFA480A25F80A26F5B6F5B5F6F5B03
075BDB01FEC7FC356E8BEB2B>240 D E
%EndDVIPSBitmapFont
/Fm 145[86 3[48 2[86 86 5[105 115 115 2[115 32[115 96
96 1[0 3[115 5[172 2[172 8[172 11[134 2[134 1[86 13[48
134{}21 172.188 /CMSY10 rf
%DVIPSBitmapFont: Fn grxn1200 24.888 55
/Fn 55 237 df[<49B4FC4913E0010F7F81497F497F815B1680A390B6FCA4481500A25D
5A5D5D5D485C5D5D92C7FC485B5C5C5C485B5C5C4890C8FC5B5B5B485A5B5B5B48C9FC5A
127C1218>33 45 123 273 39 39 D<EB1FE0EBFFFC00037F486D7E488048804880A248
80A281B6FC81A281A416807EA37EA27E7E6C14BF6C143FC613FCEB1FE090C7FC157F1600
A55D5DA214015DA214035D1407A24A5AA24A5AA24A5A147F5D4AC7FC5B495A5C1307495A
495A495AEBFFC0485B4890C8FC485A5B6C5A6C5A6C5A21466F9D41>44
D<BA12F0B3A23C147DB74D>I<EB1FE0EB7FF83801FFFE0007EBFF804814C04814E0A248
14F0A24814F8A2B612FCA86C14F8A26C14F0A26C14E0A26C14C06C14800001EBFE003800
7FF8EB1FE090C8FCB3AEEB1FE0EB7FF83801FFFE0007EBFF804814C04814E0A24814F0A2
4814F8A2B612FCA86C14F8A26C14F0A26C14E0A26C14C06C14800001EBFE0038007FF8EB
1FE01E5C6FDB41>58 D<EB1FE0EB7FF83801FFFE0007EBFF804814C04814E0A24814F0A2
4814F8A2B612FCA86C14F8A26C14F0A26C14E0A26C14C06C14800001EBFE0038007FF8EB
1FE090C8FCB3AEEB1FE0EBFFF8000313FE487F4814804814C05A15E04814F0A215F8B6FC
A215FCA515FE7EA37EA27E7E7E7EC613FCEB1FE090C7FCA2140115FCA4140315F8A31407
15F0A2140F15E0141F15C0143FA2EC7F80A2ECFF005B5C495A13075C130F495A495A495A
13FF485B4890C7FC485A5B6C5A6C5A6C5A1F846FDB41>63 D[<F31FE0F37FF8A2517EA2
507FA3507FA25080A35080A25080A35080A25080A397B67EA24F81A34F81A24F82A34F82
A24F82A21AFBDF3FF981A2DF7FF1811AF06207FF6D80A24E01C081871A804E6E80A24E01
00828761060F6E81A24E48838761063F6E81A24E4883876106FF6F80A24D498388614D70
80A24D90C8FC768160050F7081A260051F708160053F7081A260057F70816005FF7180A2
604C7280604C7280A295CAFC4C72815F040F7281A294BDFC4C88A24C88A34C88A293BE7E
05E0CB7E5F4B7480A24B497280A294CCFC4B7481A24B487381A25E031F7481A24B487381
A25E037F7481A24B487480A25E4A7680A24A497480A293CEFC4A7681A24A4875814A7E01
07B512FCB96C043FBA12FCA9>158 145 120 272 175 65 D[<BFFC1EFEF6FFE01FFCF7
FF8020F020FC20FF8DC7000392CA001F15E00B0181776C800C1F807814FF0C03818A7881
8E79808B8E8B8E8B8EA27980A4791580AB551500A4555CA26A676A676A555C9CB65AA254
5D5492C7FC545C5414F80C3F5C545C53B612800B0F4AC8FC0B7F14F80A1FB612E095BBC9
FC1FF81F801FF8F7FF8020F820FE95CBECFFC00C1F14F00C07807814FE0C006E7E798079
8079807980798079808E79158023C08B23E08C23F0A223F88CA223FCA38C23FEAB5614FC
A55614F8A39DB612F0A25515E06723C055158067551500555C555C9CB6FC545D0C075D0C
1F15C09BB75A0B0F93C7FCC212FC6921E021800EFCC8FC20F020800DF0C9FC0CFCCAFC>
143 142 120 269 165 I[<F47FC0983801FFF0517FA2517FA2517FA2517F5180A25180
A298B67EA25081A250815081A25081A25081A25082A2508297B87EA24F01EF811BCF4F01
C7811B874F0103814F83507E071F6D8162073F6E8162077F6E81624F486D814E85507F4E
6F81624E6F8197C7FC4E6F81614E486E81063F708161067F70816106FF7081614D71814D
49854F814D718196C9FC4D718160051F7181604D487181057F884E8305FF7281604C7381
604C7381604C90CB6C814C73815F041F73815F043F74815F047F74814C48894D854B7581
5F4B75815F4B758194CDFC4B487481031F8B4C86033F76815E037F76815E03FF76815E4A
4975814A8D4C874A778193CFFC4A77815D021F77815D4A487781027F78815D02FF78815D
4979815D49497781498F92D17E49798192C3FC498FA249A17EA249A17E90C5B47EA248A1
7FA248A17FA248A17FA248A17F48A17FA248A11480A248A114C0A2C5B612E0A26CA114C0
>171 145 117 272 194 68 D[<C212F8A48DA5C7000303C0C9123F1D001E1F0C03801E
001F3F8B8B1F038B8B8D8C8CA28CA28CA28C8EA28CA38CA38EA2E23FF080A67B7EA40A7F
93C8FCA41CFFA263A26363631B3F98B5FC1A0F95B8FCA99538C0000F1A001B3F1B0F8787
87A287A21C7FA3FAFFC01C3FA2571380A6571300A299CAFCA369A26AA2210FA3211F6AA2
213FA2217FA2575AA268A26868565BA268689DB5FC67555C1F0F1F3F9CB6FC1E071E7F0B
3FB7FCC35AA66AA3>138 141 120 268 153 I[<0303BC12FCA992C96C02E0CCFCB3A388
95B812F8051FEFFFC00403BA12FE041FF1FFC093BC12F803071BFF031F1CC092B6D8F87F
02E015F802030380040F14FE020FDAFC0004016E7E4A02F0716C80027F02C0061F14F091
B6C705078001034A7314FE4902F8070080494A7480494A7480494A7480494A748090B68A
4892C87280488D4B87488D484A751580A24822C04B874822E0A34822F04B88A3B620F8AA
6C22F0A36F99B6FC6C22E0A36C22C06F636C2280A26C6E5115006C696F636C696C6F505C
6D686D6E505C6D6E505C6D6E505C6D6E97B6C7FC6D02FE07035C01006E4F14F86E02C006
1F5C021F02F0067F14C06E02FC4DB65A0203DAFF80040F4AC8FC020003F893B612F8031F
91BB12C0030799C9FC03001BF8041F1AC004034FCAFCDC001F18C0050005F8CBFCDE007F
02F0CCFC64B3A30303BC12FCA9>141 142 115 269 168 I[<C112E0A48CA5C7000303C0
C8123F1C01F4001F0B07801D01777E8A1E0F8A8AA2787F8AA21F7FA21F3FA21F1FA28C1F
0FA31F07A48C8BA7791380A49CC8FCB3B3B3B3ABBC12F8A9>121
141 120 268 140 I[<BC0207BB12F8A9C7000303C0CC001F4AC8FCB3B3B395BEFCA906
C0CC121FB3B3B3A6BC0207BB12F8A9>165 142 120 269 182 I[<BC12C0A9C7000103E0
C8FCB3B3B3B3B3B3B0BC12C0A9>74 142 122 269 87 I[<97381FFFFE071FB612FE4EB8
12E0061F17FE4DBA12E0050719F8053F19FF94B626FC000F15C004030380D9007F14F004
0F02F8C8000714FC043F02C0030014FF93B6CA003F14C04B02FC050F80030702F0050314
F84B4A7180033F0280716C13FF4B91CC6C8092B500FC070F804A4A73804A4A73804A4A73
804A4A73804A4A747F4A91CE6C7F4A8C91B5487580494A7580498D4C87494A7580498D4C
87498D494A7580A2494A7680A290B6D06C80A2488F4B89488FA24B89488FA2488F4B89A2
488FA34B89488FDD7FE0943801FF80A348A11280A44B91BB7FA3B622C0B36CA11280A206
E0CA1201A26F65A36CA11200A294CFFCA26C6B6F65A36C6BA26F656C6BA26C6E535CA36C
6B6F656C6B70646D6AA26D6E99B6C7FC6D6970636D696D6E515C70636D696D6E515C6D6E
515CA26E6D515C6E6E5091C8FC6E6E97B55A6E6E4F5C6E6E4F5C6E6E4F5C6E6E4F5C6E6C
6D4F14806F6D6C067F91C9FC6F6E95B55A030702F0050314F86F02FC050F5C030002FF05
3F14C0043F02C093B6CAFC7002F803075C040702FF033F14F8040103FC010FB612E0DC00
3F91B9CBFC050F19FC050119E0DD003F95CCFC060317F0DE001F4BCDFCDF001F49CEFC>
154 146 115 271 181 I[<BC0407B9FCA9C7000303C0CC000703E0C7FCE6001F01F8C8
FC7B13E05713805790C9FCF9FFFE565B565B565B565B5613805690CAFCF8FFFE555B555B
555B555B5513805590CBFCF7FFFE545B545B545B545B5413800C7F90CCFC545A535B535B
535B535B5313800B7F90CDFC535A525B525B525B525B5213800A7F90CEFC525A515B515B
515B515B511380097F7F98B5FC508050805080625080087F8097B7FC614F824F82614F82
077F8296B87E06C113FD06C301F98106C701F08106CFD9C07F8006DF138095B5486C814F
6D814F7F4F834F6D8107C06D814F7F96C7824E6E814E6F80604E6F8106C06F817681A276
817681888C76817780A2778177817781A277817781898D77817880A2788178817881A278
8178818A8E788179808B8F79817981A2798179818B8F79817A808C5615C00D03B712F0BC
033FBA12E0A9>163 142 120 269 182 I[<F207F8F21FFEA2507EA3507FA397B57EA24F
80A34F80A34F80A24F80A34F80A34F80A24F81A396B77EA34E82A24E82A34E82A261060F
82A24E486C80A219F8063F6D80A24F7E067F83A24F7E06FF8319C04D6E81A219804D6E81
A24F7E4D8460050F6E81A260051F6F80A24E80053F8460057F6F81A26005FF6F81A24E80
4C86A24C496E81A295C8FC4C7081A24D81040F86A24C487080A25F043F7180A24D82047F
87A24D8204FF875F4B7281A25F4B7281A294CA7E4B885E030F7281A25E031F7380A24C84
033F885E037F7381A25E03FF7381A24C844A8AA24A497281A293CCFC4A7481A24B85020F
8AA24A487480A25D023F7580A24A7E010FB500F07381B800FE93BB12C0A9>146
145 120 272 163 I[<B900C00C7FB812E006F053B9FC7265A37265A27265A2C700036F
5303F8C8FCA273F43FEFA304BF6EF47FCFA2049F6EF4FF8FA2048F6E51130FA304876EF3
03FEA204836EF307FCA204816EF30FF8A204806EF31FF0A3716EF23FE0A2716EF27FC0A2
716EF2FF80A3716E4F1300A2716E4F5AA2716E4F5AA3716E4F5AA2716E4F5AA2726E4E5A
A2726E4E5AA3726E4E5AA2726E4D90C7FCA2726E4D5AA3726E4D5AA2726E4D5AA2726E4D
5AA2736E4C5AA3736E4C5AA2736E4C5AA2736E4B90C8FCA3736E4B5AA2736E4B5AA2736E
4B5AA2736E4B5AA3746E4A5AA2746E4A5AA2746E4A5AA3746E4990C9FCA2746E495AA274
6E495AA2746E495AA3746E495AA2756E485AA2756E485AA3756E485AA27502F190CAFCA2
75ECFBFEA375ECFFFCA2755DA2755DA2765CA3765CA2765CA27691CBFCA34A6D715B49B6
FCB900FE6F490303BB12E0A2765BA2765BA3775AF51F80>203 142
120 269 220 I[<B900E00603B912F884848484A2848585C700037094C7000702FCC7FC
E7001F90C8FC73745A858585A2858604BF81049F81A2048F810487810483810481818616
807181718171817181A27181718171817181A27281728172817281A27281728172817281
89857381738173817381A27381738173817481A27481748174817481A274817481748175
81A275817581758175818B877581758176817681A27681768176817681A2768176817715
807715C0A27715E07715F07715F87715FC21FE897715FF78158F7815CF7815EFA27815FF
8A8A8AA28A8B8B8BA28B8B8B8BA28B8C8C8C8CA28C8C8C8CA28D8D8D8DA24A6D8849B688
B900FE868DA2227F223F221F220FA27C5A>165 142 120 269 182
I[<97B512F0077FECFFE00607B712FE067FEEFFE00503B912FC051FF0FF80057F19E004
03BB12FC040F9226E0007F14FF043F02FCC7000315C04C02E0DA007F804BB60080031F14
F8030702FCC9000314FE4B4A70804B02E0706C80037F0280051F14E092B6CB6C804A4A72
804A4A72804A02F00600804A4A737F4A4A73804A8B4A4A738091B6CD6C80494A7480A249
4A7480494A7480498C4C86498D4C87498D494A7580A290B68B4C87488EA24892CF6C80A3
488E4B88A2488EA3484A761580A34823C0A5484A7615E0A7B621F0B36C23E0A26F64A56C
23C0A46F646C2380A36C23006F64A26C6AA270636C6AA26C6A70636C6A70636D69A26D6E
98B65AA26D6E505DA26D6E5092C7FC6D6870626D6E505C6D686D6F4F5C6E6E4F5C6E6E4F
5CA26E6E96B65A6E6E4E92C8FC6E6E4E5C020102FF060F14F86E6F4D5C6F6E4D5C6F02F0
94B65A030F6E4C92C9FC6F02FE04075C03016E6C031F14F86F03F092B65A043F02FE0207
15C0040FDAFFF090B7CAFC040392B812FC04001AF0051F198005074ECBFCDD007F17E006
0F94CCFCDE007F15E0070002F0CDFC>148 146 115 271 175 I[<C5B512F8A9C7000303
C0CC001F4AC8FCB3B3B3B3B3B3AFBC0207BB12F8A9>165 141 120
268 182 I[<001FBB4ABAFCA9C700014BCB6C4AC9FC6E6F060091CAFC6F6FF03FFC207F
6F6F4E5A6F6F616F6F4D5B676F6F616F6F4D5B5590CBFC6F6F5F6F6F6070505A74167F70
6F4C5A706F5F545B706F5D706F4B5B68706F4B90CCFC706F5D704F5A745E716F4A5A716F
14FF535B716F5D716F495B65716F5D716F4990CDFC714D5A75133F716F5C726F485A1DFF
7203C15B7203E15B7203E35B1CF77292B55A7294CEFC6584725E65735D85735DA2738173
81A273817381A273817481868A74817481A250818A62508197B8FC8B614F834F01DF811B
9F4F010F814F6D81507EDF3FFC824F486C8107FF6D81624E496D814E6F814E5B506D814E
90C76C814E814E48844F6E814E486E8118FF4D496E814F6F814D49814D874F6F814D90C9
6C814D5A053F71814E70814D5A05FF71814C4970814E834C49874C73814C49718195CBFC
4C487281043F73814C5A4D72814C4872814B864B49884D73814B4973815D94CD6C814B48
74814B488692B58A027F02FE7381BA6C0307BB12C0A9>162 142
122 269 175 I[<003FC212FE5AC3FCA28EA37EA26C03F8CB121F6C6FF0001F6C6F1900
70081F15806C7019036C1E006C701A3F6C701A0F71866D6F866D8A6D6F7414C06D6F8771
876D826D8B6D70866D8272866E816E7813E06E8172866E81806E70856E82856E70F27FF0
816F816F6F1A3F856F81816F826F70F11FF8866F8282706F96C7FC867081827081708287
7082827181718187718183718171828871828372817281A28484725D64725D725D7292CD
FC735B1BF8735B735B735B4F5B4F90CEFC4F5A4F5A06035B4E5B4E49F11FF84E5B4E90CD
FC4E5A4E48F23FF04D5B4D5B4D5B4D5B4D491A7F4D90CEFCEFFFFE4C5B4C49F3FFE04C13
E04C5B4C49624C90CEFC4C48634C5A4B49634B5B4B495113C0031F5B4B49634B90CF5A4B
5A4A01F8644A4999B5FC4A49634A49634A495114804A90CF5A4A481C3F4A4899B6FC0103
491B0349491B1F494998B7FC49491A1F4990CD001FB8FC4990C1120090C3FC5A5A5A5A5A
5A5AC35AA27E7E>141 142 115 269 168 83 D[<000FC312F8A6488EA304E0C7001F4A
C7120303FCC8F0001F03E01C0303801C004AC91A3F02F81E0F4A8A4A8A4A8A4849787FA2
91CA1B7F49203FA2221F5BA249200FA4492007007F8EA4498CA848487A1380A6CC98C8FC
B3B3B3B3AA030FBD12FCA9>145 140 120 267 162 I[<DB7FF8983807FF800207B56C08
7F13F8023F02F00703B6FC91B600FE071F15C001036F6C067F15F04904E04DB77E49704D
82013F04FC050F16FF49704D8390B94D8348724C837393B9FC48724B8448724B8448724B
84735D48724B84735D488F745C7491BBFC48A112809126E000076F499238F8000149C86F
4903C0EB001F01F8033F97C812074848030F6E4902FC6F13C0496F4F8105016E4914E049
6F4F81726D495C7295CAFC726D495B6C48704DEF7F80CB6F4896C7FC725F725F75B5FC72
5FA27202E15CA2735E1BF37393CDFCA2735D98B5FCA2735DA4735DA5735DA6735DB3B3B3
B2040FBC12FCA9>154 144 115 271 181 I<DB07FF0407B512C0037F01F04B804AB512
FC020714FF021F6F5C027F03E05F91B77E49705C0107705F498249705C9BC7FC49834971
90B6FC90B95E8548725A654818F86248DAF00102FC5D92C7123F4801F8020F6D5A02E002
035F48496E6D5A4A8091C9003F018F5C4848189F49705E7213DF497090B6FC007F715E5B
847293C8FC5B735C12FF85644983A2648564A26461A24F5CA24F5CA296B6C9FC7F4E5CA2
007F4D5C606D6160A26D5E003F4D806D5E876D93B7FC6C6C4BF001FE6E4A70EB03FF6E4A
826C6D4A8202F8023F705B6C01FF4A02FB01FC5BDBF003B69138FF807F6C91B800F191B6
FC08E116FE6C19C0A26C4F7E080016FC6D4D7F6D4D7F6D4D17F84F7F6D4D6D15F06D4D17
E0010194C77E6D4C6E15C06E03F86E1580021F4B6F1400020703C06F5B020192C9000F13
F86E6C01F8040313E00307018004001380705E76DC74>97 D<96380FFFC0060FB512F04D
B612FC051F8194B8FC1607041F178093B9FC030318C0150F153F92BAFC5C14075C023F19
805C91BB12005B496149614919F04919C04904E0C9FC490380CAFC90B600E0CBFC03FCCC
FC4814E04891CDFC14FC4813F05C485B91CEFC485A5B123F5B5B127F5BA312FF5BA97FA3
7FA37F6C7E7FA27F6C7F8014F06C7F14FE6C6D7E15E06C14FCEDFFE06C92B512E06CEFFF
8019F86C18FF6D18E06D18F86D18FE866D19C00103856D856D856E84021F848002038414
00031F18801503ED003F93C8000F14C0F1001F1A0186A262621A3F063FB6FC0503B7FC4D
16805F4D16005F635F6363A263631B807192C7FC1AFC7114F07114C07191C8FC7113F052
7976DC67>99 D[<147C90380FFFF8013FEBFF8090B612F84815FF4816E04816FC17FF48
17E018F84817FF19C0D9F81F16F0003F010116FE9026F0003F6F7E030716E0030116F8DB
003F15FE4902076F7E040116F0706C15FC170F001F160317006D161F1807000F17016D70
7E0007181F6D1703000318006C6C183F6D180F6C6D17036D6C17006E181C6D6C18046D6C
95C8FC6D7E6DB4FC6D7F6D13E06D7FEC7FFC6EB4FC6E13C002077F6E13F86E13FE6E6D7E
033F13F06F13FC6F13FF030314C0031F14F8037F14FE4AB77E4A16E0020F16F84A16FE02
7F707E91B97E49DAF87F14F049DAE01F80494A6C80494A6C80494A6C6E7E49496D814B6D
8149496E8090B56F80484A6E804B804871804B8348718184484A6E8188488492C96C8048
848885884849828885A2B57180A285A21D8086A386A486A77E80A21D007EA2816C6362A2
6C6E60A26C6E4C5BA26C96B55A816C4E5C6C804F5C6D6D606D6D5D6D6D4B91C7FC6D6E4A
5B704A5B6D6E4A5B6D6E49B55A010002FC01075C6E9026FF803F5C6E91B75A6E4DC8FC02
075F6E17F002005F033F1680030F4BC9FC030115F0DB003F1480040101F0CAFC>89
146 118 272 110 I<0307B612F04AB812F8021FEFFFC091BA12F8010319FE130F133F5B
48BB12FC5A5A5A481AF8A25A1BF05AA2BCFC1BE09238E0001F02FCC7120102E0EC000F4A
030014C091CA121F1901499438001F8049F0030097C7FC6C5AA4003F913803FFF0033F13
FC4AB6FC001F010F81023F81000F90B7FC01F9826CB8FC847E7EA27E5A5AA2485FEA0FFB
01F95E381FF87F021F5D020792C9FC003F01005C030F13F8007F9138003FC093CBFCA412
FF6D191C1B3E1BFE6D18011A076DF00FFC1A3F6E17FF6E040313F802F0161F6C6D93B5FC
02FF150F03F849B612F06C91B9FCA36C1AE07EA26C1AC07EA27E6C1A80013FF0FE006D18
F80107606D188001004DC7FC023F16F002071680DA007F02F8C8FC030391C9FC4F6076DD
64>I<15FF020301C0EE1FFC020F01F04BB512C04A6D030714F04A051F14FC4A6D4B14FF
91B56C4B15C04995B77E4F82496E4A49C66C7E494D01F0EB1FFC494D01C06D7E98C7EA03
FF494D486E7F494E6E7F4F4882494A197F90B64B486F7E4C5D484B864C4A48151F4803C0
864BC85B4802F84A8415E04B1A0F484A93C97F4AC85A485B4A1D804A5E485B5C5413C04A
15074890C9FCA25B61495213E0A2485AA2665BA29BB5FCA34963A365180F6565007F1FC0
65A2656D63003F99B61280A2646C6C50150064646C6C505C640007515C6D97B6FC6C6C71
495D6C505D6E180F6C6D4E5D636D6C95B75A6D6C4D5E6D6C050793C7FCD90FFE4D5D6D6C
053F5D6D01C093B75A6D6D92B85A6D01F8626EB462021F01F096C8FC6E90BA5A02031AF8
02001AE0033F1980030F4EC9FC030318F8DB007F17C0040F4CCAFCDC007F15C0050102F0
CBFC9426000FFECCFCA34E7EAC4E7FA94E7FA795B57EA64D80A64D80AA715CA2715C725B
725BDE0FFECCFCF003F8739C76DE88>I<DA1FF0F103FEDAFFFE96381FFF8001036D6C95
B512E0010F02E0050314F0496E4D14F84902FC051F14FC496E5F90B74D14FE487093B6FC
485015FF715D48705D48826348705D637119FE48705D98B712FC48825016F87218F05016
E01F80B96C49EDFE00DA801F4FC7FC9026FC00036E4914F001F0010019C0496E6D4991C8
FC496E5F704B5B706D5D6C486E4B5BC96C5F706D5D97B55A706D92C9FC4F5B177FDD3FFF
5C4F5B8307875BA2715D19CF715D19DF96B55A8398CAFC8362A2715CA3725BA26284A262
8462A28462A37290CBFC6086A460A286A360A386A360A586A295B5FCA886A25FB3A58662
A4715CA2725B725B725B7290CBFCF003FC708B7ADC81>I<D907FCEFFFE090263FFF8003
0F13FE4901E0037F6D7E48B500F84AB612E0486E4A15F8486E020F81486E4A15FF484D82
7090B87E486F4883484C8304E0845FB76C48834D83A27048835F1E8070BA12C014F76C01
E113FD02E0DDFC0014E06C496CB700F0131F6C018005C0010713F06C496C4C7FD803FC6D
93C77ED800604D6E13F890C74C157F6F4B153FA24FED1FFC616F190F61A261A21EFE96C9
12078160A360A4605DA260A25DA260A35D1D0F60A35DA260A21D1FA25D95CAFCA41D3F92
B6FC5FA31D7FA25C5FA31DFFA25FA26E4A5EA26F5B6F5B6F5B6F90CA5AED01F892CCFCA3
64A564A564A664A664A999B5FCAF7613FCA27613F8A27613F07613E00A031380993800FE
0067997EDD74>I<007FB5FCB67EA592C8FCA65CA27EA35CA65CA65CA55CA27EA45CA65C
A591C9FCA515206C4813F815FE6F7E826F7E82826F7E157F6D8015FF02817F14F791B6FC
6C1680A77EA217007E5EA27E5E6C5D5E6D5C6D5C6D5C6D91C7FC6D13FC010113F0295E73
DC3A>I[<963801FFE0070F13FE077F6D7E96B612E0060315F8060F15FE4E6F7E4E018080
95277FFC003F7FDEFFF0010F7F4D496D7F4F6D7F4D496D7F4D90C87F8A4D486F7F4E6F7F
A24D486F7F8AA2053F707F60767F8AA28B88A28BA2768084171F8BA284050F7080A28405
0785848385717F738383727E7381727E72B483D907FF6F7F011F01F06E7F017F01FE6E13
F090B600C06D7F486F6D13FE4803F86E6C7E4803FE021F7FD9FE0F6D6E13F848486C6E01
0301FE82496C6E6DEBFF8048486C6E6D6C13F071021F13FE003F070790B7FC496C6E1401
716E7E1B0F007F7015036FEF007F49080F15F0710400EDFF807715C012FFA4F89F80F880
00A76C5AC8FC9DC7FCA967A29AB5FCA367A567A3525CA367A3525CA26F63A2725D9CC8FC
A26F62525BA26F6E4B5BA2666F6E4B5BA26F6E4B5B99B55A6F6E94C9FC6F6E4A5B706D4A
5B706D4A5B7002C0495B7002F0013F5B7002FF90B55A7092B65A04004DCAFC053F16F805
0F16E005011680DD001F4ACBFCDE007F13E0>122 145 127 271
132 I<D907FEF23F8090263FFFC0F1FFE04901F0060313F848B500FC4E7F4802FF4E7F48
6F5F486F4D7F486F5F7094B612804862486F5E705E63B76C5E63704C150098B7FC714A5D
62505D02F74D5D6C01E06E606F4C15C06CD9C01F4C5D6C496C4C92C7FC6C01006E91B65A
D803FC6D4B5DD800604D5D90C76C4B15E04F5D6F4B5D4F92C8FC4F5C96B612F86F4A5D4E
5D4E5D4E92C9FC4E5C4E5C4E5C95B65A17E1EE7FE3EEFFE794B7FCA463A2F1FE7F19FCF1
F8FF614B5D4B5D4B4B7F4B5D033F5C4B5C92B65A4A5D02074B804A5D4A5D4A92C76DEB01
F04A4AEF0FFC49B648027FEC3FFF494B6F491380494B6F15C0494B70B512E0494B16C149
4B04F114F090B7C86C90B6FC5A485D485D4C81485D5E484B814C1AE093C97E4B1BC04B82
4B1B804B826C4A7016004B715C6C4A715C92CB6C5C6C49725C6C49060314C026007FF006
0091C7FCD91FC0F10FFC6C6079DD7B>I[<EBFFF8000313FF000F14C04814F04814FC8148
8082B77E8282828282A26C81837E836C827E000382C6131F90C780153F030F7F8103017F
81707E82707FA2707F828284828284177F84173FA24D7EA34D7EA25E84A25E85A25E855E
A2855EA2855EA24C80A393B67EA25D85A25D855D18FB864B14F318F14B02E17FA206E07F
4B5CA24B6F7E18808692B6EA003FA24A834D131F4A835F190F4A834D7F4A845F4A707F5F
4A84854D815C4D6D7F91B6FC94C86C7E4985A2494A6F7E88494A8188494A83747F5E4972
7F1CFE494A6F7F1DC0494A6F14F81DFE90B648F0FF807415C04892CA15E087484A1AF087
484A1AF887484A83A2484A83A2484A837514F0485C7514E0B648847613C092CC6C13806C
98380FFE00CFEA03F8>101 144 121 270 116 I<01FEF007F02603FF80EF1FFC486DEF
7FFF486D94B57E486D4C8080484E8080484E80A280B5FCA85CA45CA25CA36C5BA24A61A3
5CA37EA291CA5AA36C63A57EA26E61A26C60A399CAFCA280615AA2808861A2804895B67E
A26E85606E73143F76ECFFC06E5D48876E4B03FF5B6F4A705A6FF1F01F01FB6D4A93B6FC
6F4A8001F901FC91B66C168001F801FF4914FE007FDBE00F14FC6E90B77F08F817006E4D
7E6E05E05E6E846E4D6C5D6E17806E4C486C5D6E4C6D5D00FF6E4B6E5C031F03E06E5C6D
01070380020F5C03014AC86C91C7FC6F6C01F8030113FC040701809238003FE093D0FCA2
7FA47FA380A480A280A27E80A280A280A26C7FA280A2816C80A281817E81816C80A26C80
827E82A26C817FA27FA26D5C7F5E7F6D91D0FC6D5B6D5B6E5AEC1FE0729876DD7E>I<01
FE193C2603FF8018FF000F13E0486D4D7F486D8580486D856E83B66C846F177F6F846F17
3F6F846F171FA26C6E84816C6F160F886C816C8112036C816C1C806D807F6D806D616D80
7F6D807F6E6E5D806E806E60806E6E92B5FC1D006E5F6E806F5E626F6D5E6F5E626F6D4A
5B81626F93B55A6F5D71495C6F5D61047F4A5C71495C705C96B65A705B060792C7FC705B
4E5C06BF5C7090B6FC6363705EA263705E98C8FC62705D62626262715C97C9FC61616161
715B6196CAFC60606018E06060053ECBFC171C595E76DC6E>I<94383FFFF0040FB612C0
047F15F80303B8FC031F17E0037F17F84AB912FE0207727E4ADBFC0080023F03E0010F13
F04A92C700037F91B600FC6E7F010303F06E6CB4FC494B6F7F494B834992C96C7F494A70
7F5E494A707F90B6488487484B84484B845E4874148093CAFC481DC05D484A1AE0A25D48
1DF0A25D481DF85DA35DB61BFCA25DA263A292CBFCA463A25CA263A26C1DF863A3636C1D
F063A26C1DE098B6FCA26C4F15C0626C1D806E5F6C1D00626C4F5C6C6E4C5CA26D4E5C6D
6D93B65A616D6D4B5D6D6D030F5D6D6D4B5D6D6D4B92C7FC01006D92B612FC6E6C02035D
6E01C0011F5D020F01FC90B712C06E90B95A02014EC8FC6E6C17F8031F17E0030394C9FC
DB007F15F8040F15C0DC003F01F0CAFC665E76DC7B>I<91BD12F0010388130F5B5B5B90
BEFC5AA25A5AA25AA25AA25AA25A66B526801FF8C801C0C9FCEBFC0013F06C5A1380001F
C7FCC8FCB3A8153F87A3157F87A203FF167F875E4AF307F875EC0FFC4A72141FA24A72EC
3FFE4A716D13FFF4E0014AF1F80F4A96B6FC4A5B91B5825B5B497216FC5B5B494A6F16F8
5B7416F0A290B67016E05E7416C07515801F006D735C93CA000F5C6D7314F04B7114C06D
070091C7FC6D49F01FF86D4995C9FC01015B6D5B020FD0FC6F6179DB77>I<D9FF80071F
B512E0000301F01CF0000F01FC61486D61486D6C1BE06F95B6FC486E1BC06F5FB66C1B80
6F4D15006F5F6F62637061705E6C65704C5C6C81515C6C6F93B6FC6C6500036F5DC66F61
D900075F02016D96C7FC6E4D5C6F6D5C6F616F6D5C6F616F6D5C6F61505C6F7F6F93B65A
715B047F60706C5B9AC8FC041F4A5C83040F4A5C715B705F617001805D6106C05D7091B6
5A18C17001E15D18E3057F93C9FC18F76371B65AA26383638363A2715D63A27192CAFC5F
625F624D5CA24D5C5F6294B6FC624C5DA24C92CBFC5E615E614C80A25E4C80A293B7FC86
5D865DA24B4A7F5DF0FC7F4B8218F84B6F7E18F04B02E07F92B6131F18C04A707E18804A
834E7E4A4A81854A4A815C4D6D7F4A844D7F4A4A81747E91B65A49854D6E7E498694C86C
7F49864C6F7F494A83497213FE4C94B512F0497215FC4C6F15FF491D804C6F16C090B65A
7515E0484B82481EF093CA7E48865D48864B83484A83487415E04B84487514C04B84B607
0714804B7214004B060013FC6CF41FF06C9776DC81>I<933807FFF093B67E030715F003
3F15FE92B87E020317E0020F17F84A83027F17FF91BA7E49854985498549854985498549
8590BC7EA24887A24887484DC66C7F95C712034804E09138007FF84CC9123F04F0160F48
0380707E03FCCA120315F04802C0717E92CCFC14FC4849854A8514C05C91CDFC5B48481B
805BA25B5B1CFF5BA24961A26390CDFC636363A25113006398B5FC1A03626D60083F5B62
6D4DB5FC6D05075C191F6D94B6FC6D04075D01FE163F6D0303B7FC02E0027F5E02FF013F
B8FC92BA5A64A264A26D97C7FC01BF61019F61018F610187616D6101C16101C0616E95C8
FCD9E01F17FC6E5F020317E06DC61780033F4BC9FC030715F0030015806D020701F0CAFC
93CDFC7FA36C7EA27FA380A280A280A26C7FA280A280A2807E80A281A26C80A281817E81
A26C80A2816C80A2827E827FA26D80A27FA26D5CA26D5CA26D91CDFC6D5B6D5B6E5AEC1F
E0599776DC6E>I<0507BB12804CBC12C0161F93BDFC1507151F157F4ABEFC1407141F5C
5C49BFFC5B5B5B5B5B5BA290B738F000074893C8ECE00704F8033F6DC7EA7F804803E003
0F01FC91C7FC048003037F484AC96C7F4B70804802F0717F4B717F484A717F4B717F4874
7F92CBFC4A727F48747F5C7580A24A87B586A28A4A858AA58AA480A26C63A56C98B5FC80
666C62A26C6D60666C62A26C6D4E5CA26C6E4D5C636C9AC8FC6D6D5F6F94B55A6D606D6D
4C5C6D6D4C5C6D4E5C6D6D4C5C6D01FF047F5C6D6C6D92B65A6E6D020392C9FC6E01F802
0F5C020701FF91B65A020191B812F06E6C18C0031F95CAFC030717FC030017F0041F1680
040103FCCBFCDC000791CCFC725D76DB84>I<0103BB12FE010F1AFF133F5B90BDFC5AA2
5A5AA25AA25AA35AA25AA2BD12FE01FCC700010180C9FC13F05B6C5A5B001FC8FCC9FCB3
A984A484A28284A2F30FF072EC1FF872143FA272EC7FFC716CEB01FFF1C003F1F01F96B6
FCA283A21CF883A37116F0A27116E0A27116C0A271168071160063725C725C060F14E072
1480060149C7FC9538003FF0585D79DB6A>I<133C48B47E000713E0486D18F0486DEF01
FC486D4D7E4819076E84B586886E717F86747F757EA2757E6C747E7E757E6C861D806C86
1DC07E7513E07EA26C7413F0A21DF87EA21C7F6D1BFC5CA3013F1BFEA41CFF1DFF131F5C
A263A3635CA263A263A263A263A2010F4F13FEA298B5FC62A201074E14FCA2626E5F0103
1BF8626E5F01011BF0626D6C94B612E0616E6C4B15C06F5D023F4C15806F5D6E6C4B1500
6E6C4B5C6F4AB6FC6E6C4A5D6E6C020F5D6E01C0013F5D6ED9F801B75A6FB95A6F606F95
C7FC030717FC6F5F030017E0043F1680040F4BC8FC040315F8DC003F1480050301F8C9FC
606277E074>I<0470F0038004F84E7E03014F7EDB07FC854B6C4E7E031F4F7E4B6C854B
6D4D6C7E92B56C854A884A6E854A6E717F4A747F4A6E717F4A6E717F4A748091B6487180
4D7180494B84494B86494B727F4992CC6C7F4C87494A737F494A854C88494A738090B648
884C85488C93CE80485C4B757F5A4B8948DE03FC824BDB0FFF84484A4B7F4F6D6F14804F
7F485C96B56C18C04B875A22E092C98063A2B67614F05CA9735BA26E64A26C724918E0A2
6F63A26F6F495D6C21C06F6F90C95AA26C6E98B612806F6F485D6F626C6E5015006F4B6C
5D6C6F4A6D4A5C04E0197F6C6F4A6D91B65A04FC91B500F013036C9226FF80016E011F5D
6CDCF00F02FF90B75A94B6009F90B8FC6D060F606D4D6C606D4D6C606D4D6C95C7FC6D94
26E0007F5E6D4D6D5E6D4D6D5E6D4CC700075E023F03F8020116C0020F03E06E6C92C8FC
020392C9000F14FC020002F8040114F0030F0180DC001F90C9FC845F75DD9B>119
D[<D90FE0EF01FCD97FFCEF1FFF496C4CB512C0486D041F80486E4AB67E486E141F486E
49B77E173F0403B87E48ECF07F92BAFCA56C63A26C637EC663011F01836090C74895C7FC
4B17FC4B17C04B04F0C8FC4B03F8C9FC06FCCAFC92B548CBFC4A14E04CCCFC4A13F016C0
4A90CDFC5D5D4A5A5DA25D141FA25DA781140F8103FCEC01FC6EB4EC3FFFDCFF7FB512C0
6E91B67E6E83806F82151F6F82150115075D153F92B8FC5C02075F5C4A5F147F91B95A49
604995C9FC4917FC4917C04904F8CAFC4993CBFC4915E004FCCCFC90B612C04802FCCDFC
15E04891CEFC4813FC14F04813C05C4848CFFC5B485AA25B127F5BA35B12FFA77FA37FA2
7F6C7EA27F7F6C13C08014F86C13FE6E7E15F06C14FEEDFFF86C92B512F8F0FFC06C18FC
6C18FF1AE06C19F86D18FE6D727E6D856D19F06D856D856D856D856E85021F850207856E
851400031F841507030084160793C8000780F1000F08017FF2003F1B0F87751380A287A6
63A2631D001B1F6398B5FC080F5B4FB5FC060FB65A183F95B75A5F645F644D5E6499C7FC
636363715D1BC07192C8FC627114F0063F13C0DE0FF8C9FC>89 188
118 272 110 I[<F007FCF01FFF4E7F4E7F95B57E4D80A24D80AA715CAA715CAA725BAB
725B14FE903803FF80010F13E0496D1A1E6F1A3F496D507E49527E8190B5884880787EA2
488A7290C9123F488AA2488A4B1A1FA2484A875D5D4802C01C8092C88414FC4813F04A1D
C05C5C91C9FC5B484870484C13E0A25B5BA34964A35B66A39BB5FCA265A365A265A2007F
5214C0A26565A26C6C511480A29AB6FC001F5115007F64000F515C6D62000766646D6200
03515C6D97B6FC6C6C4F5D6C505D6E606D6C4E5D6E60013F4F5D6D6C95B7C7FC6D6C4D5D
6D6C05075D02FF5F6D6D043F5D6D6D4C5D6D01F092B85ADA3FFC1A806EB497C8FC6E01E0
606E01FF017F5E020191B912F06E62033F1980030F4EC9FC030318F8030018E0041F94CA
FC040316F8DC003F1580050002E0CBFCDE0FFECCFCA34E7EAC4E7FA94E7FA795B57EA64D
80A64D80AA715CA2715C725B725BDE0FFECCFCF003F8>115 207
118 273 136 I[<D90FE0EF01FCD97FFCEF07FF496C051F13C0486D4D7F486E93B57E48
6E1503486E4B80191F077F80486E4AB6FC60180F183F95B7FC1703050F5E6F137F4CB85A
6CECFE1F92BA5A646C98C7FC636C1AF86C1AE06C626D96C8FC6D18FC010F60010001F016
E0DA00015E4B93C9FC4B15FC4B5D4B15E04B5D4B92CAFC92B65A4A15F8604A5D4A15804A
92CBFC4A14FC5F4A5C4A14C091B65A94CCFC495C4914F85E495C495C5E4991CDFC5D495B
5D495B5D90B55A5D4891CEFC5C485B5C5A5C5C5A5C5C5A91CFFC5B123F5BA35B127F5BA4
5B12FFA35BAB7FA36C7EA27FA27F6C7EA27F6C7F14E0806C7F14FE6E7E6C14E015F86CEC
FF8016FC6C92B512F86CEFFFC019FC6D17FF6D18E01AF86D18FE6D727E6D856D19F06D85
6D856E846E846E850207856E85020085153F030F841503DB007F83160393C8000780F100
0F08017FF2003F1B0F87751380A287A663A2631D001B1F6398B5FC080F5B4FB5FC060FB6
5A183F95B75A5F645F644D5E6499C7FC636363715D1BC07192C8FC627114F0063F13C0DE
0FF8C9FC>89 188 118 272 110 I[<F1FF80060313E04E7F4E7F4E7F864E7FA24E80A4
95B6FCA44D92CAFC62A24D5C6262624D5C6297CBFC614D5B6161614D5B6196CCFC4D5A60
60604D5A606095CDFC17FE177C171894CEFCA8DB07FF0407B512C0037F01F04B804AB512
FC020714FF021F6F5C027F03E05F91B77E49705C0107705F498249705C9BC7FC49834971
90B6FC90B95E8548725A654818F86248DAF00102FC5D92C7123F4801F8020F6D5A02E002
035F48496E6D5A4A8091C9003F018F5C4848189F49705E7213DF497090B6FC007F715E5B
847293C8FC5B735C12FF85644983A2648564A26461A24F5CA24F5CA296B6C9FC7F4E5CA2
007F4D5C606D6160A26D5E003F4D806D5E876D93B7FC6C6C4BF001FE6E4A70EB03FF6E4A
826C6D4A8202F8023F705B6C01FF4A02FB01FC5BDBF003B69138FF807F6C91B800F191B6
FC08E116FE6C19C0A26C4F7E080016FC6D4D7F6D4D7F6D4D17F84F7F6D4D6D15F06D4D17
E0010194C77E6D4C6E15C06E03F86E1580021F4B6F1400020703C06F5B020192C9000F13
F86E6C01F8040313E00307018004001380>112 147 118 273 116
136 D[<F3FF80080313E05013F8507F507F886289A26289A397B6FC65A29AC7FC616464
644F5C6464644F91C8FC63634F5B6363634F5B98C9FC62624F5A6262624F5A97CAFC197E
193C191896CBFCA7D907FCEFFFE090263FFF80030F13FE4901E0037F6D7E48B500F84AB6
12E0486E4A15F8486E020F81486E4A15FF484D827090B87E486F4883484C8304E0845FB7
6C48834D83A27048835F1E8070BA12C014F76C01E113FD02E0DDFC0014E06C496CB700F0
131F6C018005C0010713F06C496C4C7FD803FC6D93C77ED800604D6E13F890C74C157F6F
4B153FA24FED1FFC616F190F61A261A21EFE96C912078160A360A4605DA260A25DA260A3
5D1D0F60A35DA260A21D1FA25D95CAFCA41D3F92B6FC5FA31D7FA25C5FA31DFFA25FA26E
4A5EA26F5B6F5B6F5B6F90CA5AED01F892CCFCA364A564A564A664A664A999B5FCAF7613
FCA27613F8A27613F07613E00A031380993800FE00>103 205 126
273 116 160 D[<F33FE0F3FFF8507F5013FF5080A25080A25080A462A4505CA2659ACB
FC97B55A64644F5C6464644F91CCFC6363634F5B6363634F90CDFC62624F5A6262624F5A
73CEFC190696CFFCA70470F0038004F84E7E03014F7EDB07FC854B6C4E7E031F4F7E4B6C
854B6D4D6C7E92B56C854A884A6E854A6E717F4A747F4A6E717F4A6E717F4A748091B648
71804D7180494B84494B86494B727F4992CC6C7F4C87494A737F494A854C88494A738090
B648884C85488C93CE80485C4B757F5A4B8948DE03FC824BDB0FFF84484A4B7F4F6D6F14
804F7F485C96B56C18C04B875A22E092C98063A2B67614F05CA9735BA26E64A26C724918
E0A26F63A26F6F495D6C21C06F6F90C95AA26C6E98B612806F6F485D6F626C6E5015006F
4B6C5D6C6F4A6D4A5C04E0197F6C6F4A6D91B65A04FC91B500F013036C9226FF80016E01
1F5D6CDCF00F02FF90B75A94B6009F90B8FC6D060F606D4D6C606D4D6C606D4D6C95C7FC
6D9426E0007F5E6D4D6D5E6D4D6D5E6D4CC700075E023F03F8020116C0020F03E06E6C92
C8FC020392C9000F14FC020002F8040114F0030F0180DC001F90C9FC>132
147 117 273 155 184 D[<EC0FF8EC3FFE4A6C7E91B57E824980A24980A2825BA4495C
A35E495CA25E5E4991C7FC5D5D495B5D5D5D90B55A92C8FC5C5C485B5C5C14804890C9FC
5B5B485A5B5B6C5AC65A90CAFCA8007FB5FCB67EA592C8FCA65CA27EA35CA65CA65CA55C
A27EA45CA65CA591C9FCA515206C4813F815FE6F7E826F7E82826F7E157F6D8015FF0281
7F14F791B6FC6C1680A77EA217007E5EA27E5E6C5D5E6D5C6D5C6D5C6D91C7FC6D13FC01
0113F0>41 147 115 273 58 208 D[<4DB47E4D13E04D7F4D7F4D7F854D7FA24D80A494
B6FCA35E97C9FC61A24C5C6161614C5C6196CAFC604C5B6060604C5B6095CBFC4C5A5F5F
5F4C5A5F5F94CCFC16FE167C161893CDFCA4133C48B47E000713E0486D18F0486DEF01FC
486D4D7E4819076E84B586886E717F86747F757EA2757E6C747E7E757E6C861D806C861D
C07E7513E07EA26C7413F0A21DF87EA21C7F6D1BFC5CA3013F1BFEA41CFF1DFF131F5CA2
63A3635CA263A263A263A263A2010F4F13FEA298B5FC62A201074E14FCA2626E5F01031B
F8626E5F01011BF0626D6C94B612E0616E6C4B15C06F5D023F4C15806F5D6E6C4B15006E
6C4B5C6F4AB6FC6E6C4A5D6E6C020F5D6E01C0013F5D6ED9F801B75A6FB95A6F606F95C7
FC030717FC6F5F030017E0043F1680040F4BC8FC040315F8DC003F1480050301F8C9FC>
96 147 119 273 116 212 D[<4DB4FC050713C04D13F04D7F854D7FA24D7FA28694B6FC
A44C92C7FCA3614C5CA261614C5C61614C91C8FC6060604C5B6060604C90C9FC5F5F17F0
4C5A5F5F4CCAFC5E5E1678161093CBFCA70307B612F04AB812F8021FEFFFC091BA12F801
0319FE130F133F5B48BB12FC5A5A5A481AF8A25A1BF05AA2BCFC1BE09238E0001F02FCC7
120102E0EC000F4A030014C091CA121F1901499438001F8049F0030097C7FC6C5AA4003F
913803FFF0033F13FC4AB6FC001F010F81023F81000F90B7FC01F9826CB8FC847E7EA27E
5A5AA2485FEA0FFB01F95E381FF87F021F5D020792C9FC003F01005C030F13F8007F9138
003FC093CBFCA412FF6D191C1B3E1BFE6D18011A076DF00FFC1A3F6E17FF6E040313F802
F0161F6C6D93B5FC02FF150F03F849B612F06C91B9FCA36C1AE07EA26C1AC07EA27E6C1A
80013FF0FE006D18F80107606D188001004DC7FC023F16F002071680DA007F02F8C8FC03
0391C9FC>79 148 118 273 100 232 D[<F11FF0F17FFC4F7E4E6D7E4E80A24E80A24E
80A460A44E5CA263634E91C9FC626295B55A6262624D5C97CAFC61614D5B6161614D5B96
CBFC604D5A6060604D5A715A0503CCFC94CDFCA894383FFFF0040FB612C0047F15F80303
B8FC031F17E0037F17F84AB912FE0207727E4ADBFC0080023F03E0010F13F04A92C70003
7F91B600FC6E7F010303F06E6CB4FC494B6F7F494B834992C96C7F494A707F5E494A707F
90B6488487484B84484B845E4874148093CAFC481DC05D484A1AE0A25D481DF0A25D481D
F85DA35DB61BFCA25DA263A292CBFCA463A25CA263A26C1DF863A3636C1DF063A26C1DE0
98B6FCA26C4F15C0626C1D806E5F6C1D00626C4F5C6C6E4C5CA26D4E5C6D6D93B65A616D
6D4B5D6D6D030F5D6D6D4B5D6D6D4B92C7FC01006D92B612FC6E6C02035D6E01C0011F5D
020F01FC90B712C06E90B95A02014EC8FC6E6C17F8031F17E0030394C9FCDB007F15F804
0F15C0DC003F01F0CAFC>102 147 118 273 123 236 D E
%EndDVIPSBitmapFont
/Fo 216[689 689 689 689 36[{}4 172.188 /LCIRCLEW10 rf
%DVIPSBitmapFont: Fp grmn0900 18.666 22
/Fp 22 213 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A111172
902D>46 D<B800FC0307B612FCA5D8000F02C0CA1500010391CB003F13F86D497213C06D
4997C7FC1DFC651DE065525A0A7EC8FC64515A515A515A515A515A51C9FC1B7E505A505A
F207E0505A505A50CAFC1A7E624F5A4F5A4F5AF11FC04F5A077ECBFC614E5A4E5A4E5A18
0F181F4E7EF0FFF84D7F5F4D7F4D7F5F4D6C7FDD7E3F7F4D7EDC01F8804C486C7F93260F
E0077FEE1FC04CC66C7F047E6D7F5EDBFDF86D7FDBFFF06E7F4C6E7F5E4C6E7F93C86C7F
5D4B6F7F737F8587737F747FA2747F747FA2747F747F8688747F747FA2757F757FA2757F
757F757FA2757F757FA2757F8A8A8A496D86496D4D14FC010F02C0040714FFB800FC92B8
FCA5706A7BE97C>75 D<B600FC0803B612F86F62A36F62D8000FF78000D903F76D071E49
C7FC01016601006602F36D61A202F16D61A302F06D61A26F6C4E5AA36F6C4E5AA26F6C4E
5AA36F6C4E5AA26F191E83A26F6D5FA36F6D5FA26F6D5FA3706C4C5AA2706C4C5AA3706C
4C5AA2706C4CC7FCA3706D151EA2706D5DA3706D5DA2706D5DA3716C4A5AA2716C4A5AA3
716C4A5AA2716C4AC8FCA3716D131EA2716D5BA3716D5BA2716D5BA3726C485AA2726C48
5AA3726C485AA3726C48C9FCA272139EA37213FCA2725BA2497E725B497E496C705A496C
517F013F01C0507F48B500F86F48030F6D7EB700F095B812F8735AA373C8FC856A7AE992
>77 D<B600FC4CB712E08181A282D800076EDB0003ECF0000100DF007F138070DD1FFEC7
FC70715A765A02F76D715A02F37F02F1735A8202F07F6F7FA26F7F6F7FA26F7F6F7F8183
6F7F6F7FA2707F707FA2707F707F8284707F8284707F717FA2717F717FA2717F717F8385
717F717FA2727F727FA2727F727F8486727F727FA2727F731380A27313C07313E0851BF0
7313F8851BFC7313FE7313FFA27413817413C1A27413E17413F1861CF97413FD7413FFA2
8687A2878787A28787A287496C84A2496C197F496C193F497E013F01C0181F48B500F818
0FB700F01707A21C031C01765A6B6A7AE978>I<001FBE12E0A502F8C7003F01F0C77E48
01806E49020713F001FCC86C491400491B7F01E01B1F491B0F491B07A290C91803A2003E
1C01A348F400F8A400781D78A700F81D7C481D3CA5CA1900B3B3B3A84D7F4D7F0403B6FC
0203BAFCA566697AE873>84 D<DA1FF0EDFFF0EC7FFC49B5FC01076E5B496E15E0498049
6E5B496E15C090B67E60489026F01FFE15804890388003FF01FCC7FC48486E6C5A484802
3F150049141F496E6C5A48485F90C8EA07E048173F003E03035C17F0003C0301137F007C
60EE00F8007817FF05785B177C00F8167D053D5B5A173F715BA261A28396C7FC5F60173F
6C5FA20078167F6017FF007C5F5E003C5D123E5E003F836C5D6D4A137C6C6C5C6DEDFE7E
6D4A487E6C6C14FF6C6C010301F8EB800F9026FF80079038F01FE06CD9F03F01E0EBF81F
6C90B6486CB5FC17806D4B7E6D4A6D13FE6D5C6D4A6D13FC6D4A7F010102C0EC7FF86D6C
90C8EA3FF0DA1FF8ED0FC0484779C450>97 D<EF3FFC93380FFFFE93B6FC03071580153F
92B7FC1403140F143F4A160049B75A495E4992C8FC4991C9FC4913E04990CAFCEB7FF8EB
FFC04890CBFC485AEA07F85BEA0FC05B48CCFCA2123E123C127CA21278A212F85AA97EA3
7E127C127EA27E7F7F6C7E7FEA0FFC7F6C6C7E6C13F06C13FF6C91B5FC6D15F86D15FF6D
16C06D16F06D820101826D6C81021F81140191C8000F1380EF003F180F1807A2180F183F
EF03FF93B612001503604B5C606018C06F91C7FC17FC03001380395779C448>99
D<91380FFFE049B6FC010715F0013F15FE49EDFF8048B812F04817F84817FC5A4817F848
EBE0014848C7001F13F001F8140301E0020013E04848153F49ED07C090C9120194C7FC5A
A4127EA3123EA26C14F0EC1FFE6C6CB5FCD807C780EA03EF6CB6FC6C815E5AEA03EFEA07
C3D80F8091C8FC391F001FFE91CAFC123EA2127EA312FEA56C171C183C187C6D16F8007F
16016DED03F06D15076C6CED1FE06D157FD81FFE913801FFC06D6C130F6C01F890B51280
6C90B712006C5E6C5E6C5E6D5D011F15C06D5D01034AC7FCD9007F13F002071380364979
C545>101 D<D807F04AB4FCD80FFC020F13C0486C023F13F0486C4A13FC486D90B57EB5
49806E48814B816E48815D01DF4981D87F879238F87FF8273F03F07FEBC00F000C933800
03FCD80001494813014C6D7E02F149147E01008302FB49805EF10F8091B55A6E16071AC0
4C1403A293C8FCA21AE04B1501A35DA45DA314FF5DA45B5D1903A45B5DA31907A25B5DA4
190FA25B92C9FCA2191FA35C13076D5AD901F0163F90CBFCA5197FA619FFA860AE7213C0
F17F80F13F00436D7BC550>104 D<D807F8EF01F848B44D7E4801C04C7E486D4C7E486D
5EB56C5E6E5E806E93B5FC4E5B01CF6D4A5BD87F814C5B6CC64C5B000C6D6C4A5BC7003F
4B5B021F5F6E6C4A90C7FC4E5A4D5B02074A5B4D5B02035E4D5B4D5B6F4990C8FCEF7FFC
02014A5A4C5B5EA25E5E4B5A93383FFDE0EE7FF9EEFFF103E113E103E313C103E7138103
EF1303913803FFFE16FC16F816F0A216E04A13C04A01807F023F13004A5A4A5A495B4982
49491301495B494980495B4990C77F90B56F133E48496EEB807F48499338E0FF80484904
F913C048496FB5FC485B4849815C8491C96C14804982497014006C48705B6C48706C5A6C
48EF0FF04A497BC555>107 D<000FEF1F80D81FC04C7E003F4D7E486C4C7EA2487EA95B
A55BA2127FA25BA361A290CAFC6C5EA57EA2617FA35FA2617FA2003F5EA26D94C7FCA200
3D5E6D5E123C6D151FA2017C153F127C6D4B7E133F6D6C91B57E6D6C49150F6E49EBEFC0
D907F8499038CFF03FD903FE011F018FB5FC9138FFC07F6D90B6000713FE6D15FE00FC6D
4A7E6E02F014FC020F4A6C13F86EDA800013F0020149C7EA7FE09126003FF0EC1FC092CB
FCA27EA57EA47FA37FA27F127F7FA27FA26C7E7FA26C7E80807EA27E7EA26C5B6C90CCFC
137E486C79C554>109 D<D81F801603486CEE0780486C17C0486C16036D17E07F6D1601
6D17F0806C7F7E6C6D16F86C7F7E00017F807E6D6C1503133F6D7E7F6D7F18076D7F7F6D
17F06F140F147FA26E6C141F141FF03FE06E7E187F020716C018FF6E7E4D138014015F4D
13006E7E4D5A037E131F4D5AA2033E495A033F13FF4C5B4C5B6F5A4C5B4C5B5E6F4890C7
FC4C5A5F5F5FA25F6F5B5F94C8FC5E5E16F05E5E5E93C9FC3D4779C44C>I<92380FFF80
92B512F8020314FE021FECFFC04A8191B538800FF8499039FE0003FC010701F8EB00FF49
01E06E7E4949EC1FC049496E7E4948C87F01FF707E48496F7E5C48496F7E48845C48496F
1380A2484917C0A24890CAEA7FE0A3484818F0A25BA200FF19F8A25BA45B19FFA460A200
7F19F0A260A2003F4D13E0A36C6C4C13C0A2000F4D1380A26C6C4C1300606C6C5F00014D
5A6D5D6C4C5B6D6C5E6D6C020F5B6D6C4A5B6D6C4A5B6D6C91B5C7FCD901FE010313FC90
2700FF800F5B023FB612E06E5D02034AC8FC020014F8030F1380454779C454>I<013FB9
12F890BAFC5A5A5A5A5A5A5AA226FFC00FC7D80780C7FCEAFC001270C7FCB3AA5CA384A2
5CA24A81A302FE81A201016F6C133C8401037013FC01079338FF83FE7113FF130F131F4A
80013F18FC017F821AF8847213F06D486F13E07213806D48923800FE006D4893C7FC4746
7BC252>I<D81FE0943807FFC0D83FF85F487EB54D1380806E4C13006E4C5AA26E4C5A6C
7F6C6D4B5B6C4D5B380007FE01014C5B6D7E6E6C4A5B143F6E6C4A5B020F4B90C7FC6E7E
4E5A6E7E4E5A02014A5B6E7E4D5B157C4D5B153C033E495B4D5B814D90C8FC8170485A03
07495AA204C15B150304E35BA2DB01E75B93B55AA26F5CA295C9FC705AA24C5AA24B5BA2
4B5B4B5BA24B5BA24B5BA24B7F5DA292B57EA24A13F94AEBF1F0A24A13E0834AEBC078A2
4AEB807C4AEB003C173E4A5A834A5A49497F84495B717E495B717E494980495B717E4990
C7FC717E4948814948157F8548496F7E727E484916F895380FFFFE48498348496F148072
14C0484981A24890CAFC484883854848050F138073130049EF01FE4A6B79C459>I<ED7F
F0913803FFFE021FEBFFC0027F14F091B67E010315FE4981498249824982498290B87E48
4AC67F03E0130F4891C7EA03FE4801FCEC00FF02F0153F4849ED1F800280150F4890C9EA
07C013FC4848EE03E05B491601484817F018005B90CBFCA200FE18F8A25AA35AA31801A3
1803A2F007F0A2180F181F6C173F19E06C177F18FF6C4C13C017076D4B13806D153FD8F7
E04B1300D8FFF84AB5FCD8FBFE02075B26F9FF80013F5BDAF803B5FC00F890B75A6D5E6D
5E6C6C5E6D5E6D93C7FC6D5D010015F86C6D5C021F14C0020349C8FC9138007FF06C91CA
FCA37FA3127F7FA37FA37FA26C7EA37FA26C7EA37F7E80A26C7FA37EA36C5B6C90CBFC13
7E3D6B79C44C>I<0303B812FC157F4AB9FC140F143F5C49BAFC5B5B131F499039FE007F
F94901E090390FFE000390B50080D903FF90C7FC4AC87F4801F8ED3FC048496F7E4801C0
6F7E4A6F7E4890C96C7E49707E001F8449824848717E86485A193F8649171F00FF85A25B
A286190FA4191FA46C7E193FA262003F187F7F121F4F5A6C7E4E5B6C7E4E5B6C6C5E0001
96C7FC6C6C4C5A181F6D6C4B5A6D6C4B5A6D6C4B5AD907F002035BD903FC4A5B6DB4021F
90C8FC9026007FE0EBFFFE91263FFF1F13F8020F90B55A020115806E6C49C9FC030313E0
4E4579C25B>I<90B912F05A5A5A5A5A5AA25AA248C7000FC9FC12FC1270C8FCB3AB82A5
82A36F7EA282183C827013FC923803FF0317FFA381A26F5C8260705B705B04075BDC01FE
C7FC3C457BC249>I<120FD83F801638486C163C487E6D163E84A2727E727E127F6D8318
03003F841801121F851800000F84A30007187EA40003187FA51A801201A319FFA560A360
A260A20000190060A26001785F017C163FA2013C4C5A013E16FFA26D4B5B5F6D6C4A5B01
075F6E5C6D6C023F5B6D6C4A5B6E91B5FC6D6C010391C7FC027F010F5B91263FC07F5B6E
B65A020715E06E5D6E5D6E6C49C8FC031F13F803011380414979C650>I<173E177F4D7E
4C7F845EA34C5BA24C5B95C8FC5F161F5F4C5A5F5F167F5F4C5A94C9FC5E15015E4B5A5E
5E15075E4B5A93CAFC150E151E151C92CBFCA6DA1FF0EDFFF0EC7FFC49B5FC01076E5B49
6E15E04980496E5B496E15C090B67E60489026F01FFE15804890388003FF01FCC7FC4848
6E6C5A4848023F150049141F496E6C5A48485F90C8EA07E048173F003E03035C17F0003C
0301137F007C60EE00F8007817FF05785B177C00F8167D053D5B5A173F715BA261A28396
C7FC5F60173F6C5FA20078167F6017FF007C5F5E003C5D123E5E003F836C5D6D4A137C6C
6C5C6DEDFE7E6D4A487E6C6C14FF6C6C010301F8EB800F9026FF80079038F01FE06CD9F0
3F01E0EBF81F6C90B6486CB5FC17806D4B7E6D4A6D13FE6D5C6D4A6D13FC6D4A7F010102
C0EC7FF86D6C90C8EA3FF0DA1FF8ED0FC0487079ED50>136 D<1878EF01FE4D7E855FA3
5FA24D90C7FCA2604D5A604D5AA2604D5A604C90C8FCA25F4C5A5F4C5AA25F4C5A5F94C9
FC5E161E5E1638A2161093CAFCA4D807F04AB4FCD80FFC020F13C0486C023F13F0486C4A
13FC486D90B57EB549806E48814B816E48815D01DF4981D87F879238F87FF8273F03F07F
EBC00F000C93380003FCD80001494813014C6D7E02F149147E01008302FB49805EF10F80
91B55A6E16071AC04C1403A293C8FCA21AE04B1501A35DA45DA314FF5DA45B5D1903A45B
5DA31907A25B5DA4190FA25B92C9FCA2191FA35C13076D5AD901F0163F90CBFCA5197FA6
19FFA860AE7213C0F17F80F13F0043957BED50>160 D<160FEE3FC04C7E8316FFA35DA2
4B5BA25F4B5B94C9FC4B5AA25E4B5A5E4B5AA25E4B5A93CAFC15FEA25D4A5A5D5D14035D
4A5A92CBFCA2140291CCFCA3120FD83F801638486C163C487E6D163E84A2727E727E127F
6D831803003F841801121F851800000F84A30007187EA40003187FA51A801201A319FFA5
60A360A260A20000190060A26001785F017C163FA2013C4C5A013E16FFA26D4B5B5F6D6C
4A5B01075F6E5C6D6C023F5B6D6C4A5B6E91B5FC6D6C010391C7FC027F010F5B91263FC0
7F5B6EB65A020715E06E5D6E5D6E6C49C8FC031F13F803011380417079ED50>212
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 593 466 4146 7 v 593 771 7 305 v 651 662 a Fn(O)77
b(Kan\354)-5 b(nac)77 b(Sumperasmo\324)h(thc)g(An\210lushc)p
4731 771 V 593 778 4146 7 v 4735 846 73 318 v 661 846
4146 73 v 288 1283 a Fm(\017)86 b Fl(O)57 b(kan\354)l(nac)i
(sumperasmo\324)g(thc)f(an\210lushc)g(sthn)g(pro)l(t)-5
b(asiak\240)58 b(lo)-5 b(gik\240)460 1527 y(kai)57 b(th)h(lo)-5
b(gik\240)57 b(pr\270thc)h(t\210xhc.)288 1867 y Fm(\017)86
b Fl(Qr\240sei)-5 b(c)59 b(t)-5 b(ou)57 b(kan\354)l(na)h
(sumperasmo\324)h(thc)f(an\210lushc)h(se)e(apode\320xei)-5
b(c)460 2111 y(mh-ikanopoi)m(hsim\354)l(tht)g(ac,)60
b(lo)-5 b(gik\240c)57 b(k\210luyhc)i(kai)e(egkur\354)l(tht)-5
b(ac.)288 2451 y Fm(\017)86 b Fl(An\210lush)58 b(me)g(i)-5
b(s\354)l(tht)g(a)288 2791 y Fm(\017)86 b Fl(Sust\240mat)-5
b(a)58 b(pou)g(qrhsimopoi)-5 b(o\324n)59 b(an\210lush)f(\()p
Fk(Prolog)p Fl(,)g(sust\240mat)-5 b(a)460 3035 y(lo)g(giko\324)57
b(pro)-5 b(grammati)g(smo\324)59 b(klp.\))288 3375 y
Fm(\017)86 b Fl(H)57 b(i)-5 b(st)g(or\320a)58 b(thc)g(Lo)-5
b(gik\240c)p eop end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1447 820 2437 7 v 1447 1124 7 305 v 1506 1015
a Fn(Apode\320xei)-6 b(c)77 b(me)h(An\210lush)p 3877
1124 V 1447 1131 2437 7 v 3880 1199 73 318 v 1516 1199
2437 73 v 150 1614 a Fl(O)57 b(kan\354)l(nac)i(sumperasmo\324)g(thc)f
Fj(an\210lushc)66 b(\()p Fi(resolution)p Fj(\))57 b Fl(gia)g(thn)150
1858 y Fj(pro)l(t)-5 b(asiak\240)66 b(lo)-5 b(gik\240)58
b Fl(e\320)-10 b(nai)59 b(o)e(ex\240c:)171 2122 y Fh(\013)39
b Fm(_)f Fh(\014)9 b(;)124 b Fm(:)p Fh(\014)48 b Fm(_)38
b Fh(\015)p 171 2199 1093 7 v 516 2357 a(\013)h Fm(_)f
Fh(\015)1628 2239 y Fl(\240)57 b(i)-5 b(sod\324nama)2883
2122 y Fm(:)p Fh(\013)48 b Fm(\))g Fh(\014)9 b(;)125
b(\014)57 b Fm(\))48 b Fh(\015)p 2883 2199 1246 7 v 3210
2357 a Fm(:)p Fh(\013)g Fm(\))g Fh(\015)150 2800 y Fl(Sti)-5
b(c)58 b(dial\350xei)-5 b(c)60 b(gia)d(thn)g(pro)l(t)-5
b(asiak\240)59 b(lo)-5 b(gik\240)57 b(kal\324yame)h(analutik\210)g(thn)
150 3044 y(per\320pt)-5 b(wsh)59 b(aut\240.)p eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-494 -180
y Fo(')p -494 3741 14 3585 v -494 4094 a(&)5880 -180
y($)p 5880 3741 V 5880 4094 a(\045)p -141 4094 5685 14
v -141 -180 V 593 7 4146 7 v 593 311 7 305 v 651 202
a Fn(O)77 b(Kan\354)-5 b(nac)77 b(Sumperasmo\324)h(thc)g(An\210lushc)p
4731 311 V 593 318 4146 7 v 4735 387 73 318 v 661 387
4146 73 v -300 715 a Fl(O)57 b(kan\354)l(nac)i(sumperasmo\324)g(thc)f
(an\210lushc)g(gia)g(thn)f Fj(lo)-5 b(gik\240)67 b(pr\270thc)f
(t\210xhc)58 b Fl(e\320)-10 b(nai)58 b(o)-300 953 y(ex\240c:)1331
1192 y Fh(p)1418 1218 y Fg(1)1533 1192 y Fm(_)39 b(\001)29
b(\001)g(\001)37 b(_)h Fh(p)2166 1218 y Ff(j)2267 1192
y Fm(\001)29 b(\001)g(\001)37 b(_)h Fh(p)2746 1218 y
Ff(m)2876 1192 y Fh(;)258 b(q)3259 1218 y Fg(1)3375 1192
y Fm(_)38 b(\001)29 b(\001)g(\001)37 b(_)h Fh(q)3997
1218 y Ff(k)4110 1192 y Fm(\001)29 b(\001)g(\001)37 b(_)h
Fh(q)4579 1218 y Ff(n)p 151 1269 5703 7 v 151 1427 a
Fh(S)10 b(U)19 b(B)9 b(S)h(T)24 b Fk(\()p Fh(\033)m(;)29
b Fk(\()p Fh(p)1178 1453 y Fg(1)1290 1427 y Fm(_)38 b(\001)29
b(\001)g(\001)37 b(_)h Fh(p)1922 1453 y Ff(j)7 b Fe(\000)p
Fg(1)2209 1427 y Fm(_)38 b Fh(p)2449 1453 y Ff(j)7 b
Fg(+1)2734 1427 y Fm(_)38 b(\001)29 b(\001)g(\001)37
b(_)h Fh(p)3366 1453 y Ff(m)3535 1427 y Fm(_)g Fh(q)3765
1453 y Fg(1)3870 1427 y Fm(\001)29 b(\001)g(\001)38 b(_)g
Fh(q)4340 1453 y Ff(k)s Fe(\000)p Fg(1)4639 1427 y Fm(_)g
Fh(q)4869 1453 y Ff(k)s Fg(+1)5156 1427 y Fm(\001)29
b(\001)g(\001)38 b(_)g Fh(q)5626 1453 y Ff(n)5719 1427
y Fk(\)\))-300 1705 y Fl(\354pou)58 b Fh(\033)c Fk(=)48
b Fh(U)19 b(N)g(I)14 b(F)24 b(Y)36 b Fk(\()p Fh(p)1257
1731 y Ff(j)1329 1705 y Fh(;)29 b Fm(:)p Fh(q)1598 1731
y Ff(k)1682 1705 y Fk(\))p Fl(.)-300 2243 y(Ta)58 b(lektik\210)f
Fh(p)662 2269 y Ff(j)792 2243 y Fl(kai)g Fh(q)1146 2269
y Ff(k)1288 2243 y Fl(l\350go)l(nt)-5 b(ai)58 b Fj(sumplhrwmatik\210)66
b Fi(\(complemen)-6 b(tary\))57 b Fl(epeid\240)-300 2481
y(kaj\350na)h(t)-5 b(ouc)58 b(enopoie\320)-5 b(t)g(ai)58
b(me)g(thn)g(\210rnhsh)g(t)-5 b(ou)58 b(\210llou.)-300
2781 y(San)g(antikat\210st)-5 b(ash)58 b Fh(\033)64 b
Fl(sun\240jwc)58 b(dial\350goume)g(t)-5 b(o)l(n)58 b
Fj(pi)-5 b(o)66 b(genik\354)i(enopoi)m(ht\240)59 b Fl(t)-5
b(wn)58 b Fh(p)5430 2807 y Ff(j)-300 3019 y Fl(kai)f
Fm(:)p Fh(q)169 3045 y Ff(k)254 3019 y Fl(.)-300 3319
y(H)g(di\210zeuxh)i(pou)f(prok\324ptei)g(l\350get)-5
b(ai)58 b Fi(resolv)-6 b(en)g(t)p Fl(.)-300 3619 y(H)57
b(an\210lush)i(efarm\354zet)-5 b(ai)59 b(se)e(diaze\324xei)-5
b(c)60 b(lektik\270n)d(pou)h(\350qoume)f(sumfwn\240sei)i(na)f(ti)-5
b(c)-300 3857 y(o)l(nom\210zoume)59 b Fj(fr\210sei)-5
b(c)67 b(\()p Fi(clauses)p Fj(\).)p eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1908 1201 1516 7 v 1908 1505 7 305 v 1966 1396
a Fn(Parade\320)-6 b(gmat)g(a)p 3416 1505 V 1908 1512
1516 7 v 3420 1581 73 318 v 1977 1581 1516 73 v 601 1931
a Fm(:)p Fh(R)q(ich)p Fk(\()p Fh(x)p Fk(\))39 b Fm(_)f
Fh(U)19 b(nhappy)6 b Fk(\()p Fh(x)p Fk(\))p Fh(;)143
b(R)q(ich)p Fk(\()p Fh(M)19 b(e)p Fk(\))p 601 2008 2786
7 v 1447 2165 a Fh(U)g(nhappy)6 b Fk(\()p Fh(M)19 b(e)p
Fk(\))150 2462 y Fl(O)57 b Fk(MGU)h Fl(pou)g(qrhsimopoi\240jhke)g
(e\320)-10 b(nai)58 b Fh(\033)d Fk(=)47 b Fm(f)p Fh(x=)-10
b(M)19 b(e)p Fm(g)p Fl(.)p eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1908 1201 1516 7 v 1908 1505 7 305 v 1966 1396
a Fn(Parade\320)-6 b(gmat)g(a)p 3416 1505 V 1908 1512
1516 7 v 3420 1581 73 318 v 1977 1581 1516 73 v 601 1931
a Fh(P)24 b Fk(\()p Fh(w)5 b(;)29 b(y)6 b Fk(\))38 b
Fm(_)g Fh(Q)p Fk(\()p Fh(y)6 b(;)29 b(z)8 b Fk(\))38
b Fm(_)g Fh(R)q Fk(\()p Fh(F)24 b Fk(\()p Fh(B)9 b Fk(\))p
Fh(;)29 b(w)5 b Fk(\))p Fh(;)142 b(P)24 b Fk(\()p Fh(x;)29
b(z)8 b Fk(\))37 b Fm(_)h(:)p Fh(R)q Fk(\()p Fh(F)24
b Fk(\()p Fh(z)8 b Fk(\))p Fh(;)29 b(C)12 b Fk(\))37
b Fm(_)h Fh(S)10 b Fk(\()p Fh(z)e Fk(\))p 601 2008 4741
7 v 1630 2165 a Fh(P)24 b Fk(\()p Fh(C)s(;)29 b(y)6 b
Fk(\))37 b Fm(_)h Fh(Q)p Fk(\()p Fh(y)6 b(;)29 b(B)9
b Fk(\))38 b Fm(_)g Fh(P)24 b Fk(\()p Fh(x;)29 b(B)9
b Fk(\))37 b Fm(_)h Fh(S)10 b Fk(\()p Fh(B)f Fk(\))150
2462 y Fl(O)57 b Fk(MGU)h Fl(pou)g(qrhsimopoi\240jhke)g(e\320)-10
b(nai)58 b Fh(\033)d Fk(=)47 b Fm(f)p Fh(z)8 b(=B)h(;)29
b(w)5 b(=C)12 b Fm(g)p Fl(.)p eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-254 -180
y Fo(')p -254 3741 14 3585 v -254 4094 a(&)5640 -180
y($)p 5640 3741 V 5640 4094 a(\045)p 99 4094 5205 14
v 99 -180 V -60 535 5611 7 v -60 839 7 305 v -1 730 a
Fn(Qr\240sh)78 b(thc)g(An\210lushc)i(gia)d(Apode\320xei)-6
b(c)78 b(Lo)-6 b(gik\240c)77 b(K\210luyhc)p 5543 839
V -60 846 5611 7 v 5547 915 73 318 v 9 915 5611 73 v
-60 1329 a Fl('Est)-5 b(w)57 b(\354)l(ti)g(\350qoume)h(mia)g(b\210sh)g
(gn\270sewn)f Fh(K)12 b(B)66 b Fl(kai)57 b(\350na)h(t\324po)g
Fh(\036)p Fl(.)-60 1647 y(Pwc)g(mporo\324me)h(na)e(de\320xoume)i(\354)l
(ti)e Fh(K)12 b(B)57 b Fm(j)-29 b Fk(=)48 b Fh(\036)57
b Fl(qrhsimopoi\270nt)-5 b(ac)59 b(an\210lush?)30 1987
y(1.)86 b(Prosj\350soume)58 b(thn)g Fj(\210rnhsh)g Fl(thc)g
Fh(\036)f Fl(sthn)g Fh(K)12 b(B)30 2327 y Fl(2.)86 b(Efarm\354zoume)59
b(t)-5 b(o)l(n)58 b(kan\354)l(na)g(thc)g(an\210lushc)g(\354sec)g
(for\350c)h(qrei\210zet)-5 b(ai)58 b(m\350qri)250 2571
y(na)g(kat)-5 b(al\240xoume)58 b(sthn)g Fj(ken\240)67
b(fr\210sh)g Fi(\(empt)-6 b(y)65 b(clause\))p Fl(,)58
b(dhlad\240)g(se)f(mia)250 2815 y Fj(ant\320fash)p Fl(.)250
3096 y(Sthn)h(per\320pt)-5 b(wsh)59 b(aut\240:)76 b(afo\324)58
b(t)-5 b(o)57 b(s\324no)-5 b(lo)58 b(fr\210sewn)g Fh(K)12
b(B)47 b Fm([)38 b(f)58 b(:)p Fh(\036)f Fm(g)g Fl(e\320)-10
b(nai)250 3339 y(mh-ikanopoi\240simo,)59 b(mporo\324me)g(na)e
(sumper\210noume)j(\354)l(ti)d Fh(K)12 b(B)57 b Fm(j)-29
b Fk(=)48 b Fh(\036)p Fl(.)p eop end
%%Page: 7 7
TeXDict begin @landscape 7 6 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 584 1293 7 v 2019 888 7 305 v 2078 779 a
Fn(Par\210dei)-6 b(gma)p 3305 888 V 2019 895 1293 7 v
3308 964 73 318 v 2088 964 1293 73 v 580 1400 a Fh(P)24
b(hD)5 b Fk(\()p Fh(x)p Fk(\))48 b Fm(\))g Fh(H)14 b(ig)6
b(hl)s(y)g(Qual)s(if)19 b(ied)p Fk(\()p Fh(x)p Fk(\))580
1741 y Fm(:)p Fh(P)24 b(hD)5 b Fk(\()p Fh(x)p Fk(\))47
b Fm(\))h Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5 b(ning)h(s)p
Fk(\()p Fh(x)p Fk(\))580 2081 y Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19
b(ied)p Fk(\()p Fh(x)p Fk(\))52 b Fm(\))c Fh(R)q(ich)p
Fk(\()p Fh(x)p Fk(\))580 2421 y Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5
b(ning)h(s)p Fk(\()p Fh(x)p Fk(\))50 b Fm(\))e Fh(R)q(ich)p
Fk(\()p Fh(x)p Fk(\))150 2761 y Fl(Ja)57 b(qrhsimopoi\240soume)i
(an\210lush)f(gia)f(na)h Fj(sumper\210noume)h Fh(R)q(ich)p
Fk(\()p Fh(M)19 b(e)p Fk(\))p Fl(.)150 3079 y(Sthn)56
b(per\320pt)-5 b(ws\240)57 b(mac)f(loip\354)l(n,)g(prosj\350t)-5
b(oume)57 b(t)-5 b(o)l(n)56 b(t\324po)g Fm(:)p Fh(R)q(ich)p
Fk(\()p Fh(M)19 b(e)p Fk(\))55 b Fl(sthn)150 3323 y Fh(K)12
b(B)d Fl(.)p eop end
%%Page: 8 8
TeXDict begin @landscape 8 7 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 392 1293 7 v 2019 697 7 305 v 2078 587 a
Fn(Par\210dei)-6 b(gma)p 3305 697 V 2019 704 1293 7 v
3308 772 73 318 v 2088 772 1293 73 v 150 1187 a Fl(Ac)58
b(gr\210youme)g(arqik\210)g(\354)-5 b(lec)58 b(ti)-5
b(c)58 b(pro)l(t\210sei)-5 b(c)59 b(wc)f Fj(diaze\324xei)-5
b(c)p Fl(:)580 1527 y Fm(:)p Fh(P)24 b(hD)5 b Fk(\()p
Fh(x)p Fk(\))38 b Fm(_)g Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19
b(ied)p Fk(\()p Fh(x)p Fk(\))580 1867 y Fh(P)24 b(hD)5
b Fk(\()p Fh(x)p Fk(\))38 b Fm(_)g Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5
b(ning)h(s)p Fk(\()p Fh(x)p Fk(\))580 2207 y Fm(:)p Fh(H)14
b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p Fk(\()p Fh(x)p
Fk(\))42 b Fm(_)c Fh(R)q(ich)p Fk(\()p Fh(x)p Fk(\))580
2547 y Fm(:)p Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5 b(ning)h(s)p
Fk(\()p Fh(x)p Fk(\))40 b Fm(_)e Fh(R)q(ich)p Fk(\()p
Fh(x)p Fk(\))580 2887 y Fm(:)p Fh(R)q(ich)p Fk(\()p Fh(M)19
b(e)p Fk(\))150 3228 y Fl(T\270ra)58 b(mporo\324me)h(na)e
(efarm\354soume)j(t)-5 b(o)l(n)57 b(kan\354)l(na)h(thc)g(an\210lushc)
150 3471 y(\(k\210no)l(nt)-5 b(ac)59 b(k\210je)e(for\210)h
Fj(pro)l(tupopo\320)m(hsh)g Fl(t)-5 b(wn)57 b(met)-5
b(ablht\270n\).)p eop end
%%Page: 9 9
TeXDict begin @landscape 9 8 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 673 1293 7 v 2019 977 7 305 v 2078 868 a
Fn(Par\210dei)-6 b(gma)p 3305 977 V 2019 984 1293 7 v
3308 1053 73 318 v 2088 1053 1293 73 v 150 1467 a Fl(Ap\354)580
1808 y Fm(:)p Fh(R)q(ich)p Fk(\()p Fh(M)19 b(e)p Fk(\))150
2148 y Fl(kai)580 2488 y Fm(:)p Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19
b(ied)p Fk(\()p Fh(z)8 b Fk(\))41 b Fm(_)d Fh(R)q(ich)p
Fk(\()p Fh(z)8 b Fk(\))150 2828 y Fl(me)58 b Fk(MGU)f
Fh(\033)e Fk(=)48 b Fm(f)p Fh(z)8 b(=)-10 b(M)19 b(e)p
Fm(g)p Fl(,)57 b(sumpera\320)-10 b(noume)580 3168 y Fm(:)p
Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p Fk(\()p
Fh(M)g(e)p Fk(\))p Fh(:)p eop end
%%Page: 10 10
TeXDict begin @landscape 10 9 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 673 1293 7 v 2019 977 7 305 v 2078 868 a
Fn(Par\210dei)-6 b(gma)p 3305 977 V 2019 984 1293 7 v
3308 1053 73 318 v 2088 1053 1293 73 v 150 1467 a Fl(Ap\354)580
1808 y Fm(:)p Fh(R)q(ich)p Fk(\()p Fh(M)19 b(e)p Fk(\))150
2148 y Fl(kai)580 2488 y Fm(:)p Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5
b(ning)h(s)p Fk(\()p Fh(w)f Fk(\))40 b Fm(_)e Fh(R)q(ich)p
Fk(\()p Fh(w)5 b Fk(\))150 2828 y Fl(me)58 b Fk(MGU)f
Fh(\033)e Fk(=)48 b Fm(f)p Fh(w)5 b(=)-10 b(M)19 b(e)p
Fm(g)p Fl(,)57 b(sumpera\320)-10 b(noume)580 3168 y Fm(:)p
Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5 b(ning)h(s)p Fk(\()p
Fh(M)19 b(e)p Fk(\))p Fh(:)p eop end
%%Page: 11 11
TeXDict begin @landscape 11 10 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 673 1293 7 v 2019 977 7 305 v 2078 868 a
Fn(Par\210dei)-6 b(gma)p 3305 977 V 2019 984 1293 7 v
3308 1053 73 318 v 2088 1053 1293 73 v 150 1467 a Fl(Ap\354)580
1808 y Fm(:)p Fh(P)24 b(hD)5 b Fk(\()p Fh(x)p Fk(\))38
b Fm(_)g Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p
Fk(\()p Fh(x)p Fk(\))150 2148 y Fl(kai)580 2488 y Fh(P)24
b(hD)5 b Fk(\()p Fh(y)h Fk(\))38 b Fm(_)g Fh(E)10 b(ar)5
b(l)s(y)h(E)k(ar)5 b(ning)h(s)p Fk(\()p Fh(y)g Fk(\))150
2828 y Fl(me)58 b Fk(MGU)f Fh(\033)e Fk(=)48 b Fm(f)p
Fh(x=y)6 b Fm(g)p Fl(,)58 b(sumpera\320)-10 b(noume)580
3168 y Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p
Fk(\()p Fh(y)6 b Fk(\))42 b Fm(_)c Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5
b(ning)h(s)p Fk(\()p Fh(y)g Fk(\))p Fh(:)p eop end
%%Page: 12 12
TeXDict begin @landscape 12 11 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 673 1293 7 v 2019 977 7 305 v 2078 868 a
Fn(Par\210dei)-6 b(gma)p 3305 977 V 2019 984 1293 7 v
3308 1053 73 318 v 2088 1053 1293 73 v 150 1467 a Fl(Ap\354)580
1808 y Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p
Fk(\()p Fh(v)6 b Fk(\))42 b Fm(_)c Fh(E)10 b(ar)5 b(l)s(y)h(E)k(ar)5
b(ning)h(s)p Fk(\()p Fh(v)g Fk(\))150 2148 y Fl(kai)580
2488 y Fm(:)p Fh(E)k(ar)5 b(l)s(y)h(E)k(ar)5 b(ning)h(s)p
Fk(\()p Fh(M)19 b(e)p Fk(\))150 2828 y Fl(me)58 b Fk(MGU)f
Fh(\033)e Fk(=)48 b Fm(f)p Fh(v)6 b(=)-10 b(M)19 b(e)p
Fm(g)p Fl(,)58 b(sumpera\320)-10 b(noume)580 3168 y Fh(H)14
b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p Fk(\()p Fh(M)g(e)p
Fk(\))p Fh(:)p eop end
%%Page: 13 13
TeXDict begin @landscape 13 12 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 733 1293 7 v 2019 1037 7 305 v 2078 928 a
Fn(Par\210dei)-6 b(gma)p 3305 1037 V 2019 1044 1293 7
v 3308 1112 73 318 v 2088 1112 1293 73 v 150 1527 a Fl(Ap\354)580
1867 y Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p
Fk(\()p Fh(M)g(e)p Fk(\))150 2207 y Fl(kai)580 2547 y
Fm(:)p Fh(H)14 b(ig)6 b(hl)s(y)g(Qual)s(if)19 b(ied)p
Fk(\()p Fh(M)g(e)p Fk(\))150 2887 y Fl(me)58 b Fk(MGU)f
Fh(\033)e Fk(=)48 b Fm(fg)p Fl(,)57 b(sumpera\320)-10
b(noume)60 b(th)d Fj(ken\240)68 b(fr\210sh.)77 b Fl(Epom\350nwc)59
b(\350qoume)150 3131 y(kat)-5 b(al\240xei)58 b(se)g Fj(ant\320fash)p
Fl(,)g(\210ra)g Fh(K)12 b(B)56 b Fm(j)-29 b Fk(=)48 b
Fh(R)q(ich)p Fk(\()p Fh(M)19 b(e)p Fk(\))p Fl(.)p eop
end
%%Page: 14 14
TeXDict begin @landscape 14 13 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 599 1293 7 v 2019 904 7 305 v 2078 795 a
Fn(Par\210dei)-6 b(gma)p 3305 904 V 2019 911 1293 7 v
3308 979 73 318 v 2088 979 1293 73 v 150 1394 a Fl(Jewr\240ste)58
b(ti)-5 b(c)58 b(fr\210sei)-5 b(c:)580 1734 y Fh(P)24
b Fk(\()p Fh(x;)29 b(x)p Fk(\))38 b Fm(_)h Fh(Q)p Fk(\()p
Fh(x)p Fk(\))f Fm(_)g Fh(R)q Fk(\()p Fh(x)p Fk(\))580
2074 y Fm(:)p Fh(P)24 b Fk(\()p Fh(A;)29 b(z)8 b Fk(\))37
b Fm(_)h(:)p Fh(Q)p Fk(\()p Fh(B)9 b Fk(\))150 2414 y
Fl('Enac)58 b(tr\354poc)g(na)g(efarm\354soume)h(an\210lush)f(e\320)-10
b(nai)59 b(na)e(dial\350xoume)i(t)-5 b(a)150 2658 y(sumplhrwmatik\210)
59 b(lektik\210)e Fh(P)24 b Fk(\()p Fh(x;)29 b(x)p Fk(\))57
b Fl(kai)h Fh(P)24 b Fk(\()p Fh(A;)29 b(z)8 b Fk(\))56
b Fl(kai)h(me)h Fk(MGU)150 2902 y Fh(\033)c Fk(=)48 b
Fm(f)p Fh(x=)-10 b(A;)29 b(z)8 b(=)-10 b(A)p Fm(g)59
b Fl(na)e(bg\210loume:)580 3242 y Fh(Q)p Fk(\()p Fh(A)p
Fk(\))39 b Fm(_)f Fh(R)q Fk(\()p Fh(A)p Fk(\))g Fm(_)g(:)p
Fh(Q)p Fk(\()p Fh(B)9 b Fk(\))p eop end
%%Page: 15 15
TeXDict begin @landscape 15 14 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 548 1293 7 v 2019 852 7 305 v 2078 743 a
Fn(Par\210dei)-6 b(gma)p 3305 852 V 2019 859 1293 7 v
3308 928 73 318 v 2088 928 1293 73 v 150 1342 a Fl(O)57
b Fj(de\324teroc)68 b(tr\354poc)58 b Fl(na)g(efarm\354soume)h
(an\210lush)f(e\320)-10 b(nai)58 b(na)g(dial\350xoume)150
1586 y(t)-5 b(a)58 b(sumplhrwmatik\210)g(lektik\210)g
Fh(Q)p Fk(\()p Fh(x)p Fk(\))g Fl(kai)f Fh(Q)p Fk(\()p
Fh(B)9 b Fk(\))57 b Fl(kai)g(me)h Fk(MGU)f Fh(\033)e
Fk(=)48 b Fm(f)p Fh(x=B)9 b Fm(g)150 1830 y Fl(na)58
b(bg\210loume:)580 2170 y Fh(P)24 b Fk(\()p Fh(B)9 b(;)29
b(B)9 b Fk(\))36 b Fm(_)i Fh(R)q Fk(\()p Fh(B)9 b Fk(\))38
b Fm(_)g(:)p Fh(P)24 b Fk(\()p Fh(A;)29 b(z)8 b Fk(\))150
3072 y Fl(Mporo\324me)52 b(dhlad\240)g(na)f(\350qoume)g
Fj(peri)-5 b(ss\354)l(terouc)60 b(ap\354)f(\350na)g(tr\354pouc)52
b Fl(gia)150 3316 y(na)58 b(efarm\354soume)h(t)-5 b(o)l(n)58
b(kan\354)l(na)g(thc)f(an\210lushc)i(se)f(\350na)f(zeug\210ri)h
(fr\210sewn.)p eop end
%%Page: 16 16
TeXDict begin @landscape 16 15 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1140 607 3052 7 v 1140 911 7 305 v 1198 802 a
Fn(Suzeuktik\240)78 b(Kano)-5 b(nik\240)77 b(Morf\240)p
4184 911 V 1140 918 3052 7 v 4188 987 73 318 v 1209 987
3052 73 v 150 1401 a Fl(Gia)57 b(na)h(mporo\324me)h(na)e
(efarm\354soume)i(an\210lush,)f(oi)g(doj\350ntec)g(t\324poi)g(thc)150
1645 y(lo)-5 b(gik\240c)58 b(pr\270thc)g(t\210xhc)g(pr\350pei)h(na)f
(e\320)-10 b(nai)58 b(se)g Fj(suzeuktik\240)67 b(kano)l(nik\240)150
1889 y(morf\240)p Fl(.)150 2207 y Fj(Ori)-5 b(sm\354c.)77
b Fl('Enac)58 b(t\324poc)g(thc)g(lo)-5 b(gik\240c)58
b(pr\270thc)g(t\210xhc)g(e\320)-10 b(nai)59 b(se)150
2451 y Fj(suzeuktik\240)68 b(kano)l(nik\240)g(morf\240)g
Fi(\(conjunctiv)-6 b(e)65 b(normal)h(form,)150 2695 y(CNF\))57
b Fl(an)h(e\320)-10 b(nai)58 b(mia)g(s\324zeuxh)g(fr\210sewn.)150
3013 y Fj(Pr\354)l(t)-5 b(ash.)76 b Fl(K\210je)57 b(t\324poc)i(thc)e
(lo)-5 b(gik\240c)58 b(pr\270thc)g(t\210xhc)h(e\320)-10
b(nai)58 b(i)-5 b(sod\324namoc)150 3256 y(me)58 b(\350na)g(t\324po)f
(se)h Fk(CNF)p Fl(.)p eop end
%%Page: 17 17
TeXDict begin @landscape 17 16 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1607 67 2118 7 v 1607 371 7 305 v 1665 262 a Fn(Met)-6
b(atrop\240)79 b(se)f Fd(CNF)p 3718 371 V 1607 378 2118
7 v 3721 447 73 318 v 1675 447 2118 73 v 240 782 a Fl(1.)86
b Fj(Apaloif\240)67 b(dipl\270n)g(kai)g(apl\270n)f(sunepagwg\270n)460
1020 y Fl(qrhsimopoi\270nt)-5 b(ac)59 b(ti)-5 b(c)58
b(parak\210t)-5 b(w)58 b(i)-5 b(sodunam\320ec:)890 1303
y Fk(\()p Fh(\036)48 b Fm(,)g Fh( )6 b Fk(\))48 b Fm(\021)g
Fk(\()p Fh(\036)f Fm(\))h Fh( )d Fm(^)38 b Fh( )54 b
Fm(\))48 b Fh(\036)p Fk(\))890 1586 y Fh(\036)g Fm(\))g
Fh( )54 b Fm(\021)48 b(:)p Fh(\036)37 b Fm(_)h Fh( )240
1900 y Fl(2.)86 b Fj(Met)-5 b(ak\320)-11 b(nhsh)66 b(t)-5
b(wn)66 b(arn\240sewn)h(\()p Fm(:)p Fj(\))f(proc)h(t)-5
b(a)65 b(m\350sa)58 b Fl(\270ste)f(k\210je)460 2137 y(\210rnhsh)h(na)g
(efarm\354zet)-5 b(ai)59 b(se)f(\350na)f(at)-5 b(omik\354)58
b(t\324po.)77 b(Gia)57 b(na)g(t)-5 b(o)460 2375 y(pet\324qoume)58
b(aut\354,)f(qrhsimopoi)-5 b(o\324me)59 b(ti)-5 b(c)58
b(parak\210t)-5 b(w)58 b(i)-5 b(sodunam\320ec:)890 2658
y Fm(:)p Fk(\()p Fh(\036)38 b Fm(_)g Fh( )6 b Fk(\))48
b Fm(\021)g(:)p Fh(\036)38 b Fm(^)g(:)p Fh( )890 2941
y Fm(:)p Fk(\()p Fh(\036)g Fm(^)g Fh( )6 b Fk(\))48 b
Fm(\021)g(:)p Fh(\036)38 b Fm(_)g(:)p Fh( )890 3224 y
Fm(:)p Fk(\()p Fm(8)p Fh(x)p Fk(\))p Fh(\036)48 b Fm(\021)f
Fk(\()p Fm(9)p Fh(x)p Fk(\))p Fm(:)p Fh(\036)890 3508
y Fm(:)p Fk(\()p Fm(9)p Fh(x)p Fk(\))p Fh(\036)h Fm(\021)f
Fk(\()p Fm(8)p Fh(x)p Fk(\))p Fm(:)p Fh(\036)890 3791
y Fm(::)p Fh(\036)g Fm(\021)h Fh(\036)p eop end
%%Page: 18 18
TeXDict begin @landscape 18 17 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 1607 7 2118 7 v 1607 311 7 305 v 1665 202 a
Fn(Met)-6 b(atrop\240)79 b(se)f Fd(CNF)p 3718 311 V 1607
318 2118 7 v 3721 387 73 318 v 1675 387 2118 73 v -60
784 a Fl(3.)86 b Fj(Pro)l(tupopo\320)m(hsh)66 b(t)-5
b(wn)66 b(met)-5 b(ablht\270n)57 b Fl(dhl.)77 b(met)-5
b(o)l(nomas\320a)59 b(met)-5 b(ablht\270n)58 b(\350tsi)160
1025 y(\270ste)f(k\210je)h(posode\320kthc)g(na)g(desme\324ei)g(mia)g
(diaforetik\240)g(met)-5 b(ablht\240.)-60 1355 y(4.)86
b Fj(Antikat\210st)-5 b(ash)65 b(uparxiak\270n)j(posodeikt\270n)60
b Fl(\240)d Fj(met)-5 b(atrop\240)66 b(kat\210)160 1596
y Fi(Sk)-6 b(olem)66 b(\(sk)-6 b(olemization\))p Fj(.)160
1872 y Fl(An)58 b(\350nac)g(uparxiak\354c)h(posode\320kthc)f(den)g
(br\320)-5 b(sket)g(ai)59 b(sthn)e(emb\350leia)i(en\354c)160
2113 y(kajo)-5 b(liko\324)57 b(posode\320kth,)h(t\354)l(te)f
(apalo\320foume)i(t)-5 b(o)l(n)58 b(posode\320kth)g(kai)160
2355 y(antikaji)-5 b(st)g(o\324me)58 b(\354)-5 b(lec)59
b(ti)-5 b(c)58 b(emfan\320)-5 b(sei)g(c)59 b(thc)f(met)-5
b(ablht\240c)59 b(t)-5 b(ou)58 b(posode\320kth)f(me)160
2596 y(mia)h(n\350a)g(st)-5 b(ajer\210)58 b(pou)g(l\350get)-5
b(ai)57 b Fj(st)-5 b(ajer\210)65 b Fi(Sk)-6 b(olem)p
Fl(.)160 2872 y(An)58 b(\350nac)g(uparxiak\354c)h(posode\320kthc)f
Fm(9)p Fh(x)g Fl(br\320)-5 b(sket)g(ai)58 b(sthn)g(emb\350leia)g
Fh(n)160 3113 y Fl(kajo)-5 b(lik\270n)57 b(posodeikt\270n)h
Fm(8)p Fh(y)2164 3139 y Fg(1)2241 3113 y Fh(;)29 b(:)g(:)g(:)f(;)h
Fm(8)p Fh(y)2805 3139 y Ff(n)2898 3113 y Fl(,)57 b(apalo\320foume)i(t)
-5 b(o)l(n)58 b(posode\320kth)g(kai)160 3355 y(antikaji)-5
b(st)g(o\324me)58 b(\354)-5 b(lec)59 b(ti)-5 b(c)58 b(emfan\320)-5
b(sei)g(c)59 b(thc)f(met)-5 b(ablht\240c)59 b(t)-5 b(ou)58
b(posode\320kth)f Fh(x)h Fl(me)160 3596 y(t)-5 b(o)l(n)58
b(\354ro)f Fh(F)24 b Fk(\()p Fh(y)1066 3622 y Fg(1)1143
3596 y Fh(;)29 b(:)g(:)g(:)e(;)i(y)1610 3622 y Ff(n)1704
3596 y Fk(\))57 b Fl(\354pou)h Fh(F)81 b Fl(e\320)-10
b(nai)58 b(\350na)g(n\350o)g(s\324mbo)-5 b(lo)58 b(sun\210rthshc)h(pou)
160 3837 y(l\350get)-5 b(ai)57 b Fj(sun\210rthsh)67 b
Fi(Sk)-6 b(olem)p Fl(.)p eop end
%%Page: 19 19
TeXDict begin @landscape 19 18 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1607 625 2118 7 v 1607 930 7 305 v 1665 821 a
Fn(Met)-6 b(atrop\240)79 b(se)f Fd(CNF)p 3718 930 V 1607
937 2118 7 v 3721 1005 73 318 v 1675 1005 2118 73 v 240
1442 a Fl(5.)86 b Fj(Apaloif\240)67 b(\354)-5 b(lwn)66
b(t)-5 b(wn)66 b(kajo)-5 b(lik\270n)67 b(posodeikt\270n.)240
1782 y Fl(6.)86 b Fj(Efarm\354zoume)69 b(thn)d(epimeri)-5
b(stik\240)68 b(idi\354)l(tht)-5 b(a)66 b(t)-5 b(ou)66
b Fm(_)g Fj(wc)g(proc)460 2026 y(t)-5 b(o)66 b Fm(^)p
Fl(:)890 2329 y Fk(\()p Fh(\036)38 b Fm(^)g Fh( )6 b
Fk(\))39 b Fm(_)f Fh(\022)52 b Fm(\021)c Fk(\()p Fh(\036)38
b Fm(_)g Fh(\022)5 b Fk(\))38 b Fm(^)g Fk(\()p Fh( )44
b Fm(_)38 b Fh(\022)5 b Fk(\))890 2632 y Fh(\022)43 b
Fm(_)38 b Fk(\()p Fh(\036)g Fm(^)g Fh( )6 b Fk(\))48
b Fm(\021)g Fk(\()p Fh(\022)43 b Fm(_)38 b Fh(\036)p
Fk(\))g Fm(^)g Fk(\()p Fh(\022)43 b Fm(_)38 b Fh( )6
b Fk(\))240 2972 y Fl(7.)86 b Fj(Aplopoi)-5 b(o\324me)67
b(ti)-5 b(c)65 b(suze\324xei)-5 b(c)67 b(kai)g(diaze\324xei)-5
b(c)60 b Fl(apalo\320fo)l(nt)-5 b(ac)59 b(ti)-5 b(c)460
3216 y(parenj\350sei)g(c)60 b(pou)d(den)h(qrei\210zo)l(nt)-5
b(ai.)p eop end
%%Page: 20 20
TeXDict begin @landscape 20 19 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 710 1293 7 v 2019 1014 7 305 v 2078 905 a
Fn(Par\210dei)-6 b(gma)p 3305 1014 V 2019 1021 1293 7
v 3308 1090 73 318 v 2088 1090 1293 73 v 150 1504 a Fl(Ac)58
b(met)-5 b(atr\350youme)59 b(se)f Fk(CNF)g Fl(thn)g(ak\354)-5
b(loujh)57 b(pr\354)l(t)-5 b(ash:)580 1845 y Fk(\()p
Fm(8)p Fh(x)p Fk(\)\(\()p Fm(8)p Fh(y)6 b Fk(\))p Fh(P)24
b Fk(\()p Fh(x;)29 b(y)6 b Fk(\))48 b Fm(\))g(:)p Fk(\()p
Fm(8)p Fh(y)6 b Fk(\)\()p Fh(Q)p Fk(\()p Fh(x;)29 b(y)6
b Fk(\))49 b Fm(\))f Fh(R)q Fk(\()p Fh(x;)29 b(y)6 b
Fk(\)\)\))240 2185 y Fl(1.)86 b(Apaloif\240)58 b(sunepagwg\270n:)890
2488 y Fk(\()p Fm(8)p Fh(x)p Fk(\)\()p Fm(:)p Fk(\()p
Fm(8)p Fh(y)6 b Fk(\))p Fh(P)24 b Fk(\()p Fh(x;)29 b(y)6
b Fk(\))38 b Fm(_)g(:)p Fk(\()p Fm(8)p Fh(y)6 b Fk(\)\()p
Fm(:)p Fh(Q)p Fk(\()p Fh(x;)29 b(y)6 b Fk(\))39 b Fm(_)f
Fh(R)q Fk(\()p Fh(x;)29 b(y)6 b Fk(\)\)\))240 2828 y
Fl(2.)86 b(Met)-5 b(ak\320)-10 b(nhsh)58 b Fm(:)f Fl(proc)i(t)-5
b(a)57 b(m\350sa:)890 3131 y Fk(\()p Fm(8)p Fh(x)p Fk(\)\(\()p
Fm(9)p Fh(y)6 b Fk(\))p Fm(:)p Fh(P)24 b Fk(\()p Fh(x;)29
b(y)6 b Fk(\))38 b Fm(_)g Fk(\()p Fm(9)p Fh(y)6 b Fk(\)\()p
Fh(Q)p Fk(\()p Fh(x;)29 b(y)6 b Fk(\))39 b Fm(^)g(:)p
Fh(R)q Fk(\()p Fh(x;)29 b(y)6 b Fk(\)\)\))p eop end
%%Page: 21 21
TeXDict begin @landscape 21 20 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 2019 7 1293 7 v 2019 311 7 305 v 2078 202 a
Fn(Par\210dei)-6 b(gma)p 3305 311 V 2019 318 1293 7 v
3308 387 73 318 v 2088 387 1293 73 v -60 772 a Fl(3.)86
b(Pro)l(tupopo\320)m(hsh)59 b(met)-5 b(ablht\270n:)590
1066 y Fk(\()p Fm(8)p Fh(x)p Fk(\)\(\()p Fm(9)p Fh(y)6
b Fk(\))p Fm(:)p Fh(P)24 b Fk(\()p Fh(x;)29 b(y)6 b Fk(\))38
b Fm(_)h Fk(\()p Fm(9)p Fh(z)8 b Fk(\)\()p Fh(Q)p Fk(\()p
Fh(x;)29 b(z)8 b Fk(\))37 b Fm(^)h(:)p Fh(R)q Fk(\()p
Fh(x;)29 b(z)8 b Fk(\)\)\))-60 1392 y Fl(4.)86 b(Antikat\210st)-5
b(ash)58 b(uparxiak\270n)g(posodeikt\270n:)590 1685 y
Fk(\()p Fm(8)p Fh(x)p Fk(\)\()p Fm(:)p Fh(P)24 b Fk(\()p
Fh(x;)29 b(F)1588 1711 y Fg(1)1664 1685 y Fk(\()p Fh(x)p
Fk(\)\))39 b Fm(_)f Fk(\()p Fh(Q)p Fk(\()p Fh(x;)29 b(F)2711
1711 y Fg(2)2788 1685 y Fk(\()p Fh(x)p Fk(\)\))39 b Fm(^)f(:)p
Fh(R)q Fk(\()p Fh(x;)29 b(F)3879 1711 y Fg(2)3955 1685
y Fk(\()p Fh(x)p Fk(\)\)\)\))-60 2012 y Fl(5.)86 b(Apaloif\240)58
b(kajo)-5 b(lik\270n)58 b(posodeikt\270n:)590 2305 y
Fm(:)p Fh(P)24 b Fk(\()p Fh(x;)29 b(F)1193 2331 y Fg(1)1269
2305 y Fk(\()p Fh(x)p Fk(\)\))39 b Fm(_)f Fk(\()p Fh(Q)p
Fk(\()p Fh(x;)29 b(F)2316 2331 y Fg(2)2393 2305 y Fk(\()p
Fh(x)p Fk(\)\))39 b Fm(^)f(:)p Fh(R)q Fk(\()p Fh(x;)29
b(F)3484 2331 y Fg(2)3560 2305 y Fk(\()p Fh(x)p Fk(\)\)\))-60
2632 y Fl(6.)86 b(Epimeri)-5 b(sm\354c)60 b Fm(_)d Fl(wc)h(proc)g
Fm(^)p Fl(:)590 2925 y Fk(\()p Fm(:)p Fh(P)24 b Fk(\()p
Fh(x;)29 b(F)1260 2951 y Fg(1)1336 2925 y Fk(\()p Fh(x)p
Fk(\)\))39 b Fm(_)f Fh(Q)p Fk(\()p Fh(x;)29 b(F)2316
2951 y Fg(2)2393 2925 y Fk(\()p Fh(x)p Fk(\)\)\))39 b
Fm(^)f Fk(\()p Fm(:)p Fh(P)24 b Fk(\()p Fh(x;)29 b(F)3621
2951 y Fg(1)3697 2925 y Fk(\()p Fh(x)p Fk(\)\))38 b Fm(_)g(:)p
Fh(R)q Fk(\()p Fh(x;)29 b(F)4787 2951 y Fg(2)4864 2925
y Fk(\()p Fh(x)p Fk(\)\)\))-60 3252 y Fl(7.)86 b(Telik\240)58
b(morf\240:)590 3545 y Fm(:)p Fh(P)24 b Fk(\()p Fh(x;)29
b(F)1193 3571 y Fg(1)1269 3545 y Fk(\()p Fh(x)p Fk(\)\))39
b Fm(_)f Fh(Q)p Fk(\()p Fh(x;)29 b(F)2249 3571 y Fg(2)2326
3545 y Fk(\()p Fh(x)p Fk(\)\))590 3838 y Fm(:)p Fh(P)24
b Fk(\()p Fh(x;)29 b(F)1193 3864 y Fg(1)1269 3838 y Fk(\()p
Fh(x)p Fk(\)\))39 b Fm(_)f(:)p Fh(R)q Fk(\()p Fh(x;)29
b(F)2360 3864 y Fg(2)2437 3838 y Fk(\()p Fh(x)p Fk(\)\))p
eop end
%%Page: 22 22
TeXDict begin @landscape 22 21 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 744 1293 7 v 2019 1048 7 305 v 2078 939 a
Fn(Par\210dei)-6 b(gma)p 3305 1048 V 2019 1055 1293 7
v 3308 1124 73 318 v 2088 1124 1293 73 v 150 1538 a Fl(Jewr\240ste)58
b(ti)-5 b(c)58 b(ex\240c)g(fr\210sei)-5 b(c:)580 1878
y Fh(P)24 b Fk(\()p Fh(u)p Fk(\))38 b Fm(_)g Fh(P)24
b Fk(\()p Fh(v)6 b Fk(\))580 2218 y Fm(:)p Fh(P)24 b
Fk(\()p Fh(x)p Fk(\))38 b Fm(_)g(:)p Fh(P)24 b Fk(\()p
Fh(y)6 b Fk(\))150 2558 y Fl(Oi)57 b(fr\210sei)-5 b(c)59
b(aut\350c)f(e\320)-10 b(nai)59 b(antifatik\350c)f(\(giat\320?\))76
b(all\210)58 b Fj(den)h Fl(mporo\324me)f(na)150 2802
y(bg\210loume)g(thn)f(ken\240)h(fr\210sh)g(me)g(qr\240sh)g
(an\210lushc!)150 3120 y(Pwc)g(mporo\324me)h(na)e(l\324soume)h(aut\354)
g(t)-5 b(o)57 b(pr\354blhma?)p eop end
%%Page: 23 23
TeXDict begin @landscape 23 22 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 803 973 3726 7 v 803 1277 7 305 v 861 1168 a Fn(Fr\210sei)-6
b(c:)103 b('Enac)77 b(Isod\324namoc)g(Ori)-6 b(sm\354c)p
4522 1277 V 803 1284 3726 7 v 4525 1353 73 318 v 871
1353 3726 73 v 150 1767 a Fj(Ori)h(sm\354c.)77 b(Fr\210sh)58
b Fl(e\320)-10 b(nai)58 b(\350na)g Fj(s\324no)-5 b(lo)58
b Fl(lektik\270n.)150 2085 y(Me)f(t)-5 b(o)l(n)58 b(parap\210nw)h(ori)
-5 b(sm\354)58 b(den)g(epanalamb\210noume)i(lektik\210)d(pou)h(e\320)
-10 b(nai)150 2329 y(\320dia)58 b(\354pwc)g(k\210name)g(kai)f(sthn)h
(pro)l(t)-5 b(asiak\240)58 b(lo)-5 b(gik\240.)150 2647
y(H)57 b(\350nnoia)i(thc)e(parago)l(nt)-5 b(opo\320)m(hshc)60
b(pou)e(ako)-5 b(louje\320)57 b(mac)h(bohj\210ei)g(na)g(mhn)150
2891 y(epanalamb\210noume)i(lektik\210)d(pou)h(e\320)-10
b(nai)58 b(i)-5 b(sod\324nama.)p eop end
%%Page: 24 24
TeXDict begin @landscape 24 23 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1231 67 2869 7 v 1231 371 7 305 v 1290 262 a Fn(Parago)-5
b(nt)f(opo\320)l(hsh)77 b(Fr\210sewn)p 4093 371 V 1231
378 2869 7 v 4096 447 73 318 v 1300 447 2869 73 v 150
758 a Fj(Ori)-5 b(sm\354c.)77 b Fl(')-19 b(An)57 b(k\210poia)h(ap\354)g
(t)-5 b(a)57 b(lektik\210)h(pou)f(apo)l(telo\324n)i(th)e(fr\210sh)h
Fh(\036)150 995 y Fl(enopoi)-5 b(o\324nt)g(ai)59 b(me)f
Fk(MGU)f Fh(\015)10 b Fl(,)57 b(t\354)l(te)g(h)h(fr\210sh)g
Fh(\036)3169 932 y Fe(0)3274 995 y Fl(pou)g(prok\324ptei)h(ap\354)e
(thn)150 1231 y(efarmo)-5 b(g\240)58 b(t)-5 b(ou)58 b
Fh(\015)67 b Fl(sthn)58 b Fh(\036)f Fl(l\350get)-5 b(ai)57
b Fj(par\210go)l(nt)-5 b(ac)58 b Fl(thc)f Fh(\036)p Fl(.)150
1764 y Fj(Parade\320)-5 b(gmat)g(a:)288 2075 y Fm(\017)86
b Fl(H)57 b(fr\210sh)i Fm(f)p Fh(P)24 b Fk(\()p Fh(F)g
Fk(\()p Fh(y)6 b Fk(\)\))p Fh(;)85 b(R)q Fk(\()p Fh(F)24
b Fk(\()p Fh(y)6 b Fk(\))p Fh(;)29 b(y)6 b Fk(\))p Fm(g)58
b Fl(e\320)-10 b(nai)58 b(par\210go)l(nt)-5 b(ac)59 b(thc)f(fr\210shc)
460 2312 y Fm(f)p Fh(P)24 b Fk(\()p Fh(x)p Fk(\))p Fh(;)86
b(P)24 b Fk(\()p Fh(F)g Fk(\()p Fh(y)6 b Fk(\)\))p Fh(;)85
b(R)q Fk(\()p Fh(x;)29 b(y)6 b Fk(\))p Fm(g)p Fl(.)77
b(Ta)58 b(lektik\210)f Fh(P)24 b Fk(\()p Fh(x)p Fk(\))57
b Fl(kai)h Fh(P)24 b Fk(\()p Fh(F)g Fk(\()p Fh(y)6 b
Fk(\)\))460 2549 y Fl(enopoi)-5 b(o\324nt)g(ai)59 b(me)e
Fk(MGU)h Fm(f)p Fh(x=F)24 b Fk(\()p Fh(y)6 b Fk(\))p
Fm(g)p Fl(.)288 2860 y Fm(\017)86 b Fl(H)57 b(fr\210sh)i
Fm(f)p Fh(P)24 b Fk(\()p Fh(v)6 b Fk(\))p Fm(g)57 b Fl(e\320)-10
b(nai)59 b(par\210go)l(nt)-5 b(ac)59 b(thc)e(fr\210shc)i
Fm(f)p Fh(P)24 b Fk(\()p Fh(u)p Fk(\))p Fh(;)29 b(P)24
b Fk(\()p Fh(v)6 b Fk(\))p Fm(g)p Fl(.)75 b(Ta)460 3097
y(lektik\210)57 b Fh(P)24 b Fk(\()p Fh(u)p Fk(\))56 b
Fl(kai)i Fh(P)24 b Fk(\()p Fh(v)6 b Fk(\))57 b Fl(enopoi)-5
b(o\324nt)g(ai)59 b(me)f Fk(MGU)f Fm(f)p Fh(u=v)6 b Fm(g)p
Fl(\).)288 3408 y Fm(\017)86 b Fl(K\210je)57 b(fr\210sh)i(e\320)-10
b(nai)58 b(par\210go)l(nt)-5 b(ac)59 b(t)-5 b(ou)57 b(eaut)-5
b(o\324)58 b(thc.)77 b(Ep\320)-5 b(shc,)59 b(h)460 3645
y(pro)l(tupopo\320)m(hsh)g(met)-5 b(ablht\270n)58 b(mpore\320)h(na)f
(ermhneute\320)g(san)460 3882 y(parago)l(nt)-5 b(opo\320)m(hsh.)p
eop end
%%Page: 25 25
TeXDict begin @landscape 25 24 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 630 866 4071 7 v 630 1170 7 305 v 689 1061 a Fn
(Anajewrhm\350noc)78 b(Ori)-6 b(sm\354c)76 b(thc)i(An\210lushc)p
4694 1170 V 630 1177 4071 7 v 4697 1246 73 318 v 699
1246 4071 73 v 150 1660 a Fl('Est)-5 b(w)57 b(fr\210sei)-5
b(c)59 b Fh(\036)e Fl(kai)h Fh( )6 b Fl(.)76 b(')-19
b(An)58 b(up\210rqei)g(\350na)f(jetik\354)h(lektik\354)f
Fh(p)g Fl(se)g(\350na)150 1904 y(par\210go)l(nt)-5 b(a)58
b Fh(\036)1076 1841 y Fe(0)1182 1904 y Fl(thc)g(fr\210shc)g
Fh(\036)f Fl(kai)h(\350na)g(arnhtik\354)f(lektik\354)g
Fm(:)p Fh(q)64 b Fl(se)57 b(\350na)150 2148 y(par\210go)l(nt)-5
b(a)58 b Fh( )1091 2085 y Fe(0)1197 2148 y Fl(thc)g(fr\210shc)h
Fh( )6 b Fl(,)58 b(kai)f(t)-5 b(a)58 b(lektik\210)f Fh(p)g
Fl(kai)g Fh(q)64 b Fl(enopoi)-5 b(o\324nt)g(ai)58 b(me)150
2392 y Fk(MGU)f Fh(\015)10 b Fl(,)57 b(t\354)l(te)h(me)g(t)-5
b(o)l(n)57 b Fj(kan\354)l(na)68 b(thc)e(an\210lushc)57
b Fl(mporo\324me)i(na)150 2635 y(par\210goume)f(th)g(fr\210sh:)580
2976 y Fh(S)10 b(U)19 b(B)9 b(S)h(T)24 b Fk(\()p Fh(\015)10
b(;)83 b Fk(\()p Fh(\036)1681 2904 y Fe(0)1767 2976 y
Fm(n)39 b(f)p Fh(p)p Fm(g)p Fk(\))f Fm([)g Fk(\()p Fh( )2594
2904 y Fe(0)2681 2976 y Fm(n)g(f:)p Fh(q)6 b Fm(g)p Fk(\)\))p
eop end
%%Page: 26 26
TeXDict begin @landscape 26 25 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 67 1293 7 v 2019 371 7 305 v 2078 262 a Fn(Par\210dei)-6
b(gma)p 3305 371 V 2019 378 1293 7 v 3308 447 73 318
v 2088 447 1293 73 v 150 818 a Fl(Jewr\240ste)58 b(ti)-5
b(c)58 b(fr\210sei)-5 b(c)59 b(pou)e(mac)i(od\240ghsan)f(na)f
(anajewr\240soume)i(t)-5 b(o)l(n)150 1059 y(ori)g(sm\354)58
b(thc)g(an\210lushc:)580 1387 y Fm(f)p Fh(P)24 b Fk(\()p
Fh(u)p Fk(\))p Fh(;)85 b(P)24 b Fk(\()p Fh(v)6 b Fk(\))p
Fm(g)580 1715 y(f:)p Fh(P)24 b Fk(\()p Fh(x)p Fk(\))p
Fh(;)86 b Fm(:)p Fh(P)24 b Fk(\()p Fh(y)6 b Fk(\))p Fm(g)150
2043 y Fl(Gia)57 b(na)h(k\210noume)g(an\210lush)g(jewro\324me)g(t)-5
b(ouc)58 b(par\210go)l(ntec)h Fm(f)p Fh(P)24 b Fk(\()p
Fh(u)p Fk(\))p Fm(g)56 b Fl(kai)150 2284 y Fm(f:)p Fh(P)24
b Fk(\()p Fh(x)p Fk(\))p Fm(g)57 b Fl(t)-5 b(wn)58 b(parap\210nw)h
(fr\210sewn.)77 b(Ta)58 b(ant\320)-5 b(st)g(oi)g(qa)58
b(jetik\210)f(lektik\210)150 2524 y(enopoi)-5 b(o\324nt)g(ai)59
b(me)f Fk(MGU)f Fm(f)p Fh(u=x)p Fm(g)p Fl(.)77 b(Op\354)l(te)57
b(me)h(qr\240sh)g(t)-5 b(ou)57 b(n\350ou)h(ori)-5 b(smo\324)58
b(thc)150 2765 y(an\210lushc)h(pa\320rnoume)g(thn)e Fj(ken\240)67
b(fr\210sh.)150 3315 y(Proso)-5 b(q\240:)77 b(Den)58
b Fl(ja)g(qrhsimopoi\240soume)g(t)-5 b(o)l(n)58 b(anajewrhm\350no)h
(ori)-5 b(sm\354)150 3556 y(thc)58 b(an\210lushc)g(xan\210)h(sth)e
(sun\350qeia)h(\(o)f(arqik\354c)g(ori)-5 b(sm\354c)59
b(arke\320)f(gia)f(t)-5 b(ouc)150 3797 y(skopo\324c)58
b(mac\).)p eop end
%%Page: 27 27
TeXDict begin @landscape 27 26 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 1418 448 2495 7 v 1418 752 7 305 v 1477 643
a Fn(Idi\354)-5 b(thtec)78 b(thc)g(An\210lushc)p 3906
752 V 1418 759 2495 7 v 3909 828 73 318 v 1487 828 2495
73 v -150 1243 a Fj(Je\270rhma.)f(\(Orj\354)l(tht)-5
b(a\))-150 1486 y Fl('Est)g(w)57 b(h)h(b\210sh)f(gn\270shc)h
Fh(K)12 b(B)d Fl(.)76 b(An)58 b(h)f Fh(\036)g Fl(mpore\320)i(na)f
(apodei)-5 b(qje\320)58 b(ap\354)g(thn)f Fh(K)12 b(B)-150
1730 y Fl(qrhsimopoi\270nt)-5 b(ac)59 b(an\210lush,)f(t\354)l(te)f
Fh(K)12 b(B)57 b Fm(j)-29 b Fk(=)48 b Fh(\036)p Fl(.)-150
2048 y Fj(Je\270rhma.)77 b(\(Plhr\354)l(tht)-5 b(a)66
b(di\210yeushc)h Fi(\(refutation-completeness\))p Fj(\))-150
2292 y Fl(An)57 b(\350na)g(s\324no)-5 b(lo)56 b(fr\210sewn)i
Fk(\001)f Fl(e\320)-10 b(nai)57 b(mh)g(ikanopoi\240simo,)g(t\354)l(te)f
(up\210rqei)h(mia)g(ap\354deixh)-150 2536 y(thc)h(ken\240c)g(fr\210shc)
h(me)f(qr\240sh)f(an\210lushc)i(ap\354)f(t)-5 b(o)57
b Fk(\001)p Fl(.)-150 2854 y(Oi)g(apode\320xei)-5 b(c)60
b(t)-5 b(wn)57 b(jewrhm\210t)-5 b(wn)59 b(skiagrafo\324nt)-5
b(ai)58 b(st)-5 b(o)57 b(bibl\320)-5 b(o.)-150 3172 y
Fj(Proso)g(q\240:)77 b Fl(H)58 b(plhr\354)l(tht)-5 b(a)58
b(di\210yeushc)h(i)-5 b(sq\324ei)58 b(m\354)l(no)g(gia)f(t)-5
b(o)l(n)58 b(anajewrhm\350no)-150 3415 y(ori)-5 b(sm\354)58
b(thc)g(an\210lushc.)p eop end
%%Page: 28 28
TeXDict begin @landscape 28 27 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-404 -180
y Fo(')p -404 3741 14 3585 v -404 4094 a(&)5790 -180
y($)p 5790 3741 V 5790 4094 a(\045)p -51 4094 5505 14
v -51 -180 V 738 35 3856 7 v 738 339 7 305 v 797 230
a Fn(Ap\354deixh)77 b(thc)i(Plhr\354)-5 b(tht)f(ac)78
b(Di\210yeushc)p 4586 339 V 738 346 3856 7 v 4590 415
73 318 v 807 415 3856 73 v -210 3872 a @beginspecial
0 @llx 0 @lly 305 @urx 158 @ury 3367 @rwi @setspecial
%%BeginDocument: resolution-completeness.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: resolution-completeness.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Jon
%%CreationDate: 11/3/09
%%BoundingBox: 0 0 305 158
%%HiResBoundingBox: 0 0 304.0782 157.6099
%%CropBox: 0 0 304.0782 157.6099
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 68 8
%%BeginData: 5866 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FD09FFA8FFFFFF7DFD11FF7DA8A8FD0FFFA8FFFFA8A8A8FFFF
%A8FD05FF7DFD07FF7DFF7DA8FD33FF7D52A852527DA8A8527D527DA87D27
%7DA87D527D527D527D527D7D7D527D52FFA852A87D52A8A852527D525252
%7D7D7D527D5252527D5252527D7DA85252A8A87D52527D527D527D527DA8
%527D7D5252527DA8FD2DFF7D5252277D52FF7D52277D7DA85252A8FFFD05
%527DFD04527D525252A8A852FF52527DA8527D527D527D527D527DFD0452
%277D525227A8A85227A87D7DFD04522752522752FF527DFD045227A8FD2D
%FFA8FFA8FF7D7DFFFFA8FFA8FFFFFFA8FFFFFFA8FFA8A8A8FFA8A8A8FFA8
%FFA8FFA8FFFFFFA8FFA8FFA87D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FD55FFA87DFD
%7EFFA87DFD7EFFA87DFD7EFF7D7DFD7EFFA87DFD7EFFA87DFD7EFFA87DFD
%7EFF27F8A8FD7DFF7DF8FD7EFF7D52FD7FFF7DFD5DFFA8A8FFFFFFA8FD07
%FF52A8A8FD05FFA8FFFFFFA8A8A8FF7D7DA8FF7DA87DFD08FFFD04A8FFFF
%FFA87DFD04FFA8FFA8A8A87DA8FFA8FD3EFF27A87D7D527D7D7D527D52A8
%FF7DA8A8527DA87D52FD057D527D7D52527D7D7D5252527DFFFF7D7D52A8
%52A87D7D52FF7D7D527D7D7D527D7D527DA8527D52FD047DFD3AFF7D7D52
%7D5252275252522752A8A852FF7D5252FF27522752525227525252277D52
%52527D525252A8A852275252527D7D52277D7D7D5227525252275227A87D
%7D5252527D2752A8FD3CFFA8FFFFFFA8FFA8FFA8FD05FFA8FFFFFFA8FFA8
%FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD5CFFA8A8FD7EFFA87DFD7EFFA8
%7DFD7EFFA87DFD7EFF7D7DFD7EFFA87DFFA8A852A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8A87DFFFFFF7DFD07FF7DA8FFFFFFA8A8FD32
%FFA8A87D27F8F8527D527D527D527D527D527D527D527D527D527D527D52
%7D527D527D527D527D527D527D527D527D527D527D527D527D527DFFA852
%52527D5252527D527D527D5252A87D7DA82752FD047D5252527D527DFD28
%FF52F8FFFFFF7DFD33FF7D7D7D52527D7D52527D2752275252FF52A8A8FD
%04527DFD0752FD28FF52F8A8FD37FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFA8FFA8A8A8FFFFFFA8FFA8A8A8FD29FF7D27FD7EFFA87DFD6BFFA8FD04
%FFA8FD0CFFA8FD1DFFA8FD3FFFA852A8A8A87DA8A8A8FFA87DA87DFF7D52
%52FFA87D52FF7DA87DA87DFD04A87D7DA87DA8A8A852FD07A87DFF7DA8A8
%FF7DA87DA8A8A87D7D7DA852527DA8527D52A87DFD38FFA87D527D275227
%5252FF52275252A8A852FF7D7D27A8FFFD055227522752527DA852275227
%52275227527D525252A8A8277DA852275227FD04527D5252527DFD0652FD
%39FF7DA8FD057DA8FF7D7DA87DFF7DA8FFFF7D7DA8FF27527DA8FD067DA8
%A8FD097DA87DA87DFFA87D7DFFFD0B7DA87D7D7DA87D7D7DFD4FFF7DA8FD
%0BFFA8FD7EFF7D7DFD7EFFA87DFD39FFA8FD44FFA87DFD37FFA87D7D7DA8
%A8A87DA8A8FF52FFFD05A8FF527DA87D52A8A8A87DFD2BFFA87DFD37FF7D
%A87D52527D275227525252A87D27525227FD04522752527D2752A8FD2AFF
%7D7DFFFFA8A8FD34FF7DA87DA87DA8FD047D52FF7DA87DA87DA87DA87D7D
%52A87D7D52A8FD2BFF7DA827F8F8FD327DFD48FF5252A8A85252FD32A8FF
%FF7DA8FD44FF52F8FD37FF7D52527D527D7D7D527D527D7DFD3AFF5227FD
%37FFA8275227FD07522752A8FD39FFA852FD39FFA8FD07FFA8FFA8FD3BFF
%A8FD61FF7DA8FD05FFA8A8FFFFA8FD0BFFA87DFFFFFFA8A8FD0DFFA87DFF
%FFFFA8FD05FFA8FFFFFF7D7D7DFD42FFA827527D527D527DFD05527D527D
%52FF7D7D527D52FF5252527D7D527DA852FF7D7D7DFD04527D527D52527D
%7D52527D7D527DA87D527DFF7D527DFD43FF277DFD04527DFD06527D5252
%A87D7D522752A8A8FD0552A87D52A87D7D7DFD04527D522752277D7D7D52
%7D525252FF525252FF527DFD43FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8A8A8FFA8FFA8A8FD62FFA87DFD7EFF7D7DFD7EFFA87DFD
%7EFFA87DFD7EFFA87DFD3BFFA8FFA8FD05FFA8FD3AFF7D7DA85227277DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA8FFA852FF7D7D527D7DFD04A8
%7DA8A87DA8A8A87DA8A8FD31FFA87DA85252277D7DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA8A8FFA87DA852527D527D275252FFFD04522752275252
%527DFD30FF27F8FD37FFA87D7D52A8FD047D5252A8A87DA8FD047D527D7D
%A8FD30FF7DF8FD40FFA87DFD3CFF5252FD7FFF7DFD58FFA8A8A8FD13FFA8
%FFFFFFA8FD0CFFA8FFA8FD14FFA8FD09FFA8FD05FFA8FD30FF7D52527DFF
%A87DA8A8FF7DA8A8FFA8FFFD06A87D7DA87D52A8A8A87DFFFD05A8FFA87D
%A8A852FD04A87D52FFA8FFFFFD05A87DA8A8FF7D52A8FF7D7DFD04A8FFA8
%7DA8FFA8527DA8FD30FF52A8272752522752A852277DA827A87D27525227
%525227522752277D27277D7D27272752275227FF7D52522752FF27522727
%7DA85252FD042752522752275252522752522727A87D5227A8A852A8FD31
%FF7DA87D7DA87DA87DFF7DA8A8FF52FFA8A87DA87DA87DA87DA87DA8A8A8
%7DFF7D7D7DA87DA87DA8FFA87DA87DA8FFA87DA87DFFFD04A87D7D7DA87D
%7D7DA87DA8A8A87DA87D7DA8A87D7DA8A87DFD51FFA8A8FDFCFFFD60FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2009-11-03T13:47:23-08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-11-03T13:47:23-08:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-11-03T13:47:23-08:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6nd3X5wwXmpTWllOYNVn&#xA;tLmyo9vM1lCtz6FzC0cxVFY2fCQKhYeoGNTyxVE+Stc/MnUtL12a+mjmv7OzCWtvHFEAuqNbKZrY&#xA;7opNtco6/wB7RlcVYUxVAWU/57XV5arqMBtbCK5tHm+r/U2llt/rEfqcpWaOjBBIXRYhVOPRuSsq&#xA;i/MVp+aGq+aLSxmt2Xyt+lFa8Nu8SVs4yDDRg3qlXXkZq/ErheFBiqvrV7+co8yXMemWqfoQ3cQg&#xA;m4WzuIBHJy+B5YzxZ1Tm3MtRtlWmKses73/nIWSOO4uLaVZ47bhLGFsAvN/0c0riPmA8iVvRF8QH&#xA;wrXruqmFlqn57G9a3vLIi2kk4yXcUNnyiAM4VoY2nAZGf0eau5b068W5b4qmuh335wPrdgNWtEXT&#xA;2vLkagqLboiQcaQmNxJNJIgZarUIxDb1pTFUFJpXnZ4/NGoRWV99Yubi0Ol211chmC/XA1wixpKY&#xA;eEcSKyOOLcTwIJSrKo6G6/NyTRVWaAQ6nLrHp+oBbkJpzW5PNhR1ULP8P7bU7t1xVik3mr88Gn/R&#xA;NqIX8xxaU19LYNFaKBITOlJOMsn+7VVY+Lb/AA8huxxVPWu/zxjnlRIEnVL23WFmjtY0e1oeZLrI&#xA;z1IYc19MfEtFYA1xVKNTvv8AnIaTS0it7ZlvZrJ1dkjso+F1JHcDdvVlAMcnp8WU048aivLFW7lf&#xA;z2u9St50s5rc6fcStYSXD2RWRZI5Y0W6S3l4tGTHHyIHJeZKnpxVTPyLb/mvb6Xd6drFu0Vlb6VI&#xA;uniQxyzyXLKOAeb1mf1A/qAgqV48PiBrVVV8qXn5xRSXdveacv1aHSpP0Wl16Ij+vRWtmbeOSSKQ&#xA;yFXne5V69lXfuVUvZvzltdXk1CwsLm5a9j0xZVujZqqpDLfPcI0azmND6UkKsY6FjQ/CajFVi6n/&#xA;AM5CJyD6eZPTWXf/AEAeqyQqF4EMftSKxUOFrXrtxKq+00781L3yz5tOp211bazfz2EdokcsBLRR&#xA;ukM7RBXeFQ8KkvQAGp27Yqu1CX89LdZ7TTYPRgggufqjItpMPWgW5a2iRpXLNDIsdqoeT4+Tvy6f&#xA;CqyX8vb78yZ9U1KLzXbNHYKldPmdIEYsLq4QD9y7fatlgc1H2iflirOsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVYr5G/46Pm/wD7bj/9QNpirKsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVedflR508t6/rfne10m6a4&#xA;uLXWDNcIYZouCPbxQLUyogqZLWVadfh8KYq9FxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KqV1dWtpbS3V3MlvbQKZJp5WCRoiirMzMQFAHUnFVXFXYq4kAVOwHU4qlmn+Zv&#xA;L2pRxy6fqEF5HLObVHgcSKZhF6/Cq1AJi+MV6qQe4xVM8Vdiqh9fs/rgsxMpumV2EQNTSPgXrToQ&#xA;JkND44qh7TXtGvL+ewtbuOa8tiwnhQ1KmMhX36fCzcT4Go6g4qwH8sPL2g+W/Mnm+/S/glm83+Yb&#xA;l7BldSZfQiM00QUE/HBOblWHgtcVem4qpXl3bWVpPeXcqw2ttG008zmipHGpZmY+AAriqy21Gyup&#xA;DHbzLKwiiuPh3HpT8vTevSjem1MVdf6jYafAs99OltC0kUKySMFUyTyLFGtT3Z3CjFURiqHvdRsb&#xA;EQm7nSAXEyW0HM05zSmiIvizHpiqy21bTrq9u7K3uElurEoLuJTUxmQclDdq07Yqi8VdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVSTzd5cbzHpY0mS5+r6fPIv6RCorSSQqCwjQuGRayBeVVPw1HfF&#xA;Xn11+SnmS9giF35pJuI7GKweVIG+MQBFjlIeVviHp86fZLEniG+LFUL/AMqD1lSir5kSSKNwyK1s&#xA;6kKhhCVInILcIKE0HXw2xVkHk78r9d8vDUZn8wfXLy7sPqVpJLFNJHAyxRxR1hedo5IozDyVOIPx&#xA;uOVDiq66/K3UZfK9lo1tqkdnJbXVzcO0UUvpiG4tJ7RLaOkqy+nCk6cOTmgRQKAKAqp6p+UuoXmm&#xA;eXrWPWxHPoqmO4le35i4Q3lteAFY5IQtPqnp9KcXbYdMVSDT/wAhvMVrBHGfNIcwx8I1a2kkTezj&#xA;tpOSvOdpZEMrhaVY/FyHRVdb/kJrFtbPBH5jjJmiEdxOLV0llZYtOjDyMZ3DkHTC3xqRWRqggkYq&#xA;6X8g9XGmzWFn5ijtFnW8WSdLRuRa7vDcq/FZlHONW4qd6EAilBiqkv5LNqV7qEmn+aWjuYL++N68&#xA;MMqFbm8hu3bkPW3dRqoBZTuigVqfhVZrd+SNbu/JU/lY6jBBF/o62t4IppiI45EklR45ZiSPhKRj&#xA;nRVp4Yqw6P8AInzKbO5t5/NKy/W043Qa3keOdiZgWmjac8youCyfFUOoNabYqmnmj8ndX1iJo7fX&#xA;VtQLWztoz6MnwvaWV7aGYBZhRme9SQeBjXc9cVTPzF+Wmp6xfS3b6unJxprQ+rFK7RPp91DcyKpW&#xA;dFaKY29SjKSHPLlirGP+VCa+1tHG/mseqnKrraSqoB9NgECXSFP3iyEkN+141JVRGnfkfr1nr2l6&#xA;k/mRJ7bT54pXszaGPmsU8UwWqShOS+kyofTAHI/CKnFU0v8A8obq6v766TVlt1vdQuL4xpAfhE8l&#xA;rIrKwkU+sv1No+fThK4p15KpI/5C6wiWotfMCQyW9rbQmX0ZeTXEEJWS4J9avKSfjN/rAdwKKvZc&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYr5G/wCOj5v/AO24/wD1&#xA;A2mKsqxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV4d5I8weYvPGqfmBo/l/UbryfqOla2WnvfQtb1WZ4hamIxzKfstYs1VYfaGKpt5K/Kz82N&#xA;G1fVZ9Y/Mi81K1uhH9UYRI5BUsXrb3S3MUP2h/dHfv2xVmP+FfN//U633/SHpv8A2TYq7/Cvm/8A&#xA;6nW+/wCkPTf+ybFXf4V83/8AU633/SHpv/ZNirv8K+b/APqdb7/pD03/ALJsVd/hXzf/ANTrff8A&#xA;SHpv/ZNirv8ACvm//qdb7/pD03/smxV3+FfN/wD1Ot9/0h6b/wBk2Ku/wr5v/wCp1vv+kPTf+ybF&#xA;Xf4V83/9Trff9Iem/wDZNirv8K+b/wDqdb7/AKQ9N/7JsVd/hXzf/wBTrff9Iem/9k2Ktp5W82h1&#xA;Lec75lBBKm004Ajw2t8VY3+aei+d7/U538uLchD5e1O3DxSMqG9leI2qoFuLbhKOL8ZSGC+B7KpB&#xA;rVr+eOpaPqejxwyW1tPbahFZen9XSVfTT/Qk+s+u71lj4VY8SJOdSVpRVH3F/wDnxCtzJBbPdtDM&#xA;gs4vTsYxLbk3Dh5izrRwkUCyKhHxOeJHZVL9Qk/PfU7STTrnT5vqzzxSC4ha0t5wY7kMqchIg9Ex&#xA;QlnI+LkQPskgKs1gtPPFjrmo6Xp6sPLsWmyjSbmV45JBfNxaMlpPUdvieQfFRQABxpQsqwHQf+hg&#xA;NOhkhhspm+tyLLczXxtbiSN/Sij5Rfv0Vucu7qXA4huPE9VU+vbv8+jeTR2kESgJctEzLamE3Ef1&#xA;l4I1PPn6EipbKGb4+TvyIp8KqFOq/n5HeoRaPPbq8Zo0FlGHjrAf3gWVyGKGQPxfrXjx2GKvYsVS&#xA;q780aLaa1Fos8zDUJY1nEaxuyrG7MiO7qpVAzRsAWPUe4qquPmjy0ApOrWQDrzQm4i3UkryHxbiq&#xA;kfRiqJfVdLjiuZXvIEis24XcjSIFhagNJCTRDRh1xVD/AOJfLxuba1XUrZ7m8kMNtCkqMzyLH6pU&#xA;BSdxH8X0jxGKpfZef/LF7rZ0a3uJGvvXltUrBMImlg9YSqspX0zwa0lU79V9xVVEJ5y8uzaxZ6Ra&#xA;XaXl5exyzRi2ZZlWOE8XeRkJCjl8PzxVEf4n8tciv6WsuQLgj6xFUGMEuPtfshTXwxVz+Z/LSAl9&#xA;WslAFTW4iG1FNd28JF+8eOKoa585+XbfU5NMN0Jb2Kwm1WSKL46WsBjDMSNgT6yFR3G+KpH5PsPJ&#xA;fl298y6jaanaKdf1IaldB5Y1eJ54Y4/Skq3Vpo5XUHuxHbFU/tPOXlK7tRd22tWUlsRy9YXEXHjy&#xA;KBqluhZSAe+Koz9M6P6np/Xrf1OUScPVSvKcVhWlesg+x/N2xVRk8yaIiwOt5FLDPM9v68ciPGjx&#xA;RPNJ6jA0UKsZr4YqvfX9CjSKSTUbVEnXnA7TRgOvIJyQlviHJgNu5xVaPMvlwxrINVszG4dkcXEV&#xA;CsQrIQeXRBu3h3xVCR+d/Kkt5LaxapbSNbqzXMqyoY4uIhIEj1opYXKFfHFVDTfzD8pajc3cNtfx&#xA;mKyMiz3jlUt6wyLC9JWIXaV+Huem1CVXWv5heVLq6gtIbzlcT3t3pvplSDHcWKzNMJa/3Y42shUt&#xA;9qm2Kp/b3FvcwR3FvKk0Eqh4pY2DIyncFWFQQcVVMVdirsVdirsVdirsVdirsVdirsVdirsVYr5v&#xA;/LnRfNdwkupyzBVha3Cw+mjqkiyI/pzcPWj9RZSrhXowABGKsV1P/nHvy5qE91PLqt8Jb1Cty1Lc&#xA;8i0N1AWUelRfgv32XuAeuKp5B+UmgwaRrWmx3VwF1u4S5uLikCzIyXLXgCyJGrU9eRyCTyUH4SpA&#xA;OKqXlf8AJvy55b1C0v7C7u3nsp5Z43m9BncTJKHjldYleQc7l3BJqOgNMVTnRPI1jpw1I3F1PqU2&#xA;qEG5nuPTV/hiMPIeisY9QxtxaT7TCgJ2GKoHyl+WGk+WNafVrS8ubieS1WzdJ/S4lI47eGNv3aR/&#xA;EsVlGu2x3PfFWKeU/wAijbWgOv3oN5FyFsLIqyoRLaSxy85IY91/R0KqgQKqVT4l6Ko4/kB5YW4E&#xA;8GpahE3qJOyFrd0Mqy2krOQ0NfjbTYarXiN6AVxVGaN+Smh6TBNDbapfukulTaOFlaBlSK4t7a3k&#xA;kX91y50so2ALcQa7U2xVINM/JvytrGo6myalqUT6XfPaSkGBC0htoGZo3WMsBwcDqO4NV2KqY/8A&#xA;Qv8A5dW5jnj1fUR6PAQxObZkVY7m3uVWnoCo52UfXelcVV9P/IbyvZ2Wn2f127uINNkjktlnW1k2&#xA;SD0JEYtASyyA8tz8B+xx3qqi/wDlTWif4ct9BGo3v1a3u5bxXYwuxaayksDHxaMoIxDKaKFoD0ot&#xA;AFVbUPyj0S90/Q7N7++jOhVFtMrxu8ga6gvCJTLHKW/fWcZr1pUEmuKpHYf848+W7JFEWr6irosa&#xA;xyIbdCphtEs0O0VGIjjB+KvxbihrVVVj/IDy7Fapax6tqPoRx+kiMbeoAisYgQyRI4PHSodwwINS&#xA;CDiqrJ+RGgPaSWY1XUEt5FuI24m358Lq9+uyDkYj+1VPkcVUx/zj75QKcHvL5lIukduUKu0d7Fdx&#xA;yqWWId9QlYeGw6A1VZ95d0O10LRrfS7ZucUHMlykcZZ5XaSRikSxoOTuTsuKpjirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYr5G/wCOj5v/AO24/wD1A2mKsmW5tmne3WVG&#xA;uI1DSQhgXVWrxJXqAaGmKqmKuxV2KuxV2KuxV2KuxV2KuxV2KuxVg35hat5psJZ205bsWsWmzT2A&#xA;sIxJLcakjjhbsTBdhKpTgClGJNemyrH3/Mf80Ut5eHlj1rhZLmG3iWG5PqGC6a2BL0RRSNRcVIAd&#xA;dlocVQEX5xfmMbmRX8pTvAEcwhbK+jkYmK8kRgHHxANaxKwG59TbfbFUyt/On5iWHlPTZotLm1jV&#xA;7i41tpo7m1uIJGis5p5rRVSimP1oURI+QPUfaOxVUpPzQ/MdbmCIeWC8EkDPJexW140aMoLRuUdY&#xA;pqT/AAoqBDxJqWbiRiqUS/mV+blpotwLfy/c3F/O+pyWwnsriaSIpc3fowkwiNCEjWAKSPiB79lU&#xA;cfzN/Mey0S4mi8t3N/cwfXpE9S1u1adkuboKEQgNCiRxRPwepKyBVNVxV6L5I17U9c0M3mp2Zsrt&#xA;Lm6tzEUkjDpBO8ccqpKA4WRFVx88VT/FXYq7FXYq7FXYq7FXYq7FXYq8F/Li31H8wdZ/MnQfN0Xp&#xA;adputvHFJpk99YmWcqbeQsY7gLIix2kTKrqd2J9sVZJ5M/5xu8ieUr2+udNv9aK36oJI11O5tOJQ&#xA;sft2DWbuPi/3YWp2xVln/KtPLv8Ay2a5/wCFBrn/AGW4q7/lWnl3/ls1z/woNc/7LcVd/wAq08u/&#xA;8tmuf+FBrn/Zbirv+VaeXf8Als1z/wAKDXP+y3FXf8q08u/8tmuf+FBrn/Zbirv+VaeXf+WzXP8A&#xA;woNc/wCy3FXf8q08u/8ALZrn/hQa5/2W4q7/AJVp5d/5bNc/8KDXP+y3FXf8q08u/wDLZrn/AIUG&#xA;uf8AZbirv+VaeXf+WzXP/Cg1z/stxV3/ACrTy7/y2a5/4UGuf9luKtp+W3l5HVhd62SpBFdf1tht&#xA;4g3hBxVj35o/mhqflPXNM020t7d0ukS4keeQo0o+sJE8MYoQvwtUv8VP5cVQMX/OQWl3FlPfW+jX&#xA;JtouRV5ZYULCO3nuGTiC7CV0tj6CEUl5KQ3Wiq2X8/7eJJJH0OQRpA9yr/WoQGjSeaCo5BWaj2sg&#xA;biDxJSv2jxVZX+X35i23nH9IJHaG0l08xiRfVWZWEjSJUEBKfHA/bpQ9SQFWX4q7FXYq7FXYq7FU&#xA;l83+aLbyxoj6vdQvNbxzW8DhGROJup0t0dmkZFCh5V5GuwxVK4PzV8lG1tZby/Gn3F2hkhsrgfvm&#xA;UTPApRY+Yk9V4m9LgT6ijktRiqnqX5t+SbF7T/TlmhuJZI5p0qFhjitp7mSVgwBZEFq6PwB4tsaH&#xA;bFXTfm15KTVI9PW+BP7xrm4dXihiSIXXqFpHULyV9PlBStaAnoDiqY2f5g+TrzVIdKg1JDqM5KR2&#xA;rpJHJzUzAxsHVeL1tZfgajfCdsVWXH5keR7YMZtWiRUaRGajlaxAMxqFI4mtFbox2WpxVDat+Znl&#xA;yz0iy1OzZ9Shv7xrCAQKwpLEkkswk5AFOEcDn4hvt+yeQVWRfmv5Ll0ue9S+Vp7eATy2KhjMWZQf&#xA;TjHEeo1WA+CvUE7GuKrvKd/5Rt7tmsWFpqXm8R689k4oS01rEh4sBw5cLfkV5VJ5N0xVES/mV5Gj&#xA;BLavEVDFSyh2GxjCtVVI4OZ4xG/2XLKFJJGKoVfzc/L97lYI9T58o1lEiwzsnxyemiVCfbc7qvUi&#xA;h6EVVQuv/nH5P0zT4ru2n/SHqO6SJHWP0QkUkvOcyBfTU+lty69RUVxVF67+avk7SfVia7+sXUaS&#xA;sYolcoDDFJI3OYKYkUeiys3L4WBB+y1FURP+ZvkSC5+rTavEkvMx0Kycaq7Rlg3Hjw5xOOdePwtv&#xA;8LUVX3n5heWNP1q40nUrtLO5ilihjL1IcyrGwJKgiMAzqKuQMVUda/MC30vXzo36LvbqVFt3kmgW&#xA;MqEupfSV1VnV3RG2dlUhTtirKsVdirsVdirsVdiqySCGWnqxrJTpyANPvxVywQqvFY1C1B4gClVp&#xA;xP0cRTFWja2xTgYk4UI48RSjGpFPciuKtxQQRV9KNY+X2uKgV+dPniq/FXYq7FXYq7FXYql3mDy/&#xA;pmv6d+jtSR3tTLDOUR3jPqW8qzRGqEH4ZEVqe2Ksfl/KPyJJG0ZspRE0K2xiFzcBPRSRpYouHqcS&#xA;kRkcIpFArFacdsVUn/Jj8uHSKI6UfRhEixRfWLjgqTxSRTIB6mwlW4cv4k1O+KtN+S/5dswZ9Olc&#xA;/vfUD3d24kE/1j1RIGlPLl9en6/zmmKou2/K7ydba1b61FbSjUreQTic3EzF5lNwfUkDOQ7H67N1&#xA;/mp0AxVQ1H8ofIuoWUNldWlw1rbNO9rELy6VYfrLo8ixqJaKtYl4qPhXeg3OKoqP8s/KMemw6atv&#xA;L9Vgu5b+JfXmqJ54Xt5G5cq0MczCnQVxVLovyU/L2MUFlOfhCqxurgMtPTFVYOGU0hUEg9KjucVX&#xA;eWfLvlm88wz6jHYPBfeU5l0PTZfrM7r9WgtFK1jZ+BPG9dTyBJoDWuKopvyo8jtZw2ZspPq1uCkM&#xA;f1m4osXqpMkQHqf3cUsMbxp0Qrt1NVVGw/J/yJYTwXFtaTJPbywzRyfWrgnlblDFWr0IUxD8fE4q&#xA;g2/If8sWtpLf9GzCKVPTlAvLurj0/SHNvVq3FWaldhyb+Y4qj738pfI15bT209pMYLh55XjW6uVU&#xA;NdRNFccVEnFfVEjM9B8TGp3xVTvfyd8g3jl5bGVSeajhczqFSRpXKKOfwpzuZWCjYFjTtiqJ1r8r&#xA;vJ+s6tNq1/bzPe3DI8rrcTIpMaxKtFVgo2t0/wAycVTW38q6PBr82vKkj6jMHHKSaSRE9RYkk9KN&#xA;2KR81toweIH2fc1VTfFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qwXy/wCYNB0S583XOs6la6ZbNrrqs95PHboT9RtNg0jKMVRmh/m7+WmuXl3Z6V5is7may4m4PPhG&#xA;A5IHCVwscn2T9hjiqc/4s8q/9Xmx/wCkmH/mrFXf4s8q/wDV5sf+kmH/AJqxV3+LPKv/AFebH/pJ&#xA;h/5qxV3+LPKv/V5sf+kmH/mrFXf4s8q/9Xmx/wCkmH/mrFXf4s8q/wDV5sf+kmH/AJqxV3+LPKv/&#xA;AFebH/pJh/5qxV3+LPKv/V5sf+kmH/mrFXf4s8q/9Xmx/wCkmH/mrFXf4s8q/wDV5sf+kmH/AJqx&#xA;V3+LPKv/AFebH/pJh/5qxVsea/KzEAaxYknYAXMNSf8AgsVXzeYNMh16DQpHcahcW0t7EvB/T9CB&#xA;0SRjJTgOLSqKE98VSI/mp5MFwbZrsrc/VkuRAQA5MkBulhAr/emFeYXoR3xVPX8x+XkSR31S0VIZ&#xA;BDKxniASQkgIx5bMSjbHfY4qp/4o0Mane6bLdJBc2BgWf1iI05XSs8Soz0DErGdhirY80+WGRnGr&#xA;2RRAC7C4ioAx4gk8u5FMVRFvrejXDxJb39tM87OkCxyoxdohWRUAJ5FB9qnTviqMxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KvEPyg0rVvMPmP8AMqy87Qwa5o9nrzQafFfWdqyGVAVkk4+n1a3S29u/euKv&#xA;QtF/KX8tdFvLu70vy5Y2017xFwBEGjPCpXhE3KOP7R+woxVOP8J+Vf8AqzWP/SND/wA04q7/AAn5&#xA;V/6s1j/0jQ/804q7/CflX/qzWP8A0jQ/804q7/CflX/qzWP/AEjQ/wDNOKu/wn5V/wCrNY/9I0P/&#xA;ADTirv8ACflX/qzWP/SND/zTirv8J+Vf+rNY/wDSND/zTirv8J+Vf+rNY/8ASND/AM04q7/CflX/&#xA;AKs1j/0jQ/8ANOKu/wAJ+Vf+rNY/9I0P/NOKu/wn5V/6s1j/ANI0P/NOKtjyp5WUgjR7EEbgi2hq&#xA;D/wOKoHXPKE2o67BrVrq1zpl7BYz6cjW6QOBHcyRyu49aOT4+UCU7bdMVYkfyC8uNo36KbUr4xCN&#xA;IUlrCHVE02XS6f3dDWGYt0+0B22xVLvNX5ETXVzLd6NqHOe9vXub6K+ZUi9OWW9mcL6UDM/xalIp&#xA;Qkck+EtirKNc/KbRda8xtr97dTfW2aBjCqQNB+4jZKenLHL9okNX7SkfCRviqQ2f/OPHl20EAj1a&#xA;+/0cQBKrbb/VjYlOX7rf/jlRV+beOKozQPyL0DRrvTLiHVL6T9FTxXMETfVwjvDbW9qnqcYgSPSt&#xA;B36sTir0rFXYqxHzN5r8xaX5j0/S7TTrW4g1COeSKaW4kjfjaLG8xKrE4HwyHjudx74qx7Rvz/8A&#xA;Kd1oMF/e295FepZLearawQNMtsptI7sszjb02SUcG+g0O2KpzJ+aekTaHreo2VvcrJofFbpLqFo0&#xA;EplaB4+a8lZopI2Vwp2p4EEqql1+bHlO20TVNZkaf6no901neAIvqB0XmW4FgQOHxANRj2FSAVW9&#xA;f/NXyzoepNp93HeSTLHBKGt4DKG+srLJEihTzLslrM3Hj0Q96Aqpfd/nd5PjbUIIDNJe6e5hmidO&#xA;ISR3EVv6m5dFnlYIvw17sAN8VS+P8+9CazsVGn3T6ldBFliURiKNzEJJG5s4YovIdBU+GKoo/nr5&#xA;PhsbWa4W5ea5hMirBECrtFEr3Ij5sh/cs6qeVNyKV64qmXmP83PKXl+bhfC5aL6nFqH1mKHlH6E6&#xA;TvGdyHBZbOTYr298VUJfzm8oxMYpYrxLr/SOFoYl9RvqKzNeAfHxrbfVpA4JBJHwcqiqqW2n5h+h&#xA;5fl8x2Wkw20ev69LZxSO5FRb87Rru5Ar/uvT6UTelNmp8Sqf6B+Z+g69qy6Vp9teNeGH6w6vEirH&#xA;G0MdwjO3Mgc47iIr/rgGhDUVY1oH5/6FfpdS3+nXVktLeXTI0UTyXCXEViypRDRZfV1OJaVpQ1r1&#xA;oqyrU/zL8tacLczfWX9e1hviEgesUN1yW2MytxaMzSRtGvIbNs/GoxVIrj89/KKSm3t7a9uLkXMd&#xA;l6QjjT/SGuYrWSPkz05RyT712PE0PTFUXF+c3lSWW2gWK7W4v44306N0jH1hpp1tokUiQhC8rhQX&#xA;4r13xVLdC/PDTbzy+2pXdjM96lql7Jp9ihldIvqVpcyszP6a8Ve/jXl2DAmgDMFVa3/PHyylnc3O&#xA;pRTW5t3HqQxoJGiSRYxF6h5BS0ksvprwqK9aDfFUyn/NXQRo1lrUKy/UZ7y5s7hJI6Sq9paXFy6q&#xA;ASvIrbVU1407g4qs1P8ANGzHlBvMekWpuIorl7e5jum+r+gIa+rLIVEp9NAAzMgIVTyagVqKso0C&#xA;+1W90319Usf0deie5ia1EnqjhDcSRRSB6JUTRosg22DUxVMcVdirsVdirsVdirsVdirsVdirsVQd&#xA;5ouk3t3b3l3aRT3dqssdvO6BnRJ14SqpPQOuxxVKU/LjyCkRiXy9p4jKPGV+rR/YkjWF16dGjjVC&#xA;PAUxVHSeVfLUkN/C+l2pi1Qq2pJ6SAXBWnEy0Hx0p3xVTm8m+Up7KWxn0aylsppBPLbPbxtG0iig&#xA;cqVpUDbFV115S8r3bO11pNpOZRAsnqQxtVbUkwKajpHzbiO1Tiqw+TPKJ3OjWVauw/cR7GQAPTba&#xA;oUfcMVUh5A8jA1Hl/TufFE9T6rDz4xKqoOXHlRVjUDfsMVal8geSJYhFJoVi0ahVC+hH0SP0VHTt&#xA;H8PyxVQufy68qXesyane2aXYewi0tLGeOJ7aO3hMvH00KclYrcuhPL7JpiqPn8n+VLh5nn0eyla4&#xA;YPOzwRkuwBFWqu+zMPpPicVVU8teX0t7e3TTrdYLW5a9tohGoWO5dnZplFNnLSsSfc4qt0zyt5b0&#xA;u5+tabpdrZXAjMIlt4kjb02Kkp8IHw/u129h4YqgV/LnyCvPh5d05RKpR1W2iClWCAigWn+6U/4E&#xA;eGKo+78seW7ySKS70u0uHgga1hMkEbcIHFGiWo2QjamKoM+QPI5m9ZtBsGl2PJreM7jiAaEU/wB1&#xA;r9wxVofl75EooPl/TzwjWFOVtExEaksqgldgCxOKr4vIXkiIoYtA09PTNYwttEAv7pYdhxoP3aKv&#xA;yA8MVaHkLySImhGhWPpNzqn1eOlJEWNx06FEUfQPDFVQ+SfKJsRYHR7Q2QlkuBbmFOAlmjaKRwKf&#xA;aeN2UnwOKtDyR5P+rxW/6Gs/Qhme5ii9FOKzSU5uBTq4FG8e+Kp3irsVdirsVdirsVdirsVdirsV&#xA;dirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>xmp.did:2E08695F8E226811994CEF6A767452B2</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:CDA4F13D94206811AA2497B09AF50ED3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:CDA4F13D94206811AA2497B09AF50ED3</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E08695F8E226811994CEF6A767452B2</stEvt:instanceID>
                  <stEvt:when>2009-11-02T14:06:02-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CDA4F13D94206811AA2497B09AF50ED3</stEvt:instanceID>
                  <stEvt:when>2009-11-03T13:47:23-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2E08695F8E226811994CEF6A767452B2</stRef:instanceID>
            <stRef:documentID>xmp.did:2E08695F8E226811994CEF6A767452B2</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:2E08695F8E226811994CEF6A767452B2</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -157.61 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 157.61 li
304.078 157.61 li
304.078 0 li
cp
clp
[1 0 0 1 0 0 ]ct
true sop
/0 
<<
/Names [
(Cyan)
(Magenta)
(Yellow)
(Black)
]
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {

} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
0 0 0 1 devn
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Roman def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 72 /H put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 213 /quoteright put
def
/FontBBox {-203 -428 1700 1271} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
25 dict dup begin
/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963
E3987D5E4E6C9FCD> |-
/space <1C60D8A8C9B8707C25> |-
/H <1C60D8A8C9B6079F0EF96F2A5C5AAE267BD7D517941DACD3EDB33730529D
E1B8FE6AD271A2288CC17FF03DA9EA5FAD75E03DF6B92565A2CB4A8539BAEB03
8F1CE0E83E584DC2B39385E39140D6E26B203655808DF8081831B0F83E078DCB
044F2F1E9AE89A394511D343E89D9D3F55592CD30385C4D9E63CC850D47412A8
E8690C4C593E74EC9DBC1CB8EAB8742657985762E0C390ED4A33098B5BA3348C
BFA94014888F550AA1D8AF239EC75344> |-
/R <1C60D8A8C9B64EDFF48E82CA064AB631928FACCF9FFFD392A0E8B418F571
9CC04BFF6287C01E27BF2FB2FEAF97CCCADCD5A250C8985D3C380360C09A155C
47E97A7A0AE6B054C6F1AF532CD9D5D8B8A42FC3993CB727AB96E4AA71CDBEF4
84BB07F7018C89450F5F57121F4DAF066425B8A34FF7ED62AE5AA93F62F65C55
2ACBB5BB3B53F5612058E9D722BD6F7E535FCAA8BBC4240A38B118172C507CF7
42629A7399CB94F1BDEF7B732F9E12010BAE3EE57FD8EFD35FDD> |-
/S <1C60D8A8C9B7EF3269E388B8847AC1DF83DCA2CC95EEDA1D26C48C8B4394
FBFD17BA4272844B3F99D23FAEC50A7EA6C72D284BFF0551BD0E244EEA994D67
C8032579E70EC4F728A61739D5AD8DBB8B4129DD5B722422FAFC8BDE88E5D08E
42CFE364B4791DA2E591F9FB2CA99F1F124E961FBD42E8AB878E8BE3BAAF755A
9CE4977D5E9A7ECCF71EBFA0B61D69877A9EC87A882973E75CA7477FEDEE90C5
AE4E9BEF9C7EDA4EBF0E4CDE6ECFE92BCEC5C04A7E39072DCB2A7B402F52671B
6022D3586A809E7DAE9919FE8815CB8D620AA8EC995DA478361CE758058A7DFF
39FC38C2B0C0AAE9> |-
/T <1C60D8A8C9B7D8BE78D1A55798F2D8A97091B992B92C1EAFCF350F806FED
434693C4DF3F67D8893A99EF75622FE8BA13F907674F882E140E60489CEAA2BB
6107D8446BF6FC3EF0730B190972991631B35D792933869F4716BD279183A943
DE125368> |-
/a <1C60D8A8C9B77FE2CEADADAD35C681D96377E0B82CC8ACDB5762353EDBAD
FFACD451A553C5C39302A9F1D177F76B983509B429688ADF52AFA30F8E4A0B23
F2282503B97D206C7C183FDE8BFD6ACD2BE6A3B9069791DF8E2CF592523922EF
D64768CD99A1F5F1400DB305C4171EAA77202618276E378016C7BA0833F29752
C2A461C11A88BC4E527507EEDA9C848EEAD89D80551320178A864EFC8B3562DE
DC4F695E8824160B87CA7F395997B47C0C71BBFE9F871E4F5046857D22F807C0
4061C73B2C0BBB7B44E0200581C40A3AC55C8229AC23B2FBE040B0F089F70BE3
8746A5E0285A22E4825D9ECD39D6C15171D3EBB391B1AC132DA188B28262B679
71885F8F1CB6195A6A7B0FFC> |-
/b <1C60D8A8C9B7A73DEA51CB4AB782EC4CF13FD26F41FC8CB88DC14FD82E52
80D80A6DCEF24DFC67DDE70F479EF61F4A2F59FB7C44A2DA70AA9DBE3F3332B0
5CF7A2A04A2009B46D9C510350AE718270C9D98B76F9594F5A2CEFABA8989AB9
C1A83073103E665B7D0C1FB0D95DD2CF6B3624FBE8C4DC08D6FA9DA1460775A9
F8E2451D08E82D20D83F7AACFD6C43C3765095FFA99CCEBE8373741BF9BE5B92
7D964DEAC7210DBA744ADF394D6C616E3DDB8D63> |-
/c <1C60D8A8C9B77FE2CE939B120B8C530BA36A1D378ED7528AD7B7A10AC71B
EF208D8B385B11077F2A13A81C13DFBF440D42A243A800735CB8F4DC3746EB40
39E43E77D867A7AA457E639AE6CCAFB17D4572C0E8FCF8662A95CB9A94DBFA33
9E8C89716E4D6EB7EE669FEA0FD73F1B364D57426E512088C7E414CE09DC0040
B747838B6828750C7FA69A58B3FBD05411AA3233E35DCBE1E5C8A3302EE901E3
00C17D> |-
/d <1C60D8A8C9B7A73DB9A50E659DB775F0445838B52D4AD3E4EA55A04AF1E6
6EB3E22000826F80E46C696D55B3FE9B16954A0FDDDCF9A25B9DBBDA281BC374
3A32DF4E962666420F0E46505362A6A9911C122E7E5925E4098A8375B6420427
5CB8C487667CDFFB7001810B24CEFAA2B80CAD8B87A3E1168C62B165D1D52436
E632F3BD5E44BCAD1D3E08911E568C3ADE5A148D88E7C75A5F95F7018097A855
F01058BEA6CAD1F5CFBA99049D028F229C0A374E791F4E6F00190E23FDB14CB2
BF5215AC36154229670311F93C06828FE397A9700C53BE1A07DF9AE66151E66A
3E4BE4B17FDA8F9875D90067B1D7D9914E47FA1ED2D057561417FDB2931E47F3
C120E5878FF702> |-
/e <1C60D8A8C9B77FE2CE67108D1280ADC9682165E381A1DB7E740A05B18E65
167A034DB250F6D5492B270110B05E60263A42B2C42DDF9AB2E4A276D8ABFFBD
6680C39C89C62CEAE031CFF89EF16FD9FC76CF19CB9F9E34BA9AA837F4D55163
017EBBAC9FCE57F666560D76840A1E9FB941AF2DF15742DAEB79EA2886404B23
75DA19EFBEAC2017EDAD03B37508> |-
/f <1C60D8A8C9B81F2C5200FF77F5CC74A969F74B97E3CB0139862AF77A9D0A
CBF3A9D6D9D7DFD3746D263F91E033F5CA0320628020691D4C3124BFE6A21E6C
83BCBE09CD5D12CC21985F4F5AFA1A376E8DE99902DF7BF2E77B55D090DC8BBC
539FB00E70FEE139F0FC4E0E2A68FC9AB61AE1A0D629C6435B8A2E09E0E0D78B
08DE40CDACCDB12252A395979017F0F46F00D30915E02E70A215B3DDCC> |-
/g <1C60D8A8C9B7A73DA347F0DC0A4CC25AD3382B8351D419D81B2F540C0F66
5DA2122211CB75D621F53ADCDBE7815157FCF3A7D9C98329945893598F8138F5
D5F74388A15B63DC4DDBDB1A01CEDC68DBC335D575F070C3086679BC845D2E73
8427D0F7B681E970CAECC1ECA0192676764BEA6F787CBC115862B9B44CFD83A9
6CAFA21CE91235F59FAB64DFE50A98E215046D4BF1AB210098434AE88D505933
B6B31BEC443E9C48567AB352DDD15143CE343B08927EA9C965F9F904D0C1E9AE
4FECE14141B4365C351A577CA516601FBE0AFA3AD74B770DF0E6D6A50EC77FBA
93516C03FCA671EDEBF2CCDCA919590D5C9DEA3D43029A729D3EC913B24C08E5
BEFE573AAB22339502EECDF5C8F0B813EECA1A3643E46181D1A26BD0E961251C
6FA14F9824242DA4E6EBAD7E5F2872BFD0F6F6BE709AF20CDE3BC39F29118C3A
BE69D00325A184273C17639A8F614CF5086AF810778C30368743992A90E37B88
A00B0EFB39F462A8B7048C5ABBCF6C197AE88D4F99C80A2B8E1DBB> |-
/h <1C60D8A8C9B7A73DDAD434B9B0934880641DF5380C3FF34924474584582E
239C6F8521E020E224191300F7D305E7CE3E9B26FD63D19146E9A792CE58AAA1
D1E0988290FCF859899DD695C8334DEB5EEA9B27FF4F22DA997D31BE2F34FA45
8B76E64B6795EF577D8D66464865BCBF56924A7B28803783086BA628F44B2C71
B5D443B3791F12685C141C83F9E10FE5E0058D368A19DE504B892831FC37A9C1
39A777D98619540D7044EEF1D80D5AA72984210B0E3A3AA2A9488D2A3C7F6CEB
9756D12E8F0AC9CA1CD21E> |-
/i <1C60D8A8C9B854D0DE8FF03001C7DDCDF6D3A68A6B597D794E646C678EE5
84A1666CB56CA9FE75811CEA2087E2C341C7E1E2BD6147E5E1B64DFF133BC2DE
FF475DA598F822B2BE3A9DBFD7105A3889BD250D9F71DE0C91B5EA539C526B64
89E8D9E79757A61E2352A71C3AC0EEEBBBD4B096AC9707E6604D45F8B4EB690B
CE5B5F037666EE3D29DC12074786C8164E88903799783957677A476A9FAD9CB2
91219231A21175873BB2> |-
/l <1C60D8A8C9B854D09C28E93890ED677F310D1E32AA544EA0617CF8148093
0FF09D96FFEC0D2D74BC923E8CC3789EA117FEE8A516539FF915E22C6A549B8D
0FA459312C0739BEBB3BD2A37FAA8365907BF4200CFE09B70B39C1ECB8C3A608
5FE4D765368B> |-
/m <1C60D8A8C9B6FF8699A9E0957D16E85AF3EF7FB5550D53F58119CA6FE9A7
D4C98706545F58540E72C4F6DBF95879F02D97A7F35AB5AF3C971237293FF5B2
FB844191681255BE21478456D24EE31A2A7143B10FBA09BC00C8AED529FA7A25
2F5274921E1C121C49F9A6BDE50E747AC4CD0AF6F6706D6A4E730F5719639E69
2B7DF9539A8C86290A899FD897C44E8C098306316B6B9696B686A9B83249EF96
A00A2FF0F972C35DB6BF3C3D779B038A947CE308FE712510B0F53C629676A77F
97F98DDA7B37D2628E8FEEC42D36B6A15BF9FD22B2B8F078CF5BFE089DE548DB
0501AFAFBA32D2143AC07A22D2DF86E9C0B50FA99CAFD1EE8BB0E72F1F0DA0CA
B73F3C0DBE795764A811F4BC8FDB7CE3365A061791255C37B34ED2B69FAF3B52
D7BAE8CD2D2E8A84097361CCD8E917EDDDA32F45C31D> |-
/n <1C60D8A8C9B7A73DD30B80525D5D675DA4D0977F59D93029CA5D14D1D656
3E1C35EFF4A3EA44981DFE04749A107A1C9F060A076451BF62C02FE2E474DD18
7526384A6F42E0021FEFF54C8346ADE1D28DE56A36764BAF6B66BF7DB43854DD
1D363EB418A371ED43BA933A460B2917DEA26BF87012AAF7B195AB0B8FD490EC
07235D6699814C77751D4CEE45D35DBD8B1597438545A60B7623CE491483A014
FEEE65ED4FEBDF80A721F21A9D4DE075A36D58250AE2AA345A9C5F7B6CB7C99B
A896DCEAAA4342B927737814> |-
/o <1C60D8A8C9B7A73DEA5F658431FF26DE1C3CCABA5A5AF56EE1798CA324BE
FFED162986DEB20473198E3AAB17E1F76DC8A1DBB020158974052802A30905F0
338BF503D35906BB108F3CEAC35FDF3D8BC51C5542899E6D21063EDA8732DC15
4AFBF51B7EEDDA621E256B5E3E8A8E86389A77366F5766B3A5B4DE72C37DBEBA
04E9D5CF3B75> |-
/p <1C60D8A8C9B7A73DB91641F6BA5486CB0712FFF8C326A20926BA28A071CD
0FFCD4BDCDE0C44AA39367FAC8C71A39B0507E6FBE92EF479F1F2157486F55AA
E915EDBBFC8AB4F6ABE34EECC784D333D526F3EA5559C73D1624B2F3DCE5E44F
60A831A8E502DF5DA28E74DD48A45198849C8DE213E2FE4E0A1787AE987D4047
0D9B397703069AE4CF0F4FA65EF586834864FB9B5616439B96E2FDF7EE91EBD1
64132EB5760D047D5E96F3A228E48459DCF4120D33BB6B48C8A10CD605E653E2
29921D2C4C571224A04CF9D3CB95F244ED16B0C299C503EB8F189CFABBE5056C
928EB45A907FB0C0> |-
/r <1C60D8A8C9B81F2C5DE210A78B7176966966FB4A2E70036BAA4A8956D597
954FF33C419645546BDDA5A1C075630C88C9E9E0B6B2EB6B2FC3FF0331B19026
16E9791F7398738E2F17D5E54890C7A065EB2198D4708DA7213806F12669F676
78CAD7B30B1926E6F30FE45B0DAB7BE403E568FB7F28C7F3631BA5B608F50231
0C8C5FF767FCF95E7EC0C2EC9F2F173FF41F0C7459D2154243B15CA53A73779F
93E107279F803A71F8179756E718854D0BA7BCB1168643F72763D9FF> |-
/s <1C60D8A8C9B7361F4A471763AC73DF2CB4D0E822A2CECA1AE242CCF137FE
2017E1B84759A659774165B7FAAFC754E62F16566CD871C047B4DA1FAE5370C0
C235D54992A5E0FA7700C9EE743A2D940E9CA5D26B3831BD83BB30176B0537C4
4AA3FF8FCDF5B3ABFEF1C2B6D9ACB1822B29C0F334D4D83CA74FAA5037DE49F2
3F9CF057A26EA493317530A59C4D60B62C344BD8DC7AA9CDF22723A4837ACF83
C7D482D9B0FF4236D5FDED500C27A8FA9429CB11EFEE5641EF6FB1753C2B2C35
F423576031D731309BB9AC2BE1068E6CE69B054A642C61> |-
/t <1C60D8A8C9B854D0F41C7D11C14207BE1C0BA04724483030493967288AC8
D5095C0BB34E8B56A5C53BD1B7A25A11F231F6182B9300CAF4CFD46C1EFFF4B0
E38766187499A1973473DBAE4D98649DB8F7DCCE25964559B9BA93E6803E4199
84755899DE68C87EC2F530AC81AF61BCF42839E59E8A14B5E2DDDE3A4AFB0D7D
86FA4DD21DF5669B371465EBE7C64497A6C50C0C5658D7> |-
/u <1C60D8A8C9B7A73DDDD5393BA7D7831D75F13A25B59F8CAE59E13B1DBD30
1256F09A2A2FA0610BB05DE2ECE6E35EA4ADC086161AFF85B0FD2437640FDD80
398C4C0B32C179538489C2DFE344A56B831FF47DC8684534892DA6A169CBD117
7876492AD2C2BDD7A6B08127B6A645642A5FAF8AB73C40BA1FE9FB481006D45C
77AAEB57B47F60A9B165A96B82FB4F1ABC3AAEF73B36D7075B83620B1F07B444
F8EF540AE2E9744CDCFFE07D> |-
/quoteright <1C60D8A8C9B81F2C3AC590513C678DE264C8ECCF440CC5D3424
330CDFDEA1E6E017B9FFEF6B9448FCC4E1F799842AAB39DDE21178D743273BCC
ACFC61503F4175072A98F19AE27D59CF840E682C9C5E84518A8831670BC68934
DC04848C4766001ABA39AB9EFAB251186238332> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHIK+Times-Roman /Times-Roman findfont ct_VMDictPut
/WGFHIK+Times-Roman*1 
[32{/.notdef}rp /space 39{/.notdef}rp /H 9{/.notdef}rp /R /S /T 
12{/.notdef}rp /a /b /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t /u 95{/.notdef}rp /quoteright 42{/.notdef}rp]
WGFHIK+Times-Roman nf
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
25.647 116.438 mo
(Resolution can find a contradiction in )sh
%ADOBeginSubsetFont: Times-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quotesingle put
dup 83 /S put
def
/FontBBox {-296 -413 1661 1205} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31
EFC3300D63209ED6> |-
/quotesingle <1C60D8A8C9B8947499B768899E4BA826B0BF3F86DCA0CF9AA4
CD2624B112BE4D0C40170667D240D414BC6567342AB8683D45BFEB34DD4C2E51
834A66653933E190C93EC1D0332F0EBAAECE834C7449FBAA> |-
/S <1C60D8A8C9B7A73DD237421AB836404A15790C77B1A081771CE7D27970F5
83B0B109DE03AB8598BC1651772E13E7B103E68ED9B882A8DF320DC58B26DF07
FB2D380FAD09BED879A92A7420885BA5DC494F1B44F03E30DEC66269C823EFAA
0701501BE5DFC37AA07191766F8AEF20C6D0CF3B240A9515EC4C4FB5C069B937
9056F7D739AEA35D2B6A3A31F1C0DD0A14D331981347FF1171B24062F3F5604A
D772165C22B5077BB3C2F01B6BDED3B400EB7E72BF4F17350ABECF36757FADD6
41AE88386A72FE368E65B1CBDA13952EDA9B9AC032EAF510F67F860A90E7F78C
4654E8C9F6BE119C83AC6D04CDE1> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHIL+Times-Italic /Times-Italic findfont ct_VMDictPut
/WGFHIL+Times-Italic*1 
[39{/.notdef}rp /quotesingle 43{/.notdef}rp /S 172{/.notdef}rp]
WGFHIL+Times-Italic nf
WGFHIL+Times-Italic*1 [9 0 0 -9 0 0 ]msf
163.613 116.438 mo
(S')
[4.5 0 ]xsh
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
3.28271 153.756 mo
(There is a resolution proof for the contradiction in )sh
WGFHIL+Times-Italic*1 [9 0 0 -9 0 0 ]msf
185.977 153.756 mo
(S')
[4.5 0 ]xsh
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
231.858 63.5527 mo
(Herbrand\325s theorem)sh
12.7686 79.1182 mo
(Some set )sh
WGFHIL+Times-Italic*1 [9 0 0 -9 0 0 ]msf
47.7666 79.1182 mo
(S')
[4.5 0 ]xsh
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
54.1914 79.1182 mo
( of ground instances is unsatisfiable)sh
1.2971 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
97.8423 9.37012 mo
97.8423 32.7549 li
@
99.9478 26.2695 mo
97.8423 35.7451 li
95.7363 26.2695 li
ef
97.8418 45.4961 mo
97.8418 68.8809 li
99.1392 26.9185 mo
97.8423 32.7549 li
96.5449 26.9185 li
@
99.9478 62.395 mo
97.8418 71.8706 li
95.7363 62.395 li
ef
97.8418 81.8154 mo
97.8418 105.201 li
99.1392 63.0439 mo
97.8418 68.8809 li
96.5449 63.0439 li
@
99.9478 98.7153 mo
97.8423 108.191 li
95.7363 98.7153 li
ef
97.8418 118.522 mo
97.8418 141.907 li
99.1392 99.3628 mo
97.8423 105.201 li
96.5449 99.3628 li
@
99.9478 135.421 mo
97.8423 144.897 li
95.7363 135.421 li
ef
99.1392 136.07 mo
97.8423 141.907 li
96.5449 136.07 li
@
227.569 60.3638 mo
102.831 60.3638 li
@
109.317 62.4692 mo
99.8413 60.3638 li
109.317 58.2583 li
ef
227.569 133.002 mo
102.831 133.002 li
108.668 61.6606 mo
102.831 60.3638 li
108.668 59.0664 li
@
109.317 135.108 mo
99.8413 133.002 li
109.317 130.898 li
ef
108.668 134.3 mo
102.831 133.002 li
108.668 131.707 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHIK+Times-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CDC5B47284BF15001846976068C0BF135518A602D
66E0CC47125FE028E215EF3073CDFF02171E3ADD758AFBBC72D5A5369BD8C839
BA2F281D87F2EA469436AFE2DCFFD3E82DEE78DC742B0EF85809452C469E6493
378F809B34A0071E71435BEC> |-
/A <1C60D8A8C9B6079F62C6D57D72D2FDC86536E7494191A9E3EF5795EA6903
BA675EF967E5503E0F9461713975E8624582E6F3E1510A5F9E0950EED4A19144
51FF9474C0941D0A3186503138F0BEB96FF6EFEC76335DF56A27FA8C5F2C635C
83D312D7641D3D9117C2751F2FA7BAFB4320347730B8D3EA674CFE35F91CDC44
A8C704B1ABB766598584B2E79C7046CDCE3C> |-
/L <1C60D8A8C9B7D8BE774DE3C8F40E1AA4E0EA492D695ADC1AF5FC18BF9AED
D1AAA67A2604F86B73A9130F9F04CB3DF5FA8CC5D9C5A66F064E33FCD627F57E
26E48E2648FA7426EDC628E5C0EA69D929CBC6D7A9F17EB322C7898431878D9C
967EA3BE2339C72C10B1FF6A8DFC4BD071758E3AFFA098B0> |-
/y <1C60D8A8C9B7A73DD7AE17C40DA1260850D9F1C1D838B05DE6D1C5E3525D
760EC0F9C40E6E054A15300E1CFEA7658656E5959BEEBF8D7B310500A7C32D54
B97E8EBA7A462E0D912C93DF7DD121CE5E98FD002FEC6C00A36A4500E723013E
648B347AC17315A08E4119F641912491BA6BE2F2706D7F9D2DC3E6FEAEDA1637
18714CB34E9D632ABB1A80A0345199AC327E696B5455EAFD54AAF8385493F4CC
1030744C32613B475CE1C237259443B8A2C3D0EEED238C8DF00383FA13972382
7984B4D9C56DF7FB2D76E14928C6A907031CC71BEEB8328C3808> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHIK+Times-Roman /Encoding get
dup 44 /comma put
dup 65 /A put
dup 76 /L put
dup 121 /y put
pop
%ADOEndSubsetFont
/WGFHIK+Times-Roman*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 6{/.notdef}rp /H 
3{/.notdef}rp /L 5{/.notdef}rp /R /S /T 12{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y 91{/.notdef}rp /quoteright 42{/.notdef}rp]
WGFHIK+Times-Roman nf
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
0 7.479 mo
(Any set of sentences )sh
WGFHIL+Times-Italic*1 [9 0 0 -9 0 0 ]msf
76.478 7.479 mo
(S)sh
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
80.978 7.479 mo
( is representable in clausal form)sh
15.1084 42.7983 mo
(Assume )sh
WGFHIL+Times-Italic*1 [9 0 0 -9 0 0 ]msf
46.3579 42.7983 mo
(S)sh
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
50.8579 42.7983 mo
( is unsatisfiable, and in clausal form)sh
231.858 136.192 mo
(Lifting lemma)sh
227.569 96.6831 mo
102.831 96.6831 li
@
109.317 98.7886 mo
99.8413 96.6831 li
109.317 94.5767 li
ef
108.668 97.981 mo
102.831 96.6831 li
108.668 95.3862 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHIK+Times-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079F6D8F9589F03C57E9BABC7BD7AF44F292C36BF054D038
5D2FC11ADF26CF26FB1CA20D732AF012AB53727DD5F46B605D18E4B017E662A9
7B61E593E1649BDE06DC0BE81975EB02C63DB9CC50D324954CB92F05C09AE46B
A2C2549D26E915E5BB03DE231AAD77F23323077408677E4049C607D64929B04A
F386D58F981E4541C0982A23929E9B861E50C60AAFF01CE1D107C5993270B58A
2C29D6FD48A1F36C5902C78C206F66DEBC5079EDB36633E15221CDFB88A58DA8
F921FAE2BECE6FC3EDA0F38409251C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHIK+Times-Roman /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/WGFHIK+Times-Roman*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 5{/.notdef}rp /G 
/H 3{/.notdef}rp /L 5{/.notdef}rp /R /S /T 12{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u 3{/.notdef}rp /y 91{/.notdef}rp /quoteright 
42{/.notdef}rp]
WGFHIK+Times-Roman nf
WGFHIK+Times-Roman*1 [9 0 0 -9 0 0 ]msf
231.858 93.8726 mo
(Ground resolution)sh
231.858 104.673 mo
(theorem)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Procedure [/0 ]]
] del_res
/WGFHIK+Times-Roman*1 uf
/WGFHIK+Times-Roman uf
/Times-Roman uf
/WGFHIL+Times-Italic*1 uf
/WGFHIL+Times-Italic uf
/Times-Italic uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Jon) ()
%%Title: (resolution-completeness.eps)
%%CreationDate: 11/3/09 1:47 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!!kflAB/OrjN(GR*$NXN+iS@UJu7La&X\cpM!#/WK`a)%DQ,8SE&M279ZDHMTjRq)mZ,9TX'k>n"fki[6K:(>mrcj0R(GGl$q+
%e\g\p^3KL85G%c%c=:hV.ED$Zqq5VSrO7QsgqPpfEtMZRFr.iG1`D.-cuKt![#<^,*07d\])-HVJ,TB4[nh5Bn(q>54[-Q-pW)kY
%*cLNHD>Eu'l1OoSrq>;is6fKn4<8<HNt;8Krr&bh[uV&D9C$L[]Qs,DE<#2^4n[f1q7GsJa8>2#[ti`4kMBK(!rDEB(EX\>?iBSO
%_r'n>rp`+:9&TIb&+QjlDL]1rj#R,li'4ohHi3Burp)<.qcA8.N/ulD#PC1XrL<]Yn&N"u_>#a<X$?XQs05>oO6>r*Af(C?=_]TA
%nh2VK0Ri93QZW4^J,RRh%hJ-c^V,'qnFZSWr0%WQmF.QBmG!+0*P:iKn_q.S+J4(/IsCR0qu30G,J%oXcXY;nIK$B$a7Nrdg3I`%
%\Yo%&PC,8Ikl.K8qnN1$r6Mir&$OkT^&.?3YH`I.hS0$PiW%`_Q7(kV]6s19&!-I's8)SC[Xg_Mf'gp\YO3KX1%b;-a4h\X&u1*T
%>oJ*;qt>gBpB/7'*^A$Ds*3DiL9Ws%[m/a`dKFj3=)[M6J,Ak&H*Gt_s20+ApE@$;3`^K!Oh+<Xgm;pIoCsr/;A[g`HELcH5Pocn
%j&^.@IX$,97o(/JpAW[Q&$P-`eo9L,)isum/cRm2aY:bohnQpUXc"m[mHW$(+6P9Ur/JAIgE-Y)^:o#gjU1Cf[.?0[o>NtLf.V("
%hi9_*;U5<srI:>enah)o3]Fc^V!k/,pYP03eJ4`3da&cpdhq>u)!064CO00U.YV&k6@Y7eX\,9fV-IB&cebWqn'n4q07(3RC=PDR
%U>P/r[CWrD<``ApjOFunEcjffY-7*=lg%I4l0E-]r;'TgOV,c]AN]NQq37JhkAfu(qG+/+:@t)\d@;mhq2AoRhl.(0Lq_?NYnHUY
%c&'0`?Sj#(:-H][8^B4<qG-XZT*1uNd5tnsjo*\dk!e1,c1Ns1YWjsb=^tT'=XEns:WgmmoJ1S-S%P:]N]f]:q4^nH5Pe,<aUZIp
%jYPREqFRf&Ib8(3'mZ,-8)NPaR[re0I@$'0KYCA8RNHsE>neiPFd;^M)hA)JEo7K%9ZAH\:9A'_YV%\P)*Nsa`[1)=T!;YN!ajH3
%Ad?PUg!S8(C\a4W8)L;2i&AnVejQ++n'm)(GP2n.)mgh?-Z9R_"qC`:J8I,`_%a]hcis,Bem1`mX"Nk+Feb(/7kck>412r[V0@2k
%5*mo?\PT/2Zg>6(NV%27?\6%Vg?"a/cTnUrZER(;pBA0[pCmSjl%qd#oXW.IjgbmY,-3%Q4]__q`H^oZkuXJKhXME\'X$Zm.g5ZY
%rff(!>P'e&b1G<Z3=BBsPcn9Pn+fnr>*H^*_n2Ce]m(]mbb+J!`>A+>r$bucT=oV$OSMhh^ALn.Sj2>[fpD2Lg,o-`q^R*U0DRWj
%(Xc=+f@M\0oh3p4-\'[5f.Xh8T._+4G)ai3Du"7+.Jb;_CKL<Z5B6Xbp8,LIiPeXjEfaVkVu0k.L*9[\2aHnorfc7(?.=N!K:_:R
%%eTC0\UHkABhQbXo_8kK)U2KX`osR4L6j[T*(#q"ds(Y:p,=<]jss5ghpQnQN:6T]rLLZD5&p:aoM9nY;tQ:1,+jW?T1Nr7.Us`=
%TQ/=CIcbtUI=6PA'0A($Y"u5slMHp_p\r:`kj.lu.9u?hBBfA@N4aUrhiE8N\NfiQqK/[fgoKAdFi3f\X^5&IgAFk*DDN9"8L'Qb
%&q$7B8k[iI_-LAeg$&W%a!b1rB.)"Z[e&-^'p!?:<c-j2?mL^5/V15A)hn:\Zqp`Vo!j2-ZdR#6+,r%i5YIga?k[tj;rnZ2p[RF1
%!pJI<(lfB[^JK^`2LCON^q6SJ]Q]>$C(L&6pZ+>.h;\/^A*P^2q(c;+So!nU7fFntH7c2&7gnY(s7(Tb5:u=-D\d6&ipg.,!",P;
%+4RR=KqA;l48+a8'0^i'/Sb`%n;G:kNNmSB2>C>g$GBcAO%>@t67+;k[S<23dOluPj>V`=^%&,P?X@g#pF=jVH!'8eP-L_h:6[CG
%F-AfddKsg+oIlIW>XNsk<rcHhb?T\>"=>s>T/-/'<Pu/UFqr=9"M=miAA+ka"V9VcCj6KA:j.du9%J'(#&40Q#F_64cDU3Sas2]i
%bZ;b^P35hY*lE$`ckV?Q:+g?D`:`37nd]PA7"1'.ZE0D7YQ=bj@-CC"2dPHl"']mAp7tIu/a-b<#-$f,n&C5@QLQHHn)3ZeNIa/u
%XM#0HS3"d7H%fjaK<BO9jIP65@Hs*QN+6S@)8X?l9Ys#?pQQuZitp-=GQmUJ?Df,R$oBSge*MU#Z8,+S3i>Qk;sqc-OsH2.NW&!>
%1p!X;7TaYZ;hr;_Hoc]W9saVO0iQ*`hcSuo)nMAddE&e;`pb0[>Xt5d`pZ6fX&cf(5f*-H)mC?`!\$*5K4j1<.2%*UB8&\5.DZe@
%=6M;9-U)sZX=j3T8mmSq)C<)gf45Jsq(oV<5PF_`&%n7f(Sp@Q\mkSHUG8.=,903u%kNXrp[>RSXVeZ`AAYV5l'3JDV0[*0kZ>P!
%h7nC!;r11dL$Y=77NepMU(]\:ja0=lOP?Z0.R\LhcdG*4:X4.N9!E6]ckkC#,IAMedAsh$4t3S*m(/[67rSpDS[7GrQ750;Y&#(^
%oMh$V$$'-n"Ljg_MZl*7)S.,s5qQFkH3n$?e@B/:$+b/'OhfTOC*>Pf5::h^VGgu["YFNUdX9fS2GYo9?Ec?l+/eP29$pYA@@t#2
%V)n2?Pd-E%[_K_GR]T#=*E.e[et3%C4SZlQq0QE`-i2P0?bUtX5&g>blKLQbMKeQMJ,T**n`^;Sb^S_N^:AaniQ^&jT#H0SmiS.X
%hnOM_rPR[oGqYLK]Y4:.T)@rA04$fs^E&rZ]6s-lI!g3^GQ6senaZ>DbM0W>n*_q0q>J4kX8C)Dd-U,iYP,o:1qD`)/oU2"hVNZ?
%I/eHk+.'ICNBD^6S_p.4H[bPPnm3BN?QQni7j"Q(#ANe6[!Al6YIXP:b9q$$,]00>[SPKJ8VZe%RXU?q+(j!.b7E1tea3l3gqUOM
%2$S;TIsF!(qsrS?qmVVCMg+o>'V)`3gP<hiqtHFqDVrkL]_V)<4E7lZrT\<^A!Pnk'Pm@7lLOB-c-L;MIe`I3jnlNrYO3j"FX^h)
%f3Q%<HN3:0qo]d_?@MS8nb1e"B*N\Rpu1&fiUquZ#X<gQIslV;E!ee`[):4f\$*N\+'h%B^8Kj!\*r`K4OP<bE'*"Sp4**]s,JH%
%lKRc@0CSr$md^"d^CKUV\@[//&(jh<5<b(Oh%&J#%qD[/%o;X9n%X?:s,rYWIscWg6Sj5dk4\6BnqCo"$UluPn`AjGiQ1=d@n;s\
%#QDPq4I2?r`?3MUs#&a:I.d!X"!NIPR]ZDc[bnfKHRh2SjbL<@4Ar$j)`Rf9h47i#s"Ge$kV:qAq.@;&knP?In+EK_^YQW9[fQ%A
%UZqXtT0Bn,-usM,@R8BpQeu-UApe<FqbiaB:BLRFMQVH77XpRj?V.#rQMrT,YGB-EV8ZfnDZ2+-]qV'Dp[7!\H!3,cE-q>FnGVaf
%1qUG2Je4(\ME\ZMn\aZ7DVon&4PkO35NqV$p&2X2hVF4TcG'7?UQ,)aJ+r?B%u:$HT)\EW:nk,:VS7G+pI*F$5G!A6KWpNSg&HB/
%IWW+YPL/I$s.=BmGTaRZs7Yi8qept5F8lcb>ls0/d;sZLr-`k?ni)Nc?[_Ie9[8'GQX`t^s8Bk&j7oBS5.plD&EWe](K./ji!+g4
%hqo&]d3!#8H(t)MES`q85/)@<rqjknVZV^s0AjEjHM-67n=tcdj*TdeU\iUq^H10ME-m&rHbLKdLT't&pNh,^Aj#Q)3f;cH?f"#]
%^HE)k.EMurs*sdHJ%.]Ra\h*=5t'UYoCLpZ:QOC=b0QiNB3EOK`q"RA0S9G>BE.ma5&&o&rV0fKoO$K>I<b@]fAAf`rSb_rVn_&K
%je3Og&*I<umJdZ^qG6:(:r*"rRh$%umk8Q#hYbhUG'*\-qtC"o4rb+)TD86J:VXRBrorfY4tb28?iP6Jq"/1_ef]Tqci;VagGcn(
%p",86YA`<i1Yd;jGo3j]leA[6ZgS4t%@u@is7-#Fa2&SL=eG9JEIS&ep&;\9UBphQo.SsLGk^7o[nfe\f'Vutf"6MO9'uY"]]3dV
%i:U0TAV%:.dKZUfHL^_-J%E+Jf$D*>I/'>EpT*$lgfYj?b]2eL4.k8sjKj==Z'Z1f]K8f7=s./cVn@Ahs5rL<M]I8G2d23WL0kBX
%A>V.QqfI'Ml!EQ1r-8,$T)3p8j#+=D`]D>^p/fi>q<,N4'DW<5W$9I=+9)*8mtO")T?c6fMt-7CrdOS"bb)XpF,#@A!W.0?n__A?
%s7\W\V";?nVt3-Fs6K])kHF*#^RT^YLZN[+HLL#K[rQpWL88dN>r]SBBM3]&n]]7TQ^b>5@jk*,o$s/?#d.]FcJ:p,Y1?!$5@k*W
%9(-d\f2+HaX0b3=?ATleFo:6'ME[U2bO&FLF7:!.P3`*BDi<^$oH)'-13FYO$p:tVfK5/#?aqi9!A!]7VOe+F/h/_)@(R8*[cR<H
%HG7DhN\UM6p=?[3_055HD$_$[*,k*p`:L%9,B+,/,r],/g+RjBJ\^ebXAIn2e;KJn(LY=l0ecsfKFT36jFIcEbM<OcZmq81(U]U4
%^gY230NB1tkY'Lih*l&*bJ[:mr%?^Hm\0]&0'-?(E1&uu\hZ!I,ap"i[[&C[_hBU)$S\I!]nWf7;77fV2!:<L0Yf-4hdM"YD<m\?
%_,cnI>(T=[=i7;H,;</gQZe<rDL$>q`t6^%mhU#Ve92X@m`rNogha,l2VNCE*nrt?)=i#r'6K5);@Z&#2.[u1gLEW%Se6t0Nu+%)
%Brj7"RhD0%>(XP2UdS$"9;C%!252,?@1W"TZCs--YJLDiT&EBkkVpj2KVGhV#Gqh(%:\Op<lHmAJ^Nq2(D!qW"3(^=5T*Z_E3co^
%@SUPt2D6KTFR7H>+GMr)Vo[)J&]Cq52VJr3amNXG-bGEGTBuQ_icFk7b_cf(HuI&Io08BmSPH`WQk^M$ndp(&03Zp]gBJb%3I059
%j8f`()<O[@6`-Va-Y,9SL$D]DBSN;,G&=H-ja3iFXrWS(/6b-Mr8Q260rM+gJY`\nK[^#*P1LjCC(t>ROa1BX(N&LV!=,[,Jfi+h
%]G,Ug["j@+D'pr9J)OtD-I-!&:/OTK9/('(@if]JJi"-XkAkM8>>ZgZYsQ*t'M$rKE/69O&i#Qsc/9l-QbcFEAfM^oa6hjt0Bstr
%9bQ2,`b,R$QcOC(_3T4[3JoE>/fO.%lnc_r9*fkYZa\T5DTprQDK^Ab"-Y]f3RU+[g>R+f=-uZD#G0*#)bg=FTq8N"cP,#R1q?8m
%]9L%M'mBDnQIhY4+Fc*]/tQfF".X-5Wjgnt:"kKYU:M9mCt'(K`/Eb7^eL4c0a9=VGcb+/Lgh'K-ePc4-"TR##%K.k$dfi^T[+3g
%h.&d8>:mIsh/UE*;MR_3kS'+T<EMeM;3!lZTf%scMIG^0/>*:#:2pP5nH=U_?Fe71Ig`S`FPB7.]dZ*'rSPVrms][VImmIe+p#Gd
%;-97X`40490i<"[mt/Pb3/Gr57/;:/<5;;`#Wo\E!3+p+Fd3?,a)FhR.gsCn=4'M39#*D(G-nNo70t!)9h$us:U'!JN+*,Q'm;at
%DiYFKW1**i3OQ4KUms@_Y/<IM/X\-]4D[;?3OY%>gjnd(ICs[YZB8&gQu$;o2a,'uG$3ZSF5/P!;[cdZC);TtE:"OMgdU1-AD^VW
%kOrJ2#</-#M?9j2fO`FAXF-)rs)-f.@engV,D*/5?V/:KfLf^R"s$QOdFg'T="`9Oo*8p2>O([_Sl"lAIVm7%B^a)u&Q8iPg71+@
%/AipA4AY9W9bT@VB#(igS7=o5=:m,SChWFgoQZ^F!iMM@ZTYSb`XJlMlk-;'^#/2.7uPqs5.<t2C?F?<Fma>(?&$#8]!lL)bPc:K
%FqJC(eXf(M>nl-ap:Z0/DGt_fDmRpIrLZu)=+oq^RN8C"WU0P/;1"3f"eE(qUju[bYW@fc#fAg"\7i=p6Cg0t;`[AQ7l7tjkRZs9
%A&sN7fnbY6>o-8_D:cD5CO/NA#Jp%_#)P'@J9du'SL28$\`<j+cSH506(Tb+W]7pnnP*?OI=Z]@,(OCcYBgW!#?H'LKCc!S*^`64
%2EcC#B)k%_V7mfC.l2dBR;<DsC2`kDP@tTZB780P5+%nu6cAj,2DD_$`Cs!MgF"BBhr(n0HKh)[e$U+F4Wc'gX=p`Ji)&<n-3GiC
%<=*fCDT.H6<uP64MT=ED?m%B^^515InjIJ5N45e\EgL>1QM]@;M$n2+YGe^DGB@]^m\.&kflk`X[gjcopGpF?Y`.="q\7aP9-T4(
%s!Lr\;iVUp9I;WXBQZ$U<k=%Gig9h<Z4LI\eF8]Xm)O0BWJhq4;9+-)/caZpgN-"lBE8-36t+a*A-:8G;h#`B2^N"@FIu=4/)NDD
%Mojt%RGg?egh!b&b]q=@:\S>>kT5r`gj07a>HfZ6`(79DE6,qo]"ZVU@%>>`7(.Z+M<2RccC`"e]qp0q>DBlT]oV`id>=$!oJm5Z
%H4436np)dBJB*9_^4>:UY,jC7"kB?GqPU,_$T@567KnJnZ4lq-Cf(#R`G8\;9aqg'c)1^NSTRbR4)R\$L"'(NdA,$D\rU5&)X/3U
%[=o:X-DeO_CFR<VQRW8d$#A\RiG4pQVXZUM01A7!-%_OQWB\55e3u*W=KbrEWbNPC93%/#^oFhqMDJbHOL[/J].eDddB/H_iB/K^
%iCG1=*6o`LO+N$IqU=)jc5!ERqZZbNFUb!t[>];1Gf%+Z[R7W7\#'MGg$Oi3?CR3@%=lbnh-9jVIG3H']q+%)aVK)4Lit_-^)Lg:
%-7lnN_V^:EmtH"InRi.5mfe`\60<%NGnS(K$LT/)(9]rb<O/]#&d@T?XM(MU'D\0c3,Eo\p5Y26D]@$/RP)6:/D\1-4[So0_M0hO
%"3%E2Ub/L=5fB>-GXRr.>S\:s.#LJ-]CoY/pkeAo(`r65<mG@a[opC?&Bd.@Oi)oRk_e^ZnhV5j[s,A*%(C%n0fRdUdcVUo8[`r4
%rn]\QQh6NN<u+tr*bpu^OOc.nP2:&R]4iS,aLjJ?#GM\_>=GuO#Ob:$*>\Jk\)$/hcggKfI_RBN[SgWd>UBsKUAH!;lql&!Unt$a
%L3%9pcS]l.-!#@n?;&@FZ80Crk/DfCcuGdW'%QS%-)i*l]OWZ1*t@t19W,_cNh'I?'1Hc!YRK2TVeK0,fK.PbjKOocf?7EOTe&32
%N]j%fAu8tWk/0U%8!HJY!69f4S8o6C&'5HaXA$>Vbp0lt-7]+>"A;dZ^?PiH0O`F(C:D,0,Z_#b<#P[s]kf4iPp]_g=<aIc+\)\G
%/,+E-?TqXFfqa\Rbc&uiZe_FakO[:`aL[;\HW,6.p=i%4L#q)8]'ZE6mA/'V.fWu\T,9Q3dK9Eg'P%r5EC)"ukMgt"71!R6^5.\^
%7$&5@4P56#o@#:U21Z,M<`(JFM6i+W/B!sBe1:m,RGcYThMuX8*&NHtD6DUTc3-5Al:;L,^a$l3ZG>8&0>c.\Rj%pl.;A'h&`a1>
%=7Zq2>aS*3$dUfcYYUosCaOLlH+;(6IgL=#HZrunG&Y(HVeJJ5HJWQ-ibk(BIR<+Emc7]?j\C-Z0b,b&J9s;/g\eoe**@3-(QJ,#
%D?i2:5MHo$#V0bGc`WX]7\oF/^Kj.9'rn1m]V>?W8(coDqeTl2,OP')4gK@!`:f",9=UmH\LJ3'dX#9'n)sc/TDeGaTE!lBcN!!U
%NSc^$s3'#tNfs'b;\&hI')ukK^>I2lDsFqbWCU^6%MThN(`2\d$.odIPM;PE^P1=8P0*aSq"MZt2ZloLD>I0$(C77-I(W<a/<sLS
%BmMOY]!u1;W0rhLi&=&)J*$=tY5ZY2HI6WM+2-[1L%uCiN<:I1394g:Q^4m8Fm4Y;"Od\$kU"-)XQ8t@e/MO:c^q&^3G4@WPcYaM
%I'Ajr'KkGud8r?fh_M,bB=u!RK@4hJpCH=d0;h\op"Fcq0QLEM?_n@?-p]TR+G_t>/4gXo"BF2GQ`:*[M)k]FP.(or(*#Cj*j&#c
%[SgsPlpUJ7B:!-&kLcAX(R>a9/6-&uB+qGp_6@(LD6I*sQ5Hu]@0iNYP7_'Qd&LQ-Y-8=OCgiq'>)uG2-C)QGdj#4d0k1V%Mb3&B
%6+DVXE&[Zt_\*D:jpMAQ*nPB?Ye$4t4m)kc<];__LTEc'2?JhI<Nl&j*/fDq@Q#U)Adh#Ygs,o(6:2e^Q^?8."hRZt$=%XY4)"kc
%eZhHe%]q^8j]b7VD1/OR>K1o==0r6YG!HI92gX]$BM6096-[5!'H!k%Q>A9bO'2Y^pfq@:'ViI$O/>3o\Q+:t-rb^/\:hrA?q=ZO
%@gq#kg_5ucr2KiLV=jH9[CuDoFGL#@'J,#eA9Jj6P6tWop+V"6nK@@4UX5kmGAo"*NF,'Y=pe)(UHDoq9WYZm0nD?KCBJZ80[Uj7
%U_Aj+&@'LDK:([b_9!HGLp9R12fYZ5/Gl+/9-o-Jf<J0i?0Y`S[>Hb2fO.N\UC_It]dktd%YhQkf`S?C#a4K2&6K"7=ee\RRGE-s
%3E\SspB>"_#CsEf?6#_8Y">-VJCSuHS#gR2q9K%rTRer-8%I7"4F.J"]*$EB%366,0_:N[%:sW8jf1H"p6jE8h4S/'L4C^^GuPtc
%R\4Z95gd4pm9l"j8<hms!d(:&fNNJC'Dk3N=IP7`!J-Fj9M<r&Z>Jo58:t5KK'p7IMGXUq(f1Q_\o3#d$UdchMb07OW-GlaS1&q7
%:ECDWWsq<,n@<\\GV]BO,Ro'jX&6nKP&cS#Jj$=H^i2Y.5"crtMru\6Kk%OeVOi<24dOcPks63NhlZ:m*/=$d$W\H<mCbj_%KoXO
%Rke_XHk0V@O=dVkE8$u57'Ym)9U<H1?rb1c/6n$h@hb,%VOt4%4mk[?$([kGeL*GWQ?50]KB\G&<h<#n?QhA681ls[:lXl+":&b1
%gkl^#"^MNt$/rcG@Kab"1$)\9W0i+;JX*UhXFh.UJrKaY?L="8]:i+O0P=o,p_qN\n^IQM+B$Rpaq)P9E_Qo-hLT7R<$Q>g&U<:S
%g(s-/qQHQKO/^I'>=.&/L>uuA,rDG44W@5>eJf+\B@=Tj]*A^@d7!/0<<$!)>rsV\CA&pro:t'oN7RZ(0t0mhh'ji^+G6acn7XB'
%$,-C4"%C.:";m<e/h+P,f\:(/KK/$11H`T+s+^K41a-R:Rl?#:\4YBG3dj64Q''H_$Pl\p,H-MAb8@lE\[Qu(bE79g+0qhd_A=-!
%%,<ke_4J@_iu4C&+`&A0+Ui0@^Qh-'cAoM;,N-Rb'<SSsFD@]AZZP)QSW8?HYZd;J0[1X=<r5/,(]ol3>'2Es.baOW>f+@gH%B)P
%KZ:2:-goNpHrgcPV+"[ZPU\^)dXS9qK%)\G-%c%="#D25r@mCp!lJ_kBf80uel(%,d;1SBe4`$"-BiRgR;6$U%>Wp1!L.[`H<"lc
%!tka6c1WXQ2+5&pg6TE&"'GH#pY$P8^6"DY2eC)K<L.'$.F<?r`!#A!<5B&-Y7qS523?e"9k0D6X@(_)KMKW3&1m;1>qcT?;#V3s
%qI2WV2+f:J)iD$<;*0<$1Eu-sh8X9N]jsqOOEF<4l9lG`2\i9Ja[;%*?tY@+=8=r-9XE?+2(+"pg2"q/VC^dU?t;\pO[oPDCq+iR
%$.\fK&5rrW%/td+SX:7*W7;oaeC4jk-bHruCp2Ca#86WAB9b1eoA**(Lfu-5/>n,pK5=^5E/Td>_7.cs!K[CH_Nm5f.0D\U:1"d:
%"1K5l/[Pb?4Xi)H$BaN6,/WRVKWGmr,\Y,BB3"$X$-&\]aJ[Z^3\Kbc?7n^Ml4J2KBeBNh8Mp^$]$B/7!Y3+)6L%S_%FH(N0$,7]
%8soO*.'lKr:)?Bb*)MX+`>K1+3`rg[<VMs$ZQsH5;Ze%Zm[D@d\>W*&R(H,aaU#c]:0'FnYe'(,!\"ql\0@)f\S6Y4(.=4cR['P5
%)=dW^n_T+[6^bsCQ^*77RD/l<,@mrM#B]MND0*"kV)bK>[9!N,.u0&a4Prbam*N!qM>,*rbW_@U6ui;F/'Qr!N'n$F*O83+#T2bf
%,[,t#:J&,8";A+$67=Who/!.$)$F%ckd\Y?GsXg6$H<N^2DKJAR3BZf!R=DM2+s`51:G40S0hj,k)'s.)H'4h<d"Ia%%*I9m?GQD
%JD="eOZ&c)AArl9.GfCpfgX1P=f:.fDjYn]2j?JP%*b4$4Bt;([[KJs)C00l]rI@*eMa(TS;us/:l)M%*+,OWK]1sCcWDiclfqP1
%$!\\0m2\!P)P)dq0$mf9$k"s[0JdWB.]9Fd!\,uE^J3A&b5RiUeN?l+h9bMm#NL\<=O`6^5k=PRBa=/#WhWjNanA"HfX"4G"OWpc
%F!6p'K"F%<R#rl&^e%C,#5.@4/V?fgGuKXJ,f*/O<O7CcZ4#/4e=>20er>YJ-5]l<72rDu-ABML'HY[aP\prer;pJurZZMq.+%l\
%H4FII!%_Y9Q&mCV@j*:d/2qC-p+b8j!!?33A?H#$*b[R!S?-Di<W=><(%AN&Dcs9a,FE"!M3.9%TW7P?HAWB[9Q-RYgKN=9NL`gd
%7s\?\)qK,ApE%RBP/R,3+T+e5+]WCH,YHu9BD0L^n(rF[8[t.p*EjUk@T>NFULfCGWgkAh%Nt-O;^fteZ_sp>\*>>Sbn`=-e$P5u
%%2;QjYCbHX3)@IQ@05#5W!b!0CBq[B;R+OX=FUsfC5;so1>%GT&Jukk^jSaS)OklB3BaGS(N#Vj;*c6\jhA\peJNp$?Ru[S/))5b
%L*G&"Z**qB)_-n/rjaiD-G@7>B%n9kW)mUiBB\Qp6VE3[0j7I9JVk!oTr!B8)$ES)/ga\Te(ISuCSMOek4d#45+aUC2,tYaNFLir
%6C!;G9O4u47'c>Y/Nnp$/W[@JT$A6.QE&U'TqB_YRo!Pb)[j8K;.*J1n,iD""#dePW8fE]d4\rt5n#Qc!lQkXASQiuiPG)bf)<OS
%%#5@7mMc=*Fj)PE/H[NghJ8>l$JaS7O7_2Fma8HP'5eNUCJ]C8T[u6p3d@T\KSp$gGISJpk(GgjdA"?;FXpdLF:AoA>+rAOS?$rL
%4(W?!j,c/#*Q/4gjLd5KL'Sl,#".U;_PXs*U&B,_[=ahe3\7T[+?NaC&e\AMViZ<c]1-,Xl"i9Q(Ym19aGaDI5F@B3N./m4Pa!U$
%LWtBo\HankK")c]q-YWO5pBDib,q3<K8d!;U<B:DoscCN/jci2EUacjUf.o9GjoM4`LVrnbSSQcSh:QqinVC$PqC:6dqQD>o>'c/
%a<iK"(tJcjTBa\eC"XFnn[]a5B4d_%q&2?sBBkO#M)U(WfYm<*FK<=("u$.bOp]3]<O5sUhRdeBik$i:4JuR.I[R(2U!Jss>r9(S
%Ef]U8[pOPl57/PD.nCsI#sKmZPcOnE`Z>AWp'RT8Gt#"Ern=9H3LrON/g4A`MqW_LbGBhGJr8C6A5qi:BXrrRX1m=;C!*19k"4uX
%=^r:JI58'@C*!C-N6V%s3iIr;.^HMom5'@Yg'INfnsS?"lG/pC6$t3#r$>')[0QCk8-^qEbZcP;:qqf)Bqc#[TWYL%CP[Mi>G,tM
%"WJ,nO_72I<+3ORFfgU(FULg1p+`5jgl\UuEi7a[h]uq5cC*iMaH8Y(J<rZkAr]mndcP&Jfh83S,:>d.%bVj`#SrCpfL5ic:6C3^
%#S:%.-8_G!\2!3#J5j;E[TV"I6RaeADLl_rfc@k+/b;:3fe]u*'IPg4Tjj5$E-`gM7,@(P+<X4_eUX/g@tm"rMe*kRM1't<#$I\T
%J/jIJFq%4A%Q7Y3<MHLeBN<mR<OB:23<trCDj9aRACeqeX:g-&co>nmD+1MaiL6[r>k>W[i=+<lJgpACL;biQSXf7q?BcZ,G77S*
%d'O?e)o--q?1PF-`A1_2r0G?5H!/5_+VnY'UmZtGAWs?S1=G3PL)1@-/gcL.7CQuU!PUV'O)O_RRD$LFQK6[WH>hXj:;A_VY>f9r
%_+?qs#&em-DV5KZ!6]DeOs5:mf(e>)+uT_-SOoDJ*i&n:`KJGIWP;:aG+(81^48otE3MWBC\m$I)gV<AN'iZf$@<m(Q#S4O0UVHI
%K^EkUKco,K.^D(WEJ[:X(,$d7Oc@JW/;2Jn]ujmICc?J:M+4A04AL3qD8.@T0JJkO.[^tR*24h>70W-UMh]+2P5q#+/'TU!+[Z\9
%c''<'%MgS(a7E5sg2&i$Lo%67Tn]"L45;@q)CIU`L;,(9$!7:#`fe4FbR0;LJrJm;R+)diXtB'Kf&-!W_KfQ^ZmL(G.].eK9GdZ;
%R=Qb,coK[1pl6[W]@C!=+]+V<FiXi/XO][u3++u#^oB'21E9J->(0R#"Y8f+Asa-SMHUId%<<L8$-e3MKE.QW2?a7+]jI;nlG=n+
%9IaM+6bjRu&'1MEE&!85ZYi5Q+F@`.AHkIlR.8roPtZ^;UZ"<:Z="79(,%0=ooL@;.-R=nCF<TpEL@Um-Mf,OXL**@q-lP9m[Q*[
%WjXmd\CCmFK1i;>8-bB1J]L"?REUfk+GOU9C%[2]X;976FP<Dt/r>5k7O*JTWfgndW`U<W_:ZhmPfi-XkQ<jM?1GYI]tF38#RZK*
%8^;4)9OD^`;*m76FQ@$LU+X>WMi%ls$o!p(?tZP=oZ'l%5"iKe0P2h3Z%e"n4&-F8g1$[G#Gtl=AC_5WZ5B#!)$/(Q]N2HX0KqtS
%be=`u0A\[j*URo@.L\Bj#tW$GOHHUn3s;&l.Q]nkK4+PD<`$A)0`3nBbdO2:.``;-'>cAV#.4pTWojY_m8jpT+@$bHC)'>G?>NGP
%>BOCBpJ2@ucF9MeNjOQe\SJL[9k%NdYped<"sVV,E>QPp:I%=91mRr1Ok(M*fk\K=Ibpb[FT>E#1EAb0JM#no`tGc&$Hp+A"#B$&
%lZ9NFjpi([5m`A"\4T9q2K56jD2Dp\_K8UiPM<ZpK&")-[u(Y5Ah[E:3h>O!R\e2T.`YO6(J]eg4V=);/3usRB.M\(OP-+NU>Q6M
%2$:J%aq.($@tt:7j1`&jLDJ6fK4$0eqgl05)[.It^"@j\WOmbATU*EJdrhIp&^GYD*BHFgKCfQ;'o>*7M_Q/'0*s%c9/d4'DOR(1
%?$OO:C-H2W/lHqP7o65M35O>u!9al;d7)PFcD1&UZm1r`Ce+Aljk:BP3d?dl]qc(=H!XDcWFg]@[%+C(<k7sH.HjmQm/A88joDVT
%%2.[4]K7!#0::I7>?4G),TKV=?8YG.RFL)R5_ldVCBoR1k<,EqBb_3i9oL7R%-]?T-V<bqG#=+<g.'9);OP/7<542lH`ZU$habe^
%79r+Z7eK\BMb;?F:>/#l?@2'AnRI!:c5!f7g3)sAkbU?J46FPCf*303;a^L6oci9AGbQfHnseH!DKIgoDjnCm)edBW05!R:#+Kak
%nppr90Q^QWk<#7"4CU'-.nI*3C3*?;e0.s=2h5)Gp+WhL>ZJXt`u1r1kuQ].B7r.JW?Z%<fAds!E3/SD'<(0+<&mQR(4VW]IkZ,)
%-)]O_:01QgLE8V=!o>d:-WI83@cg#j@hRV+8VQeCo]rD_;iNbX8U1L!n2m38lu4@q\2XbQ`!*/3U,B($U*+3<O%UO?%p[F!.;W--
%7Om2_Q:F&L69/1NT<:WHo@`J\kiu%k@&V.njC:HIo=<r55hN/X8dFFRPF-*>S%WC=M-qgQ-A%"f%Sbh&Jh;s3rb-=V6BWPoOWlpA
%2Gq(bZ\2PW588e2U.:;c-jcHEaH`N[*PeO$b38u$@Y,(-LZF16L[MJp'i4oiXT_+A.u8ID?DUTQaOa.Tg;QcF%L4Ug;dj<9BE?G#
%;"!QC]fqWk\L0*Gnb?2nh>JTh6F[lVP'=#3+cb>+'fI5c[`PBN(1"['@6-gX/bKqsbFXhb3m[shWYG[OmjT<<>'7:f&@QTldRFIo
%0s.@O53DugHtYsRg43G-;i0.8$`HN@gq(k?W%_f'Xp.#&U_H<d61Vk<F.7d!".2^_6Vb/GA?k9s-G0qX'iJ&]]KM;($VdpUW*qQs
%-O#JLoD?cnWTk9j1HHFC@d$3;&P(<5cp=m@J`&t]F892726'XsgTgn%pnQiCc(M;[ibG#,KFlhI@u+:Tq1/RX=446&7hN)]Z>h3g
%Wn&Lm(\=aU:<4(DP*[4H=bDEgVW]D'e5/:s/J$%5(#1r,/]S8Z[]7+Q@^jcUEQs`@@rKqL_ZFQS3n6-Ug%jJs-c$N8-2Biu%u[h,
%Jeik.MeAq<Bh,WX"`^V13Z."dLT[hS3!Nt.RS%E*6q]_D,omE;\Q[4f"H3=naJQ?XK:)B".(tCO;ASJECj5*d$9Xs(#c:g[1GCM:
%fROhqL_BR2+oqns+$bVpb1a4#;a"8/c!t?brA^0-D=u]e'iue2AnoDaOs[N16<_g"/FA5.n:fgD%DeK9Ea?k*&[3JfEQ7B4?8X7\
%e-#O0];;_>.gg(CO(Ah!Jn?r;'',_WWf-IKF-6hhOfl0iDLB_`WSqgUeH.ga1N*9*S^;!I*Z^1sKLcVS(1]1G3$fDt>Rrn;9cJrL
%9UZcHA,RTOU;:-abVOeM',M)K"\CMa/r3m_DdaRg$GTb>"Amm1P=%CPATlE/gl`Dem$*Tl>T*s/.$>N8U>@^!)_hE;R3usVk/Gn:
%!"jN2=-ek)P4Sh$'N?/^g9^BhI)K'9a?>DN[2LW!*"g.:E!Vcc/SW_QlU!Fh4/NRK(kNa"OUgA;9cC.n)Wb/)6+9pG.3[Yr<oI]7
%!NJ6ehh88plrKXAhm-sT[,WXfkdH0+#bXPIoU.G6\R)m+L3>Z-rb#)lC^DIi)1mF*IB.#2(hiPH>*oDM*G8+)igLUcR+l4p:a70;
%dsk"ubL+q#4Tad4E.CZG\tmr0S3reQ+e^p&j']Pj3n=?Nj23PpS.YADR^\C3e'*Du9Jp(43H,uG]smF'>iE=J24a^fc1BrXK6=1d
%>AVK]B$!H@"ZE]RS"aO3mNcSHN,AWnmiiZC)ISfVfDIA1`<fIf01eG[fL7%kO>:IHiNRo$P@EF$MKah:4O)3.Q5L`6*c.'JEb6X%
%d81!+`&k8T:uR)7\R5mt/^Zo#e1Ca$1dejUqV[3pOWqWLfDS<62l][NC1iibQ%Nj.`Db1u8Y\e=PTD?+8MFr#E%q7qQ:aT)^FFQ6
%W<7tp<R"-)Uj>,2bc,i"YTsIOAmH_["6P4Udpo&);>KDq3e1Qa8kPfXq*^:&[]BC5jA;'r8gJOUL$1s&;Tl'm39,Mq<CWq(&S7-H
%#W;RaWiAeT\]d][=)LmChImt$$>$tVIUnrPe4HhKenCX(!FnQ5O<sB/(okohm5!5f9W.Sf(NCY&C2T')C"o&26tWr%:_4<U]/Y5n
%Z&b(94,GXXE-!(#o/.Q"Brm:$o9cE=b[@4jLU6i5M-R4<fSn9Jp``lqlSNfF1QEJGl;/Cg^(g;biknJiE,ne52l_QtQSrFERR#76
%J;<OmTnU'sjQ3X')Wss;puHR=*%*o(3&5Lu"#-9&54#RT=+:F$M11K1=DG%ZF7jneO21>DA";VdRIU%:`5:rCi&JO6jfK;[WZY8f
%,hV'*Ck#`BKPC:kWgOS]5;&M\0hVs2D?g.`@9o&&MYW6G&.oVsN!mq@5!rsRK%fHWk?WqJ,2InZ,&l^&aMD_JZ:!YA_8n#tW),d6
%\oWR,Y]^`L%LiPQ"Y*^+&iU522#NkZ!-3N2"8)d$!HEW6Mf*d9"*!D)lmgkkU7LSl6Rf"EcOTeG>-sSNF2="Z>31$p=^$T=hJa"t
%S5TZ[<qkRB9em]->bk-+NOF%6gbUkr*f-9h*)QNWbmMtmeA`dfZE>"LH5ToFeB"t#D^RQ/koBn+oeDm&7eJkVZ=]u`V5mocL6.nr
%euplR7oX>WMRsS@IA<$r+<]Za8J###F^bCY->8\XeN1(t/R!RZbI*eZY?5n/bKD"@d<$b,V$3`!WO,l]:0Qr+;oP,WYXu)mQ"CZ*
%Se>Y.NHG#*W3Ao^><T5e5TJM#n3g0JTbnq'.\$Z8W?I/G3cL"F8dcr%>+.'QVfCs,PGkao9=YqBBco2;7S8WP=97'A8\"DPJrs]9
%bnERIAHr:DP`BQs!>6N3OE\P;7J*1<(B.D@R6=kfVs!3j&fO1%3,m93H.Y1:Qn)[EV/(%MQQ`I7i"@M\1#CZAF(Fo`\J]HYH3lbD
%_S\ef&_UUp7U?.q1ZJA1%Y@^BP&gj*.SKg$S1>"a*b*._P^++1.Rmt(FUZSaP$qc%0`o8OC+mDd;%o,m\X]NaU`e\g.tQk=+p,:#
%B>W["Z+<.&ee4=&2'Edr?X`(=j%>f?k95RJPt%lp61K8iLUj-j?sE="B0)DB@d#kt3g_3BfO#f7HD[>Ys1+@?'f!Km7PtZ2,SM`&
%;C"t'Sd3,/.!_iS8-,Uull^UQQOf>od(2P8IT)nbj.^,K:mhMds/`;EP9fZCBeq>$`;t7uM3JZ;B4Z.`r'UP^`#;TfAHO?q7$ncr
%MJE8Hie.npiDs>>TSdqH298a39-BTo*;H\q/Z/dX?*J$E"Yn<'GZNCraXPbX`Zh&[br6Prl8`s<eA2GT.i6Z[;if^YG1!"(0YD!(
%Kk'>X!ha`m5:)Rcd%FBFU.08HUs\\,l6=dp,*7>kUjGVeS_K$4bW*nd^^NgRgbYSkc:k-0(S>s<RBhWob&dreo#cotL^[8^Q\G)_
%0V`21^g"CqY!QYf,r-sCi0nfh_nODE@29BgFAORR4JUmV!HG\4Th[kRdu0]]TP0nZ4S*#b:_=!E]i'm#oDWEB4^2M:?/h65e1dH:
%"KnVgWpNA(/<kKm@Bf="WQYc'<,Gmc[C/qKMg65)&3@VSY55Fr7_B9A7"q]dWb%k6^hd.tF=3D,K3qZ'ikpArD)l!oeLIE5h+!Sd
%j$E\Wg?m:rVh@lid8Wh$#Tf2o2#dE&C/a2G-^;Fni)i1$_gB%3+:D.\_[nj?YNbTqFVqUjO1^#V%60WQf\p"NcH<I>3<Dgg@*,9k
%?@s"/V;';P',]8(1(IVLp1>Z5<a&>)Z,$dkNu$u1SL#pfIo)'%jNe[s[*tEcA&gF&>H#PA6ZJoU=Ai$os'L[Wr5FiUfOT_^!;20h
%3(53feUEN//n=H3[U-1W-@ZT(g9MOa*H1%]107ibgOWRtb/oP$N];tIIT\uEca+YWeq#%q+k)-Z>"9j-];a&&f"<9HDME<*WQJk/
%U[$P3r5G0('&#]cg+B$nZ0ZPG)2C.@Q7FPKUVb[>+Ssk7Cd'9O[!>2LI=dq2_O(_e;E*\)hpl)3W5<abq;m'70c1Q=V?nrQ2$f>5
%h7uON9sfo0-,BcU08oin%h3c^euG2r?o9sT1`8M*pu1E`%TTh!F!:5sE,Xn%icZ%1mrE87ZMG9Y"WN]M+R+)?QZ5iZKLG[hT*>OD
%'jj2_QXUg>H86t*Ks=>@d4JpW[3*2-2ap$fHFZ%P]AgU*`ZF\#b$4Pq!b@+$<+ib9J6bApSS"su3#g%]DZ\TC_YUcUWGni"i/B$6
%;X`'deSa@1ZSX_T2WPQ];'YJJ$tuPHXVaBoYQ!Bfeb.#6WJb#gjS,2hX.JT(je#<GaNCP_5e4\*>q1/pk[a:F/t//s[k-1e4MLb[
%oB]3gr0,s_E\un>7YcZLAXU*IFN]DLn<J9HQ7A>\?:^!,\j:16+sqBI[:#TA_4$3"PAsGGr(<6J72qoZB2o6mJIhjp",B\uRr.=p
%OD1D4F4cqF%C3GXBjS!UCaN/]Q:5/h4W3O&fB_J#8(jUWp0\+opQ0ZYpopDe[KcB.h8]C&hjNhP$a[U$VlRMe"5]Kq9irfYO7r;2
%oQTm^__^3WR$jNQ#?ZLVOr^LVUQgBVPh)%-eLehqW$K+P<N(59a.\0&&b.n8>,2R)Z"s]%qbn^n*PdlX?eVAfD8W0,8HF9s'5\'9
%AG%;Z9k%<C@C'>`Hi;N]e?K0=CgiZ]Cm`Jtg$[/@S3=KB]DK8te`W7[\+--'?XN)*iIRVYn&GTA(7mm8cB]Kd1(5aR_S?;I7^EsL
%Ae\.lVTDT@+<j7l`7IZ%/g]2"cLG^(r2Jtlki4NN9?tZ]k3G6DkZ_[3k=*a]6C'WJk5,J[p4boM[s+crQgQdpip(?(Bu)iR[UFBt
%Fsd+A_X&r7l"ZjYJMNJ=9j!e/*h1knBtsNll43i7/`O`3W1pGoO]91Ml4jXG'+R@cFHrt'*+sSfjcM/om)q\a,G^9Qe.H?&$)odm
%b/%=`=K,OSP+FUb^%tj&\Y6@Iri420qIWR9_`s^VG5g>.Fm]q4*iX(5HhF?t)<I[8"]sbbl8[sjZ5pfX::41;JWUT.[(J$-:n#tg
%WK&g=0N$c!:)Sa9QF>6_9c$7p'1URNE`:X'L.qi94T'5%`7^]".9iO&ZWkhce%PTk7^aV3_u@ef$$V+]-f?S@[Od!af0K1QVqDYJ
%L/a7(Yp%oIBWlkL(NGbl"U<u1f2^$RZICA/n0M<-<ZqIR-^:37f553L8$XUh?G(2XRoeKp,WjXfqr)Ace]:.JpO-aHr-17dSo12&
%:Grc_IA8t9A2ASU`7QH)B8Gjk6JS?gPNi'q'VNA\.F,%S2"SjeMLkP=QcknSf[GEqbI,[_@qTMHnfhm!L`leLPYd6Bgs58^Ve_dP
%^VtnL=g%?rb/g=t*GD_-_:6$8!F/br.SWgdS#)M^2VJ=8'*PQ9=R>VPc];<ub6h#md_$1kaPk',hPhT3]hplE;2OE"l+-K1-.R)&
%O"Re7<mb>iRtE<[]I&!3?QX'4Cf\\`Of*!+\+\Qn6;6R\5De4NqD*9.SpUIJisf7@Hb3V"NQ6#(8E>1^FX/S!Y_t);`;2lb]UC%$
%9Aks,V+6Q%m%#+1WTFef9NV"`3e@NW;UA#`O@)?t6`FolC6GUR.8(iPcR"'0M>l]Sq^gD5HK2\/,3hQuc(R59mHc_\_pWS%(D@i?
%D)(PF=<c-=ZKfu$n4+S:e14-=!m)rB&\O,ZCbu\W/^*QV<j?CPrBGjmZrth0qKeWJM3]cjIF8OU!Q<s8BD.QF!(<OA6_PFKUXOE,
%eOpb`CH5]^q1[&XF,j[D0K;LZWB"Ke-bC@p+YT=9Z%.jR/r%3]'ig8BJgb?*['0g;2WGCj=]n3_EOMU?`]$'%#V'']]:rto$U2Tb
%G?O6QCj;:XmkXWs+P=hl@qBA4msB_m:I7.][S)m4'T?#Fh^ml5p>ELKg2?70!c3u&Z,IBu%uT1X$2aS;1V1VuT(6+5LmMmMFU+T&
%L?n:!k8dn"/Do.@:g7glq"+kMK']q1]1:l,EJ%QBZ,^AJpsJP24Y7D7@teb\OL4d#h5`&m.[&qe\Wml'e._cpmZb(H$?l[W?RTPZ
%&im:iSeC.[i8asMP-UpYl>`5nFj`K]]ohp7B[I&ApQmP#f&I0>H[!#XHAQ+n?/laKeS.Y#5Uaq/B_<DQR!&Z$#$2Iu5#<A&(MoBP
%TLoW!h7T3ls(LTg-=Dcqg]j*h_pI/"[7.B^[h]>3((GF!AoF]q/^++p5/5b)W:sVGHnUfbWSH)H@Y1dfLT6^ddNJ@#G#e5%(f473
%;E1'X(:i;r?EKfEeglOZaB)P$&1*R@6])`^;a^o&+qZZ@-&\cK"=P\nV?L(Z=lGTRXWb0Kd("`+>GC?3.Po=oHgVYhRuu^c=3GnZ
%Q/2(/V5<Q;A-_$Aj]:UGAcmk(::$WH0n3GS^YQ.jTNl@]H]j2h0$N/bm]Z?``p@U%B"NTt-i"(aJt6/$h5lCf"Gtr>MZ'W7D8*e?
%'$SjWr?R%j_SR`7ke`qDN[l1<@GDoIIX`>8K>9L;4XZbC`Rn5P?(LAGl-7m7ORt0qn*l0>QEn\]p<`e!'%nY0%H3jq76^F=mKhi9
%Z+VOEf>P*.T?*mjFq'f#RiU!AOtESPVP-k/@[?!"diWrr%g+8G3gnSo>E0_5Kb+$VV?9b_Hd0VD<Y$ApOi`o"XOi>mdj<NnG-s^L
%a_e&5NQgf;Sk7o_:j`r!#*aC2UaD"'la;:?0_J[0jna1"P-s3hV<[4NI6]I6.TH[rV[KIoYkdi\:#ZX`4j2<*+;&I[-3*o^C+6ZS
%S;trAA[!JT1*YgePW"Sgl&EB@/lFfP;ma7@Z+hL(7qjGN,GV&GpPN7.6ha6R(/J'aU'QleeEn[-bQ[IFU5juoG0l,LH?9dYm"4oY
%<kBJ,Y19"#oDN3..R"B\8;J]:'\j=e-S!B-J;jMkE2N^;[75(3_pT#\28_AVQ\Q.8e9[;.>;FI=?(<bDG&",FYGAY^>)lW=i.h,O
%1T\g=n[>"4pZ(B6(2\S^]-t+GN$jF>7&cBH`FO2%@<]UIPPp2hfic2:EarK)RtH:ZOMidAlk%n>[T9Hm4d(fQ?*_r#HG6YaCIGNB
%'RgO8<fK]WC/';&P$8@5l/4/!mU>dS!j;6PHh5@\O,P;OeOa2UK,Q%1Y4a42LRHuOl:Fgb&rmc`@_d0<g;,Rb]K4Hc=raY>6n"eS
%b1\Dg]ghX&`bbtXnH%\5:grrF,d-JBCNfiLaWd)>"EBOE[=`#%kdVN!7tcg?Noeg2pHg!'Nl"_$MFIt-(7[AYQJ[UYhN"Hm09J8`
%U,1MZ(XkC>1.mSC"PDE@Hf[V.*Mip7#Q(cWk3[L,/__/lrnpT7M<UWT5Gip&-+h+&+hXlSZ$nG<5Y3S+?\"Z5<gb,UgKM6i&RhlA
%?"I+W8l;V+nRrq@fbM-cLrRh3YA,Z>7u;8JdG&B5e8UBsq53N\NU:t/5!Eamo.!SRcEQHUhTH$/7.g!feC181)WWf7V43Na96I-l
%J$hMpRno/(Z5PU-Vcp=eB]+.bGeaJ\"ZW^M_jN4L.-n,t-e0qI1I\D&O%pKOGnDC-1T7Z%lGrCh'o+p*\ni*GO&hnZ:H55%?!>q>
%l.,cXJ,eYnV'M6U)@JN<cp_SHS/#jW<n)p"Q5X%l9#KVFZ5@6XQBDXrA^8Baco]QO[VJ:">r\"u$5g0'f`g`H`PG<OGXU(^RQ-,%
%D1Su?<uJGlRJF*ZS8kIsZ2$L8@l-Qb68LdY<'&$#I6697j]&"A.s&,#7)(-5>ON6XY5$$uh7$<GS3=>2cRn&E;VMN<A"NaE@+Tn4
%j(WbX/+Le(N-,LdIM!"TA7of*T&%@mhX<J/:F$8RRl-qk`%cgqRn:o'ZI@.Yn>@%Zj]YN%HDOd';KAL$NrZdZ<Sla%i'4&b8]6ie
%,H]KQ.?El'U;:fZ6pMbA8FbX'D+X?'Og<[b4Fa.TO@*)1Lq%&TNiDc)_n8q/i')`N0*XJ3*6ZbiVOTMh,G@Y+ZO>:)M)Y4K"A>F'
%8rBQ!)jrGOO]4I#h1^nK\!M6^E^fRc2l:.'d5ZnWS*4"jPK-f>3hG537(e\n]I@Dg:n.SgZ"$gL<th,3kKl)KJotf(nt0-bP=7pu
%rIb:1SG`MuhW=(LaFLD*+NYfs9lX3WKucUjF'W"C*%ZG$"\uE,"kDlsCq2<goa)rHMbmp>mV%rnia!9Fe78F\>*)&lP["bUQ<`%"
%b(g\kp*Ws`B*Z(FVJLj.DgA\kiboIBd3DT8X*^=2rQFbN4We[+lj4k)&dd1:nKGS`m9/t&]]cd`gC;lmb+3DLrg.;8GD188iYQjl
%L>VB=`b2gF0#rBp2a9[s]:<;bL[8Kqn'gjK&/7nP)2Ii6j:^`$Iu56Yo0\WXSKu2/3[2Kl[&Ie;aoEo:'b1(sUT`_?)Hp^ngfZSQ
%M=i*3RYA?h!?\Fmq2p1<<n$T[^TU_0Y*"6f]U7`X5lumaKV9O*TS`@^Ma/W21LU[)`IY[mH<i$)6f`jf>V4c>]AOcX`+9mF3UH49
%7;2B![6+<LVRdSgGp_s#1pBak-)_fdeJKPJ9be359\N>-I\U;hKW8$KU\[f-(mmq!'Ih<oT;Su72\<a1qCmhW\O2ce0R!T_GcpUO
%+qi9R\]c)XJZ(gN9Q!o,K9F8#]eaFeptZ7+]Q]N@V-Lu4nbX1N30!;J.;C4=oM!'AmHE]eV+&/2gRt6#Y2UadG<9%DT@tt<,iS,E
%VEGEt@<P`L3/3gqcLsB,OaES3M]hnqZp?b^m"@<L$#]S&50)L<cC_+=bAjqUh*N]B[nKH%JqR)7^?CQrNV.cdD@FrMBJ?(46KV3E
%V1f8`e7"XUNKeu4_HM_`&VttKo-IhLE*oSD)8C0"+n>O?AenLN+GUWY0U(!D*,d,q8FcUjfDqXe@5*c>4[3\1a4S`i3UE<?[RTIO
%n!U"n$Q>dU&\!G`8V9=55=7`:c8(3r3$3?+eecW^U@NoSc#L<fCRS.?:G6?G4\""!fMqfP'iVefNKa0i^2_p!S>2D3-*c:2d@&,s
%=$7U_qQaAg0.Lqf>.7)cJ:Je51`lC<elQmkE[`gOn#IpP"L2`poTYbKmXZ0oh'5(72i.9Le)02`U7L:m0C;=#,"W!=_D(UkG5<F%
%jeS))U`!$b'it0$M'P!mLG.%$gud1D6]L+&LQZ_!ou?08<=W*[(bBCZN)[]l!rqTp*W!#TLVM;eV$L`#hJ,b?[?+XLXUd&>Xh$Wm
%N5SJ%e`oiUkF4`8"5$7<CJ"*?oW%eC$u$au?NYeU-mFH0BF:\980lN*dL:Q@[%H_(W3ns(\#3bYC<]g)=nmVB^_&OcbNSDTeCE3`
%?*2#pZ)\A::^M'97EI:C82n.26Qh.RVqYiof1V;683,]UgM"HOD4.3@;&CEh#>VIZ,qZ6]+,=/<;"/!$RhCSe/(:m;dK-o!AASmd
%j8Iu?8T$!U^KCSJZLKg/Kg$>GKE[+lU@:R;'ri"8EU+A4^r>M$k5u]EGqJKE\,9%S!CM-7mZJf1Q^=AdK`f1A'&W9&F/@UJ80)5b
%)hWo`MQ!JP54l/BN]\b<cA3%<4YP@)Ba/r$P7/QkR9$S^O\b,#<U!]A1XRM@`f;i\1IG)3Y4D)bJOq_@lG,/VLh^1Z4lCC]19@AI
%hpQu(@&LM\DE9?t15/?r];0OAeQ@t!)7X!"Fc]irEfo.*7k]MZ:R-8%:^57(0M=HW:P*2?22-tR("9EkSo'B6Cj`Mi3,1`:E/7:8
%\qlk]<0h#_GIoOg"fo$]f*s+=+<=IjUP-@+#`=K@QL#>m7qDuQCCLU(7hhOA`AU9m<.n3G$lP!uBH^0ZX/`+oGMu;:Fs=jSUS?bI
%G>Nh#W[1@>Pmg=*=R"7U*8B5L!8IIj[m0'ADWIf5I\i<;V5qh7pHlW$abTX]OkhF5O4mB%dsQIoa2\M]K"T&_^Ara]gHhtiUTm2r
%<>AKm9QZ=F-/JTs4"#6S$o4$^K:o#>FA<On*H1l_&j.pLd1Is3;-dPs;GWMY6g&iG3]dCE:*)i/=7034>-2$bq31)"=gegJ77Hc(
%^@uK3*TC;`[X=8K.JTle/&"]T?mljQ#:<qOW[B+@[Xp7^>K8I*h?b&e(:HD--d:>dRbh&-HkXh[MuhJhP>Cd*T$7cFFHVOH'c6'T
%0C^?JQ@(^+>eF6[;kGR`;]sn4,mKacS*HiHE2QCBJR6=*)CVGL:>dI^P^;n^mNNnO4Fl+&rs3^t,-UBA]"s2^DH#^H'7m[qLB&VX
%4-AT&s(_%dQ,:GuU?0gSQb/o8$;LtBL+!9nGe.j'DV%,k$!kM%r\rgj!QgdZ4=[g5&:4t:KC1L5liA<aes#sEid,L?^;N*]500Q:
%`&VgYGp]l-ajb?qaHNNRASdQm4J<..U]W]ajd]S@7)6'fE_hf*()$<Q"^m0!;=-_mTIG)<+0'DXN*BnNa(Dr.r+$,<2KY?'/%4Is
%7qGJ-D-6V2p>/A<#m'=.'r-t$&I/KZR]o#<bFSb>lo]7YXuGh-F!D!KbG(KiFY_j1a<9;V/P"$T-6rq[Y6j?&J:io.]50hLD*g:f
%45'D:nue"RmQFpmE5&pa\h\BJ\DoI@HC#bWbYB]W$(OW.NRrL2*6BIUEoAnGd=NU!,]gVKkuIg.FLk1L(SOrRC1l/P'(L:<7!/O0
%R]]b/'5Ar1%->E1f;oigCU8Xs(i+N+'RQ`:oF>7AQ$@KZYVlt-<-aXM[Ph_Dq.dn"BkVO2U<ghbSQ2ld&bmdQl@FGg=$[=SVGeIf
%kN;G049@F*jmu5"<1se:VgLDrm*NIiXqO!8)C3XSWWuY%K;tH$-HoP!Tn?e2o"^,f73NnkBMBH#0#<Zd[TbELQ0)cgWX=`&U,'k`
%6%b6>4d&3UjBhUQM*&mt4[.Q\;e($Pgp.:F:M2H#QndkY-(B-/Z?q.#cQJLC_eh&S3NDlIp`B10k=PHu`(run=j!n264%C*B<^6E
%o$c8(\/(3r_MRn_kUMiA\1(e&hGJSf:Qu&=Hh]E(q#Uo1K0Wui`$ng=^@;(F@m'>I!K\g%kb>!uVc2a;7<KWnRPs[qN[8E+knLCr
%c9SsL?5jA7Y*Z;MpQ[io&j>+$@rVoc]Gfs'-MW^CIUol/)<\ch\+&#$YAXsGYKjgGngdhYinrs+(b.bTs06W4d3:N9@irjT.S]Jr
%-MZ^/>Y5Y]j6!;(B>@.fYB?*0QnMoN/:>ug)m?2>UfrA&"&+R=K3fF#.Bpfd7je`(=uk#gNc>OG75*bq$\Q!5&q_E7#:WFZ]-R`e
%ci=5O8F9np:3\tESSnpJQd^qG$S`EB>9F$#JQt7-LF(O^mnJ\qhRmlVV._?+RrHd.HFg%c-k?_%rl@@lKZhiB"CU;MU2oEgY.9aF
%1G95F^I2_0(`7#nO@u@P>=uRi\W`8og8Wk@.Sn66nI6EmZ0h=/@`3\._&A@fl6`Oqbi%\GO35k@k-6G`bG[s3,6l:U-@=DO^#*j\
%q<Ce`*UKa5YXC.S;94jk!bC]r:.LDf4CiDLM?st7o\(fcf`X8_5_7IDj.F0Se6m5<0EJ4R_r9!D3q">bP$F)_"fVaMi1`rZ(j,oP
%Saj&VS`TNlB*Ei@:5ZSY0Q/@i*Z3o_"N+Wu)fHF\W"c"W4-,>.jQU-@gipq,:6f5F5gZOKm?C;Gch#Bl2[X.#9a8GHP^tBLV-cE"
%-pTiD./hT(d''?\%YJO5$mVW:npLLHjt`%%b@[F5#m2EC[qOMi[!/9Qn'S`;c$?rbjN86G#ph++"PMZb;@ia&`66mUqZip2*"l@]
%.CfSS9WV0?5Cc`Bc(XYgG.g:3hj%(R+?MC`aP;l.I+9]-W(DLAJ+,EFBb"Otl6#SGa5km*O<YgmZ<TO`c/]fI(V2Ag_&9>SOu^tp
%=IQ?bV#566G.FkTg9qt0N%&]XRfT>]MQNXT0;I(`:XO_<(EJ-<d"S/-5c3_I="#MaVuicPD'1t3.X6Y&-7U^jD@r.(0U*d2eE>Xq
%6=c5+PMF.l4r5=Xqd\P<lG5PS@2`^M/T%1"!X_t3>*aki/.Kd#*-:SOeQQd%X"61USN(F1>K]([*YmkO@kL2gC16NrDc'kB9.DiO
%VS2-I!DIP=HJsV*P05tlXCj4))!H(I!.hCKPu3&q)\t7R.L%7PoZYfIQo2I*A0T'%f!ZknYaMS>X-X1bk)s=`Z]8+)Wa]AdJL)1d
%!8C<bA]I_H@7BUbW49[AB*:3$kmZq()38El#MhFqk;i#`Zp\q)J-0/D3c`AfI1fRIj:tV&%TJ0[TS!t[&`PDkaeV`U7D7]8[k#8)
%!tYP0_5bbFmX&CY'5Ii70=qt5Q".6;A>3K$Yk=Hf2E3J"<IrJ]"dSV'3\YGe8?iJ4^+H*33REJ,(QT/I\9%6/.hso]nInbcN*8a0
%4TpJea&[jZBqY#?BIi9*)9Bq-.Vkd:kEml)q_BiaJW:>>EQnLq4pN0uJAk%(^`F>R<Zp43;mh6'V%s6YB0-sSGMFZ%@2UAa+@+h,
%ArZN[:-48`FX2Zh`W5.A-/%h;"h<$(TqGRihT<)e5l]&"dCp9`&7G'(3SIU#$=289bqXc7YN9Rei>nFnVa(LDTh+5=qB_tBk=`&i
%R^,`#G>n"&r)p!K2[Eei<:;Aa:q2aZ'BP:66lCPOkTHn0U0HM97W>X;N&5W>e0%oVMK6OK'#UTqmAjP.5U+$c!Ofiq`YTt"68J_E
%Ws[@7?_uYERK!!d/37%VD5.@V^9WRm"q9iuP[M)37nUO:#<n!!6/&D`O:2j.OMbT!Wnt*o/8=@A1tB*)R2J9$QqNNoY8Kk<*,DHN
%i7O*45b!p:1DYPX]p=b&]aD*r]g]m)<oXtfRocqY,&75EU0p1fMi13,En-8YFJ_>>@CZFT=iSUYPIY\Pa8jKuZN=V:WRi?(bM\n:
%!F+bfgQi1Q&Qu`3QI^U_@L>Z@+uEtF*m]2L4G'g_DJoic2OuZFjj/W[K7ecNMC9hgf*QD8Mk]J\j0Sg"+?JW1aW7,0Dlb,k4Jb:K
%YSQ)>;CqW!!![W6J1_Ne&CZ[3Ml7liP52)ZKf(j#:E9>=rR[;dn'5aD6gtPn")Td>5nt/EL)fJdTM%I8,UK+9lOeNReqjkkUMXU4
%,5;k8!c,hgE3*68pCeKNFP:RWB<8NVmR/8$GhYr&d="nS`ONaEa\f*U_;gT,-VJut+dSaBgDJr\5h$_&+rJb)"0$@nN@Q"0(@2^0
%LcT30g"a5\BbFSMlc:rm`$QU&LB)BLmA,GDF6h4(33n^J*H]hb$mCHWft-QUm_%3Y6==;fPce,oilG*J,uPm'?,S3"U/,,68[o71
%-ih@mn#A4dokb*GU$*Co-X#X'Z>@NY!O9'7SZ.-52Oa^&K'N":!>_Zi#ON]r[Nc$%r.D]DV%aD."!eWl77%+rKo]tK?m&>c5WaNG
%W^r>YNO;]G!4b%_50dRd"ZffVR7PV2p=_3&nf?AB`>Km/1e1'#]Nte3]t.3+@G5XbH[DU@Tj&95L)r(NVA=*4j:E7rmL$,Xff@K!
%#ad)l-S#RVTX[TqF_[:0?4!?b'oP]$-"T@^Wh0g5VI6Qa[@Y&Mj%^DGgN&BMD"QCH&0DuEbJ>\_q50I)N[\'8"%fm&[c3Q.Krc7T
%9NY'45u=cQ">$DZG?Q5AEY`n<$)Z8T7oYflf`=]8cRKN/2\TTf:8]ErPBh"Q?;Yf'Gn^!FXWI%5U^3MWWFtj,*-;D1EKjd$]0HU?
%a)rgiY!Cqg`/4:\NV"-KB/`%:n/5J8:(YP^;Rc&<omCrmYW0puA4=-G#6i-b'eK>W#4dUl#.CQ&bF-UOknFL:`t?$734OPMR]p6&
%Wg"\@LUfsNe*$g;aCB5S>r5piH7)0LO[@`J'=cMZ"]<%R;G@bg<.Lnm"d@FS!W)._%Bd8S_:7Zs4RYn7=1sB\fAj4HcE=4Q*3a:T
%$g0Qq]W/3*ETr!HU!t(I)'8e[^l_&9JV+5U#$TA=<>5K=f$gRlGR00QP_u'c92nkB]E,N%";neM-j15!P(7qa@rGb44B*gsW243c
%hEeuB8Vb">D5s,9&S.B)+4L&+<YZ^^RQ:OE8,]3+gD-jTXD1D^_%6kR/.`Js$8kH]`S@WWiY.TF%`[)$-D-J:X4*\8rgMODq<4.#
%;UcKFPBR'Zim_E`<k'2VdOWUr!??3\3Ym8KlupLCOUadVY_poV!P>'oE?bC:%T3c*UNYTJ1g2(l@5pRFE!"%Z]X4[H:8X[**HDpK
%@Ntjp)Bo/sT_:O2-e[SE5Q`ajDi7`dXJ4"031t$&g2[J_(9;:=lfO$uEifl@@h;"aZjohu@UN+f*'%)RB2P(N%/hH68*!:I.oroM
%kl`#qWo:hkNGoi>du+72V[1VdBhA]%&KTrpT\X[0_Z5iH<-5'&7qHO[)BE.s<At+W\i/PSPV.?6I6i;d!U?9*MD*e_L)koS8`rKV
%2$6?B-bcm^pgkDlJI2^HeU2I$p83Te<La>[2a.gbk(7#YVb2KT`>C=^B$h+Pe5Sj[!gV7*I%^ZVD;)!A%#fYXg$4qldV&lbbfO@'
%S4$i9[uPp.mn.-'1,le,`FnRiEu_"C=Dnod9r7]P:P")EoHeN7'>F\*]^cSVX'd,M-M:KHJO>&l1j2<r&I-:AnF#Ua*4/A58s<!"
%ZSGD_4*.=Ag=%W3@Nggci#9%lK;GRj<2C>p^q=KHCW=/SEe2da`3LE"1dc=1nP`",ef^@41_^(#E+\!o>(Pc6PIBs036HO^=BLMI
%0p(_JBfQHrS[(>8JQ"9c)8P%?JN2#V)?`/GXP*cFn8b9si?ZW=i8io$)pnf]K2Bn6qZ8bMk&hM2[_NpFM+1bo^4*aG&ohk[JSM,^
%:eS/+])9]:LkKU2e#@$?Eq'\a]sWYt5ldFf*ofl`"sF/p!#BO)C'Q>nRO=8;=>ahWd>4)O<OFLc32+ri_:B:$d7%CeTGS"=<+U;9
%X?#.2ahb;LBj;KnE>bqA2W)QQeV%!9@l:J.4=5;%-eY$?&EfOl@2K\k2bSt$49l%j=\KHr.KU0C$ssi,-4f>H!.<G$3[c9q<Wknu
%<.CR^#CKNV83h^.)[=4#ali9$Kgo&gE:C!Y@#HX!+/9=]l1ocU@9gY@Nj22_"j**q0drZa!iIIo-fP,d8I:;Ij;+q-((UF3/pHoj
%.!I%m\j7*0.bgLHC^[+iW6:t@M8G()K.%(bq@X/-!BMY61CTe0hBg`$R9!.62EQgK0=G7UD0#-YP.%-_6<;FJW`tY.9LL&>,)-CA
%f@^kk)9/KLmA_V@U0MlQh6'#J3Z.sQjq($.iT[ZYX`Qtd#YYhI!D`YJBDF'^+jtqa?.)#i:sQ$BS#0+DH1<]L2H'hN.2ZFp]SkjV
%;U'l^/6pH64.tWU'Qe577UP4;`O(!2g`f2d&M%MOb5`%L9$B[)Amm!-:fUMmJSuha7Sqo8Yoh&i9=bUaDPp<TRD]p[3359&7V]5j
%[^C@WMBT"'WS82Jdce7aM`YtW:S.;=Y,K`9D2Y>T'WD+l!?l%*1sePY;56Q7g<1%gV=:g)^;\!"c69!NXb.B$=mBVi=^Fs$)T@l)
%D,l-pdSu6+>OplieJ8@/om?eJLoQ\sGt<r.<N*GS&3;'YctfWHqlb+ZSbNpJMUHXbff7QJJX;7E*Ue3K2<uADA-'Jk9F"R4d)^[[
%iqK9*+l75>%%4YtC!rXpb>;p=)r.kbl,%7U(<E!sm6aX\*!"MPUDmmRgTcEfb9mDci&+ej#:niW`j<#4=")DsKUg8f*R*#b!%jqh
%:gTI:1cg68!@1laDu>t=PsH#ZP"l=kVA&R`mL,2aFbA8&G<qr@2uB0$=RSQH_$D9AJnOPns'V,G\k.XkUnul5GG;cLR=$ab3NW<Z
%UWce%!st]8AlN9SJ.a/R>(@Z.+FHN=8iqj..(Z3*]T6B"J?Y2<YW%.a)]GLn)<F$6d+#DDNl6aFRs5SP3P$jNln3RV7[lb43m(;)
%)IMkM7E3]S&l!(70nq/DFNY32g_p>=R]]#An.&G_m0J1X%gNu'2+*%3",fX>/\FG9F^bre@T_p?(9gtLN66bEFOJN=:g7GRFM=_E
%0UVq/8LL'N$Md#2#AP08/f3bl!^lBOQ:fEmGd^-bH$K!^ff2AXd7=FO1HJ5R2X:>q_JFF@0mI=&5QR[I"k+GJS4>0M2:mbbC=[<;
%!3?-`/pl/7e,T\mORr,G?<bG%Ad?4]oE%e![2G*;Jq].Y9CFpA']JRoYZGcIMN]=$?ot910G(n'==FHBR&#U;<2A.P1`);@a/DWb
%!tS,M2;9'EK59I$][7`i%#J5H'&TEFh4$t*-4pOb_V<W%\gg&bos7K[UZ+rnItiu7DrMKSr,#^JH]X4gS>/Ik`=I8ggr`>H0neu-
%7qeljo7asu*Rdt0iGHkN,>CME:tu[=K3;QOD9hF&VaI6ECna'#BGrDJ6_,LAM'=C9kY.D=83ebjE%iiHfmn/E5W4cUAp8+GJP$kN
%Vs\H6G="0u,Y3A\0WYD?^JH\oX`(9[`0(`>1DRQE"5-@LN*+ABCC$Z36/G3],"Ui;!9R64#!5bZROX*rk1G38)*8.0M&(%'qn=eG
%Ir!J,'r6E$^ThKVq/hqdk#>s49A^Eq'siIOaKgl#o'%`)W72D%D)nS#3aeii^PogH]-DiRZ@mR"G_0ReYCmO)Lk=#5qlOe<RqTDU
%&:1)bhDlP4<(,\591::@N[3`&1"hP3V2nDA)RDfc*+O[8.;%Z'olG:^$+!/<j[$G8b?9+iMn.L,&/:ogBq*K04tpUV"X-3sCK3S'
%*=^H8Y\6WY[FJ,Ec":K/,19<i"]sCY#Wt_jYQ?U]Sg,Ai,J^se"dLma5Rn.':-@-2%($rW_[+@n0&Q$hJSBIhNd#L0*u+(J9Y4L[
%-<%c>l1(&0B/kfl!6Np@K)e8nhh-poZbN-J8Nhc,OF[j"!l>qAMP++&/XXcO)Ui0"-EL%+0?/rCq$14->uW/%rNk!/l`E2V%\0Ob
%?lp+h4gOHh?<LrX]*>k9FBbr*SW"sIh/o\i8^g@2#-,@2&rLa5)48ptCEaV!Zi_tLoor2qbWRi$Lo.`/%+N0>jC@jRH_[%\QFbF#
%YpAjR1mQ+c&s%RnB2s)Q:8j!s,Tb?QGr6n:H)g)29o]%W,loMn3%-5%+APT`;h\QD0aTN_'m;V9LCQ/QD:s\TJOR_/d>T"GZ>M8K
%fScj4lnNP4$0On9>]AMTPrDQNON)UN#uc%5Hm<d?GXr,P"Jm>dY3Nl7Et]-(W:L8iWR@h.]-mbM4N/6rRaqV6/#/?qRa%'.gP*G!
%(7NZI5eN!@+e_@I,o7+2M;uNA3belf'q#\p"X9SG0BaNN0E?mVcp>.L0Tuk!8Ha_+Oi$Gt$;j)u!KF+9Z:i=GS$P4T0-MstpXD4b
%WOR2!N58gV8'&DRs"FJ9\oP*&+B_TIZg+QE[e6<gju'9S$?NpYYY,G-1Yh!E:2Z"(Mq>>aTn%$>R*Yaf0Z$SCW`]srKs(JFeKSC@
%$!S0&A4g6_U:><&X.k'YM826gX/]VmillW#W4EY\PtL^W&p,-S\'DdN7%*7s]-4LDXhun--`N/b-NMtk.gp(7A-mL.H)*iiRT(/&
%6,X8Lb"%11<o@WlTiF-:buUC$eNG<_%VHA5WC&^6NFnhe/juI@A,pn]@.L4uVA$F=3Qjg^Z3%'PI5(\eV9-T$mZbsQAffL%8Yn(M
%/X:iPA%nq3U8CC5jIi=7E<e0jSU)1\k^::\,achli1Um'QUYsLG-bJ+j<brWluDA`Bn_)>_IMlM[2D'37L5B=Y$(,7q'J:CGba2)
%:=l/OQ%1>koSh>g^qfE'?=R5>9$(s`DPtZNH7&N:R9aK43Ocp5>%^DS<15'Y"WN_;.@D<o@.pVq\/8mC>;D3`UTRDTFlo1`3Z(nu
%Yk^_m@YPWP1ldtu/&RAV/d=KX_d':Zn$#J-m)gL=M\F)B_k>.oHGk=b"N9B1XVDYNcs)04PpgTl:iK*.'t12]$7[jgd'fo\.KpQb
%"KVn^ob>r)c3dcUXbNA.<AcQmmD6TcQ$2(9Z5XEXZ`:#GC3g$mb@_h2dOVb)5a6[<!6Yuk5:F$%(^Z:FP^lRN:15Du*#s?rPB3R]
%:Oh!3k,N9^q/bM(V<G)%T@EhaS:NH^bRK<f'e34_7i(9MLdp$MZXuBDZIlIS@n`2/gkpu2EPeEiLpMEo:rgJM-$-/%3^L2jq.skY
%!1i8n,k6Yb"6<Nr&`3^bQ3U.PIh<UdaIG&i<3q*3GmH5mRgr+K\2TuRlaT3&7A(gAqbP6\Z3;O20oO=J>GNBTq@Xf0#r$Ig"53`3
%fMTj7gnKLWMYL9G<GJZOSD@#G*75n5#1KLQace(oRX-OLe8mkb1eS7!:_T@DLqtq!L6QeR"`mP_W.^WR]JR!#"b&0cf'(V@.fH1%
%M$&^G2Q::mZ=.a8aLHcN`Z`Q"d"5\PEK3@_h)`)/aWT)8d8jd$d=qmfAWd*8e7cSU!ZgJR@<TIYZ6[C4eWJPIYaYA]2*"l%k_n,F
%TG\j?6?]kNMt)?QB[QDW%qk"G&lc1N3ThMQ-ub@FhPRNWir-^o1f&s5D(7kcY\L^_8K/\$*Teh@MI[DH7?1d9T.Y$M&si3DOXZ'D
%>i6B1!^'@E,3];'Kko/='5C_oaZ5JNJ['"W[6)>*@^ZQ#hSaF:YjQdu'D_c*(<#.m)LlNW"A6VuOsNEE\OtG[!Bpr8D[I8ao#Mj5
%>-Ll]?DA@*OcC_'SPt;ZBL)77(I_Y1K;RpAH@@s@h/1rHF7?&'Q$;OZZY@LQiW9=WEH-0C#W%<`f`M?P]Hno_,iPnIIAqgba[n6s
%gg8>]L*a\S1X^D["NKNU\U1+Miq,XE9FWJY;@t9_J8iM>$,U1[#f2TY:&G(J.qB`h2iY8raZHPG0K-li5@Q^oBSZAhSM6_Mm7WgK
%*fmVO_L,#HL+LWf(PiL?W3pl8du.NpJCtP_37Ias44*g=*6!Kj'f5E7qpbE$N/Q&jQIuP[c@rT[qFZSk>?'!]Ob(pNXpI6:M-rtu
%:s#FYpJ<miqkFW.QCVQjT&!%=Xt!DmEcXu6,"2qi19d8"LJ/f@!NEY3&EP,+?$MfNa+mRr=F%WN4(g:^'K$DnoB\:90G,),),8$>
%2M.,A>a_1>8U04\ckCg@ca,Q70*OMF:-e;F!g]]8(HjLg_P^;2lJ&/`Z<>t:<4l8k*IPtg.%4J*7IRSc3<hfX:?g,3S'qjfYmsO+
%+>r07pki<^s1)Lt5:WB`G+VMb'GV1L:3TMggn%LqMr*g0Q5dknHeBI[5qq=K('Bpd>::\p`1]2!U7hrG.h"b8l5;/*Y-Ort>YH5@
%Am!$iZhsUV[;8.O-jnAOWZHBdHUnk-rYssU88!d&^P77p:+pZ,kKSJ5^LNBtq<E:SM@Tb/'T@*I=]3he`4X"(/nZWlgJ2-rHTTRj
%UqY1V?r\>$SQI4H7#hl7rm@3'iY3^Q*FP?T6I;S5R2Q?`D?k,<7i%6E_S04l)5S%9=DT>K2m&DQC2FYJk`#o.=C&5]>g_6``+5d5
%#T,,3_D6P<h[Hh^DYK?/TB&V`=l^_Xk<#Ft2`eJR1)=OM66I2XSU`>SYEh@F#>5XWoG2?jNDk+m[idS?^1gE2lFL\0$1`J[L*3_!
%eYECa8Ao/*V.^e8<hO!>d&R5l.&mgA]Va@.4\b&pdZl64>MUJe6.$uI2T@`Y=-70c&F(NS$ogRUX9T2d'<m>CpIQ?sHIMpLIsRTu
%X(p374^Ldsish&n4Z1a.il0s;,N'8?<Lmf"C99IO@@FrgAg]*Fb@2h95ncF$GBVo&"/]ucQDO!u!@6XR\@i,0eSASE#'OWJ7<4jC
%%t`>r=(LaG:)DD3_J*>VHs1O&4B\gE@8K9?0TmqKaVHt_X89'(QLmKKgoZ2Ua&ur[HB<qtk6>Jf_AVC'8m]f<-,&nF4"*"=W%MA:
%YW-QY"t'[)oi?&$&0o!Ls)("W)O<(;2T$bDd^h1=V'HD1kE;$>i1Pa0OY-I!S;o5#:DW@0!_,.l'0.r/TO\_)_8nIpM\nEk^eS1#
%KO$Drl.*]/*jqT)NZb'u.#n^8Vpoks3k%pCTHZmmi3s(._?]3WVnC]$%>JZ$:@bTbi([O7a+M2;7oi/nmdQ_9@6+MV;%':EqGb5T
%"[/n!Z$@@u.Vb,+ID?-j#6P5(aj#LQQk5O":lqCcZk`>/*kd@L!.ptCo4b[P]!A/OVHNJp=q%)-)+'G_(mEA4fO);HU`_a9bF*&o
%jE#t1DTTVg&nm/YAjQj/8FVHmCeY_(8^kMdf>Ju$(#5:1ETEaBCm=F&H\,BGM1@]E\?BRuE`5Do;\F1U5,iR<P&@T]&8I^oWFm/S
%<2!)m<mP)fGmBN=P4ZtXU$QUlR$]<(KJe'oRU/l`c8pA4Q&[K%$rHU[OtF,5B^`+a!(BoTkb)<YfO?O9.C_ZZX"K5A"FH]`Z%GfG
%'X9Nq9!Z'+U7%oYV6.-EQD%>qV)ibBOMG\RfB58gS,Lns[S+Fn#EG^TRqPCqHdT)?R^bfE!.<[IK&.^Rc:t'M#6ea3Q6ic,NMa,j
%`t*b+$45@XJ4u"2"[3n5`?<%dc+D-3MGh&,_*h)o':_Go1%AjR.'(U?Ub>+Fr=a(KqWamM^$-<t=E52K+^g&A&2j!*4+aND[2";N
%>EkM>M24NrO9).;W:oQM_>r!1QD^E77!5MS4$6%pMk0ia#!7,-Q#.kt;8%#&2UbEG#"p`,[[n>6mJ4t1#SV3Si)A7.?@Z3:>=A^9
%=9Dg8W/?e5s#9h'KBRpWfsoP;LcA:3\b)tV$+SE&<!S2(2M7AF$tPup3PY^O-<Ys>jFh;OcS;:*VqB)kVK!k/:>$_A/0;5WU:FdX
%4",PG!esrfb&r\17iXc,E2C/r"g"_RoNGF\,tP$!i-56C@#_:R8qhRAlJ_707-#Z;dU_ZGS1+ctd59l31JUT[0tT%!lt3Q1>(/[!
%]=\r>E]\e%gJ!FToai>C*EA^]>5_fY_.hV4dK:<Pc"riBaOl-=Aa:/q8#+p=.kaiIg3*U?BOViUcWl>=6h<b+O&aWT'WBF"s.?oI
%gU1S6Y/@uHro(L,O:52@iuVo!Oh2dPn:$O:_L+-"1.`)A9aLmO7fU/CbV;RtY-i9jZ,s9^?k<I@kK+_p@Re:pGoq[,@J[N#Gs<pX
%<NkGS7PS,AiBIIDnFCj@7Djd0Zu+&EoH:>8MUt/>d7<lB,@gS_2Oi,Y,O<dqN);^Z2!7GZ*(6RbIHb<qZ(s%8B-1pWHl^A,%T1&.
%"f"?<Zff#j;h.!1^9plW5:5"==@r%d1\b'%J5(0NA,:=2qe??[<c.0)\%apVRs`sDm9(Y]6or7mUh_&-;DUdWY<)P+-sfL&1(YHo
%)="C=45Vh/WUJ!"Z<28*jaLD1<QU".=.@DW%nMZG(u/il=TOA!jiLp$QGRKC>GFC,^f0!h3$ApFq%Q8E932FiV>^0m'bo!Ta$Dn]
%5i;#/p!7F)rm(dFI-<AY-X6M?/`fc#Y,pSD43bN<(,0!8@K5HX"LphsU%KoHPg=gl`=RPsaF;JC;9?O?NY]e`mfEi2Cpb%sQAG=a
%j;U:>5E$aVgjmF`B*rI2l_oHYa#Sd5J+A1t-;SPr6L!7^rS$i'GRK$speEpkTr*Dk<:.c*fn>6e$+fu=BG%rA8Y"Z'\&3HT0e2-+
%RR*E&!J.nuZGI!a@G;_*hepI$`kC'b-[lBW(*0"GmZr!&_N:fd#tO$H1'LI7r4Eg7VWaCF"No5]QQ*kdK",OW-N5\h#`j'*Fs9:n
%H;pX)!:=ofjr"S9H+u'0o@r"_\_XqX4+2H*DU6Wb^W=cjO'VOmHe+U[KeTmt?o+9+<EiE3a"eU#q<:1k+CGVg!5AmS.lJ%]+3%?Q
%(bMI"*HaH)hZ@%HcqZ6hU?ZCOI%tsi'r-!LLc&OL^qO]EaZ!FK]@h*4`pFq\4`2qNjUSY;XR,EDH28fu[S[,ABg=Tu6L0"A$OS8;
%NU'0Q=s1*I9D<%VT1bTq":3c3bTho1TUk<;Q_fW86bFp;_RY&P9P'q7`LoR(K&M:2mr+W/&+U^bF!W)/=85aq,4,..0fZrL?;A;i
%lBft?J$.Xu_;"R-Ha7"%N-dUYbFUBJ"7If9Dtn^h+`I'lA)]q-3(LXG4!?`F`XI+h1l7QW,*!@fgg+c=^%o>E;ARt3!6Ub:b'VQt
%L#W'@!YN-C_LoFK]/-Ok;$jWDV0E$Joe6K41iqH>D>$^pS=AiEZi8\S\N+E6BCbKg@[Ae*b:]W&[_1Y@/a(u23<3LiQ+.>k;)Y-"
%"Yii_82TK8Ie^1.#uT$&eKjZ[bbaNSf,g8,RY<2ZSN_K?*3)e%cF#!@kua**aqPr[M3<LUk2V?Um-sCV\3Do2BC'QO]ki^0@En;,
%$b,JKa'%g<J?b:5.]JDFJ@1u-Xm&//B/]rY*kr`6JUAI1QF42kE49&Tqtdcpq6%M=%BQR)Vi)E+pfpTU4K=B<msKS$>r,lTK1u%U
%C))C="L/anT]&X-M&)DqpjMp<jbo1p^<H?3<D.f;M.HhF:$6-J08j*3lk\#-n&,Vn9;3kGONY3.n4A^DbC!L*LgGGD%mPMIX]!*9
%abR*X9:/"/:Z2s[XKLEcmtT4KS+<@&^T@CWMGFWX1AGm)mRn]t4b2nW<2nW`S^]LSRE7<Nrj%Am#m%^]^+EB,kqhtd.Hn:/_.J&[
%Ki;U*%9IKDs(8HPp\"4_]Q!4+<ISAJH(*kR8.N_N:PhBR1_rMVQg0D9[=_`7D(?qI&YU<[<p"t`,5r.Ojp]@PrAHIgq`&>bP>3o)
%ID&BQKCM(]Q]5.JrTbfeDYKWqEI3X^&)7PB?W?,'Spj6W(iWO\Wh3b@cX[*oOOup).d3Xn9Pa/NTIsk2=:r:`'e'B5YhFmh(X?[X
%E,MSOV2OQ>MW"Hn\&i<]0re'(G:Rhk"!Y=<9MEC10Ds-EXU75aZE+:?Y^fAk3<JAM^DrTpKD"@<hB(>(U]%K00=p]^o*fbj_s"]a
%H*_oq:I`R5!_%oiVD'(d@l4j1RA0tI%[)oe@PJI;M8(Z0"%NG0'S"%SjZt`lbPXg$k*N@GVf*1D%K,#IW(7R0bPtuPS)&0@e)kN(
%WLRBkR>1$s_fL1OmZ6GRnU8iM?e4F(]&C[]kO)Hb'8lIUB%6&mrH6ir!](IE$,>98@U#(Lm-B5S&O@K*aL:N280`S!#flS-^PREJ
%KUI2c[]mj?ER_W:oe;$Bm,c:@7ZXJH['':#^-*"9-g0WVS\"C8o'DXT@DshIhCoe;20afTFYh6La_jA7QfdO(rA;n1f'@>S[]laZ
%j/?l5I(L9*gNKpB95-kAArSg3NM)DWN`Z#b2Fc%[4I1tG%AA5@<J8JJNmJgNj>!!QQBanW6NWb0GUtoPU0&\*A_!Q"iD.upg"=t.
%jq+uGm<kOkk)t"`]%ZboH:kFF`l(5('Vqr#RS">tDI`d%Y(MS0>jUl[^$_@-^0/XKFl2cRQCC[?pV[Q@AAmABo7fXq15r;C/8s`/
%`:E<r%5R=%=3o%[lgX&6*fqG.(igZAO_56j\/BL:iYcQPB42Z)/[;VQ8J"\PWMm1\;j7h`-.?JD2A5gV49W.e.6<Q>I(S2u:[E8*
%?]N&445TSrQ+nubH<-5:=8hgZ/Ve4hq8.?ZHESKed-D5X:7pNX)mm^#)fh?/p)N8%YX8]l)9o-j#hF5*ECXt'k0TET*KOgY?A?8M
%&*58rP\It[*5oE?s2/)qLE&61h2kSon']CNRXDIA[jU;"<'@8'Y:KJGp3-,<I!Xc9LKG03iW6AKlFM^8(s#_<S;0)3TqIXg<6`.Z
%(ZBK1II6B/WqGn'Rm>9oA!G5D*DAa59V0NpOeN:rW)p5LE<7Q+g#D,WK5gK+_R2m3`,VbfULBHOF(;E'a9t(U#*EU:60pTQESR*q
%8&OWn0OJ,sbPe]W3J*;ao'=0-^:e++/N_jo*W_GP8WMB@r%[#"ppLO+"q'[#4QR^Z2V6Xn7`OR8MSJsk3Fnk$Ag9fCXq?\DFA!Wp
%WF;:WBliapfTDEnNW@'PdI';'B.kO-DLZUoo<i-/h*r2HD<rtu6tYDjg\ff9Ec[i?No$Oor3F,ADf9pkL247<L=n[`Q9R6q#"0#u
%:#9V+ccFu(*r!*DW45<T<,LNQ6Sn*l,D<mi^X'6$W]8#RTjefF)X>b"YDm7h6!G^I\`(,A2?#cX228OTrK$]SDf_`d6`sJh[10i5
%%(F:>on4n3q.4DMhqkZtQ=9O#X\=;(:K(^F[N`VWqm\<PZo0i@i@f&ma1i49/>ff`]$=p(5s1Ck?fg_C:>B^>lfKhmGR-2Yb`K&2
%Jie%[',q`s<(5LBm(o.a?L>H05XfHi"e<NpAfO4U"iekWD.X??)^.'N832$!]Qc,%lm&YlY",>kmrc@jl7jtrkl/UsfpjI@`odo:
%5u)O1"$VK0Cc/ZX5n(M:-W+=,gE6Fmp+)?>?-_icDqXc;Thinq`6^:`SoMDTIXq^OoW$,6LT(AoW6*U8hWc,rSsAB'?Q_]:l4m2S
%DR?f)T_rn8nP-.BJf$X`@Y@KT%U]IQZ8JX''OMqs?Q<Tg)';9=SLF%Fe7;aW*!D>r/e.W!q`_d.h<Oknn\U<qXF%kG7rCJ*afgXZ
%5LTm:#n=<uWs#s)_-NZ`jY+]`Uka8p"u1$>)DSPQ#9u%r-8oC=_>KEt7N->l-495V>1S;6cGsX8<8)sL-"RBJ+:i:#oVm8RDTc5'
%b7<BHop]H2GCnZk[3tB+]96M=o(DB%oA6_IBhLY.d0L/Tf)nra5=OF@0Y.Pr>/]2jP](sQMX(hYgRF$6L`4B<k]X?k%o@J]=6;Nt
%c0h?OH(01eLUBuKd><fOM',9c2gJ]gI01'U22;$1HX8LQ3<<o,YG^LU>htpd7kOIXl<iH*0(YAPpWPuI=t_Z%coF@HT/%tSkY<N*
%n3A/F,VbQ>f)Qa1jp`'ur"OUi#TTUDg<P?*ViriMT_leql%?_^9:q3HnK.X_j@J$roE+7;U+b=51WXp$(EFu\r3kg*Y8o(1,)JT1
%VShfRltCe&e'DrNp]'ZWgmtH8p%NUn?f0_Gl&MBS=HA.0\9upjH(TDhA$TZ(,9g!b4Aoqf<7_,HLX<hTl%$q]K0NWZ9L'oXFN2Vi
%("eq0Y'u]R^;Fe*ZU^5*8ZO@@c:uKSkX*-n#;Rbt<aWEXE$797Q_r>5ms"d)Ph_k.S$TTrhq.OLI=':tB84+YCaC9,HoU2+lLE^g
%&p'eClS+hRO;5J*llPSn-KFECEbQg%AHonZVPB.HCYZVZM;(2*g#&Y+Sgi&@2ULdXl\:qlEru#aK7#cO?SV-i:=[a7U#!"+aHOUV
%mU"$/[45bU+@^ArM/AfW.+MP9<e)pp3RjN"?Rp@:`'[Dp!)[mU6YJdU3oPSZiXXsTh_4@W0DaMaiV8<f0J%ZWmeGf5Lm=iHcf$e!
%*/=Wh9KOe<$4g3?9,HJtFS6+5TTOtl**k(ZM9&8OQeJ18f8jioS6Fm%4/Ul?s34U#DX6ZjGiI=r?M#c6m.+rHY-:S6NS$8&.g?,P
%?am@=RAuA<SRN\cL'@`b-rT>.KVJl6;H<"XVhN(37&W02-mVZh9F+Sj@_^A"VsVmHh3GV>]A;`+;t9#J4>H3AO8ZpWZZH]#j3,Zo
%"2&B,p,Pki?s%:\eFLAL?Y.X?6X:j43J5[ug5pmrDfN14->[N1CQ%f:R+*]kc-dp0):GLc(lV68]DqKWmB2h(]7W%hrT7@t3C>a'
%m=i0u)YtsSQHSlbHZs:TfoZe*JpQ=%)Hb0VEYRW!4T"]ECfB5'HZJW<m(2p;m2e2b"B%e+0`N1H]n?8^k;d>BBVUY:R@dQh8.e#p
%+&3ht37PLfkk\>nYe!>r$t>gYI^0SG5FH'!1'TJW?P7/K!7Kqj:+8k2qLZ1I/ncUjdG;oJjI8M]F'<KWp5="hM';S_^,#/Kc#:#n
%bK)Fu%O#RGZI;/:MC:iJFGlnt93hWJcNtMT.T`WXg1!4IF&1_iV4-!ocJXJ*[teW/mku27G^`-Gnjm]"MDr>#+!R;\1])4l#2XB^
%fq_)rl.WoA-2u&d\33-%8+#G<^A,10en?/j%6n_jpP-j3C8;@G'h0Up\a(M$)'?d4Yt$4CXkAEcfOc_V2?kW\#/cSO<.mtTg7!-4
%8Cb,'>P<Kg.kl^i:JW#%'cP?7=r.R@3Q>=e,kX-1\2bMWg!IsG<G``q[Jnl<h].J3LZdclSPJU>omM78bDTT-^#:[%]V`:^l#S,1
%9VXXgHkK(*1<dm7HH)t8GA,_[bZ*,H-AYU:hfg'Sh2U0;]@l5@kYH;IG!u57;((-PoTuW8=i<HR&`*gr1U"kJ&8M-ec;au)UksqW
%DnA>i3SBNRZVsqO6qoONk"\>BEU:HqcLf/@')hY7?ZIHZi[",DDJa[^q_gi[Ee+3f\=%$b)Sj2<Jbl_6BaR9ga;Y3r!*j,]<GutJ
%Hrng*-sguKnZSH=6Z0G^],r[Gq%`>RZ2'5`cV!g[lcu.hFqhZl0Z]n;M$jBr$Ak$&4BU!60$:G6&K9[7NcuK&0YXY_iuh4P\T%B:
%l;0h1R>/[scbM'+5JR0>VVLRqh+$9CMKd,(M-hoBmMFI-b?]113=/q2Fq5\+MTF2ho$bF*DOroRF.cT1-jMo>gT$)#]#-D1=c&/b
%/r%*e>+Q>EK32k6SFoR46)#(O^<n3IFN&Ad8<ZV/!RKM0lKo)<m.Hihn`C89S@07-^::^\=DFbhesu;-<s8Z2i4;Qa,/N;d\8;c0
%>(9EIQ/R^3V]K<YfQi6h;K8d">2"kT9&E:CHN7h1*h"u>l$fi6GMM>(YASOVbmCmC/[sp.Kji='b-,U\qY#qDGPljMrJ01+LV75d
%\%>t>#O'=k&<["bSN]oN$b`18CE/Z*>cP@4Vf8($OBmGHJ_A07]<Y8kakmr0cI#L:KnpZ)2n1SsSaXs-.\bm!0#g2P?7bg"3.$U?
%0PH(Ok=S`n_#=ifKcF%dk/l;`7sN;odN@@ac\f]Yc+1DKJN'M";71gTqU`3#>e9%[45MpikN6KC#)Bh),tX)&jn(qGV5t=ONX>Tc
%SY&_laDhE@d:RbfWrim-%-7o9hQ3[%Q?AlF[8Po5Y2(%?d2p?!'P6NEXY#29:^RqF5ZBe$k$$%(>CU]fhAiKWZZj!`?^CEYm4B8p
%)>8fqc0$QAV:Xl%XPBegX2(A?6B"Tk=6YJB$enLLLiQT!iGd8'HdCqX=F7@Zmrn#BBE.\[J,`jdpAFop3i9%/1-cPW3kCm,-Vs=-
%n>AdfHH^g5aA4!8:b2W"A124ETj!(Liu_MR?m:fM1S(*Jhq$UugH"JOG5_@Iq4-b2k[dbt*2)a"Ha.3Ze;I/3].-E/+_d3X_t+:L
%)8-FZ$`4CCgTnkMBs]4bjCj4EA-HC5N7Kko&c8_W7Rg#^9:N(MQqjH3EON&spiliWhjUq!Z2IAZa&8pcSg!<dEljgO(J)nAX0QmB
%b(2NDs4_gd*ia6u\TKk!m0qjtp2srU4F"oM45Si__VK[sn*KEZ\E0"edgk9_eEV4TDr?.Xc?Z".0ig?s:?fRAVh/^bPO#BP/Y39i
%4uq<5YtZF$I#l\f7>+tGaoS_s,$2_B";4XfR!u$%$qpZtp#`:+6\9('\(N-AGN^*F\q7Gq4Es%b%g>?s5NXjK2\Wf/_OKZDZK@I0
%D]!r83OdafZeW$k\Rjb0_lqK['fZ4:QX!tLf0GT&O/"f0!S,$>-'_)j$-_VIYP"lO7MN$:G;V*.`el3t5r<UYaG2_0,s5f%A1RNF
%WYLKd0MhiEh=\L.fWdll%"+j`8TK*YmAu3^LDHJY\*/YR3`&".02)6>s2,KL`S:="s71&;O3P]Dl^uXFm$M6?BJ`o!c<X`5[`U4C
%-i*@bN-;e+c[7nbnqMN0"RX8]A'gJLS_sOFK%Oj-j2]>-2W1\AAY7WEf7+>I@G?Ve'?q3n>jBKq^4ibqZeb'DkZ'eC'[c=7b#m;L
%K"1aRp.Se`.`Z;*3LN3"@M`Q!dRb7(KgFJqOA\VJAcBuNgss(NSK`5#>XfdjLDkF[X3pA@b0BY\aZC3J6/mKd9/J+KEOb=kahjA;
%!Mg`9]a,if\g,W/$D^MmXWA9TCF%>NGCb]"`?83TTFmd-$^)g<^6&6/%mYN9)@pm&H;l#j(f42q=%Gsto'p6`q&fJ1#akp-W]F0*
%nQQG[pB=n@.FM.6k+ac,,U7ogZ=-5Q/3cD'GCA3ZS*>[]\uEAQ[!7BA*;5"h;GR'3^8$N9@aT2"TuW\EB[JtlSb<m#QuCC+EC%b\
%n4f/$ffjle_`V+4UUT5k<Nj1*V&Jd1/f;.-a8AjrX;a'Ba/B,*7H<1QeL_M7h:[hFO6j-MEsF3Ob.\O$25$_="`'i[,^QL0LSBX*
%+JgmLru*#h\\P*H;@4OI0b=kAEmNEFLd;X!.?@,1^-%45RI3K"X)C;AdG39pI'5l0S@#QNm(+GS_bJDL[O4Nn:f;MH_JK\;G;[Pj
%,nW;.o5)ER".9Fb>?OMU+R6<L:<pdPCYG7s'SBT>XgY2*CKC^]&E?Ic0bY^:6j#0<hFl3]JQW"Ok6;0*$GEP\Q8FDumjh<2RN(;T
%)n?cnC0,'(.1e]T]D$eM,BV1D'g4!N"]?$?2Jh83j^tY7VPfaXPC]TlD^<X4$I"e@#;Q&]#SK,Nh$#BSMh$oKr;1)Bk:MeZZG%W0
%>F]Gu<=Q1NAXj5@5R8RV+KRgm`lTEa'%]GP,`0]Xb4[%a5[$r"9#=m?"bYC#I;2u\0c5^<!2e/QH"Ua.6/L01!6Q'CcHo%/X#_ja
%57%`]pS1_W#kq_)aU)u\"K)^iMrF*q3`uGjfSrNG^%u5h]rc2OM=-C+(*O?dR6O(RGH58l:Bf.8kiU?NO3XZEa"8(.'l?0Qq"f/,
%g9A/[h2SC2*d=N:JD%a9-aBj=ZB58T@MBiFQn2M:KpUC,cMC@UCZ6BMEXQ3q:6\K2Us]GRRDfraJUob8*lq/'M6XM\GsFZgR`\Zc
%51^0,(/3)S,.N\N45Y:-gmX\^-M5+LT`L1K/qC#K/4npEP\NId:@M?/TT<pK1pgAuJ9`(VZ6eYsej/*!Hl`[*Gd>K]LW&5e'p/r>
%Sek;Pfq'"JUa'R]!^;k^##X>cgpOU`^`D^#q?'s;U!)>2#i$*Q(k,Mp&tVu+d,]lYrV+)s2["91,N047YK6dOCtOEo@J'<pE\LN`
%3.dk$o`[P\nS\`':k`PXqrn=(H/\%S-"@%iV5m\sM6siG1a9<RpU<c.d^N0q:Al'tT5tcO+<$qd6V9jcWkRk#W+1rG6K4]d2%k6k
%b%OB`Zs\bI!pV$ed3(e:8hPPXTa1QN%S:eAp'$SFclY_$.QlbHKd(bP*0R=['\uK@`]^$>H09eAF1F0AjenCN#Tg#PgE8NedS,a.
%rUB;#nKAHkUN_)CLcD]4,^0:Z],J/j&UIf/"ip1l?HGsdd$T7<(mgGBDiaZ%nRH.?.<h!g;otFs#Rk8@0)d-t;W2K87GgQ\&rC=p
%6KcJHEWC%,.*XQpO3JtX"8?eM##EgqLKtLIljHc%$.SI/KIJ_Xc:!'gq*tS#)Ju1Y+BUu%@T8dg]T,XE)#Jobh\>@R`g[a@p!/=)
%cq2,GfjgOcd!95S`)OQ--Y&`d8[6^U"an[Xn=;PXk]%2iIkU4d5*6(M"E%D>ih5#/qYjOgnfOe92S`R`M@nod)t(GsW6UIVL4q8'
%.?>-B1U5ug%hI%BI=2A='L0$="(H+p)A!>m/neG%Smo.K<>QY35/bQQ?#tS=DLDOFO%f\K(5#(N+;A[%%F]%$5N2^>fePCmejPJd
%U^[dnBZ%<K%1F6lk+"`k(0^@j0)T+Dp/,Nc'DGu`D,9VT/":&-,XJE%K]O-=>p_Qs0Q<]#5`XP('Z0Qc-`mGtdoNNS:F*==1upM:
%gtJnI,,6Go2r5OM#)L7q$]*q3Tp$'^g4a_e/`hRE#<CR*6&l9Y&rCQqBH]urI$q$k_;-1O+AMnW,aE[F%btK@WuIZ5=6]!Aq%+Z7
%oVm4?/IKl5+a/Td%[)U*gFX5`pFr>IIOhc9mYlB-OP%eZTPoRW)*"Z][(.D-c/@4mIr!E@D:t$oAcjQ=mdQnNHJ],Qe#=^R8g#W.
%e7DD@oc0MfdYEc=l<ZAJ7>2ChC;ruo7*T$/MAg?F7Y)%=.)3>Hqt=EbaO1'^P7YSE-VeOeerC\@&Aj(n=Z/t&INjojCERHZ6s]2,
%(g+1K+LG>+ZI%;b;&VpU\"TT1Bl.Xocj\d&:41<Z2X;'c0TWuP<%G<SG8pfY1OB?<7U6hc;!?<=3U+#@]1_1s)9FP'@rcKDNl,sd
%0.s?r\eAk)T.b$$rdSTWb?UuqI3BdRbuL]l,0o0e^\fVPXUdj"UQS0$3T2dV?Z(pc"BXYBK^t<b3]k'gZaIqMe-9:;5+0nN58,p?
%&KU>XpQ@26_./$4Vn?t78!/ITT4ZR+d,gWAAl=i%*u^f\GlL\c0JSF)rb2AUJtZLTr%]5R&kN)qhkc<M4g'].:*<_C6n1\6mmB\u
%Pl;iW86l@D?`l.j0+9!$aFdNL[0)qYB$_rfV`ud(1n]UO<BK\s:`dAhJp(e8"[LLlB(.++A4jIN"T+tXW0;2<9cYnO!niDR=dd5!
%Tm+TYm#;17ho"2XaHX\>R_03<<"HbW*g5hC7(9;*T%Fl5Li)eS6Hh^h[;X.+B=SLKLI#c1=)sUM-2s"j[EYttKVXI%*,TCR6h70M
%j1h441WX\G/\Vc@.aluu\dD@frF+6DgKr%^J2':[da99\P,4j/4dL&t$E>E$cc4uWrR8C#P.pF[1_Ek!+l\__MR#n0n%56nThQ0?
%%AVKP/8.a.0R65?G0Sst$\//_d]`ne_,MfOL3Qti(!$S`,<8=lB@SpGZ0W7,\Ps63J9QZ%:*HmYZ#(cJg&(uEM!gC+ni`4^/"\+E
%lQ=RQ)M&EY$2g>(UYQL&71RI"HfQ]i;b[A\8GaI^gSW#/8&/W`g!7uq1-A$s@#D`FL*B@lR*8KlTbP\4e;\U`L!/a(_WDaT^b3ob
%4QRZCWuN[h)rsGcRQ70b77=+s54%Jj\SDBT1^X,(dO$8;+,314#ZJRdYIbd-(mLD@#<>Zo82NU)A3bdcE:n2N)+QF39eZ:'IX*JZ
%-m[8o_:'IF.1EnuEifglZ8T?socV'dLei^9J8e>]TfX5G@d)Nu\@-?[Z%td8lb5[qncaIWUsJ#?T*BgFSjJTi%K[7Y7rT=lMk(Pe
%$^bQXCCO-Hhij&mo.]/-&F%Mk?9a1(n?]o4_Q!;V1(qVq<^dXW2.FuVmOG_`o_/PEA`^29Y`V`fC1ih]Lcl&i-E1D4FTNYd7_UEu
%A,h'4OU&LFbY;cU0o,fHJlq_RSXIV\nU$)riYdc<(_dI2`"]c6$$^(,@<g_.N-Xtfm0Y'EgPq3OR@5i>FPkc.K`PX36@5C6l>GDK
%#7'#GNb^?faK/i<._P8*K=nO<!FP;:0(RI6#/&[F>@A:>Fb@B+LCA]oc?qG0lpEu*fh"maFb(u9QVb@*leb>fYF(.q[9k+:G*n_4
%p!c$YSQ/?+T#ir:'3.T:Ud$]O@E3&3Q*H$?]>#qUpbW(-)G\([=K(W>2AIaAE\PQ`lUKI]/O8<*-B3Vu9R@>Oo*V*Ze^'r0?AlaY
%R0[ouEo&OFEcd&lmXBPCl)Z9Y;,8)E4;%u*,q!2oD'#U`0"[APBW^O.-p$fDTUA)1Adbfi=PMod+6/tM(:kEu5QuQ@H)`>,7(0nN
%&?9&b*VX%a$H!%P^"q;7Ef:M+gue"mYo?6YYMBYJ-*W-*J"MR:qiP]b0DMK8M5IL/,)1adp2N/CS_uPC2[+]+F3^,om(!DmVE3'P
%5hnrLCU]*6O-r.s5;[n02e(ZdTBgT5jig+peHj\M(gc?I?KNl1ZU=VUdfk%@pW-f40`iJ>8Lt#CK$Q822pa0nJ-"7+N/A,V:l1K9
%=",Q02X1<a`V/U+XrG,5?Y5Y>2)uXF<f?s4DprH<IJIn@4T`/p9+ETW$)6Zre9c20ISCtGQ9=^OQioX#[tKeg=k21Fa(dS,]P[)$
%!jZPD6\m(;bCFmM%kVP2S:?Gt8`AkSesmh`[TDFHSSmur1kYg_kS[?7.2cE.5MR.]lZ9`lE)J9)eIGd?Y.a%b4T"Q;W/6;jXlRUe
%\/R<\09NRt&%A+Q_n#4,lm\A.Xi)>#I%#Pf/_X;YV4SZ'97[,r(uY)M2(uUdKqO^!YQ\(ee6X'SeXH^&Z0BQF#pY7C&Tdp4G$+\a
%]!X7%p%T'p;L^sW7R#U\bqka2O2ji")lV@,duSEi\(lbRp)/]oRXX(WiW&cG+3a6S*ec@R9>8SZ<R>:nj[ZAXklt?jTRB)uG+5co
%Rj?3S^bs2J=Zb,La;&rbN?][&e,)^K+,&$DW,/cnC133@\>i/\2=Tn0%08qN_603:Rj)D"oW,C'.^\>1.`f!'Je]jbRO/X3ONBkn
%iD=7[^mjcDE#[:!I_/'<dt>4=cBQZn22Q5!N/uYQ0n)b)*Dq(5(Di5ne,m,l'%i\gc0T`K`Q3>go",roGaq>VCmKg4$Y+&sZS6$M
%S^i72GEXQ`*]8C5*@<kq7/^@OM_gj@=d6sOJ5G<>@l$K#)G)fV!-4Z!AG:e>B!\$AfZ>g4+>^2Z'`$R;8ihp%*Sc;"=$'Jc!dmZr
%^t:aOQ'[(?8ts=l'SQRYBW+GB)Rcoj!'-+Hm$3RVd#_*br#qCdJB\U(bn</F^(=eH,""r-HOtIeT-eaYN/d'K*r;-9R^8&/e6o^>
%%!GQhR&`^tqL5H5#[.L<,G7pkS`S6_EKfJs,c\&e3'l_>VM@?k.f.Z!9,P_G=+0bGETnsP:kY]PiM:M8K/hN,G&GNkp:+%u`>3b4
%"f]j,=[S]IN4^DRQ`6Kthe['4+YQJslIdpt+TuEs;Pm1pQWJaO"MSQ5?0MGY2X/-+c1Tb%'sU"GpRpeG(lDN\?P0]N\7g=n-p+8U
%4)2*\L!$bl3T8\B@Y>7#Kuu65CR(m%;?43?fM*23Q`<llp_^$[P>q5s[BK1</YK\_fiF*cbUfP"@TAsIGgG6*nCqcG+]GB:ouKZJ
%0s`P3Co\Zf2A%5lK(&#>K2oh$2BgB%&I[Y@-PHkaCE=$GRS@Yl?Anop?P(6QS/2X#Gm`3Vjg_KM;Ij%U0Bec@$'"q*FeYE!4;l96
%ZcICA)\+a(n.eENR'B\ggBP+-:G>iVj)gl/&52^'Loe0F5kD34.#r=qnuC&j+N`'CVn+>jEH>?s;)l0NS\5tAUOp[FUg],(giV=d
%*c;j#.%P>^CHmN]XdX:Hp'OAI7(-h<IgS8Y"d`="!<LCG/aG/6)PF<-9.2EIA3dC]lf'X+B`Q$s?9#[$TA%YUia["pSi;>&"(I/5
%C,jbC0@_T--EjIW$!r.a%Bju%#15hm(L0u5S]\i\%AHi([3<T@9@@Q9F'PPCn#kPDfk,[U;L!_`m56[J&;[Dh`'olr!`(mP\p<\D
%#^`1>mlZNpCb,fG?8*"oA#e4=#I'"Wm$:2:/eWP0cm5TB*N)[8CoaTr<$Z<SU+g]2p"60EZPApN;#&`]->olfZYh@HfBLf[:2e<n
%2HD/aF1LYf%pIXCJMth=hl9tC>uh(QUtWf/6MsSY3)uI7k3Mi-A`e0"\1`biPF$.I-(j,FYe^L]fkeB'2/tSZD`M$GB>]tn#-=_8
%XJ/]7\:mI6+?08q0nY$gdY.G3-.q%AH0R!&9]l,shk/9S;(;<(9!U*dRE9U*M2e.s`pX:6G;k3>9WJg;q@lb[`FNUf9lm]qb%Tc7
%o5ZhHTHPf((J;6f08u@2*Q:Z%N$@F9mD\L.`5uY/Sh4LXb.bK+f@V\X#[eDQVQpY)TDUK.ojnm-bGh$cBVB)RZhp__M#!shAOGks
%42_09&G"I<<8`Q"bqIJ4_W1@LEUDSCR(=$%9oem[94N`K(bcq;X@E<cb@jjg!P<ROYMAp1\?\4R\[bl0>Q^KjS^;:f<e'H'XaN3m
%dm?Mo-;*s0m'cq"bmg,s1LW.gMQD]Z:d'(GckV,&@cdt?eJI'k[S2<S,Mk\]Sh4O(8O%S-mX8n9pic&s>h=.ie\M7POES/dgg(J*
%T&=SLKhoD9"(D=sl3>td&tC=cP3aO0edR6!joP+OiRu5bO=f-;40XI13Z#Aq1`n@)6;^Ho%o@B-iOES^58$%<P.:7lP\E"MJBrP!
%2.:$AJ>0@n4UjgO)0"AClkF/N[rVQhZcs/emsN!8>+D6.HsI]#1.JY[ER$p+pUcFdVKIFQ\PJs(.e$L5Kuf[.QbF%bOU$u+H9/AV
%]U_COLssJXeE01eMmD4$6VU_2J^Ea"-nEP_-pfp3luAmsF0HDmFedM"\$U*4L[eWdA80%_4Zu/'aW-&phPR,lhlFeW-X!I*<J_@u
%1%(Fl'j3!@a,A-M=qs'TEO>,crALusKF?P3UO%6k!9GV/A7KCT%j5+`*(G)1MTCH@[1Ar'FdnNkC%3!A]2nH45,*4DZg,,mbp/61
%A?2_B8%-d^CA<(V`rD5/*o_C;!aEV$aLFSo&AO,j3CERB9eAkXn#-T$#F/e%"W1W,<4;*16q&d+VI0(jZL=M?UTFSShP:;fp3Q<1
%!hBVAf*r6_G9gngL0/,+768k")r,+";gQR@4&O2!YYVq9[VO1`0_QX:Rg(TI]n]fHn_sUgp-h7oVQn:5#8,d9p,)[gL!\D?2Q"*-
%J?mJ?[eq!;2E:bIfnE*l7S+eUe'A$tD]9M7d2ID'r8bke9qqL7`a.Bu@s1)'hd**ZL<ni35Rf:j'LaLaiuhs"#OkrS?hB>>p+.;m
%a5'e/W2Fe_/>)4jiY\+'S#BC.1h-0te%U1?q-jA-(h>Q=_Y&cpo-\#2%fUeuAV;NhN#Z\9:o6=46oAG2905nU;[3=Y"kss2n^"KF
%5]3k[f]kqbW,]5(E6BRb6V'+$ZJad"#FZ?$KU=i*6\M(7U2)gdF@\=1(7(EAdR>/:':[N--85D`CInD_Zk&"]GY9$KG$(auOD",h
%?eZHYD\^k:-I_^YYkNqP?EI)bKY#\rK%t.jgohtGTW81^]5aZ'nXghXG3i/s3-"0YMLFpYI(8WMHtk7\jq1e\:N(k9"RdP:*]G;:
%]`""dFY$IkciZV/3k!!&==p!IU6p,K.F-l**hGGN'cJUt03)EYIC82n$$&mu)d%kr/SOOc%.?lW-3*q0k2O52L$!j++XcWJ@ukkA
%8YZm?=0/H$h*JHuXOfTtnGKga1lo2c/Y=TR4P4\W@Nt`"I^2;CIV8qJ"!Abuq8]qmWDZe2fRR7pO/>3":UdBX-':J-J='W*,RSTL
%hCRD4."=@SoC<$Y%;e.u@Wh+<CU&SR'b4'l!/db<W+OVS2n5^Q@5.T3?XTSk5:l-rlLD_*g<s$XCDaaBm1<#Rp=1"!+k>k77AoR\
%iU:,JJ^rL0SC_M/>F[Z]BBbl:DETS/6em+FGl[_eohNhIU(I8E]q6[W?`0o;3A+85O6c9;WZ&2Qb",8OYtQZD&Zb'pgG6RN)I;jQ
%fO]QpZZF`1r9$oK*5W4OEa&d"o&RO[F,?nJT.#"cB5dVJ*C\M8]lDG2i'RUFNUfbZkYC,__Pcr.5hp2b4[<8tA^]SK=VF_Q#<O)n
%S(Agn10_,B0AK_b_8PiFPD"+&;OpnN*i#k?idr/Yn]o>*BIOG#bpJ8fbmm>#cQLMFG7q.)#g3j;m(6o22g4Q>NKcm4*H_%.Ng32@
%gWj.%]:lmBgdG">c4h,:E9Ec4jHLZ)_UTfFa0ALR5F+eLouNWqKN]-*Jrhj/3bgg/B%?nt9L)MjO)#&d(0Wb>,BOXJl2^K@@A<$V
%*@G&/DO>:t`.T?-+b3RNJo'UjL\&AZ)ORjnS'M(;Q(tJR9>8>((Y16*\u*P*ZHWZ?Hc`CG'K#\L69F<0b8#YTN<Qt7^($".5Ugh&
%8@4fG!%@F0j5S)DV617h]e7*K=P4Ql\\]?<aW]q_$9[UAT#-_g(g78Rc>6VE@d=a0N5gOVP1PmHAW:'jAN-0b$ij;6/K=3l3<16V
%WEcrU&G*WKeJm9C1Hf;VgtEOlncMbX!bgB,LkXSF?d=V)SRqC<c=R+6o`gXKF9Q9Oc?0IQkNa=@U2Wj-a)!NE\r8I2bcmRIfOG]j
%ATLHiE$MD20Li%=m0f_\(j-*AY=Ku=?7]&_'J558esK;O7Lghd#RaaPm"12WY.:-4fo-?l>o)D%pGq[mre:Z=#n)#b16t^UK[NM:
%M4`OS#`inP]iYL_U4:=^+@2<Z"YhAl2%L'j/8TOmd1H=EhYXMJ9Hm!u&M@i"NkkJR,j<'J)%i'GDpk?%R>J%@Pp"@g?6Otj@Vn<_
%iLot>!RB2oPj-oII46Q`UQ-VnjW![>-St6,ZA&<6=`Rjrf!ZX8aPC%6![X"=ZISj.QX^-TmS;K''#tiS1)`51G#)-CD4KWmf)Wt@
%$N/B<+-T!L[#qeB^X%#j]X!p/A'O0uXC$T[STDlAO0TaWa9<I3L\&/#BsYi+c>6C=b>.pV[-VMKNs1uXbm/=DI6G0i0.3q.AUuZG
%/8JJ27`X1^IRrOQ>"5E\P&E%tbW&][P]:QH!s'QYP;:gf^&mk]cEJING^[XQI=sS<\$6Vpc%<#^15Ph),b&XBFI@>D]Lgia1$!'A
%'f(SXVAG/X]!.k$[C+14>u[%TH)R71;LH;7J8?((JF?IY,J1qt[`G@63DJU/,+Ha_6hMch-mKf#odDnsHEa#&24Ij@%;g>]W2O?d
%FKZ`n[o,He!iLQt8Mq@f-tsM#jA!``iMuAIMWH('gD>$0UP4TS-+s@Jh;u@si)"bBhLk$=pg'bKZa/4eJZ9tiImiA&Dp*SH54VJJ
%LA`f#ZoggI\<T,pc^tH(QSPkP<^-1+$,F($/iK(Tm&5m'L!\a%1SI$bnBT$@ZSnZs,@3%.%e(!_ZhqUEY*C:;6&]f5fUCUHB"E;]
%>,B1Xatb]"E<]?<Cpo=G`gt$L/"(DVB^&@\67AsOgB7-%2SH2Z84-_@f!HmHYLd?`WtZhfZK3ro*)+XQrY4$p"[hXb-O4]D367Kn
%YG`c<(\cnDp+^c4XK8%`mbU&%K&m9t.L)"7%n-9]@itD#^#"Gt-gi;9=U\qnGii;HUeQc;SEX]<.CA`47WmRp#@\r0H[t^n7dQ,Q
%P;16b\_.c&hMsD^qg8RaFn.!P^6miC0L3nL4uP,5'&SpFS7b&>J*G$,%L>Mhqpf>=4]iO-n65-8mRnXQDg=.J%#Y;`\6ao=M0*5-
%BpEP'$h2/ShT"f;TYf>JI$p>#O&-4RIttO;rp@:AgR)_cZ4sh$8<nlW,MD`sXVk5(;MCYV$1d3b6ln1A;2I'3Bu`qR#WU@^$,6%H
%ah"kpWcAG]V:UW47P\NdgWB_8$TN@[F7u0u5S0JNM+C]jcLC(T!dSZUWGYTr&:K]':k.Z,.t/otEB<4QcQ/0_ggUmH'CA8aG=k*<
%T^*/2p%.Y4-;T+A#9V7<8UINto&$MHI+1b*h[&bhmP6&_(n;aJr0B,-m]',Tc8<.m#")kI=_VW0)FS"G"hM`#1.hWh^"?T#M/]hn
%+_2BKU,,k^;WEW-a3#G2ekjmb)sEl9&d&d9Hc2\5cP;r5r3sCGNos#28PW\2KRP:C+]jKVD8Fi$o`-i2OZ6Db1<IM(iEUrN$oDeh
%jC?u'j3C1O?RA:h%_CZ_jA$+mEFQX=:h1<*XHJ-l[,]a=aHs%Xa?`^=iHM/'kStb,e_1/s-&0P861s6uV/[i6`g<1_o(h,d3C@\E
%\mEB_*AEHHCX'X][^',$P>aAF#)%+."6#@)R=('MFR)dD/&Sc=U0?h%)%//KonSQ/-u',ZHXBR.JO4NIS>%fpne/sNP2bf((i=)t
%`F?DRW!.8Mo0XX5<_>)SAVpj@\dDb5;Q>(,Oa@d'UI6QV1*)cj-M+M+).\JoK9O4+D1_Q%;,i5A[3ju[coQXEMb-bBW&h$A/:Z-c
%O^?hgS*<l%f[!M06dkKuE!C;^1L=D`\)X%p/'_hGe1@)XF"s75l]SC4`#@82ckp%?>#(?o4*S>&i7]po!$_pr%;;goL!lN]K?&Je
%dk<-LQ.9CS5`[@M/kpb^fZ0hFr,d(;rHRIQY=&<*8F8<rcER9c,C(:tQ'b*#>%stpC&J\?*5/PU/<CV:8rWY7r04JYGsD#cH)1:/
%G(A/QmFmM4X5'$/]7>"K.b<III25tm<7u:UnR$\.qXQ[2%ba_<irgnY[VfS+H[sJnQBaQKV#%H,'Ac(eOHRe<m*P0OCFZG<hLRUA
%\:RRob:!c>@:=:0]m*O0m`aeR2(79P>RENF&1hJ.elZkg<6@%<],3gE)n;966mo=h"16#i`t@iO>'++c%/Wr:qDJ!OY#+_1kfnJK
%C-Su]/:$X+N!QQ*-*R$iTOMVZ,$6%&,qngk3rdAGB0!`a5I@(>,!j#,,WQqVa\ZgOYhV%i6G%mDC&*Y3N#RjW?a<&Xir*?A3e7f=
%s"1@,/?SN;lufB1:>)o#E*ehQcCltS1sa!eJR;:aP[YP`kg3rY(du,k@cCEhZt.H\3@Vk;R>g-^V=`u):L5B3I<,U^K<;<p?%D7F
%dDq$AQ/sg-g@MTYpE/T8q&E8303cp787P0TE;2VEf9:V/WkhSuM*(neZblGD^s,l9;u7k]A>?9LJ/$CVQ@XIr>a>"`oG(jrCY<$\
%E*8ZFR4$800=_7f*UdVra"TDX\;-Q1MP!DD^cIg^$m'.1XY4l[Pam:=:]OKh^GlCO0oEe:,<?A0<J[8.dk`$mol7aLb;4^#VN5r*
%aG]KB:Mr48guT_W?olTHG%<9C0#m@CNqFs9*u@$<rO<V]A"Cho&?sA_Y+h9YHM<;(<;_LTg/s9^r58,fceJQu.Ja@rM[j`M!42"R
%h7+OFTWV3-NTr[p>X".4]2UE5PP3P`NVg3EKmbpIM>%``8gO[-B"*1kG4U^biXCI(L*U#:mV1I?F/)Mc5E#be:0$goS/FlJ\Q*.B
%p]lU1/!"JsM@XS^kYrOQU/dhWeE+AjRD@pT/uq7^iJK:Nm6Fb59e)FM\RT+sq#'=R+J2;<D:?><G`BI+[VL,c1&39(q?%2?nt5Z/
%>V6kV)bP<h6#t#3Z4N*Ap6k7s=8lJ>T2kd,Q/i]p/kc)t*GNMc<<+%2':,fp-(K6&6Z$)[!6)LIG3,$T4,3k58fW+4!up7s)8k@&
%"W:lo_p_MtHVA4ojVKCU6mdf+F^b#d*!sA*Bf@]M8,Rf/AR",R\Pa!JQ+`/NN"qc6k9\<J<^0dhC\jT)$qh+.i`i3plonIFSs^QM
%eJ6P=fdm_O'*lesQcE%_'e$Hs&^@mhGR9SVh-*j(/OGdV1lb:8"1TAkFVETXl#$]TlYEM(Y)REjj.Eq_Eaum]7-0DE99$%'n4\k!
%Y-bB1Rb(U<Xl@20'pXYVf;l4+%HIQfr9qgSJfe3*b5KOsHSYb(P%+e.J^fs'H,A^Wo&(^C:,s)<<m71J'ei8#o9h/=D]U?l*p5JR
%na*iM4PM/tBS"]8WrXn:L!BQOLPtc^(a[UFPW=uR$21_QfX<Tbd\X@-C0>Mi%^O0FlY8abp8aChF/r'rphl2Bi.;?n4*TnoDXgY+
%WE38O'Nt^TOYcu9M]/SM/#0Jt98<.^Z:)sL;nNhSNh#s2FWE.o,kgWLcuqtZbQu+I'c/B*nM?X>#jg,"KC7b9DKHKn]S+INL,LfJ
%P:g;4F8^O1X%h<VHj\Q[L!fKWoa\t7C#g2RL&AgAX)D]W=q$';gAl1F$]='ZVh]RLl7*Zr)8b6iI22?C3d<iNZ?Pc:Q#X0(hH"d"
%OrX=IairO@asahJfBPtfP[%GWjK.`m/d?ZjJ@j90k"$t1BleKeZDqlPM_B+PF9'NZ1-6J(]5GbZUkqJsHbk@ola?6]q7!684'<ob
%mWD8@.0DpF[>2n\Z^?T9D>6+amSFL8k\eu_E]HAQ#J"LlcAQ'c+l(ZJKeo:Hr<gTQ"tFrhO]^da/eutS^C70\iBfT^m'b*TJsib3
%oB>W1<[;<.M/hoZnheEJH<oXA&Ms.EY%U^S&J:6(?TE?Ii]fO%\"DIZdTLCgVLn?H3\A_@HaIPXR2Nt98]VHUc=T#e5u-(t&"j'B
%.#[`NY7<oZD3!,P0?pSI.%Cc9`GoHHO%Zr$"ra7[[]debG=1"Pnc4e`8X;Fe!IS;u-+Y\1XtJu]'+*%]f/`&m0$6buf"0;8h<"-K
%$[m:Dn#U+hXRSsE;OtNJbm]Ka-"BghD6>1$Zo:5ApURfSeg4]Xf2YNH,Tq*/,'*<okN-^L.XY=e$?jGYqr,sNBWp6GJWV)5^\=j!
%k<RT87>%Ar_U5fqKalX;>l"h&#Bu`1Xr4<aPs^u/:heJ(1bZX3c=#17gR&iLdLIDj"gs"`g3lF\e>cS*`):`#;i7KdRKr^>Ni\K)
%n+kri$&K2,LaB[nNp^q,H^!#<p2aSG7_(rm;lo8e8p2-9h7bMX*(S'_fY'Q58lppDOE@">FX!LeT(1"WWOm04HqE**C1l(jS&(oe
%ir)T#Tt-U>78>S6ch"4j&,t4/Xhu,!Z>%?/Jqt]3c+OQk+MFnMkLck25T3\TOeH4WE5HStDB2h@'Ju]l(NjBF<jS:%h_"?_X*GeA
%(WXLsZhj.S!=#K?fOX0klcL:/3#8D[\QU/`ePt,qQ>Nd*UW;`NIA<pa/f=NG9m9J-FsbNX:mQ7Z<peZ5n(X6o>i,;7<WkG;K,8u1
%&sX4CU8n_.[1<mOqhR.2Vp[_)+%=X'\t)tF__pf=D^fc+]mZ">3`^+!d.Y1g3A>4=#).\Z9jh1b\m,]VAe8:&Q@F;da-LmiB%9jB
%?p.T9egh9uDm+WAn/p4SdH`(`40jClAtcFV69GG#IdrajXPQ^A+V0]mkY>RTs1T1M21Gp6F'@;^C61>Si"G+X]]Cr[_o>[A\]I<'
%qB`SuMYH>_G/FWGm"QjU>k[`'Hrl4<kGQ?6Z2S&YA]bT#;4[R/NmI/Ad+K$8N)]D652F_"N0U"55W#trIk84,*diV.)e'is1?S1W
%)m3@]@k6lUo!Q2"<jfM[&k/>0?1?XmB%?ZF9&k4[<^gI#a-abt80>7Wd8sW(lO8/#iNi,:M<8\<55#o<QQPT^lmLV#_"PM1d:@G)
%#<u2kL4d1(kMBK''']87,L"]/Dc2edI8uHG'AqB>N`dt=CBSngqgnq=A$snj[[GFoC;?k=Ukb3^)Y(3$Kh:M:-[YPlT/cL2R\2G;
%Zi*ei8B]mlf,R1Ye\nfAWBoM]TY9tBl@an^bg5&BXg:2P>u8j3rin$2a@i,*GH`Z*#Ao13q'g@N?2W8"E$#-c1#gPC5OZYl,QsT2
%`(o2I[D10Ym)r=o=46863NgcQ8It<=kH;-EKr[t$FicP4)iq]1r7R"_2+,umjD>o0e;Yf!Z#KY0`#VRaDh;DI6+43DH$(aLgj=*O
%hp]nu?>W[B('8B'RG?WNbom`3>>(<$7D*QBTk%,a]>%UiRB+KFX_&$ZrV3mpf&u<LI+fQK;7NrO>'6<X04e_Ne+QD'qZTJ<6,ZZ%
%/^3UkmW"ZYbIX6qRiWf4\_37*JtOcZ$iO5edGR#NJ]Y-OeL;hj?5th4og?U*BltE:h;=f@MQYJ\O#-R9\CO]WI'gC@fAn?'1#[>A
%2-DMjd][#Gg0i/PB;#T*T\/"[>E"j:1'8mlV2MN7i]1?ibMa9bN1r.u_[^*Z*+JZGp$Gme]..^-MiWG??J-sE+/\E\r6j^;Hp^C/
%`76Un\XN#!Wa[VR#HR#&"kAXJKfU>3@ha3RQ#A0s#/oMQ_D<>SJ%r#:lm=0,onh=eBRZMfa-t\$b_eDmEJV3I^:Q."l*(?YD0B!0
%W@5BK\`.A0jJgD<_@c(LILtm_g"99`c.)CQfum3oIPBMV=@lnm]-TEbZWRg"*YuY%q/'Dh,(ug9WX_342ABF_gam!%cAn?[k0!_V
%k"h+>H%]4`Q_N]o74=^Lh+n^UN:UchPqJIX2:MN,'<"0C-Kas<o+GEABguq<LBgAN9g4/iTD(Q_k_$h#rEN>B?Qq^7i4+$O`FOBS
%qu^rM>I!RYf.rhVqk*IBb2oT@B,JCbhGAp/HKP`>>*UleUp*ia$t0J73j(Ca''RqWeX`.]5&bD25/rK<ZkZCe%frZ-0t`shHE(N,
%]</`<lF&uU=6t$hZ]diM0`Sd-`-,0aXj?Q<;8.d></oK#eWVK'6I-J,([`e$9q?,8$kS&Ulm8Iol@5@T4ct^B3WHuNqG=!Wg)ZUu
%;konpgJ@O[A2AC@hu0[G;SJ+enJ2c&T*5AJrjb9jK]NP;/3k*XCgZ-"V'0BT7K.ZWpZPZq#0CG8Hg50uJ'die4C"i#/rM?/6t7cq
%Q[hME*5.L=r>:RW^^3(l&klj%>7r[=MZR=la>52?ZC6V+aYlEi0sR/&5t$me(]l!./:'Qb-_@pE2KU,E8oO%MPd6+cM``i]g^0X6
%6@_8O!/0;5R6[#A<<FN@@F*8,*gjJQ-DgRBM-(%Zn)JZ[^H<-+I%UMe3NDKe+Ri!Q#ZND(-t<8NL3R)+9"A^5jgn?A`A`@JSW)A_
%p5pJ;mK%C>-)Ph'?:FSaU4#/li$N(jG<8Er@a*U5't9b/n]MqDE\po,o'ubZX\q+&FjIqT6WD">p.i%)o%^:elld%\5]S2(?"j"!
%beuY&n]/Q#$kPPnLF4_1hE3:b!!b7J;beNLcrkf:"0gri&C]EnFuP+uLSIAhaM,5#"?AT/,\QZ*,YIurBZO7co<X+-5F.;bH+_<l
%fRgNoqFVI3+$/0nmm8l)1[8E^%q$Aq`TXnHMV(C4#!Un`3PaJS4+$0BS8CPMDB^ed1(q3<&@[p=*q4u4g4TVLHJ7BZ0S0[&%1l5W
%0nrcK!u-!uKZM8>ZfQo1LIQHdM7AOJ0;EiD2ASE#)Wg5<%=1Kh)AVL"oc.A_7a<;R-UA-f#<e`0_u1E/5mN#hSC&I7A0;8s5)V^&
%o[=;,98L\-QSsp94%jmOgnrIE",E8^,,k?qc@]E@%GD]7<+H;C;9-@@]<GHD_7Dp+6b&<aTT:VU7#^%[#DbKr,k/abn_:!K:."#8
%"L?i&1S]f?$0U#t?oD6Z8`ji!e@b<U<$;[tAg^L@i(0HTjjQu+eUYB),,V4P!-tF%bPgu7[_N_dj-"YSE1+Z);+Lcggk<eNi#N&i
%m,9&'0*uV71*GaP0kgXO*Bk,LdFbK+lP\.XFP`,OM864Fk7D<goCU<30p2t)b:%r&!8+n]pjV;8GVBdQ'sno!8MfSK6cQ7`[sddS
%%rg?[!T<B>rJ>2/J@Ke*em?(-MN!Z&H@c$po"^>be.(JiK;o7:JKl^Y&1b"lGBgPdj.fqm!IM'n!C@07%fhV4An8LXE>J]?jekN=
%!"!t$BFsN#nhB>gd:2WVj?[5oWLS`/I)5]gO!b,?ouVYB"G<C6/p</>$@fcgs1i=uZ.XBYo<]pHe5UsSX^!p(b-iSblYnH?R1c)J
%nm?:B1:Rqq]DppKr5F0]a5?pqO+7*)s7?j%iP5<TQiHRur@@N-4+qJHf>%6QJ,bT0jmW6.msb(6J,,F\n`.Z>rVCa<ko]p-55j*J
%r"$i's3pN<hp=&hK9u(/rk\VuH?e_+a<90a;@c^aXqQD6,V#\W*=m1!UO]sB5(D-uropG#+DuB?;6cfl'PAQVIHrqoZOsG<nni%,
%+,H+LET]oS>Cd>PYu8`YhZ7oEQO$!R+s'-?4*nGraoML]0V3/NPgiNZ4&:1TbW_u1KK,5&2[kS5o2$Zu[VR.B_K*hPO5K//SXSbu
%.eGA=.2.CUs*aXH3kl+GisV+sr1l\+5idp%_f^"NB4Gs.XSTtu0=-!CioePr3]Qu)SB&UtCOoRsEn'gXnqHriaO(+Jo6udn3l1D8
%UYjJb">b>or,o`GpVqLY`;T(LEqR(n4]u%$hk)Q/[m;Cfh&nqEK1l22UhoZ:nTr]dLH6D"T.f8HK!0h)-=RdA7aS2F)NiGi@X"Pt
%8BHojF!?IHBEsnl(1?&hchg_-R?J*@K?Se!":g2.8maiXNd$Gn,B?'RC#;&R!c'%kBh^j]RcR,U!d</%,9a@+5JB:D069Qpo$SVF
%TiVa%7RB$;8CZ*hOF1pL&'FLq3oIK"r2ar]>>k,,MUam@,C9N:T9\`O,<F$QZ"\6$`?KmR>1>QF'(ao@dfF4,_4kH0Aq83GO$fG+
%1VR.d/*kik/,MnNJ9)dB?hO.HOo%]6ZBS.IF7r;[mjEq=\`[rUNF'?jKR\Ar-==L[O$+&H-MA)h4dP!niM_^sGJ%2HlaP,#Elsj"
%D+Ls;F;8LrjlK\ndbi=-kH,6fP=0_*HH4X$rD_E(KZ#ot,4Vlpb:h1Kmcog!o'H$9IN_<s^<YYLXcAiLg!dp%[XqmWVX<]-_f3.f
%+12o1E^*k7i'QXu6p'4Np%lDJi$[q5Ou#SBr8<p_Z]FE75$uCY$iKU-O>g\Zne9?>D<lQda^lJQ)rbQH_*9mld'!?nU5b@nO+.We
%>dqQKpe*j=4oB@8P8rtf$@PF,Z1]L7W3\TIWcD`*Rd`nR`%d'*<I+9&S8p>p7&i_jp]*aI"4,i@K8;;@-<FE:li&"Kf=4oXI#l6f
%#'p%0O;'fGCCC`uJ5)2n-"kd<"ZcF@"E!jp0A^+MF0f@6;U`N)c"P>NjdV5L'G(k]hB.-j#KorY9D=p'__H^!M/1/BL<DQ4AISH:
%pG`Fke8%Q49%O+WMDsb=[EFtj.SO7mC.rb#>QGbDaWed:[Oc@r9_=W_i4RJ?WZ4h&5Vs:Ns0,W`bc&=P(Nq3u*Q3t;PorPriU%fb
%9ft:\"V;c8M+!8_`ttM+ZZk%`(BGhb,k_"+*'(,;j([<+`/<1J,WNujnrW[`6\31.b*ALS3bf>HVU0jr24"Q\S>$&,-r6HF+MF"H
%DC=qC..L)noNg-H6/F!tG."c(n;^j6hgWiFYc#s`hY*:gJhtZUQkk*3J_rkC5A]P;%tPhO0$F.)s8(nAS>ELCm>S0c9T#*)#cn$A
%!>.oUN2fM2+2i];8<Ujp>ro]"O7sd+B]fub[^td/[\\p9kH#H/Q=B%Y0UnkR1nc9OH:u36k>CuO=f'Zt4B@R?e3haY&>=H'7.(ou
%66BbBMtK8S!2\PB_'fkWHdWpl)Y(D3C%T.*V"Wqq7fa;3?UDeJK1L([qEVg`_,"%oU;gtT-KgT$eM^1MnTk0):Xmb:?b@GeL^^3[
%&k./<agQDO_8N;8$=;VLq\,A6<Q`a[LAJaj\Z^;NF3XfZqAcAc_Qa11Ob+[nLfg7Lqp5=i=bf@R0G24oEQp0.qKZlE:pEL#K\'_Y
%*K@3HP(%(0EU8%:a^Vf%.NB/@W#n3ZW'g!!M#/OV<1epKMfso3UknF],1]5'dK!sM7!*@FK05Nj*TSX>-8CVln5;^L^OmB&n/<Ea
%CcDFmZV^*P]HibsAo$ntAeO.0PLu&54RB;Z#)G%&pp&Ca$q)jsLkEd\9`:<u\VeH/i*d-^)44:54rpJU2ULKT`98ik`+ZAk(1`X6
%*9=InNQm$-*h]DFPL8DJ;GrUn]`ORfH#9XAq:*&,P>\-8ER%"u--k_S6fcaCr*4=]TI/RGZmplCF0lS!E%1G>BXlMRhn@"--j,rS
%^,+"+*d(8(X9#\eLf/Af%rlT3R_#dZC-21&(9I+Y')G./+ra0o+c9'mf@?"p'1AU0"ZcE?"Z[g@OMkfnFaj4,l;0UKp%-[u)U\J]
%5FGd^D!W.7TdW'<J2f"`YqfgG".\6MN42RlcuWH^-kbJhFIqT-Z+=PO:,BKH:23'(h.-EN<a$<%iO(iV/#,'h<@A@<.$,VBGeFKA
%b_4uS.BG)-9gI*1(c6aQ$pPu&b9#OGET;cn`,&:PmBlu>8bbTCbbQ/2e]8l-Sfs=[oPJHX9`WC)"rFi+M[grFV03`Ii>G=J[+00P
%0G7rZ4mZX3OO^!#9;b_\J@-f?>X*ig_5SYm#"*GCj^(!#5X&t/lF\Sa"'B0B1#4e45@2dJSo%60:.iVR<"AIP4;1@'R"%2W+=*RO
%`^K^A?6siR(4b^4-+G/aqEk>nC0cVU94AuH1"I^dLmE5C%Kb&F&?`*h5XhA&^TCHh0;>p.ocCDc=E%Q[4bZ+(c=MIZ+K=WZO&Km'
%aYaiW>gDLMTVKl2fu>o4\Wj,sCW1Jl$p1quYcA4h8FVV72(ob6pbk.7.h?U01;+^J&E)@aET"`UcT(eN#U78e:-mg9$5"FB5Co?:
%LU6%;INe)+lN%Cs%PH_1X`-?mCeQGh0/;9GkYTb+;t6;t!4X^ekBjtOl,Rf`EKVPm[3UU)K3^Q'`.R8**+WM&a/FDMW#PZ?Zn-]h
%&ZDip\G2AaoS^/Ml3n`j1k3Ub/<'`Me>0t."]H5U,j3OT(A.2T/64ce4YENkaA<5%*+JJd<T&%Tm!PH`._M*1^EC^h0TjePr9Zm`
%ht^3[^]+tTa1`=?h;54r?HI$D&B*EL$PFScFLalY?X?>Mkt;$NBF2@:W(nA5\&DNa8L2Fq28V6N*]EAflV$`U+HA`j;-)Z_qO]Q*
%<O2%JI_TE.=i+nr0ofHLqk-pRd/:MZrsY54Q^(KBO.%OJ?E6T(r-2f2Drdo!cd>o@-Be,2O,:%#Mp)=/=Uj![J/6IRC2F!tnF>n"
%gnu=ud6)`3f-[uI_mnBh/dI!=UYV?hb^CLN4LUP_[`lKbIj[\CH(D^05KLZrFV_`VZ'Y)N\U&r1Lg$UXGPN@^*b)mk=1gTA9`BKt
%_h:Y1l'_o#7qibka(_<Npfk0cA1hR+hi,01J%m7r/nNcnaGlW4g>'!:4NOL*fjT_(&>do>&kh,Ys.lJ,Km0oLMfIZp4iF=&SPHqM
%kj-MlQ-\rOM=nfllu*+:_Ol\-'n.i`_V&V.9r-6&*=-e)V63FC;*Em\FsbJ%-).n9naX9U:S$OgBI_)M096.7*\b9"4'e&Z7""ds
%bgN$%?b.5n_,?+gV0pG7%P7&9e#&+^ipoUjUXZN.QR(gRPeI])$i*K02PfnRNcU8iM=p+0"fuh3O&l=h=&?(b*`$A>kc2geX?]ch
%l'1A9Nmcp7-CT;:`-edZ%O@pML^-UFJ"D4c5OABA[+m?jpoRJBf?K92@sbcF6.l1/,"MP,+EoJJh>(`Pe4hKnamP4]0HO;`ofe`a
%G@P/83_Z^D3PS:S:fjC^.6q2Go+0]5*=sp;S\QstCP_B:cL]5l%1/Ee(OlZp.]l`SA,J0Rl4:T2Hl8n[b9O7r+PG$Qr>%bT<\LgA
%r?AecO-3]4m>>kJ:]2Sdqap;WG0di:QP/[Q^7LPh;EnNe/NGiS@>HjQNq!dh'rDC7H.l:YM9Z,NOj>f')9$4t8Q<LNo*KX]os]br
%T'&P*f8K7$nK?-MkU_\g#<#+h4;G2--2Mr]hFYh.'!+D0EUD`>?,"t?bOE)rT:;gcR1C,->j%WE)gqPU:YX>_1BMl[=3^4"8WLCF
%jF_hD4hg\(4b]LMN`3SS]Fj>9q0Y;sB(0$(][EcAiNH='>,>CL?FY%tY,f/Ba.![P/(:Y6rc2_EB(-I0k:,$UhKj<MDR5,?=`$cG
%8,`'k-k-[og-rb:jhV&H6TuJ&-T!t+OoV-'0<lVnh>Dcfc$e#[HulDfM>[09NY:[(QU0Ji299]YcYMt9U5FF`?%5TG=d;X`b#oqV
%errDnph`kVmW8]KcJU'fiDo9WXNi\T:J+RX7=(KZQ'_\gr1FK_/AtHQJS.b7poU?ZYGkRhH[];c=PdQIiF<#YFc`4tNR;7e^RX-^
%VQ1nsQ1K]XT->Z&_&g]OKD\[hDVMKLWP+o?76Up_n8V_]E\97Qb\XG%dD*X^?^(*)<S2TN7MgF7jnF8]2&Roa&qtX&e,Bt?H8e%?
%+m:C>W[nq&`Z2qV"?*bsp*pL[nZcFBU7+H_J5:(fM2K>YRMuF@Q1AIWNH4\AM7!=kS0L8f7T3%Qa_m%qG#b=*Z>s:in<5U9Z#LWf
%W`=dXc>=kl.+di!E8/pc/A,3CDQM)8_BBV!*hCR$?6Za'ICiM"&@Y4I1`Ym3m%Al0/7MDblJi=_Zb>g)g2e7@q9+E6D#unV2X7qS
%C9NMelfj4e9<F9K0_-j).IN5&2J?_Ae>'\3fR\UF^`phI[f#D$[f4E:\R)Vd<f2qjXHu*FM>On;VGH[4isQqlC\+MP4FR/A7F]aB
%a%g^a$[LPQbQN^uoD\(58d3lfTWj(>9B<lmIRq;j?!oMNlJVlM7n]19k6kbijaaKb^?`0g7hsDRSE*QG32.-WP,ikRQ-YB#ip:;M
%eUp]RP@FtI4"Di85qW+uWJT:j(MSdFcr9IP%B"\iF3J(c#CBQ=-[sD%`=#)MZj&Jnb#h_ejSUuLjI?$L3#?pMG@.Ho5g3/*h&'[\
%#],/*4Qs,1\h`T6/3.tfF)QlhXD:gMCZCP0&"i:SH*-[^S!15KjiHI+&Ka"e=,"t3rE&/D^1ErJceu7?`HrmSom@-^b3-4'jQ1U@
%f[/aXZ.n%+'C3PZ+J<%Jo.Q6T`qTCi@iUQFSGh^65DWgN/%So'TGj*aq/q4S+8bB]7$C)K6qWfJZUl<u!5";d0DgN9Bm:qrpOiB3
%9mWe_rlHhZ`bgs\#sNc#<<IA&aA72\cEhlaF'Ch`o:V!=I/d6;m(C$\Kk6;X9]XN<cX2U^cTcVp"m=Pdk%29AOma5eDtCAmgZ%O2
%\TJ?9^4-"o\+"d2T!luVb@F8;#Nb?aYNI-T^%eekrk(69>Hh6oT6!1*MTbW5M)lWO\E2+*qW@sk0D7U=iO%$g3B0UuF^dQm1VB#[
%/sC?g\<W&mkM*1i@bEb^Gfk8Cs2/&Lp-02!V.#nbrsZ,-e65s@pr[%G[SFI(q-hcrg+b5oql0=#oY"Mlr03TK.&j@V^ELW?^J0cG
%K[9@MR/%A?ls"a!9&TcZ-n%aR^(0^<)'.qflW6AK$r9j-qGEH+,!V+Xg[%R>aksI'^-ku1`lCU.qJjHC?cfZsI\I3NSn.l\d[00"
%Kjf%9Hd?\X:#qF[H'DZjrJ@BBJ?*[Mqb4%6f9p3Re9@rck&`c@FWNq3<^"Cg\3D]NF/=otY6;E6?R"sdeY@?H@C(LlRN"%aV5qEh
%M30Y;`%mgGd[/,uR;,E\WV)qSe%2hJd<7:87-^MiPjAgKG'2SWXZ5"?c<\@K=12dSW=aT.V:*opPL!$'78dr@r)daAnbdj\.m8\c
%[DWps5Vlfs3hW;Fb(*QF#/Dr2L487BcgqabmoJHS+(GP['QoK)SsRLcjMZH7BYkaM0G70Hk6jtD@Qm3NY<ACj7!\21!$[h?f@qc=
%4I$V/BFem^iBTcMTun<L(Ti1E`0.DQ(#:l5JDuiB4FBeGD@\9DNuA`U_1>eVUUa'A-R/L6#Bk7g^LQ4ug7J1:f)NUYf)%\@VtHEJ
%g"D5D=V"OH`*hqWiKTN%q+/J*-=__#6bFSG1&g.(dEqab=^[h5Ja`e;iKqV!!g;X.UH<)[!B#+Lg'J8!"fRm($u":SD^7j!1(M[^
%T,UTUH?AY3FuVMg![LJmaPl5.@Sli[K@ooL@a3<ar+5uu,r'?ok32c9G1Vcm-c8&UD%#b&+I?h:HZb,LD>3$&&ad#KAPM$7/[23'
%0$/\_hU5sQ#mp5J&sGD=UW3-(Zd"h4b;>M^&n9Y^r-oo/1:qE0l:O;DkWQRjCfk4i1en6n1-.L#RIj3Y#].cs%<,(qi92#ceSJ^c
%W/hVeWV[`6%\CDAe[=jUo,cLYA8`#`nu5CIDX'";q@F5$OiTHZZ,<?NddD:,eDqQ?KKJg:hMk,BS_AOHZ%<hD-4h7H#2R5M._)8*
%ec1-8fuW"p?<]9s9D=:7k:%3TeqgDU1U\hmY]*sYChULuf)5R=dLNu)hC^LNo=>KA^(O-A?,B%S$dcU?@O:_Y@+cI^(iB!0AlRGM
%J37qV9#eY0hJ1oGH::Qs?+<aF>F("P.YN)"(3R`\T1cnnaOATF9MH#D]b,fp7/T+<oP?m^9`_g3iX*bdG[BXgT>oVPe.gp.TX4+V
%X9'bA=*diJTJT#d@b2@qqVJ+lUFK0rG/"Qu,bpTJ3nOrugssEh9I\og5a4e?EDKTQS?(&/N3!-Pq>8%<`/eb^'4+HK#k9L8#1<pW
%YI?2)5W"o`E`(S'.&&t8\N</Cm<Ct40^N@]?hpBcl/%Y@h@o^@'_rrC`IoK1fC::&Uq:2"0eu$/L@9E4"u:oKc=0'2P)iEDS+/4K
%@((Y('qdmde-lg-Gn6S<E;FD-Lq8*JVkI+B..0i>")3;1X$*Q5Ym/:4G<kCe6d)TWL_p,6A="ERn`<e6"/sm?1WZt7I="9B,dc;8
%^OPNT`\A_\10^UZ=V,6h'B!OlM5!:-"$c6U=*LUs@XFmuLoBJBG@iK$$j2Opgm&,C-md=B]4[5[RMJ?2<Sa2n.PJmO:R$BS>]0'3
%d2D),#<u(MG?Vf;jb5mQ`j(-&7D%Z+/<b%kF<F$Y2diuurYKgI<MDSZZ@fto/"rY8-G"o`9CUbi(m)\q:-/]BfZ0&H"ZqS<)B^Ms
%5u\YC'"9D`MY?8^;UsEj`'>pu;(1f<<H6R1ZHYpHWNqA@^89=OW%CfWIuN;T$-`P\!ZUs=*[%r#aE(_GNp/(,S]#qJTfi.<,\-uP
%4L6t\&Bi.`D;!5QN-0*)Cr=qL9;*urFf_Y@gHk36/C9pL@.SAe=:F=Rp>Mu?f*;f=cUH[i]J/Tf1VA#4(DPXmKZ[9I*abhld$Y4!
%8Io4Y[+$^PN(#HeCrLTLn(%X3D>)p\Z^P%[IU@nLB$_="$k4*?g;hYsI")F1FUWs*)>d=[dkRqjF1aaN0e].8/bCm6p-s/UKJG/a
%')Q9h.WmB4Hl5H`pTFeJVK>G'o+h.r!MUR+CJ($CEic9AcRQ"=G28'BgdfZJp`J<J(nKT,#s,53=E^#:@Q;N+(9cgQ4@tSa@^@Q1
%$onq,pgq]p%A5(uDA#=#*EP'H_YJc8r31mK^d#kb2J:&WDB[E$83?$%kY4.(1[3ZM"!DBtm.O]Ul!9YrMF7J5K%\s9aM9B$qQVJ#
%lF\hrNB`0Uj^79,BS<;nVf9c!OYmESOVr3_En-Ku9DmdsW]99Kh[\>=R+?lA5103^Hm,!/6M>%;&!f@*dk056lOl_]a1"""hN%F2
%pM]2?];i=[0P>$CKL%[@Zb<fjV^.j+NuNrZ3F8a/8+Ri43gP\:crKRa!]SkV]<O#Ei)^H5e)C/hDsn1qm?)g<]J4;n#.Bh7F"F#^
%h:cr):*pH4%flY*6hn#ubJJfWP1RN6[(,<DcH\AK7X&ha,L6'On;CT;YPcfk:1,Wk%,(d%D!?O[*V),n5URj]-YV*V+Qnb+4qn6]
%Nr=SiU90FqP^u1C"/'_]Uahcm71^hNT`jm^,D$3-<q!:USAE-Hq;VZ2%2_Iur]5\1XBD_ola@U,mFdDjMdsd)m4]f!`6nO7iIucL
%<seai*n3ksKdEa0,Hl<$5Om1rKrYL[^W*\!0:rO%9:SMrB*aWfXXF73fm(INq]bt_qBYTLlV_Y)p7\(#/I4GY-O2dGlI9+?L!:8A
%EoRVJfbq6hAl1@?j-8p><,_hQGeea)QPNP(bK%a!qhXf4"""gg]2>W<QZ^tSg'eBB'bPYt%\mU1ZQua#:2;#/`@;WAN#AU@/)@E)
%jE\&s>7++_2L#42qK^iZ9+@OqW<3_oeR"<DGm9JPkKM.(ro#4L(BJ@kfGtKm0PF=U<&J>YU7`JAV-P-U_p?IN"gQ>u[*QC!:pc0<
%<:W5nWMJ$$!*f6;C1eOk+Vj!_Jt_M:RMUoC1o)u`(:FHfQDE&KASG7p'K^>K7t%:4YU29(iajtD2t$C<2H:5chgPu6C`[,s7<^at
%k+ocrF<_gBR+5n:l#d*77e[&:>D@iC.4!XkXerhWepKBe^dp$$?5M[<Fq#!P(l=EWX4eqWP-".+m8gR?*k`q`Xla#A<!D>t)\0g#
%A-4a8"4Z/.g$IbQ0=]nB#iQ^8p5D-URei(`Dng]VlC/[HcLuEe[lcp=7+T;B5JJ9BfUioJ`8AJS(GcJ/]S[g%rRimXfakkdlL4V]
%TUS!9P)*!&IGEnIfG@"s<!P8k:^DlkSU*0)qsAQ6L:^Y'gU[S+9=Nf8mnBH#$N"T()J#o'],FEJA%(La>9;Eg=/,>r?If+ag#,a^
%$VM>Y7WZ(d[Fg`9;d8R90sU1rkGG^#et'Jd"5V&t9&GrZ8r_ASe(op[%&sEupjIJ6p'"g9<VG)lB*Jh#mI\EcX/?.,=M!2haMmm8
%O37?Yh`o^s"'J]\1t`V\%)H!2WlWpM[&_''F2cG_4cg0Gi3'&.Eit-<8fYO`9<bkBp9L5/)P[c/e$2gFc#6Wn7qgeH&:Rg"qhY$>
%`L`\=#7p)Q,6&$[ifs`qr*/-g%&^fmF-&U.a;*5I38^A-qcCr%:]Fil_)%fjQ^"aJ)B".cit*PmUl@q?p<15JL3IA7VL,Zb.E@p5
%0?[Di(o9qt04YgLj"C93,9]?3r8/#KclN+8LBeJ=?K%4R&@5Vs"3pC_BUXL:'OGg%S*f/\#A-DH:cO77dMK@tZ%17;_hclo.@,FQ
%RS;$YqB/69U[HYfBL"RD?\X3#kTR?D2*.TUjFW+e%Me-[oj^j^_<4dD9"_UoI#fTCTQ8OuOXlUsqO)_.!UgZ\%XQW5^9"5#;@kMf
%Muj/B;Qp>)S.("6XhFs<Fm2OD8M,tEnZPY(m,;=Rl!V<0gYA0E_MJ?hi.oh18;fK?PmK3A]lrRB96a<Dbi>=NrJ+89E?o:_>UtL\
%Y_-2UEsHC#Iuf>HFP>fl?AF:s\O@hFs#Sh'b*JC!dK7a1aE:nB&&(B7o4H)/6^80];[uW,CDp_f]4g5qj055l-_jcd7aj_!<'er9
%Qk+[?$[i"uj4YRn*sV-%3`.K43<+(h+^Nr>H/@3nm3&#'!8+nP+Q9OA"0:ugefJJ&=biCY_*dM!ZGE:<j2%J)P,?l)8BL'X993gM
%D@m+=5MKk@(u_mD`&ie-mVSQS3Oj'=>^7Lt=q$?t=$o$;8F[)k#=;5aTpS[BTqPFd>NrTC/uXW/9L2(,BH1'?;luQEV=<(WA@O$&
%MM-9eRofmfQg]eq7f]ZaJ#H?.QmrhYoSTP!JtSA+%JZ5a6HBr<=E/BXFOXkHS8jVm0`=r2:j\'LH:\HfCCh#G1kJ#l@%(MnPt\qX
%n-'i<HYcbQ6h#'K5WgJi"`N7(9ai[cLqJN[;J,;ap]tnJ73"./f:+rUW9(N&R6SFaTAO;sA>Ck!iq?4&6Q0TjV'fRfW%;WJ*9'%O
%p;1VQK/0,hB2R=D=EKFJS!$a<*L9q-I-c0G^UkUb)p`KqmS7nM;^.TWglbG3ILdZ1;.XkKc-5sNo'[!poH+`ti"BSYS-=)WnN54f
%rXP-NcD9KPB?H4*)=ugp/#\O'9ork7"_Wqs\LG"]gUU3CRs4fB:M,IjjLPE*Q09q-T2:p"5Tsl<[aFlg1cQA%I/CCn2IqJ/qt9Kt
%)(b/I)55kob9d?J1<sWEIWd[m!e2Ob?e>pp/N)5@5bH]--O_(sn?h.k,bpLG\VK"sJUV.aW2eZROINP[@])P7pYq^*TZ+>-L%<3P
%3dI3U^[K<*JJ=rLg(RkkA%*S8WTWu76jls?EASe\EbCNq3lB.jJDW^1=[f38aSs24*r\=*-fppT1jCd?1=i12C7"Za2H8LhSG#<t
%Ptm=ib*bR3bhdLT*=7)KJKOV*o7o^!Pa5Q!Uki-l?5<K&/ldZ_,@9l94=d9J@cFVlm@"L9d6T=*bkV_A[h(0>6Sigk50WoPP&mFr
%G06UJbto`Y*lPo$WRrW6_N2Zo'=]%S9hfXR"F)a=Zt$N*&9S_Z7JWHn?$8@2bYa@&20sW/8D:&)X5+t58$,<(i/]9d,98jm"^;oi
%VJbkV+Ws_9'M.D!+rgN/$U#'9^FSdSgS*q#1_fh\5F39kgCbJl%&nphDn0%:X:u83l@K9)oO<PqZ2;#QUb"oo[V=\A#mR9l<1[@^
%Rk'gJ%2+8N*\\ru7a)tr@-CPY0WeH3`"<csd=VOkAnkqEk\4cTp<ln3=-kPE:.+0u^AG;2iFq6"&cQd"Z?bO$hD-?ZnJk>V6H7b"
%DpL_0cH"5[.XR<3>kg(/NR%%TL;*P!/f.:4oH*(!B]jIYZj=lbm^^t>Y:XiC>cF"C#0T/D_0p4P]&[*d"CboBh/23#oUA)+5KP]\
%RFG#,"HniR[f+sb!*\T\n7#c=q0YG/kM(ru\s7RI!Y?NONjglbd\nthfd9<Tlj=1%Vd\&\_H8O[bri7=G*G,HmD+e[NPUYR>\j&"
%oO-#E):g@5/qqTI^-L-2a/Ma-&c)$L$mR=YI%Lq%]HLVd6'?HgjnF7BU,U?OJ)]X@&TNV#2pH>jCV6HMU@-M;O..0k8eOMYQ2IJF
%Z3@+q"N>2hj<n9A*%/5^oDt,"(^<'YIW_,"nmR6+GDYi%Lb/tl@kN'MgG37g:1gd]ToA3hRCBNp#.hYO]s)J\OF+>PX'GCF[OYtj
%T?YlFL-27L"-]`\a5M3oPVK:2Xl?9(KjG0T;U$cPiO<Jrl7NVYs'R7T#&\&^:]MjVel>`D0&Q&.#;2m@2*c0.Z-6,c.*gWM0f_L"
%:52PpZo?[DOc0i>7u7W!7a^'^15VWSn;gK!<'p:%G3Xm-oQWK1dlUH(ZJ?po+uP#A@(-?!@*RP_%IZIPOb9T+1[lN%"_*#BZs%Z>
%505GJ?76VNj"m'?&jV5:Ws?7\#$ul\fW5EZ1qj@6Ra6d(MO`$C-PVg?0bP]3.Q$@o3@9_A_f/:eCa2S^hm.K7;ZZ'S;o@jI6o[GQ
%P#i^J'*u!T&(gTmqDH'mg/9DYGr`Z^O[K3Qk&a_p&/@:ah(UVQDY&p-IsD<RhkScn:rA=(6S:2pE6ZbqlZ!N0c\EFRKaee(<n-?&
%.M>+Z#\Oc-qV<S$Tu[Yg4j"A8SK+-j-`N[H*<8J">g(%nA*'FP^\j;jFPLrjh>$GgYTVj)a?pdr>UOG%c7fl3rhs`cA"qr:8/<+p
%jq0Q?&-i%%mCs)X?pRfCL+F1/NAjk9^ML[;\2b$pj>hn".g!r2MOXqZ(aj==WCT2:d/>^1;W)s%8XCk\dKT/RCU!;d=@qR_PAd#&
%Uqoc<NudgV[P2cJd4![q;`6#k"anUFO9"Y>UZ"g4Kd/T?:gI-@nPQS0^4d]mV-HCYEc07_@.4+m2l`cuV\PhW2f-gg?NO-pO4$DY
%BI57(*P>)*A`QEm8++(KIsH$`s82ik+9(lhr8f%"jraT+j$!F's7>^Ds8H+"bM,hlf0B5s^Nh6U4Y5lhL?qJ#8)@5ek@=15KI7Va
%Xig`AX>a$QL(=:6SgdNIcXMo>IN8E6HpN\mrZHB_7CN(<f04l-elb=n+/<T^,"$r$A'n9Zo;7gb.W*kaVHpVGN2\R#*/-&J;$UUo
%2hqkN&D6r+mEEKXnMVW5=3g:Al:#L6ISDGO#eBdp+k2I,,@+WI5Pa&B'uH/gKq9KA$sfRr%NRsNWOUpS9QuoB(1=!I&RqMj_m:IA
%>m<K__j2Tg4+?Cn=Dj'4OK?\:$G=8\CEahgr0=B*+R0\nCc*6@WO2.*WEZf?@Ujup]PVe&lni?r*-0pe/N"7:4D>0pq-\nF#("QW
%<=1#Vj+Wol>N!_+Mjo-]RSc]P)NUX-VTTKe2FK`)Ws*#?@4H>JoQ?e$^KV98=BQjhPt3esS6sea5ifD_m"%5T1r+-di!J4ojFP!Y
%\.<Z4eOo!6(pPO2C?q!^qenj2S]D.me39i*2n0i2c+lOV,<tK$UW9rO(^UB4?b1gYW.s<iOu`ka<[QaVROQD]c,(m6Q8D(D\q%+f
%S/d9+hkad18KYn),<lG-)E:1"_juWT,s1W[oX)IK=FR/)'"EQ3lbm@@WAllH$kJTJe'93!^W60:Vqt>4YE!k;Fdu4oc/`*gTDU:S
%>e!/L?u';62*]12cW0LR%G7QOV[^au_3[K<5=/-o?#>ssijASliiVq3LMn`BTq.'3:FR8QrcMNt37_rDL6GE77RO(jH2`'CTLd82
%"0J2M8]_c1)lfZ6[Aa.r50aapIU8iscr*k-MTsGW/<.(o>8qcg8Om>Ol4[JJ.[er?knbQE(Oga9LS4.Lb,U2;Co:>8MF^e9B=DQ/
%d]tl&KnkEW2,YPWgMh%QL$eS&bM1Mem]#<s.\I1Pppd&,eOa54JiS4`UPb6ONc>J4io=CUI<^La!4f_[LE&ktOF=^YYbaBTP"'-U
%01eXd<=uu]%\$0R<?U=jc)8B*,dBIp4H46CQ+Ir+!oLnRBH]Lie!P\"QYedV$3$./%amV'(h<UeL<p3(=WU*0%$2r"qWW"#&pW^6
%,NW<I<<GI_!KtE5pu[$=="Da1F(&HQlY8dF9e!\19]`[<:#F3JZ%Q%_#os2GDVNSIZQ7lLg)uc-GoRJ1;&$HRVodcWY5NBe(,X38
%FL/l@p#XDG8o%6W/Bfl(cg_VYfkN1<i5bfTpqtkaMSJqcRcU/=M[sg2r&i19O8G8l[WK-:']4<B'f?GSj1+I,X*"URXfXfY);Y2:
%a5LG&K,uunmE3J#`6GJL5cW5ocX]*=$@e+)7@HkXJbpPNj3<MfiY]b+P-1MP%C'2fgK_1+Htu4P8t,Bh@cbQNmJI\D[[!;G\hba#
%6qc#o.TS8ckBe'_iB&"1@4:qU])m-VFYEu_Bm*W/W>Q\le6o+17GRi5h[@RM%iP;cqu'KAjg[EF%"_;^[DFfl"XI.IJsGhO8H-a[
%ibL98>6GB4K;cqRKM-aFQ6OVl1kUJV;t@tJh/MGt@#E'`"s?o;![l3Gi*9e]2:&#n!(=(kYrs8V>uF/U+6@T*`+gH@.YeF!RG"@)
%C/Oc.*+RqbGJ8'"%[WCkq3!05/Vn!kE_ZjH)!FWbL*;<T(:2%]V#2?j980Z**/XO#[`.4cfW<o%8fM*@XPB-#6i=Nff]^DJ6(cRW
%@&\KXqAuf:GY=\i?/Do!?QP[(nVLS[D!M_6"L9,a6uFQnKA*"Ih^RWZ8jTkN6_c$i'N4HQaBR:@a#jF2q68r/>ZNG6WKHCdrd:8(
%Y"In/?Zo]!mK=CVlX;A6Af^fL-nR8k*+toAi,713#.l?ol!Qr`WC;@5\GJGgd1E^BlmjB!6,bl3JVbTZX.<FEDE(<N@LCLFC2jjE
%Y>W$os'b@Z(K*o3L>hS*\-Gi-OL-fO<g!LT0h2od7g(+09KtbuC]A-Lg9pN!S=(bK9Xh,m;.3JTaoU!,Wlhn&lsTo6971Vc+,gZZ
%fs,<R&I#^WMF^YaWLhsY`.n&F@b1\#n='mBR.Jh,#R`Ptd86eEO*Q".REqalg?/#Sj:r"o`.&PJ?g:IdR@4<bE!Y*-&?t+kTK-Fh
%R,-2peH\&g.PkcgXs5&t[B%M)#Ru#*MFC)p21\`t6SFI3C;HoEU)O8f"1RYN3WtG\=&&]:!'#gg!_*1Z%G)7io:sN4>S+5A**n5_
%9k]'lko-K2P#<P`"5!5F4nTbF\9T9-#aQ+UQ->38/E@*G*COnNdS's84fORZG=%U_Wl70gbh`W.Na8HV*)j[lWp+#^'ns;=dT7Y*
%Lo@M&]g)U'0W8T9kpCM+T5U<c&,A<H\nS%V/Q.=-,p'<Te&b;A!G#!d#':+o:oX.migN;$1V,uFTpXCV:]/'!Eq([WMsf4O,V%Xg
%<5IUJ%KS[)WW8*R?P'3_PH0:G.!0A]2TMtnOPps*bRqWFj=.kj&pR3\.cpIFd7KoF9Yp9N7Z4PPW[;[VTNS0no-.fJ_$,AQS<Q,B
%[f;7oB7dp`!f=R);n,YR"BFHqL/@i;6tsF_.qn(/V"$+rPQW7sWJIh)OKal:)]MqBA\,R,6u\N'cN(r3R(46Br(eR(^u'Yu8j"6s
%>cGB]82H6N;[&?t87e1];2IidHmrVu@TphSmA_lC4pX8ErW[K^f'Heb)VOaMOU3pIKlBA4q87ht%LW_!0ZAo=h_t!lOI<KsW/N@6
%O8s#r#>Z^QA\f-a97ac2Z(iK6$_S[h0p?%D<c$#7ngob)p,4),YlXP(-BE]fO/S^n1K5;uCQ'J14H^*sW+(005&kP0/2D2P&TsNK
%KU<"S>)9\?@O3ZR:\OB)5%Wq),#KGD/J98,1o*GdQuF"%bbn,9]T9=c8Eg(p1&_tqN:G[;+@crcr;=lXptp97c35:3QIp-bg*-'G
%@5B@mRfUYD@atT]+:Z%_MBpcA3.f$pR5T\0/HVPBWWE<IId/>]&_0&Y*]2klWZ+&K*^g3AW<O:lGh\Cq7M\(qK8<%IWZ'A0/lJlo
%;l9_$2/:qs'!gi70uBg3"LJ*"!ne8IkPl$^#.&W81h-XG:5BtdB!rMMT)u`iAuNUB"pM"D/C9>6&C<as,2e(SV_M,VaU'aT4TLH)
%O;&UX68i'k&]iTa-g=l#9]P0<<DdCh6e%bTRiWn1!-&sE<?\kA,C0;\GSdap)A&mGhuGZfo>O0"$Ld4)AkQ!hOrd-$5nu!:9a[;8
%$R@X3@-1fM=B#X;mH_t_?t_+L&jdZ(7NoGF$"^o$UI5E>")Q'HWR49r=DBooI4A2%!Hf/Tj(lSk`qA\1aNFJE<rDEt'iX&?s'19X
%79<ne9UnHfa9%/GG7Dq@`![TdDe+k(E[XVT!?#$2\nlm4j]WgS3RMjI*C_0HI2-5k-&*n<S.)c)$4F#REB-^F,ZF:g,bQ<XA<#b*
%@?HpN013(N&Mo8b=#8mpr\)*'@T;rK#"XA2Q3AB\:E2>[6R&Mp).KR9c64)T@C@!c0`[Z9rm$f2$]SORAiq/Ak@EI9PD*?8)a\$&
%[dFb7;D]b0/]&dk)lP6HR66r6pYTfQclN#2*T0nRKuUh1O(R5'=iS\6K`d.Q/=`a&%?c0&K/7N_M_&A39Pk0!?\IUY`rVj#io$8l
%4SL;4`oH,j/7YJ&bDZX7B6Y&0X2rd,dFh41Bu$UiP!kH_?FUTB;NbaRqP!(`B&A9a]0'OF0CsQ63o:fK7f:7+$8e+p:\-T.UhVFc
%K1e"'QqkLhE3l7%e5fE*;BmWTFlmlWfjfhM+24q_Pb\J>B3s)$>nle.j-f".k'.-q[.:<:"?+Vgn#HjUi>n)?Qj&c,SWHE6"$^Y,
%1THhg,<QCX,,:?hcYn^0Y_A5m+&?g*04'bn+6T.<85ps&ij^TJ$hJo^0f3[N`aamb!m-rtp-a>>N$:iT75e.Vr"<P2dn!e\M3p!<
%!RTaJ_p")B,t^`']29,?J1laQ;^5[K'Y1O%2\7q-[*%ILA!]nP!;;Xd@$QNkae8HT80df-2N$90?Jm9h@BD<VkJOjNa>K3l6QdYS
%,P3E<F%3GX'Cp\nEG>oj"mVHaH0Q*<rrgu<J-F$^5^[Y2gf9%p)nU6V6RX-$OUu`,QRGW?5q]BS`$cL&Os,8s3$Tip,%tZ6h*T2*
%Mkde-i^o<#TE$.b)U"qD<uKbPn.,,a&Mbg#J/2+q/F5Sn)R8.aX;.J7f`8+6Ls?lf4IN4U2bR30]Z@:"Cl3-pF"Gh!`*WZMQ^OQW
%RCk%jjuV=9SfRs8hShaD-eX(@p!P6&M\641^0SZY'5AO"B1%'Y%!oPV&p#89[u2p^H&:HVHFq7LjWt]?Jo?u\j9*ImJ_r)3\=djQ
%nbp;59BQpZJH:9LB?:?+p,7f`\_0e](n>l^oHHq^JM.hg0#Pfl-/,Ft'EL]s>ZgQo?m-M?7WM6(meLodNFLj\jQLc*XGB\Y?u.A&
%"8P;s8Dirm6'E,Dq8VE/A[EXAqAW4^e+8-oo=$DJ(+))7&U`+.dI>Pbn0uR&52*c'-^O-NZ2DX%@bK$<]1`r__/Eh1!0A1SH,>\Q
%SG$f:L4#X*S:RS+#act1nRuNeeD8.l.i](%OR%rS(srZ+rO+UgfR#H=6GbB<Rb8g+pTXma!_O!O<.C?5VB?D[p53<8i<<=@*M&9f
%CSO0nO>+D"2&F?6XJ;6POMV?<j""V]Be_*2Y9MKQi1la#Q5,e3_J7=mKmbsh5fpJ1!GKFpHH6:1enj"nPdrSd9gr;mapo;GjY.>J
%"%@,V7qF<22VJ0VoJJRC%a*NWe!mIeSU<hF5E<EUTE)/]m*lfD(^83DR"H5EjoiUM':OSSRB>WJbn5YhR^64KJo5a/dgNUu)Tt2c
%%*I<Ue!mIeSU<hF5E<E=JAQ3i[r#:1,o2eX?=KU*]Ym.CH&75PbtBUhJ6ub9&;@hF["VB%7`u._Amr+0W5?7g0R1!:fpF@PV:uVR
%NlsjV/icW]"F=djkW!?1`UG@XT]"\L8<maK<_F#X$&GLA=!1Vu4dDhe4ChU!4J<+,6rp2gVpaOTiH\a2"e(:sI??DIADm_#gaMak
%Ht"mj9`cJ'3/@:.[el<=%:(<`jon0Saj5t9(;X9R'o3bLMhiCbOL,B>8W%m]&=I1#g"C0Z`1":AqZA$FWrPo&1:Y$5lHfZgP.*ci
%!;Qk!1K()8EX@r#!aLQPemQaW,e-$iWC,2UbttKIj&oSHE$>+I+r0Li]#53tJZrpoBR6nPo27fi_)W8jq,-(<M#a@`iL5&NCUuO4
%63DAG4!60m*R0U1S4><U2(rY:)ic_ZZ?fd<%6%h[2eBPBGuJu42D\'kH+>L?9b'kpoSM3MhJ5riOnWe)^l7:g=rcG/V^%W^U,8`8
%P^8q!&;PpubVd[^#.t3RS0gVlCgg\Q]8nobI#5X1;o)WQ.Q#=:\]Kj4hegTJ]/Ab/6H7_YF0"PN^19s8=4/hbjS'!_)_"s$>EtK9
%^kE_mK"4;'bU9fJIl:*O4=Gpj^6pN?26J-T^nh?/5"(6<mq=KuKP%%pRt\+YP/YGtbf?:lmH'bdg7U0E9X@Dc,?SqJT@qn6)<B+-
%f=^L]:AnQ0g$QU*WpRK')V>k^Sh"^H#l>C/m6p^*@+maG//C^;9,'A4QSu0@7,49F:Fr*Hh$5+TAg0?8jRk&40(RE62Os?-/X._>
%&uB<p[hUQk:_<&VWk1-P</u6h7"Vifo1sZ/<I/I@rKMR:nruqjH@2SQcq&mple*(V&k>56_cl9.FnaSSIiuj>@EP\A(9JbDO5^".
%Wah$Q]CKbj\1#Cr4,P0t$^Q/`7C\]gX#A,CmRZ!)7b.VY'GW+1j"Sn>jX4SRK9V2T2nO;oh#SUMO9D$GOr21QOnSk;!q3"Chg;+t
%6W6O0EW!-+j"$:mHpe@gWEl)AEWD#JCa-q_8]?3Li-cX+deU\!_T1S\5mY7No7>Sg^hA9c>[!!@T+__3#]sSsU8?<Vo.3?<]YS`U
%=iM:$'OKH=YFAD7RX#O##t;nE/-O]a&kb3B$I<[\cSNYISNtI:g6^H$=Y!&QC2%gLb>RWJ/G0\,B<[8fCit9KkaEfR^LJK]lqA\r
%r%pM;BeAoI'3`3o:"&6_(#E\4"'qCl$>0E@gMce1W-i%1<O()eRZJjr.^B`Ho/Xg-;uNmDi;s>nH="/dX5an!77Dqr4&c0[bH.9A
%^Z+`nkWosJd%kTB?JD1\:;FsC8;aoj3"lY`\6qO68$/32dkF9g+Xn\c`prF^h?pOmTQ][h'\?A'JV%-;K-YYP#=>Vq+Zqqk@V^K6
%j(o/3J!-Hk@aA-;#;,X<67KUP+KMf^)W.fU(3G6p1!P)(\p:i?Q0C>bHCd;I6@@!X^';sGj]O`=r^\'-ajTYCbaOE+\p=!5=Sc;3
%GW)6p@!CJU$BaHh_a8IeOGG!jFcZ]Z1nnj]q8hCA'Nr<,#fN+r\pFXM4Q\bF<^`,F>`^L>N?%;Gapf((K*,I3Wu"k\XrQRuA`m)>
%#%31rg%?k_=NSpWMhOG(ij"-2(^8..i(2#9Sj$!7>ia-Z>9$m@I]83p%tZ@e''l(NBO2f[i%h;e$O)PA@$a4=ST-ei[M>[BekL5i
%cE-r2,sEKqVN9P/g?pY,kZeoHV_VU)#lEV`r66W6al@:OEq42?_8-Go)"_\r-38/2`bmLj2p&FM&n_flj-Pp=!@pHn,nhf6pL.Z'
%aqmeIJBr4deR:>?#DX4B@aJlk$(D=PkCR:T--_0@/5p3d%Z+2&`C\;@bsddZ^$WBqb23t7]dS63kluut`bd]TMmDRYqaQrf>XOV]
%GLSFdTLlH1*E,NQ5sjWTAJr++1eeAu,Qf2.K0!CmDMaG5R#j$D71O<.LTf++U[u.+YZ3k5j:<Ph(F8#*5n:tD$S2R2$Db+pR;Ihb
%:F`Z7B^c`3qJ_],jsS#PQU#FS&2+`/8$agU5_BY0nUX$_*<IO3bsaO_XKm9G4&#(7H.0_/cJY<B2M\_&kh:Vi+C1CC3A(RjhDAFO
%bhEZlND`?!`oU3_`c51cM7^7LQ&>g]K2K.G1),oe0.(SU%#2REl\&XO93$[7BcJ(,-E78J87AV-Hp8l/-'/2c-^eF!n\!).KiV<+
%b1X-GPL4IQ1MGRu(q#gb\&dJ5r^^ihm$5XRS&AC\X*@N=p^qZl\7B9iSj7?i[L*a<q&E5\Q^keB>ElZ\RUqY6KAfl=>]<g+M$=<'
%q-pC9Xa_N$Hni::2,F.i>ST5STcce3YUiNa,%`?k:c2BTi&Fp(2s[X,$!o=+j0@&iScVNJE"W2:9UT2uM8Ib^(FKi)WWcEkhB87,
%er3E3`K-1V#]:%X1N-^"@+Hl#bT*>k\Pi\_:0o&"^@&SD3mAX!$(1fQ3Kf:-TaE@7Es\6I"+t-5B/G2U1'23a0s.<MABfCbYQG:e
%d55Lo6!M^\k+\m!k'8\9:KNDWH`PG4fR`l6r#=<#N&Q9?^NnDsfSld6^b1.j9/.:7"^-d>*ca/Wnlc7lqobH;WHk'RW@CN/%=W7-
%3`If@e[>e=gm3saA0uVT;,^lgkV,t"AuLu3+1,OJLP9DEKfR9;3NhBQ!E0V$UHf+pR5m3X:Sgq4oCKAlcAG(<U`mV0#3<o9(JGgb
%8_0<0;^3U&#T?dt>lq'WSEKSn6SY'%))Q:Zi(=1Z"!EGjnhb&Fmk(NgoS8X,Z=[.!g!ib7<8D2qQuXj'9kV]SSH0-HDW]h(7>@J2
%'')+8f9U_Qdk&08lEnh<V29#)iT(,VCPO374IJ`:,Z`i3VJ<J7ZXB=(`["=f*Fh!f/4<r%F&7FU'Rq:N7KH^?To^.&IpgNHS\8-n
%S!]iQ'TjB'Wg-8GB8P<4c)br0OltsB[Ne[Rk:S2r1R=%6"C7$7^eNs\?9FeE)Di,*n1m-LRcW4F&@GX&hJj6!JU7I)gL,!-"SmEK
%e6uVe6P2/C2b%\rBpR2Wr$@P=#&`!r&sdB$$7i$aK#2=^K_oMO3):p\pZu?ES>Qa.f#Y1'632.f$4VX>H5A<GbT%fXXU<ek":*!t
%gPfY.;emD,*K+)+TfFdQ<d8<k/#J7Go'>Xr.SSX85d"$"7Va\dbT`OY)Q>\Kg):BknD<"q@Eb`jfA2el#7M+=9H8'DUA]cC@>WL^
%h(/s6IGMC"(<VL4PAuQeMf"<[@'m!NX=UNVKn;oRF#.07?%L4gJ?1%+B7X+2/I(MXN)*c4%S8Hr$FU#3l[orfrb#E\bba57D74$p
%*N<Ph.N2SX_bn3@=eg+-$7nb.LfFUZg)<9q1e,'A6Ia`-1A@Iqe)[?5R4YZ>[5ujYiFYKA814gY<&@cuOsf(,XM.)"VaP92O;1$V
%a#@c\fEPD$A8u18`2\LDRr*f)=?c@VEL#hkU]Jng5bFkj-i9dR4%\lFmK>RB^21lldLL%D;._@T,0efNSthbRXYN;M;oh8C&BRR>
%pc=F<BY@&+-H/"dHSD3mC`=np*RhS30HXi6jt6k6n.t?9-DYX-XEWKK&1]6*"hVds":`tha?2\,D,_9lKL&T\2+KNX"tnkLT=?Pt
%Rh%b1WN1R.KIer+lP@9J7B\Bnh+/_Vd.J2del^!0R:=N*98.AGq#W3/$nP8<H$sXm;OP.JU!:BPYlWKf78dE[:*u1lZ:I8b2uuY+
%_i$0F(4d7OJK\/:<Y]XZ@h&m(`_ZnJN@!-V"Tg>i!2POc2R0G\6kA'S=(iF0eA,K2#TP[(U4b9tZH5IQ*mKE>L/jCq(]3pi/54@9
%,g'*G=&rd^:]Zp>'DiQu])dY=Sfgeg`?Q6+&g7+,9N<>"$M"g^+4TJMV6P`G.cFo2PVlmBU!9Bql<Oc1Y>bRL2[UCU,^q:5m*.Mi
%QS^I0=_3sXccZrP"Ho[Z9!I=\I^\6J\LV:.bRKPS^$H/<?M+ZGcDpMQEBS!`QQg6Rm:j.3e<:o36;f/8!L0<bZjjfR>;.794QZ[2
%<@9D(X@r]H[Z`L8^nN7ZTTQHT\,^lI`>*pM6a%7UN!&p*'#,h[TE(dHa91'eQ,-?>X]s!\+nR.)^jsI'%2OE8!/gM9gXn[>8<$^E
%IFcr]-TH@XW*;OmbM`s;_h\_/`c2f?^2L(qQ`5"\7i`@JnX2L^/[t*fPY??8?jJf7_YFI."YKjJi/V*b=QqkUihb\`h#c'*ZTrP#
%#qRmkpg*TANLKf"fd?d8\a,*_S\@ZT71r570I?P+b\CrZ4=Q7@&=0?&b7A8RB@_D#q-nb!Me-F%]HCbA:g"4;_G;943j+QQ(eC#%
%b,?$-EDtEi?FNO)I[SdmA3=0J8=3*5'jLc0aXf&ueVN/_-;[UJ6o>;Cl*4j3:f=kP0@?=8AcnAm/nR-#2rP'8IS+,N=-/c)@p;NZ
%6'.I5()^oIXb+d$$0ho_Fffj(gH]nQCk,b&d._MA%;qScOhY>o`,%bIK0\,DW"[^8I/o7*&(''n4O8aj,+]u/Ugb2Aigm(;0JTu!
%2TW9H-!ClRU'dEu;+]jmL3P+<`?h_P6\C%]`8[H\89p<18_c.'hs(XAEI7t")%E7eg!KnC+;\1l"e%u<nQ$'>d_+t%))KM-*a&1k
%^tf+o1%pXT%a';(;lJ*_b)Cqi$<XYP-\&3FUS!L3<;6nZMQD+@=D265Ku?f@%%a(2K,GLp0a"d6Z1o9H>tZER:do]9$7k<MSf._:
%K9;-;H:)?+%r?%c1Ff?%3YoMV&2l'WPR/Mk<Ck#uGV0eUiu&Y$bA?/dnKNlHVg6OH4>3Qan@]!'TSi@$Utc,9:n$)=^e*Kj0Z1`O
%`Zeo_8Ma#p+n=Q?TNi`+\3Nb_mh(uqO\4o^O7QDY(!o%cdPPJO5Hg6a4QQ\&!Z6!0f!5=TplRLVQ()5LSgM%Q2l^7aA-9&iWVjQq
%\r!u++L1-Q)^estWf.O.:Cfm,dI<$ek.)+lf%jl]oWWK+(.AfIi$?/hJDV3BL.^"t=L4hW*&b=1>,Nh]%*r6"CKC4@37!CeYVm7B
%:.;-\/>Lk)05L8t/FY69$p[Ap6/69`)W-mc!\1Ri;RB"OC')_3mO#i@7<1,?-711I"Qc$GYnmLuRq/r4g6-)28"R2poOm<d$Au%f
%pV&84HHZo$LrNP'Q0*A0rW=Y3=E2?+$O#f(E;"DpeS><lie)m:3<W!CEMk)N9>O<J$Qpdi'):8QMLbM*e?YrESEX+2"^'b3$\qEb
%+M$>rem+9Gp*KonZ)KL.2+"&^5*-s1<u,-[]88uJJXDFOYV>#nk03qNB3-dZSL1Y1d$%m*2QeAjB/Zdc5b(B>'N41p6fZWm[r^!t
%ljQ*?n!OSu`bIa.K?-nc:^EZ"8*K.+bO=$J0Tt(+G$eEP*I-6#1u;I8k]+Ajl6lNpMinTDNHY3j^#/%%I(n%#^Ui6E/uhBf_rt6I
%e7n&M\gF0i1kaN=JH")B@i0@SDs8`Eckd44r)]X6gg>X3d+($4*l@"Hk\/Z/K3!V[a@16./YD]#J&NdH)0Z>%Yg\EZ>E(S8)]llD
%pT2d?CikEZo3nE_2s0Pl]?qe[XL;<HdoY:R6Zo[Te?.Pag3PeUA?YS>4n%>?rC2KYjaO\*,:>f=DYJq,*N4Bul$CeC]RKGCEpH*/
%=o)h(?b6d)Y%U%pB$8j0%j?*Hp]#t:qN"WlZlB&CS+\#0E:8&Ng@)K)Ya+E`U]9"l6(k<g3q'rs2?A9$jD&gB#!e5-1[J`#J"l&E
%i1ngj8)3Q^[4G[?DrMo[?U&FU3I3^eh/32JBam8r&<0HS(J=)7@.<u,69JWjkDep_)E/PYEqEm..l0Xj?B6b&+LhF.2Z*S&cXISC
%Vso`siI;T:7.jdLA2B]W"](\M,-$FZ..e$Dpnsu(E>.$2'\1Q*-1^MsSD$Bq'\5=;[Xe@Pr4/4ioSR9Nq_cGq2%BPIrm8#!9d8%U
%$NP&9:D*U?@^i[k"KqMTP$kd4mKQ#CbeU.=U?qnfc-&PNbTT6C$<eLOTLdYB#Xr!O"P#%g;>@'@!d)8eOQ+"j)MFR3ef`09g-lQf
%9,DTtqM10*oj><BDj'@j3(:>53do[pJSOr`cLT5*;+u4YN+CY&fq&W(o+R+3Jk<&ua!M5Y+\=IL,bHZ6YpR1HeB'bbo&en,#Tr&l
%2U6:EV^!?KRmW-ugKVbPmiMd]emKg'e,hTDTO71PA5_X[?Z@3IO$ao$mj0LZS,c!+Gj2fi;t45""i;_b044JO,k(b&%.g\COl)2D
%i?A23R):@&+W(Id+G#@7[`O9>#p<$%2H'AX%K^p'L?M]Z(V-<$N1EiRd7aQb=\(-]M9jXnnQ,2-BDq=uE:$6^AY.H"d7E3%US7_Q
%7C!lFrbOkJmlmcshC>QmU!\gh7@h7)L&V/(')mSkZeQ$+S?^:3[NZmr6P>6:`+]_a2WFe6=YGX=dsfZge$WW!?4(-?CQ8D$846P]
%>!n4"]nM!fJ9+!M"I)]&e50cg=@$k5h1j4:4^Jh-jruCFC![sL%)*!\JZu3WIC%uEbkaAY$5VqgJS5(3'hC?]0p#:@.c_CJ-uCh]
%bKMu1,5DB3<Th97gT<aeGL5URUP&T&Y+Y0)\qmfWNmP),kt(7?o=NUlYtqX^>kC1d1EXmud>[-])JBT-eOVMuDS;bDg?-%8Xc62)
%pu"C,3#Om"Xk+,)6aFae0OW:"Qs^@cS!-=RKs"5T-9ZV\^"C9Z)>a&7fP_0_],_#/%-.AFf\7VuYE>"h^'lpS3-V-XL(b*<YtNk\
%P"R2rjJ2=]^L+Qh)!:jnc"J5(UW;;7Xl]!:ke#@_Q5d_2,lX$<J"o(-Iso$41`AoJFSf9"U:IU2UE*)$)U2k,?+]kF_Tk7,2+J>;
%NPQEFP$-8,f,`Rk2;4Z)dY-goD@]I3B_FWrUe.=5YMFAo[&c_1gO%?8dBFQQCCCaUq>@F^D+(b=BWofN\7P1*4_j$;jQjV!6'"Kb
%psO$ORo)"c\'KiFT9g+thsRrlgM!pCdG]0$rI0Cc3[&L+,NEtm8b<%W?h-X>rG'FOf-L>6r<kbd`5;]5VE<f/_%_!j##r`Wb@QH,
%C39Gi%*m]&/5+C"2PAP0g3@fuCk$V3d:)@56e`4*HM73;6*(#e/)'s&eaL<X)2&rTJ>J?Ys6-ZRcQ3-A+JO?TqrkV647!oL`-5ki
%8fs[?jtDCZ]D^q$'&#FNFLMQZb9@dli(JH7mo;mF2?V9:X$8jJTMOg?>p%XY]$6Q,h*l;_kBFOj50fh3qk#O:+kr#repi"%)2p6@
%HN!VT2u>1Qh:[-aT>HZJh`V1g`QmCUnFhoC!M3cH^DcJOlO*"]O+'J08=Ku)=T80gnFbSOm(<;U>n>Y]YH9M5%_QTW^/J&I>^0Rb
%GhQr:Itp&?^M!8A-JXRheWlqXct<7plDjiq2krt`WUCn4Rt#fDLEBrJ6p(C;O%>$cVID8n=!+QjpQ&aMD6]]4k'\rskI%"MmVphW
%Y.*8Ba8JfP=G>Fso/knckFY1ikM9#8[C$*kV6Cg+cRnAJ+9/[00IF2W2>Vt*`jGHs#TY0E[mC(lh0o6:28_\6p&+PnN5WnPVhl0=
%LY*QW*9XH_&`,qFrl![n4'8W"W"&$A34CdE6XTX>oM^OJs5k70gNsqM&C((G@^84B%p&rEOB+XdJtCW0Sb012J_'DLBIWt)Y^Ep7
%N@$]\C"H4PEZOaGWd+kkbD"7:bBJ`Dk3(qiHIa!VgEW_Wb[#<S?dUgcB\Rm>*9B4A"T)%,HbU,'aU)X!L/F-I5R<eGWTB#[d20NA
%;8FJIg"N0-*CN$%ULEf.h];B;]7-Js2hin@Ad]85-3-SqpP0J'[K[gY<JP^:_M6/kF@B+8hMYF];Hg3,IJ\umX-.$7a.m&RmE0o)
%MD4V*hrkJp%<PZXs$eO6CdnY7mhWD?'?l"T,&Am90Ai:93KXuP`;A*]k:g(RIL[;MTC't`hu*8:VTj+IlAa*dW:A`%Sof>G\5r]K
%YMFZ6eKfrPUbU9P;0Q^L=;H[qS=E*1D5p!DYtB+b&'b7B&C3ccU?'kj(KY&M/;3CHB2XcFn*Wga5nEC_rDD=]otZn4JYQeq;3#Ou
%ZUVRoheV`Sfm@El3aYJ9V=e$u<eFEh4)ftDQJDiS[=f3)fY>PB+ma'2?Q?;eluuh13cEh&5W<CA;K<I8b$fVYNl)M+S2^F^*KJjk
%:IJ?pXm;<BXaR*_WhH2[*NV9h%R/RnH!j;H<T;!oTL[$s/:iDa6l"3aU4PG0gL*9#8+)NgVKYGIZj#QRhR.g-q$GBKd:lJuBYu\C
%r'\7u#7)LRi@j0!D#[Be#fq"=KE:?(%0U<Nf;C.9MKB48/CJrOBT[3:K51OAdHgJ3KZ3V5O3jdrN-Z1XU[t7]ZhG,tEquGB02]cT
%.(A'[cC3.I^SBoik?i`Wr8'D\hdePh[jbX#/+N$Q0#S2]\.^3KU%+1TD9`1:rTlK>[bnsuc"slhT(QAOm6bG1=n:o:G\sflCokF$
%J,-/cGNuSCs7X/UUsEghi!300B8FVdA"[(FjnndRFoWlLJ3Jc*CGc4j]RhqtkE=^`_ecYr3>0q-K@((]Q/X^N+PTB(XmNH\62'CR
%Su-Fm:@#T%>%'QT]llJ)X@2XDe!>QT1klKf@d>uJBHUb8=>jH3J\eY@)V>Xpf^#0CXMoSO#&McoCo#nq7if1Sf5<j/J^;neLZW7i
%Tu6SHrs+K"$NuJek;<r?^qC\X%eBdAB?+tp+>!He/Kg(l7J8h_]kY5'6AB`uB(S9,IW^$YT8`cGpoar4e*D5852"D*]?I2a@S'aq
%VX,Whh"Zkg36rA;5Sj4^(k45U1P14H+3"]n!#*(9qjV44ju^7'5d&oL]r56no\ef_pc%8c(X;jT7LV4B&oY[,4bjG]6';l<SpcfW
%6%UlL^;L-f83=G%DhHUpW8!*0Rk#lDC^iSc3t8+;l,rS3:_SfFLq'4!KmihU"tuUdmtM@uJZbeEho8H;&TEDQ&XtNYpE#s'6;Pna
%,N7k:7lV^b*-f=i_"=Sc)a^5?h>VoOlf$5!M\>#O*aAhO@Csnpju-m;*tA<MgK"QdB&VSW+j]oaRAUqb46Xb?T0n),i">3sl_,hT
%d_N\'\O#tdK1,Wo,f>.MIDKhSM"La:`_3'kn,]]6a.V$0i.hl73Jn*i[r5\sK6iGh_XQpkh<9=tXK)iYRBJY>?X_J.HAehI'kAkB
%*"?*5mctA\l19c=J(X)%FZY&5*HPfLJ3aD=f)fqsXeD#N;C)iCVJesq=I=3rq&T`_!V]#:Qc2hIV]YGT$Xe]?0A_tF,Wla*d0BdB
%R5&bLP^BUkJ,A1tZX\4Sd1X,=\XmH'FVcktX%oYHFN1`bL;HL"B,"lnp/rXGm:$Gog=tee]tK#(D?8=?;,\G1F$@!Wq3$q^WP_\M
%o4+`9Di1uH\t\a+:AJi'K2m'cf5RYc<ig`:cC_3tb&>_Q#6.XoXe-IQZ"1VQ`R:*6H]`P(;b4B-M5I)f;B'!)=B_\iZ>.(/ri3pQ
%[=Po.MJ(KuO.SA,h<4`2=B?ZR@4]`k>Q(*i-$<>).Ne#rcIo,WYAA*Ln#h]-0=C@u.ue/?o^?,@X./ZkTfh3P<Q_/oqZhClH_md`
%9$(!mbP9ggGLp>mgsR&kI1>QiH$!8LV*@/k8'c,,=DG3`*_RS]QX^ot:m#ea2[R,53iOko`2gj];g/R`_72A:Dq?bjeSb@YQ($j5
%ddC&7eF.=W^S!qgpQ"sV%Z5mu_X?,X[bAFF/h?nt>H*!S^%kZ6hd1e$>K_5DXd(ZbB5##jiH8mG6NHiar';TGku8bsql>?VBTi"Z
%PgdnkifTn!%1:YEV=N:;>*PJ617n<o*4Gki%G&nYKb6IH[dcm.*E8`0'n025UP;qkIJ]mXSb0YrE-Qlt5%uVKW3>PNAmHd4>WAbD
%8`;"#VT"`;T*Md6qkS#47"6?"qsKZ>aS4DYZEe;9'[6^.%[POu)7R;rQ2F00Q>S2?PA3&.;H6maFIdNVg,'T9B?;B?/hVL9WkY^Z
%*g7N6nWWS3D6HO'V:tk7Kl'^E$^nGhfim*Va^2R\q#5KTTTbru/_Rq?Xq'2\4=Rk"0,<f@hXhnSIFnpr2X*?Sm%(S6=A#8Y[BAO>
%4g%dJ-e6tlF$n]Xpa22=)u[grpnc$,eQ8NPA>lYp%^mHYY=WrGmbLSr&pN7!g0A*kP[Edh:"g[PbOK+PoBsG3;Q3j$CtL)RZd;WV
%35=g`\kf?^4@n"Xh)!ZRc;b+MnZUa0\a-'!oE_"Ga'Oc$V:POpZ,]UL\c/7GZ2g(@42?2H?/EeD`=C:kq&Z+a&f7FIkBCh-Uc4]p
%D,TE,rcLdZXk\D+/N^Z%P3R6+h0%/Vh4HtYT)Y6D29]cg8Iq0bT:V6aI6Ek(4XRj89'7_,JN515M_ONak5M%,8e52T4b)0jopk[<
%IWp:^CXNj,ad5ZP"o#^]k==_(0?o+7UmH57lT+2u/QZ_WPG1-NRJ&nWm&=21PAV^#+0V9F>pm>>Hs-05'_*_MgVYP&^#!PQ_ssq+
%qkQa&n%Z'LCWilE4q+cqk+q3GXODWjU_^/I-ETm9Va"tbP9+WgqfgeIP1uer>UmKEL<!U.]<SC]WD4dWbRJ@=8$gkj?/93KC!,sZ
%NosK-O/).k2!K<N'"@?&H229-:ARsq[S`J^l0q6aP:B3EM-]GCg&BoXIi]r]fHuTr&V?roA,#Ra'hu:tE1k)FDNRW(RAcoui/MST
%O-dq`&&XZ\$[@jOWR]htI@)hrGKc'S0B>g@^A&XA=rl9Dm=0"#l(fi-=mJh,06Z?5CNra"o:fPM-]Q'l?K^b]qTI\$9Ii+'HrO@@
%],mR3Th,t(G4':`F=pI2Fj9m6S\ih"7K%ZW;e5(SUIK&og:L,i4[*0*O;ih9H+-Ss#uoBYps)2D5'=as].Y0L?X8cPF2t\Vg\p=j
%;Wd[eVk62&f[\eAL""p"%L_jID;P6GH],/2j/^>%a/?i*K>%6ZJbu>MdR-0_dROFL/tX(Y7p?q--'(h4hG.,BQPnCN$V.Z]USLN9
%"_)UgJY/e;cD+0p`J_`AA]*QW[DZWjm:si3;h.tuBDH;9s1.1[mG7D5anU#IrorBbp%Nc19tGh#FS>6On5MskLq.n^rVKe>j:mYN
%^ONh_Y?&L<e!l++j/e@T^2&GT_t"h^hsTBNqRL/3d,i`r[B_u_c<%\%f"+&F%d/jVmb`JW*^5m=n'/Cl)S\=M?7',ORr4klqs.%U
%lIKYn5p2J9I]i&(*M;bI_l#NXMgtRE`#b5eY+L`G<t`^H[Fhh]W<b6Nq0I(,lY<t=I_O3&Y4]<Cf>C-oUU[r*)e1NHY+ClfBU8B,
%c)>.b><Z/SA*NR;'hHV@Y'b!`MC%\R,P^X/,g]F?F7=j-U$JmE6(T%]h(Q.(o.<(s3HOVmcri]pkk,2h3s`7.XdO;2E'F$,rfTYh
%hHU5@4#nhJm*@+RlR*Q"ln!6IC:H"%!rCgS-Gn'O_V(94XRW+%NT4`\j?9*cFjdhcA&`RfWOcRZHVB=Lif:VH,gq*\YM.6rc_Rt9
%mQG9df"^1-Wd%FcNT4^\]CS8,kakLPCKgi;+ASr-08SOLh)Z2rD([HdS!0^MgD<?]h,eFnL>1:#T2`G5nXaj*qC^GJNPn6c,MBnC
%;C"s\g#9ncdY?)D2/1#rpT8e]*/WjS^lM`FJN%G81_R:aF`5ZNWcB$J)L-T+)a0"P;);1dj8##.m<eJq4'mu%(pQ;OqMG[5!qpHq
%\u<Op+H>Mm3g&.\%Z\Wt8&(=>s4bGA@?BS(^34mY@!n?=5;jfRI7*Zp>5HI[>Afr^,4rBe=/)a/SF']Yfg[XBr+4IuU$6cA+0BQ'
%Ia%BiQJL%qOZ6Oj?!1Ljq-A\L.N-)kHQ*oh\F9T/7[)`<l0(lNR6Rb\h(I;bTI!8.H9@4;^h'_U)K]Q2HjAc_`f%DY!0HLYd=O#H
%d%?5h&/d'h9-Opg>L^H*;<F$^TCXRIr.Df6<QRft?:UM`0[T?N1JoKCg#&ZS;"r`e5Rd)ms(GZ(4\lW]T=T=DlS.Q#dYIJ/&:"QK
%ccYjC*Nh$l""X<Fe]p7$5(SRp!R#,[bCIbW$$4oWYb\b)TBib"Q?fZe^#5C1PoC*(]Al98"n"AamM*Q4%f)GW#g<;@`=5oTq1u!4
%-Jbr%T#uJ\-VhI$mt,kA7a^NY*\29m@8PuOW9sYe*@t*cbQW0Tqr=CC<BA]`EI/UQgkeX)#OEo_5p(?ED3%bdo\>nHY^0+fIqtR3
%Oj2_.#D7>b]HOJ48?Kn\Kl'n]MOA\f3Osrijc2fKdQK+K#dY[%L8ispZPEteT:tA<9<FEEU6SdrO(kA4s'pY7gp'ENo<sgloqKm4
%r6hBpS"0$eXH^C+4.'M+p?J"TG2l$Ug>?1GY5T+.h>+aq7TF^1*bUnDUra-n<cZ7Z>.geTT#V_*$O7#'-l0`nCmULDQogNq#KqO;
%;sV_OXo*Fkr>4Qcfsr^&]5KI<PAoKt>`XP0HlHFHT'](q[kITl\2Go'W<$,$e7RYb9YiidE5'Sc's$'1;IkaXr@3aQjIR?0+"dI<
%jps#q?S6:h`Ao#DBs&fd98D[,R.je4QMG,;nLu?SbL-DeZ/gC`-;JI0JloVRkL\mm8nBr,R_bFcNCo"L7H,Hp$^*RQf>VRcGVJ#:
%5Lq/u>hsK5ZXVW;+_J],@r;q#ZD`OUG-5a=<l&npSk<Q\matbRguRE`!9Oh0>'E+&^?a*O7k>(W40Pl(Qc,eHQ1)?-_eA4@$pe$;
%F(R_/LRW9&CdbEZ/9JaeI1/"LXTCZRPOG_j"HU64$uAJNjh6=,VEba>[LfsjcD:YPJM7J:o9L'+,j<oc,X](O05Aq#7."5DC#d=r
%`2(LTg_Lupk7qeY58.&OM=PVu#s=FjHQ_7t4F%c&o\o=*O;Kn=^SJpfMjbUdLtE>_s1L?9"G$3T33Kp_\\HCSe&)_>Ns%,94LFVc
%62D!;-Vnl5b/<.)T%0[;h=PNNJOrESJrc6lrd.FePNQi#hG7smnc@<D:Y\n86*_=/Q9GJVHK'b,lU/\pQhO"4GR191=M(r$T6LVN
%M4ZC$n];1<X7>B179ZZCXFR#f814tAP23V;n+cOoc%XqV@P%0VQ'*+`[ZTYXe/R<B;JYbjNfubFOq$f>_Wp@+*HTcZW=-ZeD(NJI
%JE<aPT^/qX!\\s2JrYo+7_$PAZ!-sCqX;iE_)5B$ZI/u$<n[`POYG!9+SbbH@#*$]XN0'B'oEZ:SU1TB18nAfZ*=Snb39>kbCQ2g
%:2nN\:1GX@,P5OKD7$m"&Qckf#]?sF9g<S.]a568mf69J$U6Ne@"OVs9W,g#SHgeUd)h>=LTJ.i<N#JZ9Vech)e`=)k98]Qs/Y0=
%)'Rt<m1Z.?ca`@F[#0Ug=2A:T0\;4u>N&gL(_7HWRMI9;&3REk@;rO@?,`]W7.MNFa0>u7j/rU@`:5fc^Hap(]rTGMi8emtH0UGd
%pUG+r5+'ke3#3+6f`u<U*F]lu3DO7YQ%]6n!cfMfGs%[,#fR/ibg5M5@H6rg,-HEL"Js1g!_*j%R$Dqm0"YMuM[;,,MhVAJN>Z-2
%_3`t]4XLDP*R*:%@j7U;(^grbVG,;bQ&pf@4u_l`^[T0Tj1YDL#r.lCGCdf&*i!#b`qG;1H1Ee_D+Ukg7?64J`!`eO*XanL&0Z"c
%O?=h&Ms8TZ8)_*,?-3cmJ2`d2:0h?i55>"[?!mF9d\0A*kVt_fXJm-LMe:@E/mQ(SP4c,oU;82KILr+:gCb5=9hB^F"pJ6A;W0<'
%i&IlugfUV6`+S'2JQLmV$!JnKJ`D!i*.O:0DG@p!NN)UBdT+3@:K-)'Po<t'c/5j#HN.L'_MKR&OKeimQq7Z'TBo,Yd9rZd7pfH@
%,RZH]e2ip/3hb-AoMk0l6C!k-MHrs$hm60J=u[rG]CP%Oh*r!d5*p9+;aZ%<LbMM4mSK=?)Oe#E>f+rJ>)9l@0?+Vr]\JXPY<?SC
%VNmnIPj*q]\UUuha-"ub/>-OtWK6]]KS9Dd1+]>]mMHine:S1Gl(XmD+K^5KY-gTt1S.Lpq^,[*I-5t0;tLd.lIo0X($n\.?]t..
%h#b/0oXo!n.I/1Rh>!0[2gqtZ@<rgd#\eaZCTd7-NSTrX$^>'@f?X'@gl/m_@B^hTdXm73R$)LrlO=7\SA6o<!O4?TA1u,Vod$g6
%D6OM9%d(T:Pd3:kk?E*S0MXP)kPQ*,1P:_Z\:>c%*K\As&>sK6q8D&>M6hn`/H,,9*$XG.YtQ>4j;C6"M9dN'N\A=.Jkh7ARO3d7
%5CsABjI*s5q+&eW6jo"q6^RA'T]=FO;o[109M-Pn9Wi<F(cq[&3\srY\emKS8T=m(B=-Ta0m*C,FMpOhqA;9nILmqjM\nM0_mMq[
%;(^SQ0m)DjE^nF7<uDQ:B6?c=%X[MeEnananD99m><h.$a[O[*ZIf\.gg5J%KSYsM<D:X&Al;A&a^Q*Jcqp0;"K.H'I*''=Hm_Pf
%Sn;EiA<4%$`/7Fpqf9bcYZ(lf=`&OMK;E4e5EK7M,Nlr40,sOi63H%UbR(g*f>tu4242^Q4@81HO^%puj)DNj-Jc.fII<]E5ljsF
%\q50!I#jQ_e]&Y7bKP\2;@D,\0^Bbd'C9?(KUb:^82S"YCQ'eCAfF$.$4M+Lk4sW<%NJ[s_"cQ)7F<qg%"Y+RnQAo-n_h6b/m(YV
%Xei+&WiDO^4qUP-b[#S\P[&oKCpS'qH`R-3VIP:H66'@b&B8,2^?TFU-N'73lHE=LQu]2uRPiCkU9Q:N?Noo6Ia9Drc7)nem$H;l
%L9lctHVo!8IGdKifemRE*lc^mb#DR?/8D]*n$/Z2<naF%7uQs3J`fN>lMQNk(U1L^r"sF$*WO%do4,`/"ieI`>R&#+]k6CmR).%Q
%=?]t7;oT^!iDi)O`9m`'QE_RpD$h/-P9NJc!+K!JDnb[ZF;f&LOcY2;$cgH)mfitMZD[,e[g\.\ZOPkOJ.:JI76^^6acCu(4ks9J
%/&XgWKKY**f14J7A]9n)S%6LgbUnB5>X*L,/`o(BaEeAa3'u`H59Zq9`*;Bo%WMl&q\U/6rqla+D\Jo5g3WlgaK#jT%R86M2`Tp@
%]Us)sb"!olK9r[)O5(,#MIdn@]ZC\:c8]PHG>SZQARL%Y($g*77!Z'Tj76\n8bSh.&B7ETIdCL1=I^:)YbWS7#LUJ/E`;GZY(5%-
%hYRW_7E5-Vacp-TS8Bg:N6d[:nYhg^K\[I`)'A>>&4(;"9=!aKfTc+82Z9hj;!\A,FC@!]S+=DNoNl;0@5Tf,jq]VTiHp&hN=<!J
%+<N./+1:4,OholpiPX"heAtae"cGTD3=)rF1l"Q?2'On+5&Y7sN)S%5J-cgZ'.,[D_8Zb'PJ_Z;ClKESW%4dN@))4cb]</[(,:Z8
%(\2B))%Hp@Sr$@CGMq^G)i9@#4ef'\-RX#!1[.R$^b'V0=Il.2k&.=00%#8:EHMri1>4lj&'"1lo/n08NUr#A%X&E"_0+U+W[t??
%o9Oj.H>)I:-(CqVC.n>KA-mo!n&<a1BiabC6$iO``5@S&Ir)uH3/8;,`dP1RLRZd\FhDrYDnj"h`l$%J=th?GcCPWtdm%fOGW<MY
%8r/:mFZc0o&&TUNAfVEFT-[lGnSf)lLc@%hbDG6;*3tre=U0$t;]4fCGd4:KY!`(SiZuEMGfqd)OUa%$akm$9o\oInKL0uOL)>]B
%[@"hJ$fflmkHS*@X-g^_P8dQAeTf0[%NkIRN-=0\&9A:.^ek3jcd9Xq#9do7cd;@kh6fCb&2T0!3Z^&Y_UQo9EdntrEh%Buo,1Ts
%D^Go@27[]0mhn7*S)-iE!TS/$T4+DbMT;.Y):DC7,FgmJ%2m2>3nu<VQD^30$t`3g'9isNTp6C1YHYp/9nrmh!<as,5YWG#Y@\B/
%HN,e=Lf?4`llo?rIqB7S.aR@cLe)C,*Mu3^]>05%1sY`<PJiB5asn%6)K5.[N/6!QBqQIr/Vd[TINUgG;oa#9!q_S/e$hKXPsiDR
%K[X^nTl=moD"aQA&Z;`/#=@BScK,Ri_G.&>*%r!YZs5Uk.%H]XL^(bB+QhoTiTsa%&<Wh'KYk:`a25CC!W<Ft&O$=dIMl6.,f\(7
%Dro#WAsQ7&!mW@^A'`q_+V`!OQo,KO'KjU_^m\eY!oj?C7PA=oThIF0XpYg&kH:STZ\/U%[U-.Ba;Z:97pX1<eGu/'Wc>2nfhr&<
%s*".&0Afe`caRr4SU..4\Gil7X8F91G&mI]Oa)/c[=;N>9V)2emlmWXoNU\coirtHYOAMdASGYW9ZRfHpBpcX9:'%qUJ3HYM[+d;
%lIb]p2^b?raq=caYu80FnHsHOp5H5.b'^MFqIU+YPEl_B-8jqZXS.9JYZjAG>u,Ut.h-Zk^V0-,'T-Y?Hc9G?XV#`b@(-eT&LOo?
%JDjDTHr><q)\gA0HUZS$8Y6:#\S<AT3N5t@=?H&?e<l;48*+CP#eMJ!@(-<WHd^X4r2jg6Yo[9Mq"(`K2<gN)/E,!mV>$dNb!jia
%.rATu+:/G.D_r5J[(Mt<eP@bgDZ*rrQCcOro#c-3&Q:49@DsL_B[8W+SIsrf*3(*e'%E):c[DJ0Xj'RhH!=&W]qoEf.Yi.c$4Q<)
%[q4*WVWa@H*"DPNnm59E^n3H:T*P'hR;!s-[jB^KW_?bk0"_tFOn<JLBZMeQo4.Rg"W*<m>*=dZDXnulhYVBFI1,AA)mlEV=p(IL
%*a!'./rA[fS%O2Tq"N2Gb*VSZmQ*f<3Zh)bK[FlTk[>foVXr<SbqtkA<.:46UZpQUK%BZOMeG/\=LuTu+3-6K]6W++(JX'.9BVIf
%Cs$EP\"UZc6&1GsRtr8L*DP^/V]iEfQI0el\pmZ8T2d_=>:a%shk'A4l.gCJ=F-NP1nB!Kl`?lG4KY>6NM^cTV/sm>5?0P2>:c<]
%V_iZUSJuY8U?S4(Ra1<um+tRf8(1Uq$EP[=Bf)B-bfHl\l,#c'\nF.J:t/3S2@p7VZC,hlSXUM9X)dakd<'7.J6d!"d<*Y7I`[`I
%XJ>%8X<f'g1n/0i!9nVqd<**gOdSYe"jiSR7FSdJK2p*`>r8+%,hK,ll.id>pNh59$\4_'Eo.Q2c2(o<!A$^]!3qn1go[tE_?E,W
%`YMgKj2tY$<Nj]M>+Mi<AtjTo?JIt/3!E?kFhl+PP2HYW(P8mtG6Q,V>9-nVW+V_k=dBa?'a.R()ui+4/ID;&#0#&HKp/DZKa3A&
%JQ")cla9-$=X>7.g[k0RPpElL=U/['#Sd^qF>n?14.bUb*(rJ(R6-JpEae=PA!FNFO5pWa8/FH;\>Oh^=QjYn%FHqT_,Y)p_j!KR
%\I6b4mS?sQa%`<G<9S5b13XSQN9LT6&`T(EpY9iB4BK4KRDi<FY+14RILUHt6<dYc9HD=*3sar+_="55Pm7BT_UR?1]q5P,nEd9.
%%i7bQcM'71%u;q3G2`cL?YGC&,LqEt54B)7&T2X1$<nn8c?Q(IDgt+:a:76Bmt#Gcm%ae""E171fm,rUcdEct4=mo3]41j0Yo]N=
%Hsnd>/pXI:I+!SpdgnIa'_.\e9#BU^qZ?:9DReFI;E3=8$P+".Ya/prn-uJ,VC3cEVn'>*:SksA"ba]a_so`LGE6VuQkIOt>bGAo
%T`!VLFp"Rj]iRE?C;d5#m2jcUc*^*+[j:D+6[^[QlgA(.De9^m0=s$A@!LAt%qGtAp'4ruldYc$5-?M6b>+:l=c+T4<o\0HM!&m2
%Z#ZWgSoe'-3f.>^iitY.&:k8K/\JlG/NX"OQ@8lZ;o3;-B2IOs9,9]KmUfDVDPF_m@op23NdR?_M(W,nDYctN@@g8^8pN4L9Cf3)
%2pSS=;gXFB8Km(\-EM1L?10Z<e6rM^\-neV*1Tu?'%eMACUd!?i<*j7F&*rg@B!U@:ge-Mm_rCA&4-Y6OcM:(XM+Z(9U7J(SguSA
%7+s1rNX.Je$j(3Q'T8`MV^rTGNd"eh7h??EA"I+&=6%?1]*0p/X6=U[j73V^B;='&3P)mK,Agj_JK[$LI5b;e;mC:M9]@D>&DP=;
%GREljZZ3u/YOX_j(fL]r\]O7Qad!G$3E?]TWs0W^$no:+o9_g;BM!ASKe`N3m>PI&RrL-:V/.bDCJuYWm)G)@4?aL-84$@Qqs_hZ
%i1742M]XH\"2pq\WN"6@HFS8:@:EJ7=X-m^FdO"I]Dk>[j+:?L_<K-+6BOB"nq*U-K/))>DiQb\e?^6B0Gu&`=+/6$c,[]F>,?[t
%;i[%Q]jI9)S+:Fhk#Wg7^9.%:[Wd^<qk]kMCT4\)3rh4bo,],=n[<Rc<4c\A_fjFChmpeFXi9]PEM#RAV^j.S<O0Q\V,gra]n5bG
%O6-.?X=N:@CVZ6[m,)3Rg<=h;.TLucS9dkDbX^ZY-o$)8hm:Y)[7jGbe6[oI,rOVEW[*a#!3gYF;.'!PrL6H)L8OW6ca%a+*h$YW
%p"NeocJ5I)FZmIf428kOD^!mIo4-A(^[A:4Ss(eX>9?SC8R%dM7cK';dHS(%?DYfl?-Qm-_QK_[Tmb?fF&G>ekOI#s$c'O)S%dlA
%IJ82krr((9b56L`&[g[+ksrj+h/Hd`fu'qPg5al_^3\cj2eqO=2OP2`bF)AS(;"#Ra8BWB?.n?I'1,(G*Kp%Neri/_qe/i:\\`Rr
%2Bbh>2O.G5b5Qj,OYJ[a-VLTpBH`D]<gi'P4J$>R:B6bFoAgUZJ,p^[lpi>>IHnCLc3\lFb%(6]"Y@dWC0KLfBV:FJV3ULpANGFA
%4)[:PGY;c\]rPa]OnC\^A$+rEgN=@:Dpgcf00<UePfLpKk"CcF=.V?'X;0&S\Q-K*DhngW+mdd@Po3\Ld+7W_f8i'qVG@:'BC9K>
%%\M@!)U5SG4'J%@)JFp-$l^i8.(-iuhHjAooOBeWOVaj0O.'q0ec#4^(;md5UY3`0=;`)*)fQ'oE7NQQD@:7rJ`Z2K.m*AuG3,^/
%ZTua7<?[bR/.Mfji2d<hr.pgfhQ6Maa705Q$:C:7Bpu>DO03a<-B#,9nr'tj@kC?Z`4mk*[lj7%K]'kh,rtmfV?d@4id:,j:6SWI
%%L!7h`"V/.=Id@YqIO:(_>$k#Qld-U++CG!fQH`J>+`V4MuSe>Z,$3"iAYH]$^qE3p*)_"5tpkibRlJo_&_P013""9fGMDCGt:&Q
%#Ut(G9!=q_!5leV7OG(<jUm"*'*H<3*)71O(cDRP&t^KX0Ph/*,g7EY7KJ7'!Ml;:dm[7@`W/K*M?42*"%Zt`8YZ:'`W2J$9!TMY
%Y&)nBA4?=2<b.]&-m,XYogar2fsD*9W$n9V7CJU!jU8q8ZRO$5M2tR9DpkA-2D*]+.a$pS+*k:`q*NT7S>%F(7B6EHWb_>MM`SQX
%'cQF?eSiUc:qWsg[#nTLb7-=]\pf$BY(9=-H/!Ysoc(eEBo9KNQ8<_aop['_P\XPhJ$"g%,X+e*5IYT"hqV$Aeb'<]ag7u4kH5A*
%8:ba?e(=9aMr^&]!BR((FoD7:R3M/U'Y6JNrVX-:WF%YS>sEBRZ`!l`<S,QH6OjXW$1%H@O3'Veq4r03r&r>q\Y-(O)(YX+1\ccF
%IFHg@o<DcT:;4QrH5:Z%r(f(q"tKYaIf?(EdgLK-\pcQ@.9ffeC$P65+Qe*r\pf+'h"52WO"\SI&t)U&5QANCCIIIKFoD6=qO,kO
%VQ9#qH%q?ZIP,n:-E?CpDi,5Q;Q$P\B=H>l=U=>oS@l"s^V_pi8=d&h+,f#sYNdLt\XKCuT0E<q:AYpYp%(4C;Uo\4p%STj_r9nN
%9q0+SfAi>am_Pg$hcS8G5'?i%9uO3k[M.0`o<7HBRVdM*\pdtjD;!T1V1nKd+I9t1lh^G3RftHsWTs<dcup"r-`b9HY*4T14hdnZ
%kub"_9j<Z3S1O'"]tmk'Dlcia<X^d:\pjWYr?,Q_(3TR6I&m+')3m*'S)\\4-E6=o\LoF5:RAK2XQqfVghY!BIUVO3bolr>\#S>1
%p%TjKT.JXC;:faW@!HHe5;nG`nM3[A5Q@a4mTIiTYNtB?hBc()C$PQj4$$NOUJo\8F.A/bWh3X)\1fX5XKLHVHHYjDqLt4cVlK&q
%`[&.Cfa5=s*Hh=.DM1geAD4VDrer#E15i_m+XlmilM?@,FBWL^r7L(QrVZVF#o/rDY$WT59jQAsN!jbai-7]BNa(,]T/_'cEK4,P
%c_!/s5??CA%e<HJI$RIiK%&btQ<-[a.":9^@TT@jVA7SI3Vtnp>Jh6D.P5\]9^Brtjk2#q7?nZYbe,&(%MN4n:^'_LD3[L\lru#\
%QQ3t"\Y[3F=t_M4:A$ofY7.jLbO>DY>UI1jW*UM0gU`LcI-ft+UW1`"X&*'X]N_n:MsUt;Z0ggZDXQZ7=BRVuRP2^r3p614ejhB'
%SC`7^,4YS4Zi7]3omHCOcoNfqO7%4A0$iY9_;"e+l"BmfQ9-'l51PgQVl*EBq>3Y]IJeMV>(,_5DRYB!pj$>JhcCV'F59kU(RGn$
%<g1#cf?7,JFdUhV=no-mc$0K,b'nh]jWq;4:cjUb43-a<lDq?><MdqLWVYq\.b3[n7oJaLkbI&8gs#C\*udk*V=`.CCck03/N8,.
%WV+-U*?7WZLV69EbPY:gn@h+?jc3OoG>0_R(E?en0c63pX5!=4qY'cd=TXc9&R=&c3HGF+>Lq(a/f&p4>9*h%Z.RUS6-=8PrR#\0
%@<jSVIBl[OD=>D=c>3;Mcf]Z@>&j)Z8FbV7FA2Fo9YS79)dSA$FYHnQbJa7L%ljpQ4Mr0*ESpVa9&fGfNjgUO<F@2Q^3.KORRqoq
%3,I`D<Yi<)(5Z+qG()'QEl7!ZWi3VlFt1Z&(2>qdhg2p0FgSht4<LDWqYFg3\8^"M4m^M`ighP\2lR.pdngD_9n/E.qar&4:<,lT
%`9uKR>^9RW.t'<r1;&t6<i>Nboi%)qf3]EWBt'LrEfH\"d.de6LrdB@&]%`@I]8eQF'3=\@CU`7#n'*u:=k[(:B[r)0)BW8L&XQ%
%q<S>udC1m,iF1)*j58@?[C,2_;tB?AH@+Fnhcd/&qIn[ii^2*lkF$h(/:LEQ^[Mc^pk),-IWQ_lq+"TX47DKRqu]Oc+LA<H_*0hN
%ign6"qHSZ^V9I6KoP9N@=8l&d(oPqhOe=9r8V2C:6,:pX]PH"3per>G^HBO3fV^1HjeX=lQB'FQ5[P;RAP#.8R+!VNoP0UuS5T`l
%NL+!rO7Aiaf[nk>)2fqAm\ZGq*M.b[kgNmQr2Gi9<]F31A_AV4EhOU)mIPQK>tdG"X\+ofifun[P9<gU@615dMYYYU3J%?=`j>O8
%KHF&(7[.ucK=04JC>[[Rd#PR+&'Y6&:!)/](r!Z`Z(!gdqn$&SC`cnf4e(%r8WK6HD!P/:o>$U]mQ,<==6+NTjkDqd>l4*XYtfda
%?RYQUdG6&?lr#=T`Y8;FH.QI1SIG%1]*0G9AoWceo$jg8jP*J*1HP5Nns\IE>=DZ=o4mkUrW#=P<_HFFYBOD.075F^,,GJ>.E(AO
%pYl7CiE3l/bs^P.d>2I*f@J;eC\q>H6#RFsRe!CsEpSZqCfPfGNSja_U'i.J8\A>f/b^u;8?kpV56tu!ZZ$'\kg0,,I%'*M]r->.
%\t$Pa%+j<'J**((L2"l&CNsZWTmle$,7K2l\q+q57Jt&7T0.kZ8UcYlkdQJ84'*.*_E[ee6Ll5fJXg'Ca8r_?=tr]j#^Hmi;LHRs
%BMj+iN>j1&jV$Luq6e\ClW!!<A%j6sSW3R/DX$t4]88Msh@<#l;QdHkKYogg"dZDW\Nhd*>e<N@d.tBt"8YPeeF]o[*BVEl1Cn[S
%e:j1\RX$-r=,?p)^Pra7)"COeDo[_ke3b[705mO+CO<$T,q[<>YOuaHs5m!qj`q.o[!nb^Y"ur?T2kiKe]&Ier=n"K%MI#9BU^mT
%2=nPWmM&,<mb04dLtr$-X57QVnI[ji4mHKM3ll`H[12qS+`F$#EjmBn',R-E193a-ajtn.^eX)hi*hj=7BXb_($4[t5uneg1Y(:D
%c2.OSo*8&$-Q'KVK\=+Ub-S[;mJBM]JES[")j9*VC]4;T#J@)-o\->qjip(K&g%Ls:@Mk=F.`=!^@J?fY+dHG]nrPJh`FqSjm!3i
%#/C4F9oV*.IE6f5bN\jl8UepbGrI_`he<na;5UB`)r=[4*Wn*rZ%^>qNi::W&D6VR96p`X\n=iD@73.0^(q20IcIpq2G=PS&1<J]
%[,kIlgYMiUr+:Gl].AOMUY`BeZ%q78kt7[pUPc>oc=7HEmjs^V&?h"P+a.nC&9@HT-CaHD_'Jme0F$$QfZAPZ>Q>p,l([pVZB9b2
%/>,ocXd;8RoqnAY4RT"=Wep5od=KEddQMBfH\(^B$m:Mla7[l=o2HoI?Q<57<o_C9KEkjc9NHLclY<t]\SRFH";^:(*R8n4Hie'^
%pl":;:e!4c%o\uS;n`6!3sY)^Z)59,RLm)kF`S:\j.sG2F,/_--V_6)SDBs`Vq#V*:U#OSmVs@3MEk"p:H8u(73L4qd!QRS$j9dL
%b*%YE)1qq2@\[QfB*&+bo-K%rls/FYgjgMt?utG1_a(GBbFOij(+WfsRcjns8IuFE#hFdtmZ1g(#\)NGDUEV<k^1-)5t"s.-UW3b
%GEN1N#eLW#\_e4i*b7'upAiEf9+6\.Z<;b7G*RH1pt\Q06\H:!&pFb8F$,L<KREi`S_!?QfXZZ_&_+0GmM\KCIVKXcAfE^rRe'ZP
%io.@tF\`[QJRX)dlZ,p0.`D?YScdnEX[,;SVjQt'h>V=3/0e%?3R&,NQS)'h@6gtj\IK5B7NeFrJfI0E6\oMs$umG'Jr[1BG(`Y`
%%\_aejaoJ1@t)j!70e'EcS>CNUdOcH;BQtCbFie25"'!k:W>a1k%_Li.A#^;q6$q##lSL"5=sS4qHGlT`O2K3ZfR4tl>lu-,[a\E
%+:5hE(h13H4D*&@h/ahAA_8#mm)=UW-HlW*n!JNZh1_ud<86'M<$e]"SST7W7U6M9#("<0X4TO5!^PF/!X`;PXu=L1X9f!A4N<(*
%AYI1R+n>,p8r^4_7)eMnkfM:Z.O6ESCcB4j,5[qNCM#^K!cco?Q:R-(_j?hqE?X`l.nl1u)k!)fCjI0C/Vk//`ugSIdbK!<fB16C
%G5D+#UiNkaF&_BgVJ]!:qrcS]ikjJ(SDc1TanpiT($/L7rRnd=hDJ(&!2Z33.^?r4&[8p?PVX?@'%(MHD\oY8J!+N"::`j1PS.-%
%0\K0.`@(.ZO@jnE),fjDLrJX[eC^:q@TIXm:O7)MWcC`%*n>=MCo)uSB'8ksPGqs@QP%Yq0<<imU5Jq$V=@ke8h$jF_S6\`PBNNo
%(KO-5G0>sq"dVA=S"=8=R-kcRb&WD.%8XH[fO8)FLg+6+0G.;O:?<:XBU+A#g)e^YAJaIX=+1JAIFNu$b.`rcp#@X9$m2-hpXm-:
%`3Du@e/@\774jNj6:Q7SM]H3.(9hk7m^2MJ[`I1QOXYdtVZgtF4(9tNMm\LGaKTiP.jZKHDe='50hW#pCT'2$<oIhp:krmX+.b$j
%C(Id,^N\Ccq#\?Q*b=\.,T]TC21NTn%6Z487A.;8=#)WKU93p^TiEVc@DS\7WU&d1Hjmu"l.IA``4(3E`n*]TNmftt-n+"99SY)T
%"Q;pf+!Z[K&Mo%dp`7NaekVr#+qO(OOP2B`DXb8iqd_&0_-dB7mOf)r0!/Iki0^\"\Idm#F16lV^:K63WU:JM_WoG"jWT(d[L\8-
%2^@g.g<SeDp%ki&rUa=5l+V522igsrAr+o$56Y3og'Ofm';Q;mP2#,GpjUp5'Ze))UO/U$^`cY"#eOSJU(uT;ZNbLn%N/XE,CO-/
%Gs6O9:Ml&RBP5N-$Imame]";Y!h@7fcCG(JjTap#A*W(:_BujAAI6".+E?]P3_lL_<u7-[!Yhrp6@Z-j7cL)#?\:!]bdZhc@.'<K
%F@Ad6^K9L'gf3C(HsIn=H%a%PkrYM%9$4>a46Hm,pFEf#o[\b=OGFPMZ8chLOFC-XUh`PA<s7Ph8P4$4RKFEP.9m8.N/t/2=i'i6
%C;";Rdb.@Rkn2N;(Jmbu%GtePFBmh[iR+`>fTd,22T3F$ibh6op4%qU`m+>a`bj3h@C[!Ghb1R#Hm*RRdr)@d0)"2R&.:TKX,G;*
%71<Lo$2jYc&g%f9+BRKg<:m*&!/fE\`(Ic"nIa03e+m!oHqrL(cKp0D7Zh'C/GZ/^?oM.9ON$:o/bJpE8ie@Re8XBigh6#U4G*a2
%ME2M/ipr4uM>ZmjkP=VX8dP'$C:0W_)CcoRjn\&;i^TEn[A1(*c$1!rSc9[H7X'eiB2@5Tr4\OGa,7>RLQc&Bn9AR$"CeAV#!=kd
%:a&`cWQd!)o%mN\W30.-/l@EVoe%"il&X`:5bC.Qa96omf;B4s1Q%B^U:PVMC"NiB0"]O84Z@]<BkiF7QKJ!%`)rTURj/!^^^DFH
%AF@Im^P1)aBnB4o]hZ1:#Tt-X_CV&[S`6+Blq>q+_1@H.gi3rb%,:;![N=QDkk#`r^Te7VTa\PIe*Dh*A2:4gZQQoU,VtKCnnq^g
%kKir)mg:(Aiutgu<3Ss'W&tLKWsJAD7UXh:Zm<2n`/r=MOu>c:M`i(-DTo5N3;H%hI@cs/JGs4/?H('2#E<NFkE,$lfX'#9?W&\"
%G!d5ucs'a1OXISp,0#`V-3P"MRaUfG8raE%Aho'InPh&<a?0JfG58Wa>:::GiPu+:9g?TPqo)e7r#h<Y<e%r(-aC$Vh2\=H5F#@9
%2=gg=%tU)%,@=).^#$b,VfUBjC?+WAHoHIuFWF,_[5sa&P?YVWc'>a#"Q%kFh4C.7p$koNo_M:6TXr;E2Kk-ak4t86V]kdY\B!J%
%(s<S1]Q1alQK_;5RI[Q_0>0cE"SHNTlE/,WM/B>l#l=qr.PM5IE^eIH&R)tA40)?3%R>K\[U(ZF!X^a.]\'L^Fn^,2KVdR3(*bpd
%Ik#\26kX!4/95,S4kaF^LEV3/Ic7Y9W)^<&96]KM^">>kY3W]U(p1Oq&p+U`!(slt&*?hRQJ8c;RaFD_8oiEb&G^%K/+ep(p,u80
%BLj[Fg.JecKVF=TNI[hF6IAOiW^si/Z%o/2pP.\5'=!HImcTrj("hqlNjC'q1+q-Z9%t/?Wu^>nF5Ff<"hjkd(tm[/D8JWu#t3&_
%EP]S.nZ1&Re:L89"jJ63+=Vo5`\NiFXQ%]heT7,64;(GEM)nb"c#'O=D`;V(rZ,8BhU3m@FdB_>#57;h';eDR&S@OT?m^+EAS'$4
%-<'%Z51$blTR,@s2o+a]V\t^6@dG4T/PMJE-I:5JGTS@`O!I_B:#5e21'H82ZaLf3SWUL.q7R9;m+)bsM%>0;OGlc.W%[SsjuFlg
%&!7Qe:,49Fb$PFK\VqrO/cB4Jr!*-Z"O3<3KV#Hk"r23IJlGGqM&$\3WshTW"e9PYHmeS=:es80Wen6*^3I1hYHQ*PGEmRaTg)W+
%\h:Dk_<E9uKXdhtPNK[ThuO(CR)"sKR+P%p?C6XRXMVpP+?!Mai9&8"]'*4De'9'BoB:k-E[Xi<EPG;W.ht<G<h@LL$fYJ(4]njQ
%S7WhcS`#j>K)#X2mT"C<7Gbi8"oPo#q>h8'<*$cc&`(bL8WBgorHWsu*D`k=Kmk7lN23,bDue>P<GWZ[gVgFKQeE@\5`_<K-4e.P
%,&\[lD_]N*M[l=CAYl]FF)6+C:IC:.q\F&?@Lo_:g9ShF88mUDMKBtj=4$n_AHc+'La?R["(Xe'o9O'DYn>qR0i-,iCCu(_:&W;]
%;GJoL\sp&]P6`l>.EY>%BF-k_+,>LI`iYgY`sr\I))QkDGm%10$*c/:'DUr)nL!N=YU[]_km`$E%m8&_@=jZ7?^nk(S3uI0`5A7o
%lbLR]M;R"]>!\+mokk$n-j12oWG!t')\dl1_S"uPCetBa#]iW+Cljgm4U].3Kj]LG`6^>W:^AC=n:C=GK>7atE/=N[4'4>kO3cnu
%mD)sk_D#:XTY]mOA8QffgS20I6ItjCj2<>b*9B/RX=[&u3&8]%BldYI5Zo&ur)lfugL&AUqW-mPD1>,]d.=0N-Rh-:L/3)$.om84
%KGSQhZjD/k,K+U!n<#,6Z#G\DRUVO6`^PP]@U1S:$"E]Ln]!RW(ZUme(-EH^fLo+>@/p*NnX'XC[&9-Emo==m<$H<$lSKdF,Q^Uu
%[21FhnWqlP3nQ<Rh/Hqq2GS/$?unqM/C1%NQsP;+RM(qhlm*AD_`3LS<D@C')Xr`RKU:SOdXL4dfgI),2t/LG^XO?fA>,6s@Z$@(
%cGY5\?FB"cF*$X+iVP*0JNQ*ej>"4l_mqYC4m@m?%Y5SeedkgIj(r/^WimY'D-gn3j&.e$(^$)[`3Wj,A?8a2j.ecV49P6=^uYt7
%FX?S7gm)4f^[7lui]3N+G8@g2B\5Z&jK?j\4m]0&8&%eM[pK]\9^N3G#c7\aV:rP)p[@4.#(V`[6-"%=fUU0ondN0-<T'9CUQlMV
%GA#;'26T;O<$sT<?!s"Za3c>Q=F$G;SM/@4E)t\,Cp`E>KXB0&A"t@5!`JioDNWs>O_pWUK[<KhlR$S8bm^rmrjmqWgo6jsO#_,_
%TTpDd0O@dlGl)r5k1Nk)Z$-G]1Q14h@6)f@Htaii)nsUe01?Rh.jBY1#c%VJS`Jn\h6!=bZ\AjomE.R]A:+g>G&%.8BgXut2ec')
%ckc7-hBqUr%GDAMVdb9:_(Ym:D0HH+c"C59.5%3\//pN]f5Q+jW>3;B7:_CZ`_Y!P>'kb#W&qPF6S#\R6QE2_\=LW(hB3`o4-oRF
%_mBr6O"UU%Fe4k*HJb+Kb=QW/$OTj0NIYQE>Eu018JDgb,k`O5,R*fA=4ZI)O-CHK"QmI-\Ta.bf>@#bh7/I+\LW$44QA1ZN@VB[
%ol\Wu*PQ=*/5K<+2`"J0F_f*YiL*&7kti["#s.j5c'*]hU;1#r6%'WB#&Bn0.:@!(\J@9Ybn4Q:n8I[J2$7W\i#D!8XkHGqA'f,t
%%?T<%p+2L*.M2:/bPT85S6gKu[;J?#QT27E4>0bC%VLTa[q0[DmksDSlA.)qW[c+P@i&KCEr)@I&@Os'4?4Oa.0AAZQiFlVM%aqq
%_>MUan1>32NnBKsd,J#7WB94*nhAfJYX[:JU'=4s5#fR3>&5_tNY\-Jdpcfi/2aqMa0[P[XsfNiq'/RkNFdsbrs7(_@p/<3d!^mb
%;R,Jj8-l_l5m?o&4slPRVb(GNK*p0Y9k%!<_k<0'Yrq'9<&cd=Ks9&A,\B3C37-m4(I<]k@]`Yi/Q>U(f;U]2m8N*Rq'&.P\Tuu$
%WldW'Zq>oCm;=6eZeu$WPR)m>jka;-TrNH7g,5b;`hPMk6W_0-3k86;kfB!r;B*@]E>r$:$^hs\:gXmH$^>MTo,^*1L-P"nk8F2@
%%DP&i&^bO;Ubhl$"!GH<&D'P*;2E42c%6,;s4I(`.^oA4g%UWa[I,ID&Pr9(eb7LMD&+c_Ta51#&`g&0VL!]8`UIh&25(Bn-sC1\
%VP.=2@26ZnWeF/3V,3'.$.ZmZ`p#M2Lj7>%6LX$c<<NBR?\.M=M!C$NpB[[T0RLY.#R/d;O#=VO9:5B`DHjnHA#h%Y+g+[D;T&]j
%m8]oe%c?jnDc8LCe*WH0WgoajE6MH?$TNp8cQ0?2/$68u^\4Yf5&63:4K5:$%I)PgCa#".qF)Sjc^-dHf^`od74;pGR0,\+qERQW
%>\qNiVjM@a5S)<Zcfj[V7"+g0khAS`\tNU$URTnh9IdX0_[Vob-o,(m-lAo;7qtanIk9-%'r-9i2DY8@!NcAgFVhCRht>Q\HMR%'
%#2?c0lS2j&cd/W+2XA[NcUWo6jip3bG3eNsD\`;\rH`ch7>OUi9,7-o6hKF9(e<UcM[Sh]>IhR33rPW4_lJq<W08\Lb89s.X1.t(
%eNZMNX;<S9couH.:091-aAalT?=(DrmY=3CJ?;h>Amq0NZV3jJZaNT^/<f:@fB^^1S"LcqiZuS8?-INu2L.jG96c:!HO>en@YV*5
%PDF7cObhfR+i/YE-5)H(EKc/%nSofu?/EiuG*P[9Zf^miDVfF2kW5Z0MUW(.1g%fK98@e/HNc_a;`,/\@RNSj`o:[[,=M@ijuc50
%-UFQ816<d<,*M`l%UNXd=\k4E8Iu&p\<A0b)I)KMs7P%%WQQQDSck2:[C2499BBl+q*6Cd/]j:f4Wm(XY%'MWG*#+#8YR:B@`0&U
%^qs;Lh?K1^,]$Nkd$/ef`(591,gf<2aV,F%D_Ih.8^W?XP.XDlI.c`\Od;1`'<9EK7@8RWTR)d]mL*;)XP?u-ILi[s+@U7/VZ]M4
%b9Sis,kV6IIZ!^2ps53.]Wp9$rNiZS+V9JK12uSO>ZsNn6t9>pbM:/dbn#>*RQEdOT_T1_m7Zd3K2T_e5br38HTC["oEsHafa#PQ
%s59#SXYCtU>K*!B8JF?"B!1N46$Ko!T(P7lba;?N#/AQnW1D'*:O5Z/[LgCP&5Q7f5,i"#]ZfH>ne_'N'QC'Oie*X\3R2()1n*?8
%!W@:pLKu6^P<6<RGs4P+51\ld?KP0[6!#uGo5'QWDDUBZ@r7>AVVa;besTE/,Xqo@(==$^V:gf`a()asPs6L5,(XV`[=4D8Rd2\?
%%D8"[rV\#hqFe8hk3;QMBkVnS%InbX*90_5Bc7f`Efm-mq9eZ_P5J589;:>3A?,*CGuQ\ZHO;g7Q\NY3CMJ)"HF.$lGf1$9#)rPo
%cI)*0h+?tB7p.hM(K5EC+#R'WK?'AU6ujeA+9'3h[(KmT&EuD^!WVOi!WV%H,[Vt`d=P]G7rr=<G,p,Js*Xk57+7:K88`cMQ7k;D
%DRJA:rG):P=RNn`^0@.:F=!C14tl<j(%cP4[G,Ld8UTE:hNYP6%Hk"@*o&UZjY":_CL=^FBBtQJRrkuFO!I>t]Bc+]49LKJkQmAB
%[me5VI\Mmphm2/hEXpgDE\&FU.O;Ei=0=^GP]1Dchl^O^X53]=.Q)'p(rVSRXM8SLHUms;#K=MK@<_)g>OC9^Q^.RKX[Igo84/?n
%Shk;.^$)(03k"r_*J"G'BLC78NtpZgS&dGK@"8(C@hj*Y-YV+iO0RbYHR"j@SDJm$W!H#?\6Z)e)K$;Z4#4(QjmFuA^@00j>["n9
%R7hb,T.njAd-Jk^'Rao3r-<ks#A+Xf:b>UlO6N?#QfaeiDCB)$-Uj>N;0\\lc/$_Z!mtg2&hE=$Q">M%nhe9eg_2BfK8=e2W`e;5
%LXG,tqk,R'B%t5>1ejLN[RFjbpm(ns']uPu:#bc#!-j(!9WcUEA*mA"I$::hXEL:F_C"8W`)L1!7re4D?A?L^6G@d:<)2^]66M*q
%_o\;LkWhU%RdfJt)&BoP%Uj.;j?bcHdeW=-M;D/Rof'ooM[luaR!^E4(tE-]`aZN\@#LDkAOS.J+ZQZqjkRk6`$ZYs6?7&\H7jX,
%%sm!F[Q@QDRdSr_5LKrT9(MZOPG]j1q=T%LchF9-(5O<r+C<@!KO.^Ib=V8/A+#N,:oa!$^*Qn]L_Z<0ie`/[8,Mk['*:amXKRO5
%8.m]0Jn2AG+X=9n?O]GsN53q3ip<FaNA1FB\r2i8q&V6;<]!,>`\,^koRLWABEfX+"CT],iaIU]c#,)'h#-8cB#<1q#bT,S!mZ/"
%;r\*bk8U(k=oo[$ZIlJ"m8jS($o`Wc"]%u"*-=RM"+J]FRDbAeXk3_=ID@OU=sn$334[B$@?tF[rCjDjgcXfE8h3;UiWa4&Y:%`1
%TR6k$f0p*8hl9mG_?E]WFc\DYZ@u;^99T9p!#i3H=gWA@r"teJ@p03$*kK67ao=t>"OUAG2Sp=3>L!sb5rZ[?=!_%"m&@BEf"EXi
%V5`=R$<BFI7LX/kU$8C*Tde>\AWRU]8:OZV6_m<^S"sqZ>=qiL2E/+M=nBjo)Mo!eWn"U>K[cI>F1*6pY>;V&&>'8e+phO\ir9#A
%=1M\_W/I^#14jL+NO+W'OqM/d7BM@u?=ldp_r+,*FHKj[VkF:bLk-9rI,\\+>4TKohl*3q>2gKql'kq@D*n)r#ENDbWK(Vsbt-VG
%mAcOn'_JV.A4`PF1)(#U_)Vb;]a0;=h(]/O[5HuX8cZ\5?[Z?*^o=Fa#U8eLl*gE/J3]Yn(_GWi#%S]Z?4]B+=o.B?L@.I?5@#<p
%;Sp@:kpjFQ3)8.uGrB;Am-umXJdFI]5S;G4@En^PH!?J(gCPM4E3Et;H1'<qb3_@MEs_^fP3E;)@-7)PAu=BRf(3$7iZYdnRq<,*
%g8m-uV3:c^&@)Ic%?XD?Ghmge41uVj:HQMe(abgI(aA=+86b[8HOXCdK7/PlLuVID:(mqmP@99ek-9&bW@eno?sY;'h`K3sEX5L1
%0*At;q[a)R_O*9Sf3kb):pT`:/Xu\S3pPu:m8s6eXSl%jm[2n7Eac1I,jm`^B$,Ilb6iH0Z59,@I6mWKEss3d]+"f,7,jDI6Q'YK
%//t^&#W;Cbm:tsB8?BjIk\o[bAH9]0F\IZ4((s5cr&*+TZ81gD;R11!_Ej=_:.#?*ggJ'36X(m+<hutod^B@Kr+L(c5]k>ZbQcZ^
%f<2(El<=%!L4uhP/?YhQAm"hcl^=<?Y@^o3MWBS:/U]Lo_H.R%]9g7#@Gr`:[ra-K28d:4f'Jh](t#b\<@%!8qJ(b=Y9<,]U\*(F
%$X]%m<j&:&;Vm,2P^5NH^<4r+7K/sob1'I#J+>h"YHllKs-15I`O/\KO+l(b%K>6SA2Ou),LTMedhE6^Oa%kRS@=6J*d#c$G$=@,
%SU0>b<^.cuao<[ZJ,#Eb7V/D-<HK8[TgNVo-'H&lUN/+n7tSf\DS&+aJ%cCW]:DFkn)t*8>p%WNp<(dJ.-^V^qQ<:$BJn3OlA[u"
%K%9,mXmdb`7CU[ZfDcs?03BYA6]1$An-'"Me._l4phoJAR]V(6^[ok.q68WRS,L#=M+Da=BV`Dj+8b8ghl,c];([)2]mGj89pjum
%JpT=!7Pp6d?=/[HVr9PsKOa7&*(pYZ99g'EiG;rs[>:>QMKs`2/4C'oMIpBFXf+]HUR5'.s.\C;S#0g+C0lh,,Nn:fa6<Eh&IMM0
%?Na+m.qE3s.mu7#af5]Z/!d@hfn,Mkd+9",bn`0:1]+R)e]@=&@oX-Z4.fM16UBUlZUS7QGUuS:Zts%b]"r,Q`r]G3Wb/*%@I=NW
%Ugc58b@Fu'(I;8hNN?C/X4@lACgN7qQE@E@j(qH@Zi>NU<KPZ`$j9qQ+*umJC[LfKhJ3XlOPmnZEek&8C/IpGpK=D:Ct"-K#UrXs
%GLiA=fsi8>i!d4h>(Tc&OG/@3>Sa))KreRL2"[l$pLRj^K<fG[rN%QdD@dRVN+&`qT"$(T'<Du35_4]j.u6s25h%2UW+uoK*A<W7
%R'9JSE)Bf&/t$E/VUh$39tCrgZ:.R:V`5hce:t51L)&(I]JfeLOdEbC:BP3(>m[bd=B9(%!JP2kg`e,[d^V$,(iu6LL9[76>`1rE
%&h.cJMl3sibt<Ya#rYmi$7g9JE*`s[\7jH]08^X%bm^k9P'8$5Ec&R8nabO2lMc0tRt(?Cd#36VmpPiHBZ9J9I;*PD=N<KjMCMPG
%H,^#g5a,tA21T^Nis`$u6Y4't)dS/0=!'B!oH[RSbW+q]6CQ>4N06RTcUF3V2hWX/&uMhZ]797WrQCm]HP^_WU&41Xh/9\dG/sSL
%IT^Lur?1+seaU0MMCVSfi"?s#*q$`CTcom`~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial eop end
%%Page: 29 29
TeXDict begin @landscape 29 28 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1323 485 2686 7 v 1323 790 7 305 v 1382 681 a
Fn(Efarmo)-6 b(g\350c)75 b(thc)k(An\210lushc)p 4001 790
V 1323 797 2686 7 v 4005 865 73 318 v 1392 865 2686 73
v 150 1280 a Fl(H)57 b(pi)-5 b(o)58 b(sunhji)-5 b(sm\350nh)59
b(efarmo)-5 b(g\240)59 b(thc)f(an\210lushc)g(e\320)-10
b(nai)59 b(h)e(ap\354deixh)i(mia)150 1523 y(sq\350shc)f
Fj(lo)-5 b(gik\240c)67 b(k\210luyhc.)150 2085 y Fl(An)58
b(mac)g(zhthje\320)g(na)g(apode\320xoume)h(\354)l(ti)e
Fh(K)12 b(B)57 b Fm(j)-29 b Fk(=)48 b Fh(\013)58 b Fl(t\354)l(te)f
(pa\320rnoume)i(thn)150 2329 y(\210rnhsh)f(thc)g Fh(\013)q
Fl(,)f(kai)g(de\320)-5 b(qnoume)59 b Fj(i)-5 b(sod\324nama)58
b Fl(\354)l(ti)g(o)f(t\324poc)h Fh(K)12 b(B)47 b Fm(^)38
b(:)p Fh(\013)58 b Fl(e\320)-10 b(nai)150 2573 y(mh)58
b(ikanopoi\240simoc)h(qrhsimopoi\270nt)-5 b(ac)58 b(an\210lush.)150
3135 y(Ac)g(d\270soume)g(t\270ra)f(meg\210lo)h(par\210dei)-5
b(gma)59 b(qr\240shc)f(thc)g(an\210lushc,)150 3378 y(qrhsimopoi\270nt)
-5 b(ac)59 b(t)-5 b(o)57 b(par\210dei)-5 b(gma)59 b(me)f(t)-5
b(o)l(n)58 b(Sunt)-5 b(agmat\210rqh)58 b Fk(W)-14 b(est)p
Fl(.)p eop end
%%Page: 30 30
TeXDict begin @landscape 30 29 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 730 123 3871 7 v 730 427 7 305 v 789 318 a Fn(Diat\324pwsh)79
b(se)f(Lo)-6 b(gik\240)76 b(Pr\270thc)i(T\210xhc)p 4594
427 V 730 434 3871 7 v 4597 503 73 318 v 799 503 3871
73 v 288 939 a Fm(\017)86 b Fl(...)76 b(e\320)-10 b(nai)58
b(\350gklhma)g(gia)f(\350nan)h(Amerikan\354)h(na)e(poul\210ei)h
(\354pla)g(se)460 1183 y(eqjrik\210)f(kr\210th.)890 1486
y Fk(\()p Fm(8)p Fh(x;)29 b(y)6 b(;)29 b(z)8 b Fk(\))57
b(\()p Fh(Amer)5 b(ican)p Fk(\()p Fh(x)p Fk(\))39 b Fm(^)f
Fh(W)24 b(eapon)p Fk(\()p Fh(y)6 b Fk(\))39 b Fm(^)f
Fh(N)19 b(ation)p Fk(\()p Fh(z)8 b Fk(\))p Fm(^)890 1789
y Fh(H)14 b(ostil)s(e)p Fk(\()p Fh(z)8 b Fk(\))40 b Fm(^)e
Fh(S)10 b(el)s(l)s(s)p Fk(\()p Fh(x;)29 b(z)8 b(;)29
b(y)6 b Fk(\))48 b Fm(\))g Fh(C)12 b(r)5 b(iminal)s Fk(\()p
Fh(x)p Fk(\)\))288 2129 y Fm(\017)86 b Fl(To)57 b(kr\210t)-5
b(oc)59 b Fk(Nono)e Fl(...)890 2432 y Fh(N)19 b(ation)p
Fk(\()p Fh(N)g(ono)p Fk(\))288 2773 y Fm(\017)86 b Fl(...)76
b(pou)58 b(e\320)-10 b(nai)58 b(eqjr\354c)g(thc)g(Amerik\240c)g(...)890
3076 y Fh(E)10 b(nemy)c Fk(\()p Fh(N)19 b(ono;)29 b(Amer)5
b(ica)p Fk(\))288 3416 y Fm(\017)86 b Fl(...)76 b(\350qei)57
b(pura\324louc.)890 3719 y Fk(\()p Fm(9)p Fh(x)p Fk(\))h(\()p
Fh(O)5 b(w)g(ns)p Fk(\()p Fh(N)19 b(ono;)29 b(x)p Fk(\))39
b Fm(^)f Fh(M)19 b(issil)s(e)p Fk(\()p Fh(x)p Fk(\)\))p
eop end
%%Page: 31 31
TeXDict begin @landscape 31 30 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 730 7 3871 7 v 730 311 7 305 v 789 202 a Fn(Diat\324pwsh)79
b(se)f(Lo)-6 b(gik\240)76 b(Pr\270thc)i(T\210xhc)p 4594
311 V 730 318 3871 7 v 4597 387 73 318 v 799 387 3871
73 v -12 789 a Fm(\017)86 b Fl(')-10 b(Olouc)58 b(aut)-5
b(o\324c)58 b(t)-5 b(ouc)58 b(pura\324louc)h(t)-5 b(ouc)58
b(\350qei)f(poul\240sei)h(st)-5 b(o)57 b Fk(Nono)h Fl(o)160
1031 y(sunt)-5 b(agmat\210rqhc)58 b Fk(W)-14 b(est)57
b Fl(...)590 1327 y Fk(\()p Fm(8)p Fh(x)p Fk(\))h(\()p
Fh(O)5 b(w)g(ns)p Fk(\()p Fh(N)19 b(ono;)29 b(x)p Fk(\))39
b Fm(^)f Fh(M)19 b(issil)s(e)p Fk(\()p Fh(x)p Fk(\))49
b Fm(\))f Fh(S)10 b(el)s(l)s(s)p Fk(\()p Fh(W)24 b(est;)29
b(N)19 b(ono;)29 b(x)p Fk(\)\))-12 1658 y Fm(\017)86
b Fl(...)76 b(o)57 b(opo\320)-5 b(oc)58 b(e\320)-10 b(nai)59
b(Amerikan\354c.)590 1954 y Fh(Amer)5 b(ican)p Fk(\()p
Fh(W)24 b(est)p Fk(\))-12 2286 y Fm(\017)86 b Fl(H)57
b(Amerik\240)i(e\320)-10 b(nai)58 b(kr\210t)-5 b(oc.)590
2582 y Fh(N)19 b(ation)p Fk(\()p Fh(Amer)5 b(ica)p Fk(\))-12
2913 y Fm(\017)86 b Fl(Oi)57 b(p\324rauloi)h(e\320)-10
b(nai)59 b(\354pla.)590 3209 y Fk(\()p Fm(8)p Fh(x)p
Fk(\))f(\()p Fh(M)19 b(issil)s(e)p Fk(\()p Fh(x)p Fk(\))49
b Fm(\))f Fh(W)24 b(eapon)p Fk(\()p Fh(x)p Fk(\)\))-12
3541 y Fm(\017)86 b Fl(\034Eqjr\354c)58 b(thc)f(Amerik\240c)i(\035)e
(shma\320)-10 b(nei)59 b(\034eqjrik\354)e(kr\210t)-5
b(oc)58 b(\035.)590 3837 y Fk(\()p Fm(8)p Fh(x)p Fk(\))g(\()p
Fh(E)10 b(nemy)c Fk(\()p Fh(x;)29 b(Amer)5 b(ica)p Fk(\))49
b Fm(\))f Fh(H)14 b(ostil)s(e)p Fk(\()p Fh(x)p Fk(\)\))p
eop end
%%Page: 32 32
TeXDict begin @landscape 32 31 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1140 123 3052 7 v 1140 427 7 305 v 1198 318 a
Fn(Suzeuktik\240)78 b(Kano)-5 b(nik\240)77 b(Morf\240)p
4184 427 V 1140 434 3052 7 v 4188 503 73 318 v 1209 503
3052 73 v 288 939 a Fm(\017)86 b Fl(...)76 b(e\320)-10
b(nai)58 b(\350gklhma)g(gia)f(\350nan)h(Amerikan\354)h(na)e(poul\210ei)
h(\354pla)g(se)460 1183 y(eqjrik\210)f(kr\210th:)890
1486 y Fm(:)p Fh(Amer)5 b(ican)p Fk(\()p Fh(x)p Fk(\))39
b Fm(_)f(:)p Fh(W)24 b(eapon)p Fk(\()p Fh(y)6 b Fk(\))39
b Fm(_)f(:)p Fh(S)10 b(el)s(l)s(s)p Fk(\()p Fh(x;)29
b(y)6 b(;)29 b(z)8 b Fk(\))p Fm(_)890 1789 y(:)p Fh(H)14
b(ostil)s(e)p Fk(\()p Fh(z)8 b Fk(\))40 b Fm(_)e Fh(C)12
b(r)5 b(iminal)s Fk(\()p Fh(x)p Fk(\))288 2129 y Fm(\017)86
b Fl(To)57 b(kr\210t)-5 b(oc)59 b Fk(Nono)e Fl(...)890
2432 y Fh(N)19 b(ation)p Fk(\()p Fh(N)g(ono)p Fk(\))288
2773 y Fm(\017)86 b Fl(...)76 b(pou)58 b(e\320)-10 b(nai)58
b(eqjr\354c)g(thc)g(Amerik\240c)g(...)890 3076 y Fh(E)10
b(nemy)c Fk(\()p Fh(N)19 b(ono;)29 b(Amer)5 b(ica)p Fk(\))288
3416 y Fm(\017)86 b Fl(...)76 b(\350qei)57 b(pura\324louc.)890
3719 y Fh(O)5 b(w)g(ns)p Fk(\()p Fh(N)19 b(ono;)29 b(M)19
b Fk(1\))p Fh(;)87 b(M)19 b(issil)s(e)p Fk(\()p Fh(M)g
Fk(1\))p eop end
%%Page: 33 33
TeXDict begin @landscape 33 32 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1140 67 3052 7 v 1140 371 7 305 v 1198 262 a Fn(Suzeuktik\240)78
b(Kano)-5 b(nik\240)77 b(Morf\240)p 4184 371 V 1140 378
3052 7 v 4188 447 73 318 v 1209 447 3052 73 v 288 811
a Fm(\017)86 b Fl(')-10 b(Olouc)58 b(aut)-5 b(o\324c)58
b(t)-5 b(ouc)58 b(pura\324louc)h(t)-5 b(ouc)58 b(\350qei)f(poul\240sei)
h(st)-5 b(o)57 b Fk(Nono)h Fl(o)460 1050 y(sunt)-5 b(agmat\210rqhc)58
b Fk(W)-14 b(est)57 b Fl(...)890 1339 y Fm(:)p Fh(M)19
b(issil)s(e)p Fk(\()p Fh(x)p Fk(\))40 b Fm(_)e(:)p Fh(O)5
b(w)g(ns)p Fk(\()p Fh(N)19 b(ono;)29 b(x)p Fk(\))39 b
Fm(_)f Fh(S)10 b(el)s(l)s(s)p Fk(\()p Fh(W)24 b(est;)29
b(x;)g(N)19 b(ono)p Fk(\))288 1660 y Fm(\017)86 b Fl(...)76
b(o)57 b(opo\320)-5 b(oc)58 b(e\320)-10 b(nai)59 b(Amerikan\354c.)890
1949 y Fh(Amer)5 b(ican)p Fk(\()p Fh(W)24 b(est)p Fk(\))288
2270 y Fm(\017)86 b Fl(H)57 b(Amerik\240)i(e\320)-10
b(nai)58 b(kr\210t)-5 b(oc.)890 2559 y Fh(N)19 b(ation)p
Fk(\()p Fh(Amer)5 b(ica)p Fk(\))288 2881 y Fm(\017)86
b Fl(Oi)57 b(p\324rauloi)h(e\320)-10 b(nai)59 b(\354pla.)890
3169 y Fm(:)p Fh(M)19 b(issil)s(e)p Fk(\()p Fh(x)p Fk(\))40
b Fm(_)e Fh(W)24 b(eapon)p Fk(\()p Fh(x)p Fk(\))288 3491
y Fm(\017)86 b Fl(\034Eqjr\354c)58 b(thc)f(Amerik\240c)i(\035)e
(shma\320)-10 b(nei)59 b(\034eqjrik\354)e(kr\210t)-5
b(oc)58 b(\035.)890 3779 y Fm(:)p Fh(E)10 b(nemy)c Fk(\()p
Fh(x;)29 b(Amer)5 b(ica)p Fk(\))39 b Fm(_)f Fh(H)14 b(ostil)s(e)p
Fk(\()p Fh(x)p Fk(\))p eop end
%%Page: 34 34
TeXDict begin @landscape 34 33 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 2151 175 1029 7 v 2151 479 7 305 v 2210 370
a Fn(Ap\354deixh)p 3173 479 V 2151 486 1029 7 v 3176
555 73 318 v 2220 555 1029 73 v -150 3732 a @beginspecial
0 @llx 0 @lly 373 @urx 179 @ury 3297 @rwi @setspecial
%%BeginDocument: crime-resolution.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: crime-resolution.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Jon
%%CreationDate: 11/3/09
%%BoundingBox: 0 0 373 179
%%HiResBoundingBox: 0 0 372.7647 178.6568
%%CropBox: 0 0 372.7647 178.6568
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 64 8
%%BeginData: 7838 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD2CFFA8FF
%A8FD09FFA8FD04FFA8A8FD05FFA8FFA8FFA8FFA8A8A8FD07FFA8FFFFFFA8
%FFFFFFA8FFA8FFA8FFA8A8A8FD05FFA8FFA8FFFFFFA8FFFFA8A8FD05FFA8
%A8A8FFFFFFA8FD2BFFA87D7D5252527D7D7D527D7D7DFD04A82752527D7D
%7D527D52FD04A87D2752527D7DA87DA87DA87DA87D27527D5252527D7DA8
%7D7DFD05527D2752527DA8FFFFFF7D7D5252277D277D525252F8525227A8
%A8FD2AFFA87D525227FD0552275252A852FF7D7D5252F852525227277DA8
%7DFF5252275227FD04527D7D7DA87D5252275227275252A87D527D272727
%52FD042752A8FFFFA8A8527D522727275252277D5252F8527DFD2BFFA8A8
%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFFFA8A8FFFFA8A8FFA8FFA8FFA8
%FFA8FFFD05A8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8
%FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD70FFA8FD7EFFA8
%FD6AFFFD09A8FFA8FFA8FFA8FFA8FFFFFFA8A8A8FFA8FFFD07A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFFD05A8FFA8FFA8FFA8FFA8A8A8FFFD05A8
%FFA8FFA8A8A8FFA8A8FD37FFA8FFFFFF7D7DFFFFA8FFA8FD05FFA8FFFFFF
%A8FD04FFA87DA8FFFFA8FFFFFFA8A8FD0BFFA8A8FFA8FF7DFD0BFFA8FFFF
%FFA8FFA8FFA8FD30FFA8A827272752FD0627F82727277DFFFFFFA8FF52FD
%062752F82727F82727F87D7DA87D52F852275252275252527D7D7DFD0427
%52272752527D5252527D7DA8272727522727275252A8FD31FF7D7D527D52
%7D527D527D7DA8527D52A8A8FFFFA8A8A87D7D527D7D7D527D52A87D7D52
%52A8A8A8FF7D7D7D5252A8527D52FD04A87D527D527DA87D527D527D52A8
%7DA8A8FD047DA8527D527DA8FD30FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FD44FFA8FD66FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFFFFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD3CFFA8FFA8FFFFFFA8FFFF
%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA8FFA8FFFFFFA8FFFFFFA8
%FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8
%FD3AFFA8FFA8A87D7DA8A87DA87DA8A8FF7D527DFFFD07A8FFFFFFA8FFA8
%5252FD05A87DA87DFFA8FF7DA87DA87D527DA8A8FFA8A87DFFA8FF7D7DA8
%A87DA8A8A87DA8A8FD3AFFA8A8522727522727275227A87D7DF852FD0527
%5227A8A8FFFFFFA852FD0427F852F852277D7DFF7D522727277D27272752
%525227FD047D522752F8522727527DA8FD3AFFFD04A87DA87DA87DA87D7D
%FD04A87D7D52A8FD047DA8A8FFFFFD04A87DA8527D7DA8527DFD04A87DA8
%7D7D7DA8A8A8FD057DA8A8FF7DA87DA87DA87D7D7DA8FD3BFFA8FD1BFFA8
%FD7EFFA8FFA8FD6EFFA8FFFFFFA8FD0BFFA8A8FFFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD48FFA8
%A87D7DA8A852A87D7D7DA8A8A8FFFFA8FFFFFFA8FFFFFFA8FFA8FD05FFA8
%FFA8FFA8A8FFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8A8FD47FF7DF8
%F82727F8F827F85252A8FD04FFA87D2752527D27527D7D7DA8A8FF525252
%7D7D52277D7DA8A8A87DA8A8A87D527D7D52FD047DFFA8FD46FFA8A8FD06
%7D52A87D52A8A8FFFFA8FF52FD0527F852277D7DA8A85227272752525227
%FD05527D7DA8522752272727525252A8FD48FFA8FFA8FFFFFFA8FFFFFFA8
%FFA8FFFFFFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFFD05A8
%FFA8FFA8FFA8FFA8FFA8A8A8FFA8FD54FFA8FFFFFFA8FDCBFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD2FFFA8FFA8A8FFFFA8A8FFFD04
%A8FFA8A8FFFFFFA8A8A8FFA8FFA8A8A8FF7DFD05A87DA8FFFFA8FFA8A8A8
%FFFFA8A8FFFFFFA8A8527D277D7D2727A87DA85252A8FF52A87DA87D527D
%A8FD057DA8A8FD2EFF7D7D275252522752527D7DA8527DFD0652275252FD
%047DA87D522727F85252F82752527D7D522752275252A8FFFFA8FF522727
%F8F85252272727522727A85227A87DA8522752272727522752A8FD2FFFA8
%7D52527D527D527D52A8FFFFFD047D5252527D527D7D7D527DA87D7D7D52
%5227A87D7DFD05527D527D527DA8FFFFFFA8FFA8FFA8A8A8FFA8FFFD04A8
%27A8A8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FD2EFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8
%A8FFA8FFA8FFA8FFA8FFA8A8FD5FFFA8FD80FFA8FFA8FD6EFFA8FFA8FFA8
%A8A8FFA8FFA8FFA8FFFFFF7DFFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8
%FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FD40
%FFA87DF8275252F8522727277D7DA8FFFFA8A8A87D527DA87D7DA8527D7D
%A87DA8A8A87DFFA8A87D7DA8A8A8FF7DA8A8A852A8A87D7DFFA87DA87D52
%A8A8FF7DA8A8FD40FF7D52525227522752527D52A8A8FFFFFFA852F827F8
%52F8FD0427527DA87D7D5252272727522752277D7D27277D7D7DA87D2752
%2752272727FD0552A8FD40FFA8FD07FFA8FFA8A8FFA8A8FFA8FFFD04A87D
%A87D7D7DA852FFFFFFFD05A87D7DFD05A87D7D52FFFFFFFD06A87D7DFD04
%A87DFFA8FD40FFA8FFA8FFA8FFA8FFA8FFA8FD05FFA8A8A8FFFFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD50FFA8FFA8FD7EFFA8FD6BFFA87DA8A8FFA87D7DFD
%05A87DA87DFFFFFFFD05A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD4AFF522727522752FD0427527D27277D7DA8
%FFFFFFA8A8527D7DA8A87D27A87DA8A8A8527D7DA8A8A87D527DA8527DA8
%7D52A87DA87DFFA8FD49FFA87DA87D7D527DA87D7D7D527D7D527DA8FFFF
%A8FF5252FD0427F85227272752272727527D7DA852275227272752275227
%27277DA8FD4AFFA8FD0DFF7DFFA8FFFFFFA8FFA8FFFFFFA8A8A8FFA8FFA8
%A8FF7DA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FD4AFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDBDFFA8FFFFFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A8A8FFA8FFA8
%FFA8FFFFFFA8FFA8FFA8FD4EFFA8FFA8A8FD04FFA8FFA8FD07FFA8FFA8A8
%A8FFA8A8A8FFA8FFA8FFFFFFA8FFA8A8FFFFA8FFA8A8A8FFFFFFA8A8FD4D
%FFA8FF7D52277D5252527D7DA827FD04527D52A87D52F87D522727525252
%7DFFFFFFA8A87D27277D272727522752527D527DA8FD4FFFA8527D277D52
%52527D7D5252527D7D5252A8A87DFD06527D52FFA8FFFFFFA8A8FD065227
%7D7D5252527DFD4EFFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8
%FD6EFFA8FFA8FD7EFFA8FFA8FD64FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFFF
%FFA8FFFFFFA8FD05FFA8A8FFFFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FD4EFFA8A852A8A8FFA8FF7D7DA8FFA8FFA8A8A8FFFD04A87DFFFFFF
%A8FF7D7DA8FFA8A8A87D7DA8A8FFA8A8A8FFA8A87DFF7DA8A8FD4EFF7D27
%2752FD05275227527D7D272752272752277DA8FFFFFF7D27F85227272752
%2727275227A827522752FD04277DFD4EFFA8A8FD047D527D7DA8FD0C7DA8
%A8A8FFA8FF7D7D7DA87D7D52A8FD097DA87D7D52A8A8FD4EFFA8FFA8FFFF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD52FFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FD05FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FD6AFFA8FD7EFFA8A8A8FD80FFA8FD7CFFA8A8A8FD38FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2009-11-03T13:29:31-08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-11-03T13:29:31-08:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-11-03T13:29:30-08:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>124</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A63rvnqfQoLGNvLXmDVJJ&#xA;Y4ZJLi2klkjljeMhnhMU0nx+sUThIE+3y+yCQqgI/wA2Hlt3mXyN5sjEUzW8wmEylHSnVVmdyGDf&#xA;CwXjXqQoLBVt/wA27f66kCeUPNCQsZws84uI/VMEZcRwIJWd5HYoApCgfESfgOKsksPMX1v9GAaP&#xA;qb/pT640EkN1M8YjtHkCu0jSRqonRY2iJIDcxvQE4qxbWfzN17SdaniuPI/mCTSIgrLNA9zNcvuY&#xA;3QJFJJAWEtGB9XgY/i5V+HFW4/zl024tRdWXlLzVeRc5EZoUuDxNutbgNWYfFC44MP5thU7Yqj/K&#xA;/wCZEHmBrxbfQ9UVrDTjqNxxu5ZAzukU0NvEyyfFI8Ux60+NWXqpoqqeavPV5o+kWGoWnlfW70X4&#xA;jlQrNcuFib4mUpA886zCM8uEkar1HLkOJVSO1/OO4cj6z5O8wW/qvMLeN2vllPoAyGMo1KyyRj92&#xA;qkhmqOQAriqZXf5saRH68MGjau91FO1pEstxNHHJcLAZvSRvVLFuTRxceNfUcL1BxVOtT81NZWms&#xA;XKeXdcuU0iSSCVoZpDyZKsrqjTrLJE0bRvyiR/tEUqpxVii/m5qkNg7XXkbzFJqUTyI8Fu908VYS&#xA;edJAzEigBBClTUCtcVaj/OVmt7pn8p63BNaoBwuJryASTSxTSwiMS8ZDG31YoX4fbIChsVT3zX51&#xA;1LSLma3sfLWq3zWryetL696Y5FiRpTHbtD63OaSEKyBgEqaMy8TirFz+ed6lwLWT8vfNguPXdHCr&#xA;dMnpq7BeLh6M/HjWnw1rRiKEqrv+V5/7kriN/JfmS3sbe2+sFrr65DcSFHCSCKIsQ3AOrn4hRQ5P&#xA;QAqvUPI+sS6royXc8E1ncTpBO9hcs7TQetbRSFD6nx05s32qHxAOwVY75j80avptzHaWmganfzXt&#xA;1cJFqpnmGmpwlkokn1R7m5jPwqif6NxJPXY4qw2T8875GuI2/LzzYkiGNrav1pkZJEjb42R34vyd&#xA;vhFe1aGoCqI1D85NSOpRabpnknX1uZ7G4uYW1F7y3ie4hszeR2yOjS8ndY3Sg350HeoVUE/OrWrS&#xA;2SHWfIXmG11V/ikMcl01lBGZDHznuCy8QtOTUUinfFXr/lq6nubAzTQzWrv6Tm0uHZ5YTLbxStE7&#xA;MSSUdyDiqbYq7FXYq7FXYq7FXYq7FXYq7FUEuh6KoCrp9sFGwAhjoB92Kt/oXRv+WC3/AORSf0xV&#xA;36F0b/lgt/8AkUn9MVd+hdG/5YLf/kUn9MVd+hdG/wCWC3/5FJ/TFWl0LRFFF0+2UVJoIYxuTUnp&#xA;3OKuGh6KNhp9sO+0MfffwxVv9C6N/wAsFv8A8ik/pirv0Lo3/LBb/wDIpP6Yq0ND0UbDT7Yd9oY+&#xA;+/hirf6F0b/lgt/+RSf0xV36F0b/AJYLf/kUn9MVQbQ+WwzKNPR+LFS0dm7rVTQjksZU0Ip1xV3p&#xA;eXP+rb/04Sf9UsVd6Xlz/q2/9OEn/VLFXel5c/6tv/ThJ/1SxVE20GnSwn6igtjE5+xGYWVyATyQ&#xA;hTuvHYjcUxVKgNGk1MGXTQxQXC3EqWcjxPL6iVYOsbAksH71rX5lVGel5c/6tv8A04Sf9UsVd6Xl&#xA;z/q2/wDThJ/1SxV3peXP+rb/ANOEn/VLFURBeabbp6dvbywx1rwjtJ1FT3oIxiqp+lbX+S4/6Rrj&#xA;/qnirv0ra/yXH/SNcf8AVPFXfpW1/kuP+ka4/wCqeKu/Str/ACXH/SNcf9U8Vd+lbX+S4/6Rrj/q&#xA;nirv0ra/yXH/AEjXH/VPFXfpW1/kuP8ApGuP+qeKu/Str/Jcf9I1x/1TxV36Vtf5Lj/pGuP+qeKt&#xA;PrNlGjO4nREBZma3nAAG5JJTFUbirsVdirsVdirsVdirsVdirsVdirsVea+dvK/5lapdW58t63No&#xA;Mdq9yQYoYJ1la5klb1HV54w3FSnAMvw/F12oqklx5D/O6dIufne69SD0jHSys1VmW34SM/C4Qkmb&#xA;41qSvWobYBVDyflx+dN5FLbat52vb21uvWWVYrazs2iL28ixSI0M9W9O4ZH4VUUHXahVUE/Kn83b&#xA;GxGm6b501J9MjjVFtbhLcSSNyVn9W6E7z0asn2Cu3Edjir1zRvrdosiX4kDSvGEuZTHykZYI4iXE&#xA;bMqs7oSN8VYp520Hzrq1g2maDrV/5fuJmvfV9COxlimglkf41d2W4ikHrIVZJFp/LXcKsdfyN+ec&#xA;s0xfz3eR28tx6yxw2Gnh44+RpErtMajixG67mh7UxVDR/l9+fUMFnFD5+ulSzjWNUOn2Lc+ACjm7&#xA;3Ds1VXq3I1qd8VUT+UX5n2l3cX+h+cdU0+7vBEkiTiG+SJArGZIzPc0YvIVPMoG27dMVZR5W8rfm&#xA;PptraJqmuX17OLuWfUpAtt+9hMMSosReVhGfWt/UI4lQJJE8GxVAap+XP5hz+Yk1qx82apDIqKhS&#xA;WCycEiZqv6cc8Nvy+qyGL+6pyAf7WKoW28n/AJ9y2dyl35zuILhp5GgeKz09/wB2p/c7mRAvIE81&#xA;4ntvXFUw8v8Aln817a8nn1PVriRV09YLKJXgkQXx+ryy3DqzoSjzwyfAWNI34rx3qqqeZ/Jn5kai&#xA;tkNL8y39q9oiFJLiG1crcRxlDKBb3FqJA9eTJPzow2PEsjKsfP5T/mjcWN1p1/5u1Ga2ubYCKeIJ&#xA;DJFepLCy3BH1tzJWKJlK81QE1CVxVM7HyV+b2nEmPzRd30EP1g29pLDaxVM0Ukac5RPKxKM6yb1H&#xA;IdAMVRll5c/Nw3nr6jrM0np2RSF4hbqBd+nQM8KvHG8bSHma70AQd2xVV80eS/PWs2Wn20Ov6nbr&#xA;biI3gC2SiV0hMMrK0UkcoEyyOxVpDRqFeNBiqT3fkT867m1bl5zufrqXUdzbyiztljVU+L02jju4&#xA;1dRIq05ggivIGtAqjtE8pfmfaag76tqt1q1iLW8i9NnhRpZZXkERdBIEFY3QmhohQBQQS2KvV8Vd&#xA;irsVdirsVdirsVdirsVdiqRap5itdPllN/qljpcAnW2t/rlFMsjRJJxQtLFyY+pQKorirG7L84/I&#xA;15FLKnmvTI0hWN5GmikiFJkR1oXmANPWVWp9lvhNDiqvH+anlSRuCeY7Ey0kJhNvMJB6bhArIZeS&#xA;tIWHpqRVwarXFVLzN+bflXy3p6X+p67bC3d44z6NpNKyGaL1ozIqylkDpQivjiq9Pzb8klLcy+bt&#xA;It3uE5pBODFKtGKMro84ZGV1KsG3DCnXFWh+bnkp4nlt/Nel3UcdQzW8bzAuASsYKTMDI4VuCdXo&#xA;eNaHFWXaZeLf28xd4riGqqksa0jljkiSUHiS+xEnjirDvM/5h+XvKSNfa9r9nafV/VSLT3jae89B&#xA;7oW6y+mswldOcVOfD5nbFVln+c/kG6s4Lr/GGkW63H2I7lTBINlb40ecMnwuG+Lt9OKqy/m75GeY&#xA;Qw+cNHmk4l2EXxhQB+2wn4rUkKOR+1t1xVMbfz5oE9iL4eZNLitDDFcNPMphVY7hEkiZzJOoXmkq&#xA;la9a4qlCfnJ5MY8X8x2cMnORHimtJ4pE9JirNJG8gdFHE7sB0Phiq2P85/JjavNpUnmK0t7iH0ma&#xA;S4tZoYik6c45FkklVSjgijdDUYqm8f5geXJIBOvmbS/SMRuFZkZawic23qANMCV9ZSgPc4qvTzzo&#xA;htkuJPMWm20LQLdFrmNrfjC3AB39WdOA5SKvxftGnXFUs/5W55PWTUEuPM2nWo0yV4Lp7iJ4lEkc&#xA;rxOiM01HIaOtF7FT0YYquT82fJrTtAPNGmiVXdeJhkFVjhEzSis28XFqCT7Jb4QSdsVZNoOtJqkZ&#xA;limS4t2jSWKZI3hryeSNlKSMzAq0JxVNsVdirsVdirsVdirsVdirsVdirsVdirsVdiqVaj5ctdRi&#xA;vLe6leSzvyDc2jpBJEaIqdJInP8AusHr1xVjyfk75BSoTS7ZVICsotLIKQpUgEehQ0KLiq3/AJUz&#xA;5AEJgj02GCAlnEUFvawosjhVMirHCoWQBBxcfEvYjFU0uPIHl65E4uYY5luViS4SS2s2V1gjaKIM&#xA;pgoeEcjKvgDTFUjuPyK/La4vIruTSbf1YklQKttaLGwnIZi6CEK5DCqFhVTutMVVJvyR/LuVpmOl&#xA;wp9YKNMIoLWIFomLI/GOFQGXkQGG9CR02xVldrpj6eJHtpHm9Rg0sL8FBCosaiMIsaIVVBTah6Hx&#xA;CqV3Xl/TdTlitLl/rdo7T3QhuIbWX05ROknECSFivF3777DFUlvfyL/La9uLe4n0m3MltK0ycbaz&#xA;VWZldSsirABIh9Qtxao5b9cVVJ/yV8iSzwzpataywqicrMRWpdImV4ll9COP1BG8SOnKvFlBWhxV&#xA;PrXydpdoJxan0VuoYrW5RILRVkggQxxROogoURGKgeG2KpLH+TP5fR/Y0m0UkEEizsQSGXgQT6FT&#xA;Vfh+WKq8n5UeTJYoo5rGGcQJDFE81taSSBLeP0oR6jws/wC7j+Fd9sVQ8n5N+SJHJNuyLxjSOKMQ&#xA;xxxrEeSiJEjVY/iAb4APiAbqAcVTmz8laVZ+n9WZkMVomnI3pWzN9UQkrAWaEkpUk0PXviqWz/lL&#xA;5KnjkjnsIZY5a+oj21mwapUmoMG/92uKqM35N+Q5Z5Lg6fFHPKAss0MFrC7Kq8VDNHChIA6eFAeo&#xA;GKsl0PQLPRrdbe0dzBHFHBEj8KKkRYjdVUkkyEszVJO5xVMsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVeN/mLZfmHfX6Hyhf6LaQxi6S9/SLxid5ze8l6xuyhYYeANejmgqAQqkF1p/58zX&#xA;dpJHf+T7eC1Lgxo4b1Q1eJnrD8fAUHwFKmvjsqttrb85LcSXl/caLdrcRFIdPtnskliuLlIIS8jF&#xA;PTWO3KyyqFZtzuWGKva/LM8RjuYBLDJJG6czbACEt9Xi9QxAbcfUJ27d8VYP561rXdN055/KugaR&#xA;rupyXk8Vw91dww3EX+lOCWikQLInBeJ/fqRtsQMVYfB59/NtLa5il8iaPc3LvG9tcrdWkSxxzxGT&#xA;gYnf42gYemSZF5GnbfFVbSfzF8/udNsdU8maZb6hOsC3LI8booWX07id3UegqvSgjEpaMNz+MbYq&#xA;zO/17VI9Curm10DRpNQjeaKKE3MPIhI1WOeOLiFlV5uZ4NLGeHHep2VYRF59/NNByuvI+lxxi1EZ&#xA;YTWUhNyrBWuCkM8jcSKsIVqaDZySMVRq+bvzM0+6mS68oaPq1u13LDBLb3NnAUton+G4Kl35+ssq&#xA;8U+ErwavUYqjNQ/MPXEivILTydZPdxObe3uao0TSpbM0jlAAeH1ho44zzowLHkoU4qyDWte1G2t9&#xA;XfTfL+j3zWRC2QN3DE9wrc2LxIY3DFEMYKMycm5gN0qqxMedvzItrMRP5J0i/vUZ+dyt3aRRMEl4&#xA;jghatHj+IEkEfynFXT+ffPMNpKreTdN+ur6qw/FBIj+ooeCT9zJIqiNqxMnOrbPVFrir2HRXtGN8&#xA;LNozbLcARiEqYx+4iJC8dvtE4qmWKuxV2KuxV2KuxV2KuxVDXWo21tLHDL6hklVnRY4pJfhQqGJ9&#xA;NWp9sdcVUk1qxcVQTsKA7W1wdjuP914q4azZHotwakja2uOo6j+79sVW/p/TfUEdZvUNKJ9Xn5Go&#xA;JG3DwBxVcmtWL14CduJKtS2uDQjqD+764qtOu6eriNvXDnoht7ip+jhiqp+l7X/fdz/0i3H/AFTx&#xA;Va2tWKoZGWcRgci5trgAAb1r6eKrRr2nFlQGYu45Iv1eepHiBw3xVZF5j0maRo4ZJZJFryRIJ2YU&#xA;NDUBOxxVVfWrGNC8izoiirM1tcAAe5MeKuTWrGRQ8YndD0Zba4IP0iPFV0U9nqURaFmrE1FkKNG6&#xA;PxDAr6ig/ZcdqEGm4xVJ77zTpenF9S1WU2un2CTw3N+8UqwBvVjjHxFaCroR4V6E4qtb8yvI63kt&#xA;k2rRrdw25vZoCkgZLYUrMwK7J8Q3PjirWkfmZ5F1j1/0Vq0d79VKi49FJX4FxVeVE2riqtH+YHk+&#xA;TUItOj1FXv5yohtVjlaV+cRnXigSpDRKXB8N8VRZ816EJpYDO4mgAM0ZhmDIGDkFhw2qIn/4E+Bx&#xA;VSv/ADp5b0+6t7S+u2tbm6DG2hlhmRpArKrcQU3oZFH04q2/nLy4lyls92VuZHeKOExS8y8al3UL&#xA;wrVVFT4Yq3ZecfLl8yrZ3f1guIWBjjlYcLluELkhKBXYUDHbFU5xV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xVIvM+g3eregsEskAjSUCaC7ns5UkYxlGDQA81+A8kf4TtUHsq800z/nHqbTkhjtvMGqqkUls5A1&#xA;EqWW1iEAjJW2HwNGoUjpRVHQUxVU078htU06f1bTzHqFAjpHHJdgrGWuI7kemEtowqs0RWTbk6MV&#xA;5AVqqylPy2txZWMTROl7YaXFo8OpWuo3NpcejAAEcNBEgDggmvuR0NMVSC5/I6eW3MUOt6pYsw5S&#xA;vZam1sJZVUIk0qxWqh5OKDk3Vz8TVJxVCwfkHcC4N3da1e3N8ryPFfG8Cz1lUI5d/qzciVUKCKUA&#xA;FN9yqmUH5Sa9bWD2Fv5l1UQSQi3eSXUnmmEYkMpMbyW7cH5cfjoaLUD7WKoi8/Km9vNETSpr2RYj&#xA;p8mn3CxXJWGRpXZjMIWt3VSonmRR2V+vJVYKsY1H/nG+4urtruDzJqtrMsRhtSl+tIEFBGkfG0Ux&#xA;pGqqgWMr8NR+01VURJ/zjlp8eo3mpaVfXeiXeoFzd/o699FKSiQMkQNs7xp+9+zyI+FT9oVxVFP+&#xA;SvmOayh0668yXM+mCzGlXdi037qawRiyoQYTSc/7smNSwqAF2oqoR/8AOP8AdwQJDZ+ZtbtUiUxx&#xA;pHqrrGI2iETKYhbCP4gCSwUEk+NCFWfeTPL9x5U0UafO4ntw5kaZWZ2VnVebGqqRGXrQb8BQVI3C&#xA;qXeaPIWjeZ44tO17R7W+ZJLq4srxbiWGeOOSbk6rLHEJEEiyqroG4t3rtirHZ/8AnHXyHLqTaouj&#xA;mLUWuXvfrK6peOfWduZYpJG8bb9mU171xVXv/wDnH38vb4ymby1bATSSTSql/dKrSSvE7tT09iTA&#xA;vTtXxxVYPyPtbC4fVdALWHmZvTji1qW+nneOBHiBiSMxLEqi3h9BKLsp3riqaaV+UeiafDqsbWC3&#xA;p1m4jub6W6vZHkZomd+PNbdG4u88zPWpb1GWvCihVrV/yc8o6rftf3Hl+0iuHkMz/Vrue3UyNG0T&#xA;txiiUAyK37yn26DlXFUA35BeRmcudDXk031hx+lL3g78xJ8cfH03XkK8WUjr44qnHlb8tbXyy036&#xA;Kt1X61JbNO0100nFYZxM/BRbx7vv1PgNgMVZ3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVeU/mL+bHm3yvfxW+meXp9bjljnkeW1tZ5Vi9O7ECI7IxDM0ayPTY1AFPiqFWP3P/OQ&#xA;fnFbq1itvI+sSxMXW8lfTLpKFa8BBV6NypX95woCPeirrP8A5yD80SiW4uvLj6fpvoma1vriC4EU&#xA;zSxwC1hRgaM8k87I3CoCryHLpir2XQ768vLeRrtBHMjIDGEMbJzhjl4OpeT4lMlDvirB/OP5iab5&#xA;JhGp6tPKkTTyW1rBBpt1NCqSXYh3uFYQK4WPmUaRSaHiu4xVir/85UeTItMurue5eK7gaL0dPNkz&#xA;SzJcxetA6ulw0Sh168mHE7GmKq0//OTnlVfqy2ksl9Ldho4Uhs2o10hCm3VmuVV/idB6iVQ8hRjv&#xA;RVl9j+Y82pWcF/pUbahYT3Zsxc21nJKv2Y5hKAk7M0Zt5GkqB1XhTkQMVS7UPzw8u6fetDd3xit1&#xA;c27XDaddBhdLx/0drYyfWlYh9i0QUkEA1U4qltx/zkZ5T9Ay6deNqJjXlNFFYSxPGS/AIyTzxty+&#xA;01APsqTiqa6T+d3lHU7gW8OtRxzGWKH97p90kfKZSykSmT0ygAqW5UA3O2KrPKv51aR5niik0u4D&#xA;Ca4hs0ElqUJmmQMeINzVlj5oGYfzexxVX1D82Rpfl+PV9VhuLFp2CwWUum3XqMfWEDKXWQxK4fke&#xA;BfkVHIChGKpS3/ORPk9dMe7Goq1xBAlxc2YspA8YYAMC7zrGwR2CMyMRWniMVaj/AOciPLE93bx2&#xA;l369ncPPH9fFoyxK1tHHNJs1wHK+nIShAo5VgtTiqcaH+cnlvXtTsNN0jVEurrUHKoosLiMIvBnD&#xA;sZJVHFgvw8a1B5fZqQqz/TriS50+1uJKCSaJJHCgheTKCaAk7b4qiMVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVQQ06RC3o3k0KM7P6aiEgF2LtTnGzbsx74q39Ruv+rjcf8AA2//AFSxVp9NmcAP&#xA;fzsAQwBS3NCDUHeLtiro9NMDSTQys13I3KWWTj+8ooUK4RVFAFFCBUfSaqoBbQy3qWwuZo0Pr3El&#xA;syQNwkMqMCpeJjSsjUNcVV/8PW9Kes1KAU9G1pRRQD+57Yq0PLdoJXlEh9WWnqSejacm4nkvI+jU&#xA;0O4xV2leXLbSdOg03TJ3srC1X07e1gjtkjRRvRVWGnviqI/RcvMv9em5mlW4W1TxrTf0e1cVUB5d&#xA;thOLgTMJxyAm9G15gPTl8Xo13pviq6XQYpYzHLcPJGylWRorUqVIKkEGHpQkYqojyrp4votQDEX0&#xA;AKwXPo2vqIGXieLejUfD8O3bbFUXLpcsq8Jb6aRKg8WS2IqOmxhxVTGhoK0uZBUcTSK1+zyLU/ue&#xA;nI1+eKrY/L8EbStHOyNPvMyxWoL/AAhPipD8XwKF37CmKrjocZmSc3L+tGeUcvpWvJTxK1DejUfC&#xA;xHyOKo63gjt7eKCOojiRUSu5oooMVVMVdirsVdirsVdirsVdirsVdirsVdirsVdiry/zv5Gvdc8z&#xA;y6hb+Zo9Be3VlgjeJZP3rW6qk3B5I0kXkwqJFYDhQfabFWMan+WHna7jMD/mLp89tMGW4iFnb2jC&#xA;oARklt25jiRzK1AP2ehxVWtfyt8z2BSKx/Ma0+pwwSpHDcWdtO7zSKzepLLI7saTSFvZaCm2KqV7&#xA;5H812uq2vmWfzDp+rtpy26Hy5bBIIrw2wliSWWQPGod/rHrSqECllAoQFGKvTPIFk2kaOumXFwt3&#xA;JGyKL2PeKVxBHzCtvXiQRVt2pXc8qKse84WOuzWnpeWrzQ7W5e8n/SMN/Eq3jRG7dpGguSZEjcp8&#xA;Px27/a5VqACqxn6l+dFtFHEl75KvhGksPrSRtFI5EYEU8nEcOXqfEyKoFMVQWnaT+dMdvNeNqHli&#xA;S/vJIiLK9MJgtFo/rhFt4qsCUj9KshIDENU/EFUXqUf5w3GkpbW6+VbbV0nSc30Lxi2MEcJRoCki&#xA;yOzyzfH9kKg25HsqmfliDzkbEjUH0aOSK9isz9a+rPJJaW5kgmvUMQA5TKIplRv2uXQEYqt8xaX+&#xA;YUmuxz6PqXln9Hw8VWMxLAkqyB+bSxs1w3KJglOL0cH9nfFUu+q/nKupG6abyjLZho2W0VkQcNvV&#xA;XiYizNSvCswAPUkYq1Z6T+btrZzPHqfli6uZZHMUeoLG/pwoeUa1t0hX1JDIwc/ZVVWmKsy8rQ6y&#xA;0ksmufor64ZLIWkOmCMhXW4aSdoiKy8PSeNPj3qjGnGhKr0LFXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYqh7y8+reiBC87zv6aJHwrXgz1PNkFKIe+KpSfOWmDWzoRRhrAh+s/UDLbCX0iwXnx9bpyYD&#xA;FVaXzPZwp6ksRRBT4mmtAPiIVf8Ad/cmgxVz+ZrSOeO3eJknljeaOJprQM0cbBXcAz7qrOAT74qv&#xA;/wAQRev6H1d/XoT6Xq2nOisFY8fWrszAH3xVQk836bHa3F260trQSG6l9e04xiIFpOf7/biEJPyx&#xA;VQi8+6DLpJ1dJFOlrzreG4tBF+7do2+Iz02eNl+YxV0Xn3QZbNbyORWtXjlnSYXFnxMdvQTOD6/S&#xA;PkOXhXFU4trmHUIpleFkCOEeOTga1RZAQY2cUo4oa4qkt1rw04S6pfxPHpNgJ4HvZpLdP93LHVuU&#xA;i7co9iaE1G1cVXr560M6fBqIdfqNyAbe4NxZhHqoYcSZ9/hYH5Yqh2/MvysstlC1zGJtSWJ7CP6x&#xA;Z8pluGCQlB69TzZxxxVMpPM9pGiO8TKkkiQxsZrSjSysERB+/wB2ZnAA98VTKzuhdQesEaL4nRo3&#xA;48g0blGrxLDqvY4qrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULf280pt5IQjvBI&#xA;ZPTkJVWBjeMjkFen269MVeb6x+QPkDVpZpLry7bosxDCG3vZ7eOMhi1YkiiQJUs3Tbc06nFUOn/O&#xA;O/kSDU7fUbDRo7Ca3kjnT0L6evqwypLG4aSJ2WnCnwkV6/aVSFVe/wDyA8iahHZx3+iLdJp8JtrF&#xA;ZNSvD6UFeSxrRAeKGpWtdyT1xVqH/nHz8u4YBDF5bt1X4jIxv7tnkLLQGRmRi5Q/ElfsncYqmK/l&#xA;B5dGlRaYdNVreGG6to2+vziQQ3kQgdOSxLXhAPSSu4X3JJVSK5/5xo/LS5QrP5fRq0/6Wd4KUAAo&#xA;AgGwG23c4qqN/wA46+R6u0WmvFJI0UjTDU7l5PUgHGN/Ulikf4ULLxrxoemy0Vej6bp9xpsb+lGq&#xA;wEoBZRsXWOOOJIl9NmVSTxj6H9fVVi/mbyB5d81elbavo1nfuTcS22o+q8NykRuOZi9RYi4U+tRk&#xA;5U61GKsfk/5xu/LqQW/LQ97VxJA41W+DIwCiqkLttGvTpQUxVUtf+cdvINsska6KJIHEvCGTUrpx&#xA;G068XdGMfPkVA6sfvJqqrWP5AeQ9PurG4stCigawujewr9fuXUyko3xCSN9qxL0p4HYkYq9LsLeS&#xA;C24S09RpJZGCkkAyyNJQEgVpyp0xVEYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FUl83apc6Xo017biRnhSaX04VDyP6NvLMERSsm7NGB9k4q8q0f87/MLacX1jyt5liv0HLhZWcc&#xA;8DgxSSr6cjwRnkPTEZFPtHaq74qpTfnp5kvmht/L/lnW576V2ieC8W1iZXWNHYcIoZn/AHXrJ6vI&#xA;LxqBuTiqb2f5zvLK5u9D80afYx3CRSX91ZW8cKQsru9w/KMMscUcZd9q+xOKqDfnZex6hcWzeW/N&#xA;MsMbXDQXcFjC8bwQw+tHIS8MfFpk3CdR0O9cVUz+d2qQi+a/8seaLNLQVBazt2FB6fN3dYvSCKJe&#xA;VVc7Ka02xV6X5Q1i71LTI5r+Oa2vJY4J2s7lVWaL1raGV4m4LGpaJ5SrbVHftirz3z95+8zeW75J&#xA;tM0DVtRuJryW3N3GtsbJrfm/IxiBbif1E9JE/eRAnsW2qqhp/wA87yBo/W8rebIITX17meztIYYS&#xA;qh3MsjqAiKrgl2ovXfY4qhbD88PM97cpcweVfMEmiS8lSSOCB7oSrMYTFJH6Cwxvurby0HxAmq4q&#xA;mQ/Omd9Nv5RofmS31W2tWnstLu7OCKS6mVypijKwvsoKM70IUN/NQFVSf87dRM00MHlTzdNJHceh&#xA;GRY2qpInIr6qOyBeNeNN9wa9AcVa0r859Y1G502w/QPmDT728heWeW+tYordDFEWkCOYQX4SdeXD&#xA;4AT1oMVezYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpXNrDcIqyhvhPJGRmRga&#xA;EVDIVYbEjriqh+ibX+e4/wCkm4/6qYq0ujWS14tOtSSaXNwKk9T/AHmKt/om1/nuP+km4/6qYq79&#xA;E2v89x/0k3H/AFUxV36Jtf57j/pJuP8Aqpiq9NNtUiaNAwLP6nqM7PIH4hQwdyxrxFPlt0xVI4Ws&#xA;v0gI2N2sPOaOSaNrxIHnedV7EIp58xt8PgcVTh9GsnRkdp2RgQym5uCCD1BHqYq3+ibX+e4/6Sbj&#xA;/qpirv0Ta/z3H/STcf8AVTFXfom1/nuP+km4/wCqmKtNo1k6lHM7owoyNcTspB6ggvQjFUbirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY8lK7/Xvqf149fqnp&#xA;er9bPh+94er9NMVZDirsVdirsVdirsVdirsVdirsVdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-BoldItalic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d2e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>xmp.did:D27C825381226811994CEF6A767452B2</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:8478D0C191206811AA2497B09AF50ED3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:8478D0C191206811AA2497B09AF50ED3</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27C825381226811994CEF6A767452B2</stEvt:instanceID>
                  <stEvt:when>2009-11-02T12:32:39-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8478D0C191206811AA2497B09AF50ED3</stEvt:instanceID>
                  <stEvt:when>2009-11-03T13:29:31-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:D27C825381226811994CEF6A767452B2</stRef:instanceID>
            <stRef:documentID>xmp.did:D27C825381226811994CEF6A767452B2</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:D27C825381226811994CEF6A767452B2</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -178.657 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 178.657 li
372.765 178.657 li
372.765 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.4268 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
188.594 8.00098 mo
203.959 21.6592 li
true sop
/0 
<<
/Names [
(Cyan)
(Magenta)
(Yellow)
(Black)
]
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {

} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
0 0 0 1 devn
@
.3918 lw
189.855 28.9224 mo
203.959 41.4585 li
@
189.855 47.7212 mo
203.959 60.2583 li
@
189.855 66.5215 mo
203.959 79.0581 li
@
189.855 85.3208 mo
203.959 97.8579 li
@
189.855 104.121 mo
203.959 116.658 li
@
189.855 122.92 mo
203.959 135.457 li
@
189.855 141.72 mo
203.959 154.257 li
@
189.855 159.52 mo
203.959 172.056 li
@
203.959 7.51465 mo
203.959 175.191 li
@
199.529 178.438 mo
199.529 172.186 li
207.344 172.186 li
207.344 178.438 li
199.529 178.438 li
cp
false sop
0 0 0 0 cmyk
ef
.438 lw
199.529 178.438 mo
199.529 172.186 li
207.344 172.186 li
207.344 178.438 li
199.529 178.438 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
.195801 12.6074 mo
.195801 2.44727 li
189.688 2.44727 li
189.688 12.6074 li
.195801 12.6074 li
cp
false sop
0 0 0 0 cmyk
ef
.3918 lw
.195801 12.6074 mo
.195801 2.44727 li
189.688 2.44727 li
189.688 12.6074 li
.195801 12.6074 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 65 /A put
dup 72 /H put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 194 /logicalnot put
def
/FontBBox {-296 -413 1661 1205} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
25 dict dup begin
/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31
EFC3300D63209ED6> |-
/space <1C60D8A8C9B8707C25> |-
/parenleft <1C60D8A8C9B81F2C3A79D9A5F2CFACB06773B79553F6507B30FC
3F5E9FDA80B087F4EBE24EA1B43515421609E9EB5DF080CEAAF9C07A4701CA68
9F79F3104433D5F378259370DED64186AC6D938381C3150900425BF244CE> |-
/parenright <1C60D8A8C9B81F2C65934F3A129299DEFE777A7E6C47DBC491E
09281095FEDAD45425A667C8D19EBEDA6ECBA7304322A90A81E7D0833706DC7E
91B3F89F419F43B970701B26F1386940AA060FAEDF5FD6F7FEC2AD571E35C> |-
/comma <1C60D8A8C9B8707CCE417FEF9F0A913336B24C639271A9B7670779ED
2EE327029C6055A8E88066E2E6156B021BEFC61870D672ABD053D11681409BE6
FFD2A6CBBD8CD2C318D2F9E71C299036ADC4FE4516525483A4B3C13CD31A2A31
311A6BDD3B7B49D469B4107011EF> |-
/A <1C60D8A8C9B7D8BE1644A068CDE9BF59E715DD9027A2A9D2617913769CFE
6CEC62AD40A69B914AC4CFE5A74E3BDE16C9EFDEA63DBEFE05BB4FA0045D56FD
1E764F616556232BBAC84C21222363CADCAC8F19970754590B38924193C29B22
CF3D67C6DBD0D09A290EB7825F4730E70CE5EF5C28968FD88D7B8E08CCBE5D8A
65CB6665386B1CE3420B02AFAB6AF944BC93140070EF> |-
/H <1C60D8A8C9B6079F1727473B9C695927901BB38A04022F80EA8C12ACE42B
70B3E64E84E980D0D82FD9FAB4A90A1804978222D50DD528A951DF07C4ED8DCA
ECF963285390426EA29A335E2F5D17D5383FA94B81478C1D3FF3B1D80BC0FEFC
516F1675182C64715DD1465D4833A578A8F6B4F7DD14285F7EDB5FAFAFF1B12D
0BC56AE8AE1D10FB0E2A355F97B4FC6E4B45DFCFED3D3A0C475AC917FA2146FF
20D9833DDF41168DCFCC2F46F0BB70D170FBFABB4D764C4C57D5920B83F814CA
A3965BBEE3579E7A3080061D9003413554FD58C708D5B130A892861F0BF2EFB0
72A6A8027C3ACF53B012937848A5627ED2D73DAD9D44> |-
/S <1C60D8A8C9B7A73DD237421AB836404A15790C77B1A081771CE7D27970F5
83B0B109DE03AB8598BC1651772E13E7B103E68ED9B882A8DF320DC58B26DF07
FB2D380FAD09BED879A92A7420885BA5DC494F1B44F03E30DEC66269C823EFAA
0701501BE5DFC37AA07191766F8AEF20C6D0CF3B240A9515EC4C4FB5C069B937
9056F7D739AEA35D2B6A3A31F1C0DD0A14D331981347FF1171B24062F3F5604A
D772165C22B5077BB3C2F01B6BDED3B400EB7E72BF4F17350ABECF36757FADD6
41AE88386A72FE368E65B1CBDA13952EDA9B9AC032EAF510F67F860A90E7F78C
4654E8C9F6BE119C83AC6D04CDE1> |-
/W <1C60D8A8C9B6B41C9DB92A62D63E3EA760A7D905A86D1789550FD74436B5
95BC321C9E3ABFC39DB1131DFE5CA38CBFDCD8FBC167B2A314B3E171BBEDE9C6
CFA34481E2FD990F29B87EF6338A2164AE5C9D3011870CF5C464CC4A97141CD8
E49A26BB1E4EB7F165C9A739C28C9DA79E42965FBFABE57A82D82ED188CAD364
45CF43A67C5DD5168703E6CE895132E4D08D372C25E636668C538FA92871F2D7
C458CADCCEAD6079D309FDDB6B8A039A7EBDEA6B96E28F959826A293138B4F8C
7090248AC4299782C27415E8E8D21F0C> |-
/a <1C60D8A8C9B7A73DB6B88E0E8F18436A1F09B15968F061B1DDAEA063D5C4
77A798AC6CCDE7B463CEDE9DF10C85BF943B1A23D3A955ECB71BCB056FB9145F
938F3DC645B315F646528EB3B53DD647687CCAEEE4F42707FCD1F2C3675EA58B
243E03636F03F49CA1B8745B188F869696A9EBF8EE67DE9F54B2262AFB12ECFE
1B5AFC17FF258A2E69BF5FDBED1B3699875019E7BFDF5BACBDFFF080973A7F05
9B475B810D35DF16A240D17D43785DACF46760EB7C69CB24393FA52B17A18DAC
3BB84FCEE1276951F7D05FC09AF0FFF01CC340EF8E3D1B60A8413593334DB81E
DDB8E689D59958B942D922AA6D47B5EA98AF3FD94329F39900DC6C7A3E34CC1B
EDC577F37F7177CEB364983D36A3C88B53058AE816834C770ECA0A9F48A7FAA0
38CBEBBEE56B6C67BCB16529CEF4CFB3FD5C9A0E29> |-
/c <1C60D8A8C9B77FE2CED306AAE853DF6763ABBC1F195078D45F35AC812BA1
76B02CD229DD186FFB355299AFEDCDA3C3E7A2BBB8C0138FFC2F675F24D8A1A2
064E210ACB5567CC4FF99B2DB190FFC6CD745653327D6267B9720C3E2FAD72FF
086DC8533109E5D3541C360CBF9F8DE6E15D008E77916480B96C5C762C587981
712A1AA76B3128B5597081D3A484E43F2332F97E00EB8CA70E92480D1BBD05BF
5279454393B0CF9B35A14103B3932D2CBA> |-
/e <1C60D8A8C9B77FE2937C57D511D7B2D85185E1E61A4651B494CF7984DAD5
47D0B44C659E0993602A01A0508DD4246E85558E4C72973FC23C60AC4035E6E9
D0E422570DD5D38DF226B21995C7BA61F8EB00A50CA6D70806ABFD5AD7ABBFDB
00B34E6EACD0CED09AB1732A7C4141621EA5AC5DA00EFABAA2E93A825555212D
DCFFA292FEA081906B69270F2F05CDFC3ACE97B091CB5EEF0831DFCA492B9DD5
B67AA24B4E41578EC78B32C9D391999DC5E0E0310611AD025B836A14191D7D8F
5A10> |-
/i <1C60D8A8C9B854D0F4594DE2CB230C00D72A8CCCE2ED8277F493FC10530B
A725C23B7C5D26CC1DD529FAE26E52F10603EC22FA434A5EF589284E8D896B14
DE3C8E9013A43C0BFBD48FDBD41845BD7C76773CBE6AD8D328F71F5EB664393E
92995FCC5BC5635E470649C6BA303A1FC97AF04ACCD05A0991A8BEF1CC5D25BC
2BAAD39CE1C6888E27BDA0C5DAD2B2DEF6529C8F477FC2CD60CCFB7D1E5F121F
78DD2D61A9BDDDD66832C06CF970B6465E11B9DBFFCA3559D4996DEEC891508D
B90A89509F3CB209B732203D177FEE5740FB955889645019ADCD680F1EA155C0
6327806A2C9546A05C56> |-
/l <1C60D8A8C9B854D0C3437F4F75DAA30F079F9030DD04473DAF4EDB98D6AE
7D76B255812E711AD6FEB0F1D3EAB33054CD89502F62B172DF2B972086F82916
544C8ABC3E938B6A6F34309A4E5501DFE51E47D9902C8B32B667C046A6123FEC
CF9B74909C58F1BA4B097C7FEDCC0EC75868836CAA9EA97D1DBF2806EF8E2E50
0800140B3953BEF57EF4B7653ABD426AA2C6EC78D9495ABFB6569F8A0F8A6F58
0F4A7D63CA> |-
/m <1C60D8A8C9B6079F6D82087FA6EC15EBDE59F4C7B6378B0EC8811598F387
E8E402950E63BD587D4AA109FFFCD4A67070DB9D17B683BCE0B16B7E44F48C0A
200009F6EB97117D8BC4EC18BDF2479479081AC90BEBECC81742B2CF84FED01A
03C859A8DDA16327F30735B2CC23292C6C7B10A15CD2F73AACFDB57463B4704F
08D5B15E454703AE05065F292CBF58B582E47CB73DE0A32DEF8E0A03CEB97D51
653C4A7F65E54CFF517E4E594FBFD53351D186350B359E9BA0EC796256EE0A78
5FBF9D8C1191897B4766E605B7E613D7AE98EB88180974AFBC3471B304F94438
DFED4FC757D962136EACFC46D9DFFFF9D58100C854BEB4BAC3A284D2A476C1CA
832F178360E1056AF1D9FBBA3D28ABABAAB021E5D50D394D81371ACC7C74892B
060C5302FFAB1B618E6EDBD4DA5A9E580F3F9B1F39AAFC3B0239538DDF482B27
23111A87E5EDE6F88A6580E7FC7E3FABFFDFC79CB9F93FF08BFFDAC111C57148
6BBAB223C170F621> |-
/n <1C60D8A8C9B7A73DA6C5ED73E6A15E7B613EC1ACF8D9135E0211B96A9DD5
07603FA1725674D928ECB39B1B734A2103835DAA300CD2AE69F0A57AA74C8891
165503B63C735609D200F32C64F9DB97B53C0A75B2C2B76CC0D1A70E9B998FB0
3121D94212C4DC5CEF0B7DFDE932A9568BF9C90798E4AE5AAF1A04DAE2CF71D3
9BF8C15DDAF880ADED487E262CF0998CB7E225B780626D38B95E0DC58875003D
93440042561035CBE30D8426DA5C5AD79C8032A01995500F84BF5B77993A78EB
E2890DD75AD6F3D3E8D10360A4FEBBBE7CF62C8BBEA1107BE06B13433A219E2A
C1FEBDB9A74462879C309EA91970ACE271FF1F2C4A52A6405F895975FF075BD2
25D17B28F2C0563F5C1BD4C83DE4AC43724BC0AA9A33EE705FFBA2> |-
/o <1C60D8A8C9B7A73DB927A82707463565634BAD3AA45515B3CF87E47D4AB3
4C23DB9D832B50F7DA5B299F7F24FAE2465161E80D0D884EB708407D7090860C
C020BD213D4F18FCDE46EE0D6BD313E8F69BE781CF2EDA84BAB84E51C3339404
A327E48B013592D79A04668DE27B20D96A41137394FA584518AA9BE018055EC4
276ECB3C55AF> |-
/p <1C60D8A8C9B7A73D721E25585CEB09BF3435C60CFAA6A76C07A0CB9C1B5A
612F0588269D03BABFDCCB9B596FCF95DD295D18EFA902E697C48D1F10378EC2
E5B7F95777AEEB72BDF341905D664BD00C475931308F38A339C941A7DD8C1FD4
70B1267714D2EA3ACD551E103D19D7234AAD82B143D333C43282F4255D3487F1
E943E4E6355734B5BF0334CB5071D427CE473D3EC52A30212D6E3849FD5706E0
3A12551A5934BD7ABEE25F652985C0849F4DE77D98B1F5773E7DE04B35CC1C25
93F3086F6674E0FB25C034258ADC4ADE409D03DFFFF104757423A026F08F3B68
B323A2A9BFC581A802260030999DE6B7666CF0982ED3AE303C338852F314A807
E55CBAC1DE54AA9E47954F72DC> |-
/r <1C60D8A8C9B7361F02D124CF813383046F2E8E102865649E6346E4AE00EB
DF515A44A89A952E4A085F5634D3864EE4305B5BF07B55A1EC09E637E7C6830A
233BE67AAA815B678D0618ADF7BD82493E4D59F1DACCF465098FD3F8BD765B58
5BD1D189A5879A6D0BD585C0269FF295E67AEA1F4AB3642251674DA678FE7C86
B5D0D3081506FDE935D99DD3ADBB2CD2B97FA0322E9B7CEEFBB873657461EE46
4C5A1554D8159FFAB5C6676C33746E9EBE4DCF40F31CC622EB1934B2A10A990B
6694C7BEAEAE21B9834F16488EEFAE51397E84ECDE> |-
/s <1C60D8A8C9B7361F6FE833EBC5233F08984389D77FB6B8A83F76643BC2F6
33983CDC51718BBB8C354566EC82EB0333F6910C1E2FF8386A90ED6FAD546E54
E6130794D6A3B06BE8AADA3099432325C0A84895D7A1797A5E133A09FBD72E34
0C7AD5EC3779F91D42CAC7DECA404663BDF32122BDEC1F78EEF4947AE6135A38
C1EDD44771BEF7191ACFC7ED05840C4673550E76EBFB9560CBC793DF675B9B90
9F7CC3B4E758C0E1E98A0611191EECC2B214E4FC7284093D88D157CC9BBBE2B4
0DA416E572C088B7AAFF58A9D9152D1BE1794E0BD308E3FD5558953D1414B9E6
8B20AB8EB0> |-
/t <1C60D8A8C9B854D0B361E19027CEEF8FD2D54396C85DA9E4D75EBDBD81F1
AC8D8D89CCB529371905FB88E8C672DA56CE6373C5F306F6D800C6421BB3535C
1CE57B1054E3952FAF7BB933B92222380068B94C8250FB2A82AD2B50FD6BCE69
676A831CBBDA1AD9AF95D0F1273C57F4D28940817AB24D70E2917B660D827A32
7D57C68FF29FBDAD6D47C886C83040C9E0139F754E6CDC6055994C4C5FB073D2
E9DCCD2C2CC51F29C870D78E88085143EF> |-
/x <1C60D8A8C9B77FE256F7B18763C7A7C72DCD5BB6BE677861AB8491129EA0
A9B90BAC2782286AB292F39893D623822F9BFDA394DF3288BB1E2C0731DE2274
E95585890989774C288E45C07FAC336E7CAED1CF76F8C4ABA933B07C9D08F35A
51DA19FB8D6A90A415AED1907569EA206F80BA2A34EC4259B21B20E0F44A082A
AE50A4358E22A49D905B014FA8511F7144EBF05944BAA07BFC30501EAB38D5ED
B15555BD53D7F7D15B60F6D8E1115CE9E90FFCCB77EDADFCB246798D96234174
27C1C1AA7C7FCE4DA7F97CADDED9E1AED0FE4273BE451700930E9D67E7A87B59
4ECDADEE331A2C9D7072DA0B54A7A81F17AB92A2665CF5BDE5C2ABD133111C3C
7B9A6FFEB838F4BC847501F9120DD61D13EA3BA7FBF23E1073C8FAF240BD52FB
010B6779F0D879E48DC70EE8962F3E93A1107E76F5B80BE87C061FF2A440DF25
9EDFD6146A5ED6138BA9E5D266E03928CF037F57808893E155917B7F2856A3C9
5C54DD109031ADA866DDA5> |-
/y <1C60D8A8C9B77FE248EA82E833F65893A6F5440A80A9F7E10A78D653F58E
B4707508CA8B29F6585437E7EBA5E3EB28E9B310B3E77CD3AECC5A96D5FB29AD
2B9DCD42314DEC2E4597391CD800398EF141701D5A1FF8E46B275E008387755F
91D2E1B3641A3F2DEE811A7510BD85C4EC7DD1D80D8F84A93372EFD5DB75ED1E
5CEF2119C75C21F63989399147C0D172ADBCDB351A8422130E41F7B12945658A
67200CCE37E7882F576C196C0A5E7B3509752D61FEFFDB35B6E33E63BA0EDAD9
9992B53F2D8BD7F2B7CF04B6678875096EA654E3F917B9EE2900B8C0595C9E61
484A192C40909576CBCA0FC099AFF08F25C5452B4C646305185474B67CFA445A
EB39F2> |-
/z <1C60D8A8C9B7361F0D9FD58DACA2F6F46C9FF803BBFAB72D3F1BFBE4E6A9
FC166E1ED5DD937A8608F58152BF219C9335B7481AF2CC22A00E19819424FE62
3EF7557A296D9E5905E2C1FF5FA8D92AAC5B14949F167D731333438B11B2629F
E9B0C63C4AB82C29D2EBA02297ED7A60D191400B71186B8DFBF4EB3F8B1DADB5
34F73FEADE3FA4C409605185A651F04ECA6336A0E58D4965A9986BDF100A4B32
C192881BCEA8FF965A11B94755A331735106B90D8E33CCC3521B798FF00142C5
6FCA41856B130EFFD182F9> |-
/logicalnot <1C60D8A8C9B65648E3F7F132852FBA970DF81B1A81F41E95906
3BEBCBCBBA0> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFGYX+Times-Italic /Times-Italic findfont ct_VMDictPut
/WGFGYX+Times-Italic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A 6{/.notdef}rp /H 10{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t 3{/.notdef}rp /x /y /z 71{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYX+Times-Italic nf
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
1.70586 9.7373 mo
(\302American\(x\)    )sh
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Symbol def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-167 -299 1063 827} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE2
23F5D9796E7E2CD60A70D0> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFGYY+Symbol /Symbol findfont ct_VMDictPut
/WGFGYY+Symbol*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
WGFGYY+Symbol nf
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
43.5301 9.7373 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
45.0972 9.7373 mo
(\302Weapon\(y\)    )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
83.0925 9.7373 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
84.6595 9.7373 mo
(\302Sells\(x,y,z\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
120.742 9.7373 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
122.309 9.7373 mo
(\302Hostile\(z\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
155.961 9.7373 mo
( )sh
%ADOBeginSubsetFont: Times-BoldItalic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-BoldItalic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 67 /C put
dup 97 /a put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 120 /x put
def
/FontBBox {-319 -426 1612 1275} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/.notdef <1C60D8A8C9B6FF86FB9868E636EB1E4A833A4372C2AFE6669DD3E5
F073F429C5C69647> |-
/parenleft <1C60D8A8C9B81F2C3AEE83F55DCAD2989900D20F66881F47A676
29C2F5B5CFB550DD8BA24D5D67D5EE046532DFAF43C32BD83F5CD8DAB6103B47
4791FAA28287652C77F09E10A2A5704954DDB38E3EA2B2639DBC2A5DFFE2F6> |-
/parenright <1C60D8A8C9B81F2C3E0C95E1C0E886948FE8A8CC1E2DF53199F
79DA7DE7B5FE7FED9A8AAE948C79F6BA8DFAA2B0F6F9913197A9AF9674146134
80A17DDD5988EFD8E10E735488FFAA806CAEE7372FF11096CE5F8BD775C3E36B
20EC1DACB1A942E61A7A22C> |-
/C <1C60D8A8C9B64EDFFB45286F860C8034B524885C071B1624C841E689913E
5DAC29DD99B5AE877123DC5FFAEEA18526AFBB8365281872826994A2FDFC90EA
8F3C5C717DBA56D82A8ABD75AC6E9A610948ED64EF0223D3086A0C3979084E8F
89B94A3F20ED5F5A568DAC74B4477A3ECE7F516585FD223C64A292332386BE30
454F9B84232D7BD55CED28273F70E65063DCF828EB145EC0B4921DB1144A25A2
51D8F015DE02D7EF502114> |-
/a <1C60D8A8C9B7A73DB9C40DE8FC203A1184855007CFF7617A8850D7F00088
E5EA9111329A58AF04D4A11C6FFC9348E0546132E0B828659F742A17314F4DB3
36085207CB32029DE7203843667E458263D0E569A07540CCB63759DE4D6B5F47
7B206CCBA1D75A454276A87B2B30B15A3D6716DF916D8D904EF04135D2B1BC86
7FB894307F06AC574C6C7343AFE912CE7DA55A09A5A9C56C13E7B61DFC142A58
5EE22D466584F9141756A48B7D0526D8DB196295D5151723134C79205FBD6CAA
DC1C1F2B36C08B20A25B6BCCE932989CF00D0D00CD0936F4F4EF86DCA47477A5
6123DF704C6DA6EEE053F8F30505BBBDD4B3C33BD74C92B6ED20199DC5> |-
/i <1C60D8A8C9B854D0A68BEF2EE7673D9807AF9F503BCD39641387948BF3BB
BC30E3569BC32D6B4EC23EAEF02B5015233E637D52A7052606C7510F5AF5D81E
23201C4BF9BDCC744ED9B00EBB3D0058A0F38B62E4F3A40433F28B076C684C33
9540E4F5065773A31CC527DCAE962C9B9FD9176DFA16F23F6AF353A7D182055E
1D7A347855FFB9C53E7353CB22EAC42CD81D47F44654FA0ED3F688B7CBDF80A6
76BB798D2FFC8FA4BB3FA735D3B8490FD83FA14B0CCEBB89546EECA9691ABE7C
37E62DAD7903D32872FDD5A7E036640184C4C69A95E498B7169FA2> |-
/l <1C60D8A8C9B854D0A68BEF2EE27FE7F901AB0443ECD419CB4423804D9566
276387D9E8856054BB7E36047EAD38DFCF6A55F4F960DF5FDD6385A9C95130E7
5B60477EF3D749B9A78E3FACCEBBE539164D6A812CB7C17820F2192D199C9B12
9E95DCF80FBB77534D3AE6ADCEB3F59FB6453E24B69FE1E042F65D0D9C667B27
6CF175C67C540018674F8ABBB8160F49AD79C599C187AAE307992F34> |-
/m <1C60D8A8C9B6FF86F5F26458C50B8298BDF101C072B89D256198CA2230B3
839796F63695C5F96D9707FCF58570E349D587A87005553FA27C8147FB5DFF96
8D0564FB517810C0F9B7551176C409BD87F553E72A630B464AAD027FED2C657C
47C1741E026A4E7F66ADD2E06871A9CD0C131C382559E5EFF20396C179008D26
5B215BA46C4917D629350A460610F7724C4763137D78D95B0AB2B31F2D6072C4
D702ACF5531E08AD2AC4483F512599E65B090FD0F9D353D48EE73FBBAA0640C4
8D41D937D4EFE527636F31ADD8C4BCB7B51B6DA98F665FBD52226463B8BE42BF
AA8537759DE2DC6A50192D2DBA2346DE7836E51ABB05A105F0066491BEAC07DE
43787988B2EDC2EA029085296F7AD187CD53C99432633AB89375BA2A20F8685A
2C77A76BD9D0D1DF574AAF62B03E7708B495F172369E029F6F50DB66A646054E
C7CDF0678887035782A5D32A81A153753B51CAD983AE9002439EF42434A7A3AF
3722CFC464DBEDEF18BBB36BA5680DB0> |-
/n <1C60D8A8C9B7EF322B31F1DD9A06052D4F1E042F9856DA34F4FB95EBE7FD
9236D214CC260A2A1AFB6C5D63D70D08ADD7D8BE2814599E72450A0808EED770
3B10F3E2D6FB3FD0D6BFEFD8D07B06BA9DBF6F7C5F8C0017617008AC88F5632D
50930E555B03C215B35B3EA61465AA5D63B384369254037B15B91E319F22557A
0CFCE103E1867A50A6F9CE97E3E50B43DE70255CC654D7B0E98F5AFBE1A540F3
8484E993AD37AC117BCB35A4508B455F2346FD66190D78EF7080A6AB62DBF2B5
D642E4D591D1DBFF2E2E4CB42F8112A638F2281DC82E1478414BB6C649268E00
B29B042BA52663D049054CA13E97D7604AF517AEDC20EF46116CCEA7DFC947FE
3813A6> |-
/r <1C60D8A8C9B7361F02A7E8C7FC20DC466BE755B3B2176365881056F515C2
0A9E113687A377C6E010D882700E9761957FF47E38EBD093FDE0F8BE37160D48
528D55AF73DDE762D4526612FD710078EF508012B15215BDE38F04DF2C996299
879930A4D789824B0BED4AF576423BB3976BCDADEC46C05B8F628732A7170EC5
CD57BA6E2B2D8625ADDFAA480EAF617EACDF9EF1A38CBD7B32ABC48AD9ABDE29
9498EB02C0AE5B> |-
/x <1C60D8A8C9B7A73DB9886426AFE3C58480D7E06E055FFF672959B42918B5
64689E6FA24E16E7FF37FAD3B91FC24815DC5276E39ACFD3EE96EC2C1A160590
F855C2B09AF47E62527BB5CC54B4480005CD2C18625E86E3C5CB935DCB8AB592
841FB39875ADC6D64942E3E12F14E2B609CAB7BCD1EAC335A6978BD11ABDC19B
98D4C48B0323B8633B0F3AB9E6DA2DBAA77C698F6EFE50FFCE12F9AB0371A658
3E015D7275698EF293FAFA446A6DB0A58AA09835C764105D4AAB8E03F943A5B3
15B683DD7488E10986A43972530B97641ABB33CCDD192544ED82A17908444B47
2FC48C2988169ACB29F870BFFE55548514B714CFA39116FA1EE60EA7AE47B57E
61E202992F9D18941AF4908E47E69487C52682FF7CAD2234F502AE5909188FA5
35CBE82321C34D7AAB73C3AA5D93B14BD81EB3DFC85731E45139DDFE2EDA280A
634197ACE6E652C3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic /Times-BoldItalic findfont ct_VMDictPut
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 29{/.notdef}rp /a 7{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n 3{/.notdef}rp /r 5{/.notdef}rp 
/x 135{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
157.528 9.7373 mo
(Criminal\(x\))sh
199.529 12.6074 mo
199.529 2.44727 li
247.595 2.44727 li
247.595 12.6074 li
199.529 12.6074 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 12.6074 mo
199.529 2.44727 li
247.595 2.44727 li
247.595 12.6074 li
199.529 12.6074 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B59F85AB9CFDD219D8775DDEED816C79F78076AD36C942A216
DCD4CD92462AF9B6B1596766EB7D6EDB43157439F20AB95446865C4F4B433A0F
5AAC8EE2B4EE09F3EF5B1FFDAE4C47406FA30445F3B183ED11D702D384FB0949
D4BAF9BA3BBEF4C603D43DD610137F8AEC62BBBC26F7C209166D9642C77D4E5D
B48C618D10BFED511E190659BBA3B1F4ADF3748C645D3A29DC3179B67F7ABD2F
244ED4002C9F868A4FE34D21BB71CA68BEB14C86E86BAECF7591E45AF844F55C
18E4224C5D490F4DFBB529BBEE2B4F> |-
/e <1C60D8A8C9B77FE2CEC41D709C5F76BBA8B1350D77016E39055AD6161498
48FA9495A33F76CD53155F2762E044373106ADF8A107379AA3B6E619A1566E41
C80E2FBD40F50114FCAA7A22B02A3842EDC5636A7CF695B4EA2EB3BA157D4990
EC4F6E115D1B6A391B4BD6F91EC5FC59A59512A89F5360ACCF9BD906D704E7AC
4A954A71BC2F1B5490545B408EB8BA132C8D06E0FFDA79A308AEF523CEFC6191
FE1B053596F8290B8F9BD061D5615AB0ABB4B1B6> |-
/s <1C60D8A8C9B7361F6EBA612A7C3F66960496E3D2170F04089D5B3AC9CF30
BAB2A25B525DF6013F6C848E760C63B5C0EB1E59184CDA9C0B929B932BBB9103
7790550A1FDAAA99460ED3C4458393328FA932193346A8E992D7681B04F78CB6
A078DF9CAA6D6DAEEADC5394F5DDEEF75FF14426D82D54C48EAE4DD728C2B0C3
1367F70FC6ECFD11EF7E672276C0D7655A55152CB66B906D2FF9ABA1D2B577A4
A31E05CF35755EE4E1CF7882C4744D732A50439C6E2E1A00BCF8E22732F78204
195FE4AAE8E44A702F41A1C4033402C46E05745F5694B4E87E9961786B20F184
01635D2E0F8CF7> |-
/t <1C60D8A8C9B854D098C0509EE36264FB56895BA208125DBDDC7D5426C69D
E43D4888B08CF47FB9546E0EB5285E50F0C610005A72EAB444B6BE79AD25B067
E16D57BDCD36BE34CEFB488C49C36BA78765B3F8946F1A7C0DE588D9E03DDC35
3E8C1759BBEDA07EB3E2223B58FFE400A96098826D2ADB5723446D328249ED35
5115A77A3988E80C0454E2C5> |-
/logicalnot <1C60D8A8C9B7DDB6B7AA6282818C0DFFCCC91C1F7B415F2644B
19E8284BD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 87 /W put
dup 101 /e put
dup 115 /s put
dup 116 /t put
dup 194 /logicalnot put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 19{/.notdef}rp /W 9{/.notdef}rp 
/a 3{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n 3{/.notdef}rp /r /s /t 3{/.notdef}rp /x 73{/.notdef}rp 
/logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
201.637 9.48193 mo
(\302Criminal\(West\))sh
199.529 164.977 mo
199.529 154.818 li
267.183 154.818 li
267.183 164.977 li
199.529 164.977 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 164.977 mo
199.529 154.818 li
267.183 154.818 li
267.183 164.977 li
199.529 164.977 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CBE5951EEB8043375CDE70418ADBC5590B21D6882
D6904AD41164412B6E22B661B9000D2B44F98E702F2F52CE3FF76D3CACD0A538
4E1EFAC2FD9B39B1D3D3D8F6A3219A470294D8A788CA87D5> |-
/A <1C60D8A8C9B64EDFF490E5A57826C1DF55664325973BC27F18C2BC002BEB
62E470C2BBF729DAFA64AE7CFA0A70CB62CA800996031BE0D5E1D4BA4BEE7282
B659C39B45D2DCE05EAEC89C379A426256DF2CF80016F35173B501E75CB96678
FEBA0AE06C3192D40CAEDD75C4A558074222111703E4520F362E3C5BE6858683
8E5C1EA7462F3E91A408380AF9B706419F> |-
/E <1C60D8A8C9B64EDF73C636BA936EB2FE9E417FB4196C779493AC4F1C6E0D
776BA9905F3216454865159097F174C593F46BF40CA7B5F6546E61346DB6989A
D9174CCAC46573ED1784C6168082F49132CE914E9A3173AF5505B1403747EA73
F01DB1547C0CE50DB8AD9CFFCA9A59590AFEA1034208D868E55590C1049E8733
C50E1508952C00567701BAEC10F92622FC9DEF2D23412F8D33333D6E24ADC0F3
4CBA93EE1E491FA432DAF2F8DC3120DE4A277DB68375D3678AFCECAC85EF7644
8D77F95241E0B93D3A2BEA0B57861579A55A4B1F8C> |-
/N <1C60D8A8C9B6079FFA2D854CCBF013E62B21215CF46D27A151F42F32C6E1
404BAAB9E2F185279926C667684D3B3D43DC267009E6D0128B99C7E937B02FFD
B1947C1C9A9F4FC84C99B970311D5D44D8E08E870216817839E01336725EE2CF
173D4C2C780209AFD658DC011B0CAFE7626469F37FF0B06A62C2BE51352AAF53
74A34718ED1D64E9D4AB6ADBE962D384E5988D5E2C369C5A32F93D3EC2A5B896
9DDEC2E65D> |-
/c <1C60D8A8C9B77FE29D6C434D879C1A7AFF8752847A1ABFF84E9003DA7EF6
03B4E9C5E789B9C4112701466E65B8859DB84AAE518789ED65AB48E56CF47466
42D3FF05216A4B9D79A693C2FFA23DC03056A61A0F74055D08A0BCA768C587F6
E867D6FEB75122C5C3325ADD92DE1837270C0B598824827CDB1940BD0C6A20A1
CB27EE89A6F08EC1DA8F892A6DFDCA039BD0DC437E1C63E44AAD517994CD7F12
E2BD6C7014820337A4DEE7902A22D9B23D5EF458A04D379C8D6F1D9D7B82> |-
/o <1C60D8A8C9B7A73DB9EF59406E0AF05471DE207C66E76F65EA78D5F2CD14
2DFCC0EDAAF0AA8423A07D5972379ACB523A8095EAA026728C1B3AB97C81E2D9
AA53971ECBF2E9DE26051A0CF23605A4D2FB7067242A76C551C275766A0D1F9F
A63C611B485062943D3E12B15C0238D905C61C46D863A8B93B954BD14B3F66E8
4869489569741F> |-
/y <1C60D8A8C9B77FE2E7BD47EC1E9BA6F387348996881730513C994967FB45
4E369FA8E0F074C24F0671295B4E8F219C8B097EFC8CD30C529788DDE4D2FB43
D0A31A449BEB4F67AAC63FE23788FDE511FAA0BADFA8ED3D8961249AD7C47018
C12D4F7E1EC18B213F34EA8CDAB71DA05DB368345F4391B3F544CFAAA3BA3D62
F76A8A82E74CF4762D33BD8809A46FF3273CD9F679888740704273B5D66252EC
0AD622D133AEA0B6029540A2F47AB9B9177F1BBD8BFCB8B9A3095C6C1B5246F2
F11DD47104A6A5C893E9B015F57D4067A8420091C37A2E0886131D3385CC3FEF
3C076C391CFAA82F406C21D0FE65408F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 44 /comma put
dup 65 /A put
dup 69 /E put
dup 78 /N put
dup 99 /c put
dup 111 /o put
dup 121 /y put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef 
/C /.notdef /E 8{/.notdef}rp /N 8{/.notdef}rp /W 9{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o 2{/.notdef}rp /r /s /t 
3{/.notdef}rp /x /y 72{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
200.985 161.851 mo
(\302Enemy\(Nono)sh
239.258 161.851 mo
(,)sh
241.703 161.851 mo
(America\))sh
125.169 164.977 mo
125.169 154.818 li
189.688 154.818 li
189.688 164.977 li
125.169 164.977 li
cp
false sop
0 0 0 0 cmyk
ef
125.169 164.977 mo
125.169 154.818 li
189.688 154.818 li
189.688 164.977 li
125.169 164.977 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
127.019 161.851 mo
(Enemy\(Nono)sh
161.494 161.851 mo
(,)sh
163.813 161.851 mo
(America\))sh
120.077 50.7007 mo
120.077 40.5405 li
189.688 40.5405 li
189.688 50.7007 li
120.077 50.7007 li
cp
false sop
0 0 0 0 cmyk
ef
120.077 50.7007 mo
120.077 40.5405 li
189.688 40.5405 li
189.688 50.7007 li
120.077 50.7007 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYX+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B6B41CCDE32A75CE3B36024E127F3F78F231FC763504E6CCC1
06228A4071C945CF14AF7BD520B683E9C409336F97A535201FE1D59309436F77
48B3FDC4AEAAF3CDCB6CBFB3360572A5F646CDF1333B0530B7E9423B231D4DF6
1D01E6EC11232B6C712E2FD24FB7AEBF1D0B58F0997B95625918007B64C7B25D
230AE2AFFD9AFE60AAD5EB5C4EB47C4A7E8C8215B28B05AA46FE4FD56A1CA43F
D9DD49981D0E150F4ADFDAF363E254B58AEBC51DD0CB7DA5A944261E4DB4AD67
BC97> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYX+Times-Italic /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/WGFGYX+Times-Italic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A 6{/.notdef}rp /H 4{/.notdef}rp /M 5{/.notdef}rp /S 3{/.notdef}rp 
/W 9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t 3{/.notdef}rp /x /y /z 71{/.notdef}rp 
/logicalnot 61{/.notdef}rp]
WGFGYX+Times-Italic nf
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
122.824 47.8296 mo
(\302Missile\(x\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
156.819 47.8296 mo
( )sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7A73D7479BFC26ECC5AA03DFBD791F583D775B357E320B055
E633BD3320F1A0DE8A3BC7A6D82BA5EFA61FF305BEDAFCBA7A08918FDEDE4AD8
2C8803C46A0F3ACC509B1C18FB5BF0A2FC0914BEA06C28E81B0DA8DAE6081241
6253EF2E1DC6BEB3EA06871475B54F4746803B154EC3493492811184FC3ABEC3
C9524FAC34489149248EE6FF3EA959482C4A4ABBE37A295922226E3E406BD15C
9A54D758F22C7327858864DEA0329BE3977CC0FB6109D703C2482CE7420A6310
2F928C9F92FD5334F5C1FFDA61E56BE75D7B8218989F27F9F43D6C00592551DB
2851BD5D484FDB26769E4BA81AA8B15D26027DD029EF511D5978CF78CEA269B0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef 
/C /.notdef /E 8{/.notdef}rp /N 8{/.notdef}rp /W 9{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t 3{/.notdef}rp /x /y 72{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
158.386 47.8296 mo
(Weapon\(x\))sh
199.529 50.7002 mo
199.529 40.5405 li
319.287 40.5405 li
319.287 50.7002 li
199.529 50.7002 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 50.7002 mo
199.529 40.5405 li
319.287 40.5405 li
319.287 50.7002 li
199.529 50.7002 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
202.273 47.8296 mo
(\302Weapon\(y\))sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
234.272 47.8296 mo
(   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
238.974 47.8296 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
240.541 47.8296 mo
(\302Sells\(West,y,z\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
286.025 47.8296 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
287.592 47.8296 mo
(\302Hostile\(z\))sh
153.769 69.7471 mo
153.769 59.5869 li
189.688 59.5869 li
189.688 69.7471 li
153.769 69.7471 li
cp
false sop
0 0 0 0 cmyk
ef
153.769 69.7471 mo
153.769 59.5869 li
189.688 59.5869 li
189.688 69.7471 li
153.769 69.7471 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F857D58CFA63AE86D5006BAACAF3894C56625163D978D57
3B4EEE4CEE6AE5CFCFEEF9F20A49656CD6D0F284C1A7E65FA15F25358A97556F
69E77376B4C753F37AA2051FD4D134D667D503FDB00158437FDEFE6A5AC0D77F
98225F71189DF6A5D3B4911838043850C6A2945D70E3C33D9A6FE4C235D26D2E
9399D0B2419B453B76253E2B2635FC7EA4CEBEE9234BF9374BC805888D364E95
05AC9ED3CD204BC852E07332E7915C0826168A2524553004FFEA0729B92E7CA9
7DBFBD9C0390F521> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef 
/C /.notdef /E 7{/.notdef}rp /M /N 8{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t 3{/.notdef}rp /x /y 72{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
156.449 65.8384 mo
(Missile\(M)sh
%ADOBeginSubsetFont: Times-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/FontBBox {-228 -407 1779 1295} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBBBA1CBC846D6875CB85192F5DD7C77104B04
E63A1804586BB1AD> |-
/one <1C60D8A8C9B7A73D8039861586FD1F78339D2A1E42D5288A252E9E06B8
53A3A4369D147CA269FEB7D75715AA4DB481137F174FE63311DB4F13DF9F0C10
61057D32460AC0FF8BA41A3B9A3B16EF6E1EDE2FB655C093BF2133> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFGZA+Times-Bold /Times-Bold findfont ct_VMDictPut
/WGFGZA+Times-Bold*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
WGFGZA+Times-Bold nf
WGFGZA+Times-Bold*1 [4.7012 0 0 -4.7012 0 0 ]msf
182.568 67.4055 mo
(1)sh
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
184.919 65.8384 mo
(\))sh
199.529 69.7466 mo
199.529 59.5864 li
318.112 59.5864 li
318.112 69.7466 li
199.529 69.7466 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 69.7466 mo
199.529 59.5864 li
318.112 59.5864 li
318.112 69.7466 li
199.529 69.7466 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
203.079 66.877 mo
(\302Missile\(y\))sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
232.293 66.877 mo
(   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
236.994 66.877 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
238.561 66.877 mo
(\302Sells\(West,y,z\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
284.046 66.877 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
285.613 66.877 mo
(\302Hostile\(z\))sh
52.6924 88.7935 mo
52.6924 78.6333 li
189.688 78.6333 li
189.688 88.7935 li
52.6924 88.7935 li
cp
false sop
0 0 0 0 cmyk
ef
52.6924 88.7935 mo
52.6924 78.6333 li
189.688 78.6333 li
189.688 88.7935 li
52.6924 88.7935 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYX+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B64EDF7489CE5269074BD1EA9DBB6CA8D11F664EE34D577DE7
5D2A0785FCB46D3D4FD01EB6722710406A4B432BD447DD457C1E2D829555F90A
12D2CD6E1E43428FAD4174FF35C9A9D84A9F6EAE1C4795EAF878C14CCC251166
95169D0641D56FA408845CB9DDA965268F4FAD3920BA15DF6AAC59CD0104D5B4
BB6B9621F71EBBFAA4F12C06721980154C6EAE80AE2F15D9EC9923BC2C2CAEC0
2F50505A8E4067C49A4239475697F0E54BD5F69594F8D9CF3003BD1E5C87244A
07> |-
/O <1C60D8A8C9B6079F62179D27AAC2A334144322720BC1D3040E77A7E89E55
5832CC7A2BF7646927BC58338F366B2C9C29A559A16B74865F953D85EF09BA6B
C84CE0AFE06F844CE4B03310D807EC7440CF74FCC0D265E2FE5F1A13C4806B56
911A0FF5DEF0512DFAB81A6EBE050CDAB82CC4078C2B1D4A1CFC7206F42528BD
4C21A2A7C96EFAD06B5B> |-
/w <1C60D8A8C9B64EDFFAB0865A2DAC7FE6E4C75B01D0A0D9B989BB217E5398
ABF336A838BE21848110157A1AD3740E0ECAFF96E272FB9DF387D0EA17059F22
282913FE19ECECA6068C516E160CD4A6C60648DE83EF52D186805E8A3AA9C2D2
C7CD62DA5E2BE93DE2A9086D5E82617301EBC29B2B9254AED7AD4A395D575487
3A0F8F45A58D879C49D9B692EDF2E4265589D5DF8BB8CBE963E56034ECCACDF5
A04B11EBD4B8D27BECAB3AD761FAB7477C85FE0D8F1221F8F43125130A101FE3
592DE8F482C50AFBCAC302D42E5972A69B94978A33C15BA4B701AE011DECC710
2AEB101E174592628325A28F35BA0FBCBE8F037C4C0DCBF46F9D99B94B0BC5C4
B020DD51746D8F3AE94C6D68B3CCE8F9AFFF5EA126AD528CD69A0565BDC7773D
A5F0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYX+Times-Italic /Encoding get
dup 78 /N put
dup 79 /O put
dup 119 /w put
pop
%ADOEndSubsetFont
/WGFGYX+Times-Italic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A 6{/.notdef}rp /H 4{/.notdef}rp /M /N /O 3{/.notdef}rp 
/S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t 2{/.notdef}rp /w /x 
/y /z 71{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYX+Times-Italic nf
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
53.4539 85.9243 mo
(\302Missile\(x\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
87.4489 85.9243 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
89.016 85.9243 mo
(\302Owns\(Nono)sh
123.198 85.9243 mo
(,)sh
125.392 85.9243 mo
(x\)    )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
136.529 85.9243 mo
( )sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7EF326C067A5C394ECCC0594369DDB3ADF9FF3944B41F84DD
1EC5C2739E93582B271B7AE6B3F067E6CFA1E7DBA80A5B3FEFA826B7ED8D2AB4
99B42CCE4EE736A555B9BF75AF9D48933B91396F9E1826E251CEB9BB12C19EF5
87874DDCDEA93F2BB743BF30E1F12465F9D0F3E7C88B17DB0996241DDFCA8A87
A557D7709985D963625AF5539FBFF2FBE8CD48ED1FCBB10D92B3D67177C371D8
E0A55216A003A02BA0EE067EE34DDE28F8962B39837683BCBF956763C6C1D30D
C8BDC35544FA46BBDA27ED736A3543BD454D561CAC98A48F1DC031D2157DBD33
98A50DE016022EF445316069B7CAE17C1E4D64ABBCD4E69491897BDF49388F98
91F89E7AA26FFFB67C7BDD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef 
/C /.notdef /E 7{/.notdef}rp /M /N 4{/.notdef}rp /S 
3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t 3{/.notdef}rp /x /y 72{/.notdef}rp 
/logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
138.096 85.9243 mo
(Sells\(West)sh
164.911 85.9243 mo
(,)sh
167.105 85.9243 mo
(x)sh
170.239 85.9243 mo
(,)sh
172.558 85.9243 mo
(Nono\))sh
199.529 88.7935 mo
199.529 78.6333 li
289.514 78.6333 li
289.514 88.7935 li
199.529 88.7935 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 88.7935 mo
199.529 78.6333 li
289.514 78.6333 li
289.514 88.7935 li
199.529 88.7935 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B7361F4047416CED70A0115DEA127A88804A7817D07626C242
764DC1DC19E3D44A30744105D8C3D6AAF920723AB943E40073748A7B29DA85BB
0EC993121345D92BF61577BD0874F105E97E26B4537C73275FA6F18B65820B1D
70F9FA13F077B05C6E95D854B2BBF070416B944855A8DA7CEF766ED75522DF49
931A67CD42A812BABC4ACFEA5342CEFAA33861E9B9DB568543DB16F433E5C5A7
0043C8E6E1C601E427D61F33D7A77287E610E30F5308FF24CB52D564B77650> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef 
/C /.notdef /E 7{/.notdef}rp /M /N 4{/.notdef}rp /S 
3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t 3{/.notdef}rp /x /y /z 
71{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
203.311 85.1382 mo
(\302Sells\(West)sh
233.924 85.1382 mo
(,)sh
235.993 85.1382 mo
(M)sh
WGFGZA+Times-Bold*1 [4.7012 0 0 -4.7012 0 0 ]msf
241.566 86.7053 mo
(1)sh
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
243.917 85.1382 mo
(,)sh
245.986 85.1382 mo
(z\))
[2.43936 0 ]xsh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
250.512 85.1382 mo
(   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
255.213 85.1382 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
256.781 85.1382 mo
(\302Hostile\(z\))sh
199.529 31.6538 mo
199.529 21.4937 li
372.568 21.4937 li
372.568 31.6538 li
199.529 31.6538 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 31.6538 mo
199.529 21.4937 li
372.568 21.4937 li
372.568 31.6538 li
199.529 31.6538 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A /.notdef /C /.notdef /E 7{/.notdef}rp /M /N 
4{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t 3{/.notdef}rp /x 
/y /z 71{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
202.95 28.7832 mo
(\302American\(West\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
253.583 28.7832 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
255.15 28.7832 mo
(\302Weapon\(y\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
291.578 28.7832 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
293.145 28.7832 mo
(\302Sells\(West,y,z\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
338.63 28.7832 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
340.197 28.7832 mo
(\302Hostile\(z\))sh
142.016 31.6538 mo
142.016 21.4937 li
189.688 21.4937 li
189.688 31.6538 li
142.016 31.6538 li
cp
false sop
0 0 0 0 cmyk
ef
142.016 31.6538 mo
142.016 21.4937 li
189.688 21.4937 li
189.688 31.6538 li
142.016 31.6538 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
144.785 28.5283 mo
(American\(West\))sh
199.529 107.84 mo
199.529 97.6802 li
338.484 97.6802 li
338.484 107.84 li
199.529 107.84 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 107.84 mo
199.529 97.6802 li
338.484 97.6802 li
338.484 107.84 li
199.529 107.84 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
202.684 104.187 mo
(\302Missile\(M)sh
WGFGZA+Times-Bold*1 [4.7012 0 0 -4.7012 0 0 ]msf
232.603 105.754 mo
(1)sh
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
234.953 104.187 mo
(\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
241.742 104.187 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
243.309 104.187 mo
(\302Owns\(Nono)sh
277.491 104.187 mo
(,)sh
279.308 104.187 mo
(M)sh
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Roman def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/FontBBox {-203 -428 1700 1271} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963
E3987D5E4E6C9FCD> |-
/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151B
DD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C
8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD5431
32801A49C4BA675F59C41D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFGZB+Times-Roman /Times-Roman findfont ct_VMDictPut
/WGFGZB+Times-Roman*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
WGFGZB+Times-Roman nf
WGFGZB+Times-Roman*1 [4.7012 0 0 -4.7012 0 0 ]msf
284.53 105.754 mo
(1)sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
286.881 104.187 mo
(\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
293.669 104.187 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
295.236 104.187 mo
(\302Hostile\(Nono\))sh
153.769 107.84 mo
153.769 97.6802 li
189.688 97.6802 li
189.688 107.84 li
153.769 107.84 li
cp
false sop
0 0 0 0 cmyk
ef
153.769 107.84 mo
153.769 97.6802 li
189.688 97.6802 li
189.688 107.84 li
153.769 107.84 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
156.45 103.93 mo
(Missile\(M)sh
WGFGZA+Times-Bold*1 [4.7012 0 0 -4.7012 0 0 ]msf
182.569 105.497 mo
(1)sh
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
184.92 103.93 mo
(\))sh
199.529 126.886 mo
199.529 116.727 li
300.092 116.727 li
300.092 126.886 li
199.529 126.886 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 126.886 mo
199.529 116.727 li
300.092 116.727 li
300.092 126.886 li
199.529 126.886 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6079F30AED09FC014D00A2D717C9C1F76EEB2B4C9CC0F91DC
DE0B70C0C63C2596E2C198FFFB9CDAA6C395E7CBD416B192007C6D1F1207A060
9ACE01445F6405D02969ED07F3328945C70E5456E8C376D8CC5A655455BD1C7D
6C391B2C726D16664E563F19D0EA17C54225C4ABD91D58FF3AD50306FE1AACBF
C0333B71FB3833871508DF9CFD6DD8F0126565DC25D3D3A631> |-
/w <1C60D8A8C9B64EDFF4E744C5021B9073FEDB6FB417B98F18B9FEF14E9A63
718F7ACF6477A03BB3EF001049BBD4EA8F4ABC7FD53D64B8E512F66449605CFF
F3A28DBEEB6A73A812DD1051D11FB213D1D07C9867D162BC117952D645AB9034
20067F51EF6733400B4D4FD922C78B6D9335580B2D4A8E0A9ADE362FFF76DB21
22A6ACB7FFF7BE94C31A6C9613A95AEEF019ABCAD0E32ED0EDEB4005B3878FF2
9E174BB2E705190A47261FAE2ADA4A550C42007E3BB0B317744F930D0F7E0455
3752C3737A4DF31757DE8503AF9889413656614100E230FD67939E4B195E507D
8804> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 79 /O put
dup 119 /w put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A /.notdef /C /.notdef /E 7{/.notdef}rp /M /N 
/O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t 2{/.notdef}rp 
/w /x /y /z 71{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
203.127 123.234 mo
(\302Owns\(Nono)sh
237.927 123.234 mo
(,)sh
240.121 123.234 mo
(M)sh
WGFGZA+Times-Bold*1 [4.7012 0 0 -4.7012 0 0 ]msf
245.695 124.801 mo
(1)sh
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
248.045 123.234 mo
(\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
254.834 123.234 mo
( )sh
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
256.401 123.234 mo
(\302Hostile\(Nono\))sh
143.583 126.886 mo
143.583 116.727 li
189.688 116.727 li
189.688 126.886 li
143.583 126.886 li
cp
false sop
0 0 0 0 cmyk
ef
143.583 126.886 mo
143.583 116.727 li
189.688 116.727 li
189.688 126.886 li
143.583 126.886 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
144.97 122.977 mo
(Owns\(Nono)sh
175.971 122.977 mo
(,)sh
178.29 122.977 mo
(M)sh
WGFGZA+Times-Bold*1 [4.7012 0 0 -4.7012 0 0 ]msf
183.864 124.544 mo
(1)sh
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
186.215 122.977 mo
(\))sh
101.271 145.931 mo
101.271 135.772 li
189.688 135.772 li
189.688 145.931 li
101.271 145.931 li
cp
false sop
0 0 0 0 cmyk
ef
101.271 145.931 mo
101.271 135.772 li
189.688 135.772 li
189.688 145.931 li
101.271 145.931 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYX+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7D8BE68557A90EFF3B2EEB1967464A6F405DAB3B344761797
BCF2BF80FB73AD768C64309AFF145BEE11ACE3B70D5983D56E4FB9F544C8EBC3
08D7D3EB9E7C5BA23A8B872CE97300F32FF97F211593B958C40C418DF177B73D
D2BFC1F17163C441D30E742FFA93788452E0C8AA86396DFE31226EB55378B585
BE58F18B4E5127C5FD1905A35F4A504DC7407E78D1AACCB4827EB4949AF70F2B
3907545821453E07052F44DF1B85E765DA32797B5F397CC3A017809F843ADAFA
4C335C48D8048D7CB1FA2A3468AD2080B3A7D94462702D8094C107F9A633D9A1
F55251B785> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYX+Times-Italic /Encoding get
dup 69 /E put
pop
%ADOEndSubsetFont
/WGFGYX+Times-Italic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A 3{/.notdef}rp /E 2{/.notdef}rp /H 4{/.notdef}rp /M /N 
/O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t 2{/.notdef}rp 
/w /x /y /z 71{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFGYX+Times-Italic nf
WGFGYX+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
103.94 143.06 mo
(\302Enemy\(x,America\)   )sh
WGFGYY+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
159.685 143.06 mo
( )sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGYZ+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6FF8670A606280F79EA6C3E1318B934F5B33E445203D03760
D5A3089FD611906740E83ABB0A6258FF052DDCA58FC985AD60D3735BDDAD3A01
1574EE4E514075EF6A4BF9389AF3883ECA17942BE35E009C450CFA67946DB4A6
FDFCE08861A8A216E4F3778892EA7ADA59DCA57FD9BB16FC526F4B2BD8B9C41A
BC86EB947B4694E04516F949327364F03F3EDA064C4D9DBD1507E614BED19646
89F2FB873E22FB3F03D1880B274C8375761B1DAA18ACB1C88ACD6AF3F91EE0F4
D28C5E7B70183683FB161210331861596C4008BB3A025E0622BB7F590988E26C
6CD998BED647C2D16E39772AEBC09AF60EC63C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGYZ+Times-BoldItalic /Encoding get
dup 72 /H put
pop
%ADOEndSubsetFont
/WGFGYZ+Times-BoldItalic*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp 
/A /.notdef /C /.notdef /E 2{/.notdef}rp /H 4{/.notdef}rp 
/M /N /O 3{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t 2{/.notdef}rp /w /x /y /z 71{/.notdef}rp /logicalnot 
61{/.notdef}rp]
WGFGYZ+Times-BoldItalic nf
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
161.252 143.06 mo
(Hostile\(x\))sh
199.529 145.931 mo
199.529 135.772 li
246.811 135.772 li
246.811 145.931 li
199.529 145.931 li
cp
false sop
0 0 0 0 cmyk
ef
199.529 145.931 mo
199.529 135.772 li
246.811 135.772 li
246.811 145.931 li
199.529 145.931 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFGYZ+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
202.816 142.805 mo
(\302Hostile\(Nono\))sh
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFGZB+Times-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/asciicircum <1C60D8A8C9B746F4AB4CF940247769B307492B173A7C33FDE9
ADF9FC16E0F579B550DE185844EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFGZB+Times-Roman /Encoding get
dup 94 /asciicircum put
pop
%ADOEndSubsetFont
/WGFGZB+Times-Roman*1 
[49{/.notdef}rp /one 44{/.notdef}rp /asciicircum 161{/.notdef}rp]
WGFGZB+Times-Roman nf
WGFGZB+Times-Roman*1 [-9 0 0 9 0 0 ]msf
121.594 3.854 mo
(^)sh
83.3438 4.104 mo
(^)sh
43.8438 4.104 mo
(^)sh
156.844 3.854 mo
(^)sh
254.094 23.104 mo
(^)sh
292.344 22.854 mo
(^)sh
339.344 23.104 mo
(^)sh
157.594 41.854 mo
(^)sh
239.344 41.604 mo
(^)sh
286.844 41.604 mo
(^)sh
237.094 60.604 mo
(^)sh
285.094 61.104 mo
(^)sh
89.3438 79.354 mo
(^)sh
136.094 79.604 mo
(^)sh
255.844 78.854 mo
(^)sh
242.844 98.1035 mo
(^)sh
294.594 97.8535 mo
(^)sh
255.344 117.354 mo
(^)sh
160.094 136.854 mo
(^)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Procedure [/0 ]]
] del_res
/WGFGYY+Symbol*1 uf
/WGFGYY+Symbol uf
/Symbol uf
/WGFGZB+Times-Roman*1 uf
/WGFGZB+Times-Roman uf
/Times-Roman uf
/WGFGZA+Times-Bold*1 uf
/WGFGZA+Times-Bold uf
/Times-Bold uf
/WGFGYX+Times-Italic*1 uf
/WGFGYX+Times-Italic uf
/Times-Italic uf
/WGFGYZ+Times-BoldItalic*1 uf
/WGFGYZ+Times-BoldItalic uf
/Times-BoldItalic uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Jon) ()
%%Title: (crime-resolution.eps)
%%CreationDate: 11/3/09 1:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!!kl#L(MYpT;MGR+.DKH2uSe3*LJ"cD.(]58uJ\bl#AF=:N.P0aFVGW<cF5Q.](^9$%8/PraoN]:DX6ge-cC</EAZ9J0PMoYRq
%?J`BliJYa+ro)Y!Frm29cRGB^k0?0fm(_EUjnA(URu??"UkT[KeMpb0$X[1(:UOODQc<O]+)g"#gqJ+/opa!kgUD+)*q(3.]`#bD
%(\cN?s1WmYipkR2!WM6ELVH(1&,?0GrpAOZmG#teo([2&CAIafn#l-JDAL#(O7t;'rj4TIr1!Ga?f0bs^APb9P%T9ghn?P3^O>YI
%k2H0m\T\jMJ3JAT`V[:EQ[aJanFtZrIlNLc&ib?\$h2cWf0A'iiLGB6n/l#ngqS>aqt4'WgR!D;(a$Mh&*eB:q_u"QhMkMWA+sIM
%=+C(=s6mOhIlMWg27qeecVf+(Oah?oK^h]Z^81AXrTu8I5MWr#pZD>.h;bR9om7_'S&a+kf5LY:FR7#^ikp'/5sG2>p>P]Cot+Gb
%lKHAZ5*%kUp\DG0*7G^WB]j*&9MaiZ-M_Iqs6WU+\,Z6@q4Fg.mU!SRI/DrJ?Xro']m9@sh>\AYiDUXCa5?!B^V%=rIIl&lGI2,o
%lEYkgH@1!bc\nLC^UV&X5pnBJR,=aV\(>PI\:$<_p[S5G:&bae%<!*\F1D5Fp<?h/Xag)qle>Lu55oaIXNtJ9F?:#r54j)+SNdX=
%qbD.T[bD0Q^.YZZ#PEVMa52=>p"7<ghVA'KpZ`9\qNL=F05p8bcJ>V]]ZE)RrC'riGPme9NZ#TYGPb!f4j`T]:U?ZZO+7!q?L[?C
%!s;n9hpHIuG!8`rNPTusOQ"a]lZ^t@SLq;As*FRgo.PQA7nDg_=,cdb'`-ZJID<>p1e.<Z,CLITI2\l.qVhZA/PhWuX\,;%8tf:^
%:odK#]Ki+&;k)XC9cma7FRR_ZGA9R]d<B>JF[`F8Y3=!./,J>lMV>^f6(bl9;$oJbiWXc0ie9K>,F7lBGiXkT.6WO6@m'XI^/HPN
%'7HcZ1agLH5,0"CGA9K$U@0pWXFr]/F/&-q(X7cM;bs\odPK.(^=0aZ-UDHAoM/O`GsA^2H-phNoATqiYWjsb=^tT'=XEns:Wgmm
%oJ1S-S%P:]N]f]:q4^nH5Pe,<aUZIpjYPREqFRf&Ib8(3'mZ,-8)NPaR[re0I@$'0KYCA8RNHsE>neiPFd;^M)hA)JEo7K%9ZAH\
%:9A'_YV%\P)*Nsa`[1)=T!;YN!ajH3Ad?PUg!S8(C\a4W8)L;2i&AnVejQ++n'm)(GP2n.)mgh?-Z9R_"qC`:J8I,`_%a]hcis,B
%em1`mX"Nk+Feb(/7kck>412r[V0@2k5*mo?\PT/2Zg>6(NV)^l^BB$6[EC@=T7L/nARV,VmL+1?mjJ+^dh@L%l#W2rb&\Y<6s*$,
%HEIIlMXf]>d]Ydt^#LdB.9t9d<s\B=r$btu\*.W,PcqF>EYcao.:9L*ht*an[3gC4L3GTTHM1#rR6Tg!M_F/[q,>#Q5(!96+S2LY
%IJK`;4b(V@ZS1;#[!2.Jp/V+3?h/9^0;PY5?bCX7rq6:Y9`9^DSp^CFqrMf[%p-s'cX#-M'E-_T6fD&EVQXWlE(YT6Bt<kd2TNM[
%]9c<cLG.k(I9rQ/5l^%,qH\Qukao1Yn]BHsnlZIn8UWceUVGC[oZ>f;]j(BX"Mp9=%E8r/I>0+V1kEcia*=5uGQfRF8PdZ%bLqe9
%8"WXco'R;I"JS[=b]<D)mA2b0.K(8:i>OjFT?T6Yq+1sQ*:KbMb1b!uXh2!s4kh:[3WJ,RRd9[HI;GBlHhrSbV`7kNrqoZdIU8W9
%]DL(GR3O%`SbOW%`i$jApL\LEfj(r\jGW2@T`rH53A8:!i=;'[J7Io$a(Jb\CX%,""koL5f^n=&/bXLt/H^e#D]+89VU#JH.bonG
%a7kF)KHJ!sQ0JLi#hOT(a7P"n:Q4>=H!if6T+id$aR:WsJ_DKJ$b"7-dT0BO["MaNoB:]&SQaFQF`#TT2m9rui.q:RYPBU^r+f+.
%X8eNaT;Nr!8M:&/mlmS(:H%e,nS1_S)bb["N9=":5%VikT)<QR`#[jD\RU52;[*LC0eYB/YWg=EP%e3n!%$WC_4B7@4r8[.GM'NL
%/C,6uB@;]sNTcDZ#9$em+o"..Bu8'XNK_7I('p0jL</P&7V!R[!d\#LP7.V"W!:bGA$KZI$D((VTpRjbB!1drHZU7Ee"6FiY[bQ'
%(!"'Og=(a'IR4s"T(M9(+lG=<Nt^=&EqNENS;qJ/F8=(G3BKC+>aTttDX_J)&)an%Ii+O9$c5hRTBD$n:O,:r7re0H.N!^e_NC\V
%3dT`D`3tN7O:-`@d$FkONqpH6,!EIP+-un%F/`(E]_g4MS;sl;lAJGg/\g<0?fnV?:S2%:o3c?c4jfZFB_VDm!jtbJp#<seRHWhS
%:CD'f*n&>b^."A&g]/\#h?'^+*ki>K2_ee,"3MJgTWEDaoHj8bqWN;6(kf@#(IcLnqLI-*9G=MFR#h'Ci*T;c'5c]1-NHr3R`qdW
%J-uWY2*S,Z^ZZ1Ig0QHjdC[6>\!T>K212sR$MsdZD8BSTY#V6FqWU:QMQ(IX:<'PikM*Jmf;ars/_>Ko2L,)?_/l,/:#&aRY>%SK
%WFGEhE.:uQ.h@o2X$"19_D=Ur:HH>)5paX0Un1U,E:$'51\YNtY/-^IaH#d34;maY2D*l+=ph-9"O@ifIBcoj4N4t<&i)4]P0$X)
%T&?qaT-\b$47FLjWm!T2oKU,iTA'<nCg#YZ(X,jlid(>$4!gN?fEZ%moXm3M%oLN'4\;?ndkbqre\c3)-RMTLajd>$2^])1pr$80
%53;OEp3gE1.4:SrHDc^,2;JCLJ#o:1a`dJU\0h1_R47UlF.r'OS_HadH+/an=7@TMi>8`[Qatj(5<[p"`Qh0V2;M\ZhRe%24;mU8
%B"HlcC8^^]V\*mV;[VPD4NG(-0-8m:n2`iWHsr1aC7;Ini:)U;X%f.LX2/-iG0.!B:ZOWJ/o(g2=cQ!()?dEPGnR1N@ClB5*Lg='
%_`b5rBsC<kCm8E]F6E:]rAO*<e.]G=\+r@&a=aXF1H!+m`B[pH\&tu9'bG.YnV";2Tl8QaZG2J]PGbN(dUW8"g]82Y0aCs-&Gd2Z
%6?`S@HCa6[B&'8eIihV8]&pbf3r_YF5/GXqT8NsP$'4g64O$(7M.\TY#1)J_KLMHtB4&B!8TAPAmHX4mOpg+jUAabSa8<n!j>6\(
%5PaI8h>>f:IliSenittq^:Sf?pZdP2g[e`(Is?&5dk/PY0;#qj]6uJ!H$fARc1q))lK7g%h>R<Fjd4RXn))r-rqYC+rQEs=YL)Y&
%nuqc*[5>GVhCc!MmbZa3J,'$Bp7I]'Z].(sc(3abo36\7m.+0u]j2\m[7B\]q`AM5\$W]P2QsXfZcbjQq^?;'QaVt+p/-S8?CJTp
%VXJ0HZci*op>trX5MWu`HoVCUH[C#of),%*]A#:=1lJiP2j@-Yq=jXXpUBTD?XLRA'mT];j`oeDqUNd(hiCc`_jMmI\!NF?O0=%^
%F8*S5mk3M2\UJfs\L3_!#(,1FX2fE;Dnj&7p>tC;Dssmerci%JfD"ak52<ht59&SEcaU)1+5WWAcSk1[oC:)Kmr(]tGHYoKpP8(D
%2t-5"%lCd;E..V5]YAkfPC33$O&q[Ws1GnWIc+Q<G2:tZhiA$/WUK9ta6%8pn\b7/e[H'Mn*Y,/IlICjQ+4NB^O&[2J,B*=k4\A6
%CrS8"2Z<1-jWia*X-[<eQa[M'K+WA[0mAL>Uegu*_?K`*m\`-5&6gtqoD`O>IK/G5G4`uPD]X2"9IVl;renBM]DVYG9N]\P]_V-k
%GgGDC64i#>8S<OfIX>i4j?H,_G<\:*IlgKfm./h]U0fOf58299dK]HB/Bo7?rl5aZs(IDk.#ks(7UIbG@GY?_Mn_lB^TQDj<Bb_#
%48&=7h<"47CrF6abo=Oo2n.6%qM#;C86RG<m./3kYC=!1oD[_JqYe#lLQAWVs8DNNH9?EFm?a=cPlKK^hnFO=E;PF^5E?=$;i98X
%Q`k9J.DP9]kMJjs)NrYMG,^!bKhLRU\,W'_4STp<4ob6#qqH%=IXV*ohm=ZF*@8X`G:nAOY0B0+gEiEY3<.:\07R=M[J])1TVT:Z
%h9XqQIpF[Dria!1B`:YRiR''6emWjh=,c?]^3F5JkJ"sZ5mk+$nc&B6r)#*8?@>%?iOb]u##"1+%>K8C]dA?.5L+ZJ`+K=IIs6*b
%s75UTmk;^$+#p7ho(AKmQg\jI'Y#)F^*@oH:J#Sn?Tm3DE.*2tHbLInT6TM/n+H8Jom#De3f;cHTASM?]06`h.AIdipA`p^qVh-1
%,Y*j_#O>83phl-"Z7PHgA%B>qoLPs#B7GA)T="($^4/@2qCcb.hnT0NX7%.VIeW3jj54dqnk_7(&*I<urI5>DpA=I=.:E/Kc25+s
%[hmY?YCHSgNaCLJ^UZLo&')Tc-[u'ce'DsIIsgiA*uF.-YC='rIseqOCQQ@jci;&YS(GF1p"/riYHHcQ1Yd:?g^T8+lg(fFZgS4t
%'qJ[GqsjTBq]UsU>+bBKEIS&ejo3!)Tj5Srk?klIs7XM)D]^(iXkVlsXEOh(PhQ0#GfSG6^oOYFaT?>:U^^)Vo^'i7s)`/sXe1'[
%q!^LhmoS+.V.)T00ZT_#m!N\hP0a+B`*uJ`p\&%TdfT?639AE`m5I6?%J\mL^!UR'2Z.S<+u>cMg;f!#P]hQUc&^J[Dn42<5JH'A
%hcPZ%f`'%i56(PIGTqXS'30]Gqq[l_s'aR?It-V+T8imNp5cQSBE%h^lSG>;&(o4gO8h+eq;:Ao,+\bo4IuN:r,;VYS\Ls*rc7^X
%*EMYulb/q"grfH10dMI2m)&RLTIoO3`\WBE08Hl8@jk*,o$s/?#d.]FcJ:p,Y1?"od:ES?8q_CK=3B(-W4B9%)=`Q($1%B*[hO6O
%s0q=#0]q:H@`n6=+8!!D/jf#H]Id(FdEB=8]84/l3;\CKiuG9905Bd?@-s[d;ZaCcnRl't^S0h+*:Fa)+(0#(gDFbi%a^Ml&]!q6
%mQs%N3]dE+E)CZ)Q)af"pDsS[0?+>F*^dUhWHA5r>T3e:77cVb;G/(`!5%%"J4$@mM0)UAkm@im.POjE"R&M0kM8R@dEBI+C&BU;
%bO2))F"ZQZQ>i6X$+_lH?R2'd&%7cRD8V&X4ps'AaM!>5b#,So>VtW4F>1KZUYhM-f=&CR*GfkTV^7^pQ8Q<93s&p2H"k;9k*AO#
%GmlEeokm'n95Slmk2u#W_Th4(jmA+1jKT_YP9H!22aQ'Jl#9*?Tr(KdFa]3^`A=5CqXK1./rfPDCK!RK9M5qANWU"NQ:@nuCIC7]
%_]J$2AOC6:?A/\\4N!X`cu5RC#XrI6%SRQ.)oU)jXbpgb!i+ZC/fng8#)j@YJ24?Hi+-]F`15+rCgKs1l.Di[5n%n1:Q_%s,D]iJ
%CpYeDPMO7n:3I]m52#mG`TQZMR2$P/q;..rk'nXd3h:<70e5$'jWX2,?F6eD[LGE(F,JrqaTEM01<c:_L.k+L:<7O/$e;AhcjWF6
%mFkr:b4eMj>rs*/=gi@$q8K7K@np0X"%s@g#cRn3,d0Ree0r\.,4i[90A>&7!Y/76"[A0ZGq&5PBb(S5gJ2"Rrkcif9q9$,S>)/t
%QXJ60`]WAr"_f=;cK3pN\"Zb?@YK%q.?:nui=P+H-Xn?rS&%\908#hjbW%GhNn_Mr?IVmnRO#=7N)(#Q/s5V.K.ZEAEYM`Z>r:>*
%fI)c-QOrj=AoFrHgmGc,h!F_M#:=HWEhn-?[DV0VX"]rd%Qp$$2js_k6Tnr$SgLhBBQBGcG:@s$/*uhf/[%0G62k=E>WgPk"ut3I
%<,]UrR^<g;7<LOefVg)uL_n<MJ=A<P@LQZ6n63/=&B-$t:U"JG9?N4%%E;Ea(8<TE6(]CY]#TIN[p!rp]Anc3V%/KFcmL*2Wj%R#
%UDsu-6YdkP'uSC@=?mJ$S`13JiX$)H]Q0>@ru,LOkdHD:HW,6*qS/%nhu*&.rdqBL6iqhRU9HE9M/gAQA"r*@hZ]"OE"J_HM=UV>
%W.:MI&U&Ej!)g^5l7*T6O5Z[.<u-ffYG.$EQ%3j0ltBmgM\8'1RuD)qSm]gr)9!;-.dVJqh]<ku;)R+]Eb];u83(TH>_df$=u'1C
%H.[^^EbloZ\H1I0qKV8;AL")Y0\OMgDgI"pmBXB1k."uuV\lY>eLh3riS"rY\Vn>:aM,.7:[Q?n%W43%'EqOBZ-/ea=ns,ns38E+
%`U^S67g*7I^QOW!Ya*A.$p(-(U9e"2Y$AL(jq#aB\(';H4e^_br7[D(dGC,t,Gkf+ZoN&^=b]jaH(NU9RO2]5c%'ZY36-bIYTd80
%f[/cWl1$Cl"AUm_Ap\"MN>Y]$fcsO-Hb\7;Nu"jqHu=iBe]bWWleL[/]*rtOF`5t2QM]Dtm39n0W]bp!]-t=Mm!B-=e>DSMhe&dq
%q`gq2XpE^E2*4_#;q_!>U@o@V$9E$l8--2M@<EQP&VbX#ERATjKfX@rVf[k-NbEm^cl^aPa,h#NZ4S*K\h9MGgTGaIfCY/b%YEpG
%%2*0`!:rh-3_b@&F3+[6SnBC?JimE4<H3hgig[U'qZ?G`6ib]O?hG8!&$57##3Se04GJHFD0kn&c2`*H8prGd=(VRc1YEhpe_]`g
%-da3>chaC+Hn[XsLPY[8Cg_?&Mj^%%[SKZb^VO]@o[6#?Ve\/kqlqVC279r?JjXrVRLHRU<@-.S\eQT!?"mik.ir?XK7Vgnp``Hl
%a:lOp1#Aeab?^:a>OElJ-8)eK]V<EWh9iWi]8,)MAD9BPh`@9\h<-=B__Q-(lr.R2/Vta=rL[Vc9fZA_0U^EQU=I5I=Qp`aMdm69
%b!Lne:r?3QZ6.CQV)!MlTT9!/>QD9j[c`sbciO9ELr-C2aTeOmVuASdDG%u^krtYG=2&gg(R)i*1;eOS\]\H+RIQS_TC0[[d6/iJ
%\b-NL[pW>KM32Nhi/i^gFa^+4_)RYKLhm/4'?c#PSNhgRHV==e[L@T1HQV?\UD"s"k]7A=obbKKjmuRc!KRIIHi_?3?!1_M$`ZWm
%ohS/I(2V@J5m;riZ4lq-Cf(#R`G8\;9aqg'c)1^NSTRbR4)R\$L"'(NdA'Kn\rU5&)X/3U[=o:X-DeO_CFR<VQRW8d$#A\RiG4pQ
%VXZUM01A7!-%_OQWB\55e3u*W=KbrEWbNPC93%/#^oFhqMDJbHOL[/J].eDddB/H_iB/K^iCG1=*6o`LO+N$IqU=)jc5!ERqZZbN
%FUb!t[>];1Gf%+Z[R7W7\#'MGg$Oi3?CR3@%=lbnh-9jVIG3H']q+%)aVK)4Lit_-^)Lg:+tUJJ_V^:EmtH"InRi.5mfe`\60<%N
%GnS(K$LT/)(9]rb<O/]#&d@U[=F3h4-Ls1OES0oBm2[:LhDUs<2-kHT=Ls28H\Ch?KahU(#DufD86\hXJVZU9nVAq<\1BTp:_\m9
%G4!-<nIsYi0KeEIXIRZLDR4Y]+I75_+qGVnTe!F\aA6WnhVR@G0\itU`S>!F8tU/Y-e[cnqKqP8?.)[*?<LqfHDjtm5[)4T8p[t;
%m\Z6L,P0nG*/HYoC_bV-*kX!,G?F'-gif#;5K1P7q#.@+fLh:.E1&\qMsbq6YsUf!Od;`u)pZ,_51eHWPZ[<UGqC1`aiY<eRMYkS
%6cY$Q8Q=$2Pba<Nn<1IaHo0V_17\W)4*GdE:)(*!_D5XDSYfEKA*[*(Oi(3(?S?I0L9flf3VIt5R[JaNRh$22*`3iX!?;mkF37'V
%4X<\!Z826M1lq-lR]HYA&M.'ZqPk4i_1YN=WSJ2^OBAo&:hBDhp9LgA=.Wr:@u6#-KH(^dXPEDQI/.H`A<T281S[]Dc$#<!T$C]t
%+R:X`mnN&Gfl%\k"3\5HFPBTJgI\%7<;soB4u%#DV$6dX.EEtIj+L*tcc,o$MA".KHk@1FL`e@^H*@H&k,2E3CB>;%XJ/sk&n`$8
%=GSabWEBd71Vp12]cH4O3G8ssg0D&1SI'IaeWD%8J4GVEA:_:*?\G9C2FRba;ps1[,01;[Y3$fC\1j-E(7oNO@@ofqfM(uao5L,L
%rY"Y%p?oremGN/o:Xb!JoXs#8`SE)crIi8jgr[5\bFS:>@iST+!V^U=\+t`U33_E9/fO+%g^\@RJ$pk(&6@KlT3X2EKLji4J%L;Q
%.o]<dGt%U9Nj-\gp=[YB8)!'1HXu^nM<to8Q>fXoE`F<,V=hQ-hpDJ=5PsbL5QBR.ci<B^N8HU#s3"IsO-90c<=]%K')ukK^>I2l
%DsFqbWCU^6%MThN(`2]#"RLp5a_ac3ha6[,alNJ:r;Y`ORt2ua2LR%M$O#*Q4rtCT94\oCR\%`o/e1Pg200B1r.`;XYFHZkeXtMm
%0A=\GUK>+80Roh*EM0*-LKoi%dPCNn0&=mD?oiiV]juAMQ$f0ZH6]KOg%.$]kKK'HZLsrQ&!iBKJqojKqC5#5>6ZtIN;$Cq:jS/q
%rdk"4j]&7U?CPj57ZL.2X#*-Y,q*@G"S"sE-0^#@TPE6F;H7*R;+KP;o%(Y!Jn$1JUG_;iemXKi:5jJ`luMIl*8=E]_NH*nV<SHa
%Cr-oJ(cI;\m58\6&qb?]$itHh14h"q>#fCc'pbPQ/^2[Lld6$nUp?A0H:3<IArOQ71!.'Z#e*V=m]c^P/C@j8^0lKOE?3("X,ED'
%F"X\*FTYQja9lHq,JZ9>oh(k&Ypd+0AolC7`ZTrZm0itF1uprEH"m5M?rs@+JSWPH-`mBT3`bIdTbRg9Hj_BrXfiI\b8;o%MA@A]
%%Z$hD7M!0KD(2tDW&aX,!^lY7OtB/i;/8E=T8SYo@MDr7d537*[u.BkKaKL8QOoQ%$jj"GN$195Hc"3i?ZfbQ[!oa$[TC4s%WUEZ
%K&r)TbV!CN;Sh\K*X30#*[I=n'\YD+%PC2WnNh8iV#Vf!ao_ja`+jW5'::Sd2F'b7'>8rm3WU*,&_i7.LcIXI38*9p0ii#Y-E_HC
%AKUPmW?guq3]7>?9ARdg<cJ<M)[qU>'LM6!GGXHT_,.TtH_=@E5uJ^C!_ZoYCUApGZTBfk-gR],^-IY>!T<C2(WWJ<CD,eC@.bSV
%-7^':r\M>5BHU%:;=:hKO']a"mJq?>6c[.NbWKHE6Q$n<\LNZLI3pgQ2^fN8+^g10*gMPG->4AQ:c.W53uDK3&gd:6!*q$7[aq"j
%`.!gVQDPm15iC]3dunj8Ctj7Pd\'[,T_iW+@am[_#*a_1mTUe2!n#KH@aZPA.\?&1-V@dgPD9@YC'0P#Hu<4EhFrGW8V:@4C=Ftk
%Un"3L?k4dj0\k$:c]Z?6id"1;iE34rW@-V%O(EKBH;FhBGAB8sLS9+]JsD-gH`rOF"$ooBVMlE.hZF]>A;_r^S2R<&;62c#PNAu%
%=B2UK2bb:mNlgpW2PJ0>-nD!T'W1_;#M"u4-Zh'@Z-1:r$1'2'7Ma*7`uD%`*M),=%?k!N_RlJ!5pmh'=@A)Jq';iMb6\msYViYJ
%(7KABJlAlc!6)"PZ=Z$p.L"snliCH<3Zt"45Slfqg/e%.GZh1@J_`Dl%%(c4/g19lHpcZJ]g_r92"<<nq/f8#]@(X\NN%T.PbMdm
%._0jM@f/n<(k;9f+Y&rEgl1OUWiKp5"[pV,A9iWG>FX$O*\6C($)0LmAH?>'o`uUuV)lF/?tl9i3/di);V`Y\2[OgMc%lpd4Ca,$
%GidhehiT629l'?T0GmmU\mD<'a1*l[\nJp3l=C*@d:4&Hf-U1"%q@WjL\;mL3[]<K@EZHW_]8%-q_>7YBbA3?Oq>LG#4l%JjD]:t
%[2K&NgJ,'#cHrPY^<b5UpN8M,1;dj,cG2:6!3k/^C;pf=b"[&2;lXN[Rr\lDkN2qWD%di&HCVKHj76J5N0Y6%D,RCt4@oLOU'afQ
%%$_+hM[[gk4S6O]k6MKo_55i_J65HELIJPk^euu]Lmh#gZ":(T9fF&H]*D0\e`^#H@1>a=Qo<^"XOe$N^1ggFXpe_*X57W-;#<RC
%]&&YtB2i#gJYbWp+VGHeLJe:;oXn'i:t@md]/GXGQEUj5T+a73K0ZZRO*ADcE-1'n6,D#tLh`/NX>^i//#%1e6"`U:c+8nfN-i[>
%+s?3AdaX++7W0bQ'9e1i1Vh9M`NJcUW0q8$%r4oE271u&ohAT1:Vb&/MB\/c38&9FaqLfFV')WN3Z.bqrAlYfb##-#8?&R)J5191
%_q8:rnIHo-dEX4O/EXR4-5!XZ^fX>:70hMQ52[1u,D0p.])j)[HA!km\5ENUm$td@<!R;"PZqf3'RN_caqZ,Hbsd<7,7%F&(.cf.
%p!0SYeJ!m15EJ[GPB:'^KtLZL>h((c`6qlrXHI<,r,eLCYll&$BnY!<+<$t3BO$]f7[,V&rD7*i!hCs&.QO.?Fc/$s3-;B@NN2D(
%Me>W<7&C/Li7p2X06'jW=>>#jjHC1/q44U10OT%P_$!XgAoU6b"`r,qgFS.%>;[os0f.hb(#ut@'o+Q(V_9P.*AW*Ncpl)]QO`6?
%.GEopD+eqH.r2<qS5p+;"*hPF#hbn]D%c<$%@DPrH&1M_0NORWUD\n&kW<=9j:O)mGt>:PURmWj1C,=>EJ./#W9._^EA@g(7*oq7
%(%R$0KGBFb^2.9LIPO9R/HVH3aD.#3M.CF`'0&_1(sNdK?8SID*j+c/jqod.ZeHpc[fO%7.O/dk7ELG[OAigd6F)N>K<e7eake`I
%)K$sMTGa1Saa(CPW,4DE.Ps]M5'p9[CTD;;%65H^K0ga4JoH+&WY'uH$U/(6<3E9/h'?rrE4:&8Che&EMRbuj9e\-N#f4`t3N8O[
%[L&nVB`'bs-S,'el;dFX0m,ji_]Fae6=E_E^&Z:(H_hauf;jpT"X_t/Q!dB?3>"Z7.aNfV*YdDS)9%P6JH\f+dP@b>:MC\gilmlq
%KI.";MQ3*sS<[BQ?D6N*cEId:hO%\]\J/nj^7,f\1Ji<emngSQGkV6Y2Z6)2`_`?(MtA"1FoYXcA1Aa"GfE'J.TpZA,4/mIN;s0]
%FNIbmKKRV%.QLYZeuSdA67^u*6f51UO%1nGC(_]Mmt7X[KBjs]0JbjWA%&eP@iIM#k`5;BkVfO,Epl/[HR+I<00o;r#"#?Dg.@OE
%4jND\-f2Q4Llu^3Bfi[g\AYCl@ReNX+]UNq$6;Cc-)OM17qYV%dr*]3d$cP,18eh2FW)Zu#[[bAX)X_eF2A']#uML6][mXFKqr1M
%*O,Mg@+>enY[jsO4X2XSoRZn$X>Dj$5]_6R+"l8(WM>&-C<Cs_FfI/#H+mB#L/t`ML(-SI@:EO8iAOXVF8U)l_G,?/RE`0!fMSit
%CsLDTJVTO$SR]%&F931#A3rooR5,&4l<R)f%&^G,Wn'We7*P+bdsO>jG\a<?L)S%J<J2h2O.!Rk_2)X^T3?OPF^#o*'g/$E?n><_
%f0_ctoerM\ju4'!OeTXo@c7L].0aU5F&9n[>bYTDMLl[WJd$sAd*'oCXho_P<NZ.T0c:HCk1g1F:Nal8Yq6&.lJ?<@(CJsUplG(%
%`9u$]%23Uno4q0M1n`G]nN(onMM-ll0R(#D>ip]$U=#^L4EW/\JTM>7i*)h_-Ch,_'0BcDRcBJf!Zf2b>i`OQ!JUk%>m<[[P/=*.
%j.ZEoe$Xgq*BGaX+<WaL(D7?a=Jq7/2nMOcf'.!/p_V`/"3?F,F[)7P",q]NPE_:\#)CHSGI[r7!J7g#jnW:5!'qf2#NaO^JjICX
%/^\-,hKiFk!#M>2pUL!U4jkbc>Whd=o\rWc0'3Q)7o'p,%rlLGQ-'m*_<Ef4k@n>u$=o>9*=V67JPYt$osF&pU3PLScSMoQp3[;j
%JMZshOMmX)G\lC74M')%AcnD$=\/eW_5c1k&as!c$LqC<H_+.i+$NBIe'MaMcn66lF1K>7^>#j*YTJQ1LD?TtSHL%#%8,1O7UqL3
%:O<7CNk?Q="Fogfd[\UV?C-a)b=1g6U#j_=(dZ,YC,.:33j`/1m8`'2PVct!Fn6mQ[]D1lW]lhQ1c:>E(<0t`!$0S.!#=2AL\;V%
%FDV//$2I85+E_'e_B?RX@K)FeU"TVG+JaW--KZnF%]E`&NAOLe4&B!\Ji,s3kq18l["=8DilJI$F/lHOZas2WX1AH\:&>dSC@4Vm
%8@d2ep2?,$IHSiG)!"5[%)>L[9J]0h!GV-[g[$68h3!no5_n\9*<_9i-gW#X&Z81:5m.HD:D4Yo!SeN669qPXEnd\Zc(PghCU_)<
%cKl$KWKqfQK'\=sH&<7SqbXOh?oYi_32-no1C+7aD)EI!e<jYSp0nmE8Re;7O$T)q2B^%LJ6dd@^4VC]EL!J;-sBW[H5/"aIa.uV
%r#6r0,an>2,ccUV0JnfZ8mB\XGduo#2:m4/9/sgHN*o7@TOBR6=!sn.Sen4or>bu@$T'G'ecmgsD3qo;<j>>b)8E"&=^Dm7I>C=[
%057;WD:p0cU5\a>VW#K!"W*@k_4o[@]Du:ZgW,*J:1itaQR+ZcNS^0!MA'rgd4<c$9lNuAXMGk5Rp1'R35Dg>XJ?,/Yr+^j^PE?9
%C1i^-P6^=Qe7)!]XOJ=+N1D;TZ7fT!#97PVg7#`8bspR(%cboG\\]Bn6Y.60.LbJ;)IY^5;^'6UP_s:;Ea5?eOi7]a6"FK2-k##+
%>d#nc3SR7K5baAi-BF?3B\P133"-4-NCkN$!Jfl1GYu<Se"WP?q'85fiC`^aG/t3sJ+I3lTS(5+mIC)gVDd2S$=[^"H)RD`g($%L
%K>u#.S)LQmC')rdP-O(%!j_s'S06j;1FDdJS84&[Qh>PbNc8<l'!4`3[#1h*$e%O/DIt"`#BYt`+hj_nb\m)RG6jE[=WK8L*345/
%,7`?:26cAhndNQ=R?eq\8\kc1VAU]`St]8<BnMo\8OBal*[*d]RS?)a8+.6A]"5*P30T5ei=Kr4irel9'O8j+c`EU5#KYbi6CEB9
%&nX6b:F-[IfP!7*J1MN?]uA/e5WtnK#7<NUk1[oo6!WQ+MMXNS%P'-eI(ku/Zo]X0M5i.&.W0A1cJT=N.+/--?m'L9H7!\Y5DWa:
%Cg+M\!3:f124\o(K1dD^K@*4tVlD"FW%+*g=thl*,c.gB-Mi7Q6!(]PEA+ME."]=q>*?3r+OeqH?Bc"]-QTacKrE0Ke"Yhg$j-q"
%,1tR`5Q.i$^!Dl05E+8&<32ePpl:O@['nV"dX`j7".?QLO=WjJHq(n-4Kk#%#)nV*1pcWRfS_[`CIe9WOp]*%9*/!G).Y".apnHM
%L<9u;koc@BVA5=*$AKYCN7eu2?3Qak?p`Mbd%Js@6M2=,[/EV6&-N8k5cmB;^l&XOD6$EJkl(m?ht^;p_iaYS,^2uV[Ri#D-5P]*
%b<X"7+mssWl3W7pPGWA-.FOZ;0RIXRc-JInV[fBbAu6dY-*Ut9lr\j_=^el8AjF?UI=:P7_;'Sc-7Am,)cm?F^]r(?X"=o87[O[#
%D/ri^:QX<Io2a6^_[K"->,O.s?*eX@:Z]*$jME?CTI1p^L*_Z?mVG=]#Vpaj:D=ck=u3C`Wsj!T3-KO31@CV^FD([q3!cCe\0"f\
%4t%8qmDT:R9AL>!"LSXjS?=*ENH!2?kg0>S(o1M@Y=S"'?]<ZWGtC80>WO8m]4l:dFQ"g0W;2[O\4GR1*^Qd&irj:u!2):372Jha
%302YFd>hVsYoW4MQ>9:3lJP+Np6%2<k'9[,Um_JHcuR-<=lnMhV4_<5Zhor*R0S7"C60"ajk\$4HGS+&g9P1^-/j(UpSqq:ae\WR
%"?Nn!>C00pI*Mg$SlQH^d)6b&cB-m\G*;K(A/CMuXDP=L/=!b-9_Eb2[E$uRoR2rD>1E3i?rTA0PGeWOkG0\/j0dL!'gL9Yl!/44
%U0T-"K3l-aY[_S;G\s[I0f@Iq;D7T,_%UsZOWScD39Y5mh_]`d2pdd8?d=7T$o[D_jT>hQ@Hb38cZ_G#H,O6:<fh-EeE3]UW'djY
%%Y.`sp+WhL>ZJXt`u1r1kuQ].B7r.JW?Z%<fAds!E3/SD'<(0+<&mQR(4VW]IkZ,)-)]O_:01QgLE8V=!o>d:-WI83@cg#j@hRV+
%8VQeCo]rD_;iNbX8U1L!n2m38lu4@q\2XbQ`!*/3U,B($U*+3<O%UO?%p[F!.;W--7Om2_Q:F&L69/1NT<:WHo@`J\kiu%k@&V.n
%jC:HIo=<r55hN/X8dFFRPF-*>S%WC=M-qgQ-A%"f%Sbh&Jh;s3rb-=V6BWPoOWlpA2Gq(bZ\2PW588e2U.:;c-jcHEaH`N[*PeO$
%b38u$@Y,(-LZF16L[MJp'i4oiXT_+A.u8ID?DUTQaOa.Tg;QcF%L4Ug;dj<9BE?G#;"!QC]fqWk\L0*Gnb?2nh>JTh6F[lVP'=#3
%+cb>+'fI5c[`PBN(1"['@6-gX/bKqsbFXhb3m[shWYG[OmjT<<>'7:f&@QTldRFIo0s.@O53DugHtYsRg43G-;i0.8$`HN@gq(k?
%W%_f'Xp.#&U_H<d61Vk<F.7d!".2^_6Vb/GA?k9s-G0qX'iJ&]]KM;($VdpUW*qQs-O#JLoD?cnWTk9j1HHFC@d$3;&P(<5cp=m@
%J`&t]F892726'XsgTgn%pnQiCc(M;[ibG#,KFlhI@u+:Tq1/RX=446&7hN)]Z>h3gWn&Lm(\=aU:<4(DP*[4H=bDEgVW]D'e5/:s
%/J$%5(#1r,/]S8Z[]7+Q@^jcUEQs`@@rKqL_ZFQS3n6-Ug%jJs-c$N8-2Biu%u[h,Jeik.MeAq<Bh,WX"`^V13Z."dLT[hS3!Nt.
%RS%E*6q]_D,omE;\Q[4f"H3=naJQ?XK:)B".(tCO;ASJECj5*d$9Xs(#c:g[1GCM:fROhqL_BR2+oqns+$bVpb1a4#;a"8/c!t?b
%rA^0-D=u]e'iue2AnoDaOs[N16<_g"/FA5.n:fgD%DeK9Ea?k*&[3JfEQ7B4?8X7\e-#O0];;_>.gg(CO(AfK5dQq-$$+C<e]%?a
%3QVDo8CuTo2a1lAe8RD;C4RDAR5]ZP:2$t_Nt0/J6DOi:$Sn,4S.Z5uY(n$YVN&N6-Huo_=MIClBQ2Q[o1U:B`!+&+6.1^q$R46F
%>M)Dr_QT7=!>Kb;jH'jlR2n*d[q*H24!g[IQ\IgOMW@6gW:s!a7Z>-'jp@QYH*K4<5_L3&Q)178,e\^a"k<jFp?_\r+0cP'Ef]3W
%X[W[67msTg*.haG9,]\X\e*-HN[[@@L*4NLUk?0RP=DU_7_)Q8d-VQU8k?I`<VY6fJ1Am]2du&4]+nu?[qls-mC::r\h.>N!pEH+
%I:eFQY1Kh9U#"#$s&mhs>Jc4sL1$Zchs+?%"r]Xk(?WDAa&s(c\7W]1k-c-Je;+Cho\U;6EqD5!O+95P*+4u+0'Tbdk7D8m88-<8
%3*>X3NjXDWpb7X4B>hHjjt1-;1p`hu;[o(&%U=cUn#^pb=#dBV9rG`ro=Xko@%F=G(>CUE=Yc+SJ^*QCVWc]e438BjUDq#5]84Ii
%"rJZY21H$OEP`FH92a+DFqG#^Us.M+33;&bUtE/Lin^:<:\-B:AVS6f#92ckS=)r71fOJcnW#.C<&c%</ssOK9=,6aFc/L7c&aQY
%5'S8_Ue#IlFha*f61nr!mEBUTEc>lmGY39+C%OrZdUORW$"iQA%`TSuWDph2X.fig3fo_+eZ;_<WjcK]S;MLp96+udelB"??p;Xd
%4U,(,Q&j4a"8HH%Ua-;/:\;_A]B\9B%RhhA6rF7iLgCcA[B/YF1CfdKAV;NQ;'q-Y:t,HEWnLFDbIiLOjVCk^NTSWf;"hN_8&e[s
%Sb.59NTQWA0NOtR=TU7-U&%I;/lS=eFDA"%&L[.Lk2lr<[[h\7A;7]!"[Q"jMpo-Uq^C^CP6`B92s4$q?dk^<`nI@FO(jKs$q;^e
%33/+-aQ:!mbrB!^0;8WV:321Hj4J@I%]-Gp95u$t528O0-O0g(UKSLVBi>5>#o#N'Gj#VK>,Vg!?62b7E?<)M:L6!#ERM1Q,9nQk
%!7OO"__,/9od?u1ki_/gV=nXd=3m6&#V?!=`^r@`)1Shb/F:(XNX*),][[']'ng=_"?TkBmB90E0MUG*27!AIa/)]rAuS)9m/Z&h
%X@mS70u#FP,(egAEPWOEBBTaq:ck63]IWMPUmk1H"R`o,3Om=1G%_j0N/Y&q$5HO=4'-Y1CIdp_cp1u>TV>F<EPl0R_p>jt+Qitb
%:etI1&-jVhk_</"!,(02Y2Z!%g8V5;P`gq$m%E737;F>.(G*\%<M!9[V00<3%JN-63H]jdFW\?N,f9Z'7I$]'BR?)b4`aHh5hmpK
%JD/%Z<hQ=f2D09;FhNmebKpTo7\8F^43<mami\:'O3)K&WooM+2)D']?1mJ;K\W*,I\"#2U1t?@gnc.])l;<m!>1YkK##g<',*nj
%6*lfSetF+&dHXA0Y15X``M/8q?3ZOJVE=#n/MPFAV;2c+dSaGD.`N`e9o<5V1m9?\PV<2VUsfiAKj>VNlA9ojim:_\-^"fG`<]UD
%i@J)'%8hf0JQp>t=sutldW?'_ND&`/7#e<Sb0=To".;G/;I\_+$GaYT_PIbM7\4TX:Dg4"*=1"i3jQ-s8:VsPh?E3]d<f2'pgY=T
%p3;jnSsrAGBFplt^dVVm@I&SVY)Jp;Y/.)DL9q_H9;p(RG]+tTOjVA6B$;:[-29/"%i:?rA;^a2GmU:lM"dB"#Zd3`c5H,P/H(KJ
%Xt[)*L`+rGk$_)d(m/gi0g$+@L4p5X#RlKh]`^tt9h>9HEgdK#JrCqV"J3em#iIn=$&d-MlM_>s93`+\KNsIcKpdFL.rD/TLDUY(
%)R[Ec`Tq4Zk),IUD:RgAk[<t;U$FQ$@$[TrItdCWR=^1kk>IUF_uLSkeMtX39X'1BOYdAi*XG-,jJeFi"e7WXKBQ$85#b->lO"s6
%9nDGdMjC&(AK"8@Za/.VP/NEWc*ZOG#NY\-;GR"WQ-H/r'*7G5CJ^Re%A<V3@:"%)XpMas'1N+Z>CjJ<.c.kg+B,6kJRBsIi4F`Q
%S/NAh_5:KQ`&Os[=]qpTVc:8GMgu^&he4"0kKjN5#:K;J>YO<T4`]T97>K%%n<tX;NhPbGJDSEGPZ/hmK3!8S)V'+p7`1:eMca2>
%5QV.RmN$:kDC^l)j#@\S1FQsVc[<Gg1S$:,I,_8@as,ssdj:C(.l5Hp1/RdR(=o\)N0^^KDs9<p$BZ'gaJaW@CYAdtq`:L*=ZlW1
%6+*N[N/Df^`9H]C3WZ?X05asFU33(!b_p$u73k"f8ibnVqkM"#Cmf!ZM.8kM_fRLE\=-a([O7?E;!sU&_9/7E1,HF:[;e4Yg.&>!
%k%RLUkQ",blH:XpnNo&D's`^qQA%@"ZXqt?SQrT3ITbK`%gu"=ja_>OX-=*<)bo%F#Q7/+[n#2E&jk8?;`3e^GYG!`q"+Ng9p#sX
%:^38:A,.Ycn+!Q3/5V`D6g-eJVTWW%@GhVXnch]Ci)H^cLMO:X/'jOB#Uf_+-(F%B%9ckuDEE2@?rV'd3-a93S!fLFBgK_X"tMAl
%>,27DQFooi5qSgo5@\BU:1o0;*Rg6jTc-uA`K:pF8P)ALIk<;C(JB'aP8WK`e0fFt'V0bTq`1ghN61,4HGRIdr'?]bb?hu.]Tpsf
%>_*2t#B"6*-S(3=i\7D-AI0eJc$$$i#EGa99GaR?*Kb1+VDe$Ko9'Zs):mbFQ-Tq1e[,5MZe,(#["lr6>==rig#m`=%W@@Y='?_:
%KsA6UoXR-;Hr:;bo8p]_"?/W"0c.EtDTLX`W4u))L$u\FbPf@g0IA8C'4=FJ&0a!DJWDd[BH*pDJd^XH(B8_&)XpS*<B"X-C3"?/
%14E!f_pM0uWasTA6L6_jhTX<bm3qD[jk>Z(odQ172COtZddN2Kj.I(mM=e&;%1__S^4*dL`A//"A5j$HA!u8M>KZ_U5Ci-=MLrA2
%Ec]lV`IIcE4lfV-\*CX1a:Qh!c>l>S]7+9ObudJU2O<I]"L;0`ol8AWiDLu<),F;/hPXSXh87WRBlnN8a=5'%7bYZeBW#7?(da^q
%rn_,7ouP[_Md3XMpPgAtT'@]bT2,=*b,\K,\\OtG.XIiQAFkg6R[BSR/D/`?^AU@hlqSApPMOQ*2!*ggLP4;kRCU7XbD'QsQ$IbC
%.[l6$8;i,36#BXH-?I#2@%P0MRY_uIED\%[8sQ)=)kc2'<=(C2&-9EELJT7cD<G5eBq]`lfUA!5ZF:Q_?E_"X-<7%27:3Jd)<u+k
%lf50=fqKM\?jB-pOElcZYb4e##5#.U`r-A(RI!i[ZbM0kX1d<khO;nf==@pFp@d_B2tJfB1Z/S,R@X`j=FaD7*N7bgP_16GersRn
%/]ZSD,ej%RW-Y)VTnI4onN&=,U^U/+C^>jo;^3t:^lu`Eg88Ct_k`/]!Ifk=D$f65od:2C@TsXWZX=l%rRR:aYm!4*@@)O]R*F17
%m`lftT%q<@rSEt-;p4atGgO\g0D.!f^e_rDj+8uncQP>^b77ntL))aW?ij0"faJ9F$E7agA>`TBOeQ:DlQp&-P&*AGGd\Ff<:sMg
%nX>^hB4V,8ocH!^Xg<iT,3VTAb8`G3r<.Lp6_WGm44Lo9pDY/nFgeoh?l_>`Ye+=*PC71Sp6Y8j[86N^)9V1j/Bhaf:$o3mhg?)[
%LOZiMnR=\\U9:JX<5L9Q'aboo%RT#oQ*!e$B6p*0OY0T!b<_UBUl:&X&SJQZWAS5/_-C#CWE^m8Si;;8qH0?"TsKOQ<LGT7c(K68
%Ilc'Gr4O-9gaD#C;VquYl;M[Xb"7^'Y/mZnER#qC4+p1rC9])e,:1WLH!Q#q1p+)_*GJhgU;._=1(%)6D5TIa/rK9KN3)j:VQqET
%RgLQhpuS`9ZTI&B[R:^?\"[`;HhGdFCeHSqq^[RNg_n\5J@AA/Z35&P"6n""Ak)tA;F)5?L2])H^&%,$`*$7[(l0tT=#&UR;QIaQ
%QYa?>K`L2*:jSR9\"QA8af=9En\/:G?@DT>G-JsZLU5f<,84qNpSB&'j6?>`\q(2Nfg)5(6%'`oB(hOIYtm&L&D%SK\4<eOe,AY^
%5`%-lS6KoFk*;\U"7b%sQT5S]VZfGRCS0;#cI+c87G(KL6NR6:TbP&IS_6S1f/B[ZM[SjV>j&/PO[hDmcsiu,WH4%$\?^ukR\ZH4
%9/@N'ZjWr^#[m>1f]DLm+1[,l'qS0rGpE6L_hjAc;a8cXUNWr<'$JhSF6f/cWoqqT?"fe1U;PD;#@#o-:%i2651]YaXH^7>:Y0],
%mC1i'R*LP<'"bXGAaXk-p\]0S)n>\:G.iDFO5\ZPaSU;K86g+A(L+>(onar>2+8.E^a&;@NuSbb4#n]ebp,]GY4+l&":OFhTTr7p
%LP-q.;VR/[,ZVNVQ9sB!9E'e]rR!4j=gB@G`d<b7e;:Du6[+4<fkj]CV<(<&-9P>_@c5eA7&!=beZ0eNO$8/p=-QG_P#kU,GTCAJ
%BHU\dQJJ%3@b&d#If^R'Z_S,slYX'V>.Tsl8M^VV&;LpkfMfom&;?8XKkaSJ:>^%j04bj!j`p%N(G`&;3JONLi"Rc?k)`0*luJ>F
%]PIel!]n3/(^:dX<&pZYU834c_BN7<N(5"'AJl6%fnuLBht/$9W,N44MP;+Dp_:X$AZ\b5iE_b_bM5%.?n3=ZQ)-(Hmh*Q'$1/;Y
%/lh=:0N)V7[?TS%K;Z.n]<SsRYXK>G(/H2?.!DX;m-><\kT5(sb-+5Y?EPm14TIW(>^)f)n*lJfq9C%:g2]!fVba6'A@JDj4VE7%
%)shU*4W^rMO++G#BrS<V.r<[cUrC[D?<t*@OYd<fXeZN)T'3(kVkbV:\2,9&69.u-aI2_nPUIUW-PsjhPV!VMO3;(9PQ(CCNLZ>)
%Ma!fE^O3l)*bV_2]?=4(9,'2N)S_*2:/bm36?0G'X7o0#Zn$)S\=.C/JHE*f@'cp7<FYI_k2!-67m!n5!FtKT2RpC=L>IZd/WtOp
%[88!TBX!CKHW,?-=nW[$l,DLK^%^OHHa33=jhCF"'7AUs<5fi>#0BrQX/]gQJ?kW,_TA=PaS!:ACA#fW?9oi%^=&I$.%sT\;ToE6
%,!sWkM4hC2=]?[j5XE4F/\k9.$E";J%CmL5`Z=-t&k0!)R;'[qF16t[N"kHh>1PL0m&#Of/T%s?3ri&*[n6lZ)aO=DRLOCrq;]p#
%m>cSrj`301P=1(H@J6"+J$o#0Ap4VAgC5\na\MmPm,TqgAj,K-8F5J:lt9U?o*(/:@&=_+-R!:=(/BuW(\Ydj>k)J<j7]_Kqr<bV
%"O=p<;o36MN,;#?e_)RC*mQr7d_!H4_^BV1atE;=6i3cPA=o5IKQk!Bq:LJ6,E2B8p7@(I'AMAn,+CdM2-cSgp7Ui9CcRb:%?7(q
%ZODV\rntD6(eCXUah2NFEpO>fI*aN(*LO.fCIX>gH4]=s9XZ3V]iLAf/u_UNX!N?gDGr]7A9Kp%9G7)MigWb&TZiTD2-JF4Y76/:
%WTUiAf>!f<X9J>H<BjRK"+$)1WA:[s>t@,1c'Lq8&pLSF=e6*+M.kWpq/=k]9>Q>CFG(tiK.R\#&LmaS[!B#PDsX<BOlDLmU@fO_
%r=qU^8lLij)'plH=6pP>\mJ@CGfjJ-7>U<)DF[iA/pPDOFYm@4K3!*EUQ](r(T`t3g')J9Xkp^YmjAKAnTbs@6;72@_(B)@U=+Dq
%aS7CpG8_#hC\/B"/F=!J1OSe?GmJCbXX@8b-.<:X`CWF8VoHmY8p\+Oj_,qBDRa%4_obXmDqiB]5@32bd0AgEMdj<>G_3FrPWDrN
%9QkV!FuO4nfafXXc4Y#\)Zr1T*"6Y=,^,#WLX:LV[9?#fO_g9MP+>(no8QaU,GLHrn8kh?C/dMrCD*_4ggVC$#B,`I&$*/RE4%pc
%_^DcS16)oG-\]ede0o$O[5W@qbj<VU:P.SkE4e.E"1GPe%\AO;eVSJ#ib3HY64n'8en.MA251U;DEHL3%i@Nb$Cb*?EFicb]+`gj
%(:eN7LkA*u*@0B.a3Ain,%TJJ/?^tG(BUj^'V=kn1g5F7i5E18r*EY#Fu70`M9O?]S^Bp>R*HS7;0!'l^t+h(.j%+D-nTC!fT-Iu
%Dr61\g!5uY#CeL)9`G7k1&Y$#fd3L)iEbi3ooj@q8og'j!p%#$ap`"@f&Efh#^]#-.`9t:MGbIT8*c8ZY1R;U1laJ?<GSQt8sFse
%hG-//L20c12f0@ECr^ntpoKV&X$?tQ_jWN20,#`FdDp$!:R;9$OP;=PDEbcdeXb^tec'4mT-A&]2/6f#[:%8,_"1InJ.&.[E*h"K
%1L]?Aemi\pWahW4MHIV8SM"sR,"uBW:h`)BO5WSZ%XGF(fd_FlX[!JiE(g;E['INsX8VSfp<=gT8L@Rs(@[t_(S+EC<j8u7;'4e%
%C33#s%>QIV@\=<88ht@M3?u"#mlX7rXq>AkiCI-&@+;bu(U1dm#<T?Q&QMnHiZOu("j3EAA_?-Vk/Sfg`gt,ik4?6Ed1#CLc1G[J
%knme#m;u9n;iP+dbgj-7rM&q#]h`%JiZIK.hbNk'm&=!1CAEmVg.iJ,qZO,*]DdF':W!iPM%=qeeh,PL751s0SN33'\VhQdml@UJ
%,ROjI258[?0nFtH8^=6>e'I"BV\Y0O>#B<dV-2bTEhZ$a!4tTuhW!n[5G`]u`0<q?Xjo6WO6s<K_/QqQ5TM:En_i\L8b90KZJ$Kb
%J#"KS6WZ=)\7UYZWV;"^]MmnL5(Y[G#!/IubL/AIS2GR:Th&(f$e3:T2u(>p9;*(mMPr*GR5+8p<'9'oKo\1%QZ^Pn7Iu.L9Zo,a
%E=SU!dBe?NO0^0T4MA(WGU7EV;p(c+3!HHoa/mdn-9;meTkbhUldGFe5IF<8Mi,=I#mWYaI=PPjo(=A@^fFd'A.bT63%MU-jIq==
%Xt<H[QG&ml-ea-'C@rOS>T(c^";?>TW3L5a[*)VBY)3kWZ$q3=UlYg-(W;7YfCbm/+iUti$.dna!Ul4$S)E+,*j'tfWs!A5aHZ;]
%hPO6OZ92C<7pI<dJk2"l_DQF_8?Z6E;S4#'\h23NK6F_EBA:3$&?Y?&nEsV1J;8":h(E>fJrB&;ga@@<'@ab>)0U8G0'<'i/WU<+
%nJ%+*8?Y?4TcWd&fF]i&'Ud??;S9+V6EEMCWYVE>TTWC(^lLJO3c;*o<JJ_gFX*DY5Ot[S\8)]GdH[&?$2@mc*KU-qHI_6u#tW-q
%3K>"'O>o`I$6fnIB[<phA<K%e[a84uaP3]G[8J\H0)3`BdLEVmrinsu[\9(DrLL>%c/,+:L]>k'pS'ZD`-mXMp;s$3Q,C!JKB/c+
%io-J#)_0YS$:[^f=p6d`%jd!^WUrfFi[j_I.N<R6nN3c^ZhTkKP_fQb-]jAO.\A%3&\X@NgjpN&$A?7VAsGS/GtcXJZdscdSaa[H
%-](jG<P0$\T4*?#fFF(=G/?L?"H;,rDSBC[oXh^E)Of\9?G^rr_aX*p%C8>5h@=&Lj'Wg<GI<KALl(S:cP%8.\*:L1ZB%Ts[)9[S
%GU&U6QB1HTg`>h\WJ\)'=)6J@eDb\qZpZE88-Rt1hIt\Hrs.UmOJY<rq:$08T9:ZU<1p&tZ]o.!%+Gj>3n0*R"Ortq$%ms/8u9]*
%N=-,NpLc1d^hO$5S</JnUor[$.oAWjk<Hig&=j2]\_llO?Lp7uL1\P9msMN#6:Z@J/=g"l(gW'0-&bV<%"eEq$;u#45s3/4^Y?$-
%E39tA(F3mYdp6/+P_+7.3<SP$ZA-5nlHcJtlD89dbSTo2gRdRJ[4Etfm>d1O<9C^UnQ=;-jYD<_JV2Ob9elqV$ot&%^YcB3P"V'5
%Th0K9<CnEk>oTT;biEdT]SPkpkn1QobkIV+mQVHR'_bgG7uA*S1/J^?Tbk&a+42JaSbsYULcVWAd_AC"Z0=E!M([aF[mh?P']2->
%S<L!45*r<j\>$uN8HWV$)E&?*B4'lLO/4i6NV4kk3+M\`CQbZNj?d[2E8b]bjZ-ltFs<tfB8Sn1"@=-E?:nBoP$b(fh)Ak8o<A!.
%p_uX63BTf15a=Y[H+oJSkS'ilCtCqS'f*Ba-)4CS^)G,1+'\l-^qj/CIs7]k`np)t*NkE.F_HJ$GU"e4NX84efj,Hs3A`eQ4r_+?
%RS5uh)(4*,'BX)R,Xma1!'r\cH;,r)BoW$MoWj"!-UZON:h3[rY(_rIa?:j`L'Sae(O&So9BlK$$6YOlYOO7;_,)=,0J"#o-b?BU
%Xgj<oYG_[Y7e\nbi/l,tH#L@WJ&2[4b/87d**Knd"@Xp_&6=qgQ<0Y.ec&&'+M6AF4EOLi77HmCQS!FB8`=_[KUD.PW@gq%i4G@e
%!3+)IMVX5=14QAtf@lgQ0)7>ISEZI[RR2%[NunX$WhE>rQFT=]j.bl@T2V"`280$Up8\BZ`RT%YBgIk1<6F)EV-Bt>MH%p;oeNM!
%j<BbFjR,*U),,O[eB<V&G[?&+dK+_.1kVkY>Z@noNn*]:>=;o[P81l1$`\bFHm6s,jQ*&@*%SVTKu#3?X^/JT37.ooW3REioYj0o
%<"uQIYOFS&9.3qY8C0Ppn2)T&8NNLgSB>Kc?u/.;H)b.M74#VTGD`^?+]]Hq'i2Mo!mFXrB`b5D=>IlgQ_rfqhIZrDmO,aI3F?tT
%=1.NJXTU.[AJVrqqXmHE`'9.G7cA^DISuWsdi1D5:;@\,/^F.qpljDAE]k;"-#0BYTFtn3HW2HYr[6M^\SGc<R04Q6-)I>WU0-i.
%lVEW#Of=4uBXs#cqJqpKU(eG*kO[0U&\)lP.,qgYcgoFtjc[`X<1h:<Ff6lAP,Ii`Do:oQh\rucRrh3;:W6Q.ANBu^_9b1r)+.:b
%.?V%RPW@DXNqr6@a;D4eos$PdhF?)gY*.k8GV3M8W#hRYR[<P\G5.u!<)g'25kfM[057fSbN\-JeV]jm>d9b"l"2G#^ms7\0.hl>
%A`=0k.`U"(.E-B12j'ocPD=5r)9M%Bb]`kRTF2HZD$SN!7Vm193_,SDbS<)?.&kmV,bOp7K9rYR*YoPDQO^[`"iXDZ>!Ol33=s'V
%KbJO>#0KL#.W4dk&VgZ`f(A!"\Qsg>KBO7rQ[*'O&CIqXeFs^0F$'%@hWXPs0"iCQM4;[ERDhmtQD6j>4;BDWRuHD7?-"62fT@cK
%jJjI,NcgS5MHmBIY`C1498n[A+//j3\Kh#KS]b[$1.s_fgVr2#97XFDbIgr^*PXTaHR`gKau?a&:5VXL:iEBOSICE9-ns5*rIJ5I
%'JNqXJX^ksGmBr\8PiY-h*eH1q*maVl#pi&@cfKj;1O$g0J<MJI*C>V)ldQbdXg5r`ikYOF^0(Xq#Z<Bh$)/jTf^77YIW8s"EA!r
%@NeA%<'"p0f%]=X-M`i5YDJ;U*'kj<irr,c$4*?SD9BEq`Muiu]@N:(fAe-V$V8fi`F><56ht:A-dK;8c'V\(*Rqr.j.iI'42%>3
%!0aA"]1[[^EO_[aPI.[(0e:@I/%/2?PIhKV2X]k3HEE7D8*O(cr-Q*aE`b/hiZL?BY?0]qYb<V?GB0AaF\k0]Za".up9et4n6scg
%H-T>O^`jduj_Qb^^&eZ_%/Z=q<ob_;)$*3Bg=UQTNb#KPH:b:s:KpXqBP\?I;-"#BHpmCb,cW*`_G<eZ=`3QqaY'2(]3FB_<<.M0
%P8VB!;0OJB`)DfS$^>rAWT5%:Hf<.F`NR>V\5tgh_P\`0;Bj7]G+B=>:n'LuobNdacAo]JLti\>UmFDLW>*0Cq&8sedOTX<1m$D.
%Vb+rG:nSg3.f1>`_5d3_mhZl%O]N'D>WG+e70P]B1)DUDlVQ0>M8sTe8RkPoL^eJ2dLGg%E6*%4FCi+gjEZmOnYR@c@gM,F3'T17
%O,WZTZi.s)s3893^V5#:rG_Z)h"r>2Je]j9Q0s@"ne:mB4#[j*EcX87Ta[pK,Tg`P%nGPURV3RoUJ@B\0:fc(;>t@FLgdRX<Qf6l
%U/I+g#n@G!-+4>1AT4K])E/\-0SF6'81Qa@3FEQ7P_1Rsk1WB8NcZ;;4?`%s+M^;G'OW)lO+B=Mq':0u0pGs=#6boQ/Fp57"pP1?
%F?C(,XrZAg'YD&(jnMHq<;8B1U9jN7;9;WU(bGTIJ_CEsVb[W7a;[S0cBDLS-iIX`*56lYc:0NBed`gh7UNWhH?F6U.>,$,\^=BJ
%QM'5V2Ip:Ona",Lqp9pP*adDk<7@8Od<-LqUH?_1=.kmWOfCkZP^uO%Z4VDtjT+o&TkHO?;\rhu?>u[$+mB0OgA-_g+Hq)li8,.]
%-o1"o=,sQmE);&dWu&f@KA!6?i':ZO<iLhkUTJXp8NJ0.+O^Zq&!k%#RsHgS"R%r-BB)(slhSg5!b7`7F.m!u:]NX4`^pGj_5oR:
%'V)*9UOYFeN*t`2@[Pqpb<Sgf@,O;sWl+4g9WZS3bmt$_Z[sNV?s^u@QH@Q.+#FZSSSFC<BjBlR;`'9G[0q^$dinNNJ1u$^aOauZ
%d.N'COj71<D'msu.+imRY'b:3D\'Ca"^"+5$7nL:[u8a'^HV2YG/sR_Bc;a0(0F0]!@SWI']0F/'gm%U]T-8N&^bg!'EuPf9`[".
%A0>6eM@OA6i4pEsc:OH,(ps-p]\bG(p)rFPa0R<u%oP4ZT\r.<jt\oK<E1ee\c>C0Fbu>i0#0(u2G2_iK7P`\/n-Ve<*unQo]g"p
%HMo9RE9*a'E"'<3PQJquh";"#jUtRD<3Zmc7pZA&:rYm,#2(T&nd'tJKUVbM)bc&=14#,<R)8"fjC3TI*(E)97k%-,%()i_<'rpe
%8k[@5OH65H=c-_Wh6gFEm;/'LVPFl\D.IEb#MZ$5]Q_SrkY3YQ4m4K_bA'Vf7aSNoS3)78c9O&<&6a+B#F>#k-3F@@:)4s+QDlVH
%ctC7J-:Gi2UkPD.RKp/g(Q_>O(sL^BU^/lBF`6qN@GY8;ltb2Bb"YkEX?*R2@h<#eWhSj).OqO@I2*JUq"0LFLGk]Sh)XNc%.^&q
%a7)1r^4hkDmKddiX&;G_)6ZiQ8r1,hlILO/0FDp+_C@n-"XTQN$DaV%h!fIj3-P?h+?ru9\^Gn%b[P&K!:j^1_RFR0[Xq0e$m)i`
%e("XmVR@uD\[%k`5#2F'D%.pPU!0uWZm>sgE:;d@!Y0ELhL25pL*M-k.Ypsf#eYqc;#8h%0IRB04p5`a>W`*K\Q399'`8s"-#6il
%jsJG0_DJDU!5dpW6PH^!a;NV4j3\40)f;TuOJLC#JGF!dKDCO3"XYdq";D"&]?[M*52U#Y;6Z(VYg40%>co>6I_#M<\h4[rbK;nl
%[L^_LF&KC6`$PVS]MjhKQF]E7ojDi7+OFmaRo">7-eBfoJTiNj350i5l.5Z.XFmD:PO@6@]I/20WlbbPfG)jtM]NQbjlSu,,9p&T
%i"J/-.]hjb[uM&jX8sOT>n8e`QFW_pn=%;"l#cg&<s=[Vn6CLGn;?aiM3QB2_!7p$p#9';2eAk9^&a-%f5]On!f*s1,/4-\HPIio
%md6.bYM=\)U1'-AWuWHQK`U9(R(TFXD&GuM3[d][DGb!MO=oZ.,iNMCOoi\XknH,N,9>..ACZW-?uW:qA6lCUCisY.Z+AJq"o[T6
%Co#-UJ@[/]cbSP7;Q<tZ,V>R$O@<9SJ45d/ZKPh:>VS!aZc&r\(dRAo#jsH-Vd@.SHI]I#Jlb@kY,.t;i00N0d]WocR[M4f?8.FJ
%m"jD#!j#*D9h5##+k>L:_,3XcPDe`034MCSFcgZIJ6ieXo&o'D;=-;C&I+h)+9YdSmlMtaHl2nd]66FU$5SG38,>[(&U;FqeCMJT
%SD5KPIbF_db*I6a2UN]C#2=^;)!IV"$Sb!YFYM/g+!Hd[d)#A\^0BnkLR?II1F!KZ$;#fV@l$)FXj?m$%5'^/2NfjsgBr-KO]K-^
%VQo>KWL[MR@)q?,e[FE+8&1<7^tK@C:V(D%E=Y=a)V$#Kd\R&FF4ZC%*97n%';L@EBK=c$]Q.^!=oms127LLN+A[amF"m!WKj\uf
%d472^P,fUFeV">SM(72im9K(lfa'oPA!E4\=L-r-<7<-k+W+M'.LMnG?PuGF%TOnWa]e/51s,E-$k/in)H8(ekOPop`_liB[K<#!
%J4qkj!8W7loa:d9WS@aG,!*.W#C-0%^#Z"(%RgIF((Nc""<3&UC/nXa;Aqe^JLRTiPHg+T;i^ph2kiL]@4DFA=n.nNc=$A"0Ndld
%fT!if,7HD!8!LYm#"H;;<BO^DDj>ZrV:VDF('0.20s%5fDis)l)aWm!Y2n7rdVfDY.Y&ls$\G%]8lp.MQpG$bU5ThF9#;lc5ocns
%&%\WGY)9WY]c,p+(PgacOA0Q`fg-/k+"PON.kpdrQ@"W@=9eq"[0*ksPr",q*'-bq:<Gk!YO2NEV@@`Q,CjeMG]*ncecJ?@QPeBX
%P`D>8,-Yr3^ttVW9kl$Hg;(@qk\fr<nrm6?jJtf`3eL>Vkd<D6%%Q?+]omPi%cEB5;Jo`j_Eitko8ssU2&aeYIWjX*\@.nMPUWDG
%gRIO)mM]JQS2n]KGUjgL*+MsPpb*N+-dEU^Wlcu-2FF<>/3k1Fpnm!-$9Dk;M@$4ZMG,#P,)o?m#B1iI`MIe+J-G/-(_&n@Aa`@O
%7V<K)r>&$`7As,cU663a;JQF!ZWB#ol:(nTUSI=k.t(as*dV.RdkWnpY/YLt[Z)o0leq<5_J[Ai""o:*F/W_rr#Yp!/6W?"7,TlJ
%Jd/6L&2:>[7MWm0:b8;>oZUX9U2&Wfi8P;Un=lWg:fKseo"g@"JLU.dXTY>`VC?g%$DpKXllC"Cji!-$gC4%Jc9Jb;plO%U).5Mj
%+19k+BME,>>LF"95S.=SQtTKu=ZRtnFsRrsW6B?;[UqDmS?,h`rbV/We0`7,\*TET[Q'nl'4;EM(+ZZ,p#qQFE@)+PTM*h?#TR6]
%9E'll+>SXNS;%O+'d\_NnMbQOC4ID6$ZD`d&h+1*$)31g0NR;3<F'Q!"nh)@ZQKr$!Vk"Q!E]H3mtj0K-:\:ZLnT9%`-Q&2Fl(%;
%<=@BD6U8+_D%g)3:Mc20I<Zid(eUTHE#K>kRsO&7\KX.oat.)e-]'r0=,L:gMKMN=kg39<(Y3MXgMi]i%"LK0GTKUY9&PZl+?'Pm
%Ss()tO>NZ*6hNGhCTGqJnD^Q2(c^d6LjN"1n,`4dq&'=6HVQ**FIO1l%+Zbr'<0Lj*&4#Zb*(bND+"UY,Y1u-dIGkY*e%(.,#mFo
%7$O)IL:*R%!<O'I`!i)'4.oMN'nlom:<W6_&koZHX0s]9qC-'X@h))**MbG<O+hQdM,E.kqK9M&On$R6F<c^ig'-Y!8DCE+.O(<R
%odud;"/G*RjCflh$+P9B+7*%E7&EZCZ"*rl#-hk.MJOLGN\05GfBG8.QUI)cS#U+4U^VG/:6W)`>AV5E+C2c?Cbl;h<C*QU/(B,q
%fd,1.JLT[^X[.bS4+_1$k"=X2P"r)E0X5=?#f,BB^+Zkqao*T(iDX][od[2M(kH-=f:gZ6&55/sG8::Y@X'YY\Tn9sTN*iTGX>N?
%#;kE$TM+5hbXpaRirg=K"SICDcc5h`3;)EV(e;$M*T`,I>p6q2]dj_8E(5CnW)HMcZk'bGb!Ci:D!]WMB]=(&&0\`pLfZkBS@fp'
%9(E00"jI#_E.Ma//ZtNiP&OM\C-L%$Q9A6U0F'S2f9X8('<KSM?R)3\$3X=>GWVuehP&'-ZU&;1(iOC3Y3%Y"a/@I@<tSq"YSfPM
%GUY#nSCJ26S$ufC'PB?tLn[!B$<FL#,Vi@&+<VQ90P!iudLcKSYZl6H8j'0\NY&/g5`lTPWjn.@!*qMlL6%PEk@G$\W_24->Go:Q
%?$8D$*IuW1rD(5>K'=:cQ+RHe0.CC-4uidA;bTs)!?@:9(6urm?Ge<8!eO\Fk$M!R:'u,r/>Q7R)dV)39`IqU8IZ;d&J57F'Gg?f
%'^,X@;@I.S3"`hsXALaTT`/bN(0b*]_1p\)i-?Vc7nn]=Sq0nN,a4XP6@_K5'/H_s.C(ag8b^t>;e/>-lu]jFJRWaW!Y!<sN_%%9
%B,t1?Lq"%a,2**gra3tA=("Ck"-pKoK*%a:;[53TVf;4dB>SM_%-1>@^]o$"a^q<;#r,SmRXKBFa-.t9gus^2aE<ASpPQLMMYn]"
%cG#VG*;5YbM$2&>9'DqJW_<NP8lUbB\sm.nOBn2p*<P%lU$a[m0f!]MHQ%mnA0Gf*nOsZb<*rS5/K1J5F[$XcjS5?0mql<,UP[\?
%;0aQf!uM,,b,f<MKArXqMdj&[+Wa;8B@2*bLW>oP824<R/L%LMc/c4DU7O3!,qI`M!l:\3*3$C-bL<IC%-$RJ!br<I.2DH9*$qU]
%F%[Wt83W]u;V1YMl%V:i.o6qVl\;`cX=FB+'`gDQmn.BH6#OaFJFf-<Wmm](rKtRm94pT(jT$,QF$8!J5s(C+dag@eD0s]bg#+EC
%3Eb'kS9B/X<;2>hT[@Yt&gAs#%+p3aF9*GaN%5jncB;P.5RS-D1:)-X;[WZ6Lb_>C=\dH0#XScXCoP,<@pW+=7I3Z.-.JAYbaZ3t
%8C#ceXVL;V6o,>MSK+a*+SfDu&OaIAGN=7X8o<B0_dChi%f;f1mo1W@9R]`P5h%4R(!f-s.%2%(QnP+#8Y-]j7iDZ*d(.R7@Od6f
%.1>U>QPCXEj;%$@i6$cYWCKF'%lQ9;CpG9?U?<l["@A.:MZUL`*iRKKd#a9.e:GV@]1.o;[&QMm>#UBR8eBhL6SPu=!JmW=cm67k
%ePA9Dho3K!7UXIPU"[;V;.g:*&5\p""KWH+HF!dVeeb*e+?c8PF;EBW(c._$l4H]:J:#^9-_3T<:u-\k`hLXFHCVd4qidjSZTOg2
%dRP?bI8r08O\IZ1!SNE,;i&[ZJ;Z,9*F9/G)*Ldrl".[f#7]in96&5L,-%+)>8k<Bs.mi02%VWq5oes5I=Tq80t,cO0GqKRPAY5,
%,ai$`UXRZ'N[dJB]G^&N>_1l[#r(#WkoC08mjqLs5pdqXU(e=k2?M,l,l9=]'$S-Y'6DFl7ap:aGRP+oj+nk@92X\QFJjI!.Gc<o
%+[C:aRTrp*.&25,8ps[/WT;CP1%7oM!ee=jMd[.%nVVCPBVY>gO,7)O8LB2=SbECA<HGkc=JKApl6EsdR;AZja;Be=6=qq;MmLZ2
%*V"5b<1QajB)t_:"a[,2Uc;3s"V[FU;\TP:AJ,K-jY\!=%KOR>ElICJ9fl0c_s#V+:%qD]7[F8"*u#,6J`JJKN,@m5Fb<do,%7@#
%QYmq8l&$(r\SVdAe256NksPZrg]r?i<K"]='WIr:,(Va4?spuL!`u,8_g^JJoD#dAh,HZYGl/MMVNjqiM/H("B"[b1&Q(8%k_Lee
%(b20715/=@!Rd9tb,#2`C@KEf41@9Qa<sWjkCb4-`qW.S_1j?TIFrIdY\p3&IR*+V:3br<HrCW2'.jrqPW=nk#KL@6k*8+o)/7;)
%D0(XN8u.i:S(H!>FX>6U=d0H>?!P[t93oc\Ar!$%77l6e*qt4G;^_n`U0Obq1$E;4-AFrf;Q6dY3bgPt!tgZU&h(9<%RArLdY/F'
%Z18k8fc:+U*A+4[3<o&Id-APjS]*iU-l>EE(3B;UgBXVC/NVb-Z2^J)T4Qa4@PO8`[RlO`PX!&gX92#=L)pI71Ai284IH*G"A\52
%Uk0"k\.K;7TMu'=!c5\`L=_e.K/I(kML7-j<6@Gp''Q&F$1+:\Q<A.V@;t.(%0HF*kj":I:\2^qA(rlfKr<[O:$cCY=m;ef<D&]l
%Otol$D3@_cbK@VrAmQ.eGblF*afMC^&n14-)+HI-I:f,n*[)W+8(np4['nJ<Y)+H]:SXmOL6ZudX?N\b6Zk^i4<a6NNm"IPdEGNX
%GAV*MV_&3WM8DPMd0"AtHC68T>)u7*8ZAr;ks'9_fknnr,RZ/$k)3j,&<M$Mfu@?7%:G6Z]1t=]lK3]a7]a7Z,(h`'K2%`E"6(9!
%S&I`eJ066\Z#`n]-C^K\cp4-daA8(-e_*A/.,l]4T[C+npfn]5ACkXpK\.m[7^UO,IKJM/A.Ju(qC&n)cq#-(*n!nAGd#2QE%DRr
%UjYN6;1\g.P_K[Z[=t#Ji(bI='TWr?QV`JF&drAP9pAp]7bF6mOa7=RTt[GM.8Rq%dpig[RQ3_.(&NamLt%]ReH<pVigNkK/[VVj
%MJlhMg8cpjK7[BDBV")thfa#o:+T`#8r!JZ0k*?DcbKfJ/ZNDS5Sh'8'NL'A`?f>'e;u,1&W5Sr.B\R)!@Is?r3!&Wq1piaBqsrg
%&6C@3K1XF4jP2cu6P<t)0CFS=p9Y=Q9UqnB/tN&bCT]4a/X%L=n`>lG6#';/8-KSe"=kQ3MHGG)"b]q@oJBcp>#tA`_/_Mn^e#Qp
%)/:u1eT)fOocaLZRg#!?FZ#`"Xiacnnrskk-0^'X[k(5hhK,H.VD7\@:/*3d)/H2S$l\_3h%V_(H6EM>?&q't=mFMc83l>Wjs@i[
%?3:_?E4[raMm8c=&gTF3_8%,4Ss37]fIB"\?<iu),AVs_WT]ei^79-$j+[dB#BRH\jfJYbq4_N'FpA5#Vt:nfU/FU,4**Jh?ICX_
%kKE3Yo?+Ti:=)$p3hatI.4NoJ,YQ5^!=#l3`Q,q_o@]:H*#WmI19WLkN7YnM>(t3SMA7qKfVWZ4Cg%^"CiD,ud2;"T%=X(DqI!A7
%Bj[AaNYht#VUHaoA0E'B^MU*_5_\&='WXWQP6V93<)mAMlDC40isfjpqP@(dED"$8i)3?Jh<1lD<Rkj*BjOdqPLCQ]**m7`^*:04
%EAaesg7bBFd'.oK@3N<n3sA%*k5he<EUa8;2[:Q.EfLbDWl$9E"H\7gO)o?Eo^V27)VA<&D)-Sn>c\XqebG?>^R6lSL7PlkOM!oV
%.eUmB4;-$IRrHs&#=K>3eoQel;N=sYOY0BgoGDRKNudM1\?oe,2,,I>Q7\_gXULlO*18)OE--X.l7CqaJB@ATao*kZUE,bDk*9Zs
%O<tKh->:kZM$E^O'7V#=W3-C_A9e.=(e(m+KI1<Y)/5!C"AN6t6RMnh%WalSJ-J)mq1DnYcqk>SWkM*M[=Y_($C2nT"P-s!FWbu#
%j?lk,-(T>laFRr[JIZFH'+Zgb`nHN;0!o"=.N+LjF+Ta5QE.eS#0.XQ>#D,g1d#c.n^]&;CeHZ;/eT$<YhD'iR0d%N9J=[g.&pK!
%QR<Z()CsO!/0rs=!4#9rTS"0-='VC#4XJ<)3(]F332ASjgDj6MT;a/M9*]l"3tO7/j'B_9f5*0*0Es+T*oZ(Z4B[8NFs?)hKEq`V
%1>gh#<`Qe>(kC`tOfM2F#Rsfd2_Aa=,I#'j`CQ,MJu$I"D#Dc$m9RT7ShMq]E01O`i_4kmb"!`5+K9<sRWUr6$R@_[E[WVbNP0Lj
%\6mGq@F:QH%KPgd#<AJ2i+,+^?EWh-(.4`_]Im>"<1U(#9cN$>!:m!p!@s5d;6C'Ap$FVoOW!Cc@aR2Y\:t2ec[8UN<AeHi%]8Eu
%UYahHSN7!o$<;A\%Q'Z0r$a7+!#cYdLQ!pNW0]Y$OO%-?!_sBr3nK]JGaY'I,KB*S%:`KaS1u6oQUY@VSt3Ium2)ZJP%AB)Tp:Kp
%nH+A"/kZ`s"%*?KS8$t!i*IT(^q=BgX\R_UXb3l-k4fPC0h+7CTC%:4m;64I`:A/;D&28<MDo'c*kjmM3(C$hX.3MgiW78h35M$>
%=5&5VYM^f=/?bG'0ANJF+(ni3Y-lJC#^.hj4k*P*1teU\/rL-sQ?Q'e+\;f@U4Z&R27\Ljg"7D>TO?GE#4'sU7-1F8Pq4lWA0Y"%
%O<Oe=H%!d+@3(H0HNd8!'&SD@H$4Qp7=^ZdbIM[0j%E8@n2\fi1B8(s0q6QI/8lamRDP6RM3rr4c43"b2t9"WZh75C1[>/H%jbUt
%g2bRS""\gLQ)_Q(.P7./>tDqM-/QJ)gk_]h-!Bk04-3qp"QkpYmBntA+;aA%A-u3ZhMn_[eb,R27K--rS[&'6P+eh)i,lO8"iK_1
%V6];n^U;iVp?Toq0Fi[P=0WUXjOlj38L4kk!>>oJ?s-nLl;Z);_02),<T7Ka\2(rO*hM3>s/'?8;FXN>VH3B*'A,[HnFdrg-R,*-
%gAMokc8`M]Bq0tW^44$EPOd8sU_OsSH;H<@V.E5$#8?\=#J6M&KPrr'`U3%X?]b+N%fiX3&a[Fk!@)WDi:`5g,SI"/RHOY*e.@3i
%/]cF,(j%iiX#[JAr"f"^b/c!-d)9BL8\\uQ9MfN"kWs,\&BF(!S`YgT%OWSb`C.LL.2J666iCVa7<6#49`$):.aB4KBfY&g]t)P4
%23>(.1D']9d-UsXJUFlt=ZTZB5bYZ3,AE[jj1GQ#.J$8d_Go,]X%JK:$T8-=7BImo:dZEjUF\j_E45lp$\ht&?q+"A5j(#L0'R(*
%T969E\_cTenHk(*.C(\R&\*]dgOrBN6"@\B_I>ZA&=e8FUqTXapsc&CM##NSoNbJ':?h:P!Zl9)]^)Pj/f$)](EW[UfW+4)K2QL(
%5n)6?<AZd?@9XL/_$HM!fsn?j?Q:bJ9<g$j:C/-MVoJ*ei2L#j@kk2L.k6_2I!uX.VS"*oLN^8%D@oY8;WZAbj5nC'XU0Um;Lss8
%iCUK1BjT>FIC5je3oFlr1c`i*UXaub<'*#]P8DL]hc0/e*\HWI2qgR&&O^d+HA'7_;`$I"5cM5EK819E%f^bEU!^)tEO6T)fojpO
%3@H1NLch#o,Qe8toSRJ<fAq$q6%-%XLCc/VWLLu.#mVcGcjWC@.::$/E<CCLW[-r*fh&@grq<;`XE4RWD+/GTTK8pX;p`(/WW<hp
%\cfcRTFa:@LH4I)^GQk2\N7jIQ@_&@,p!R$2]PsDS[lXV`eWdeX@Fk4f'--33Z%Fi9#Tk7fW(lAiq*7!#Wrq`W)%:XoYlK^CkI<R
%V4as#&,#-Tj8]`2NLEYTIFFH5Kepu:O4@\F---XLjN!XH<lb4!jX(/aBj8kV;^%bPoQEn$-'^_o6o5QTJ45&cUg\&M=A5.ncFkPW
%Z)lm?'T=::"D"9\8)"^$,"VpuRDF;?)jHgA_OQd^e+-(q>Ea/uQ%;cl]Lb9@fV/_$ij*n(>0B!p7$+3WD@C)he&TC#&Kn1&HdhVM
%8oiMI];]moM.M4;mu_Fkm6l;F*="!mC.AdAk(G;jF-V=Z>$H,@PT\WEA<%[P&uCDd;,re8N=sJuV(->ah67<q@Op!.>D<8m6bYbI
%q&K*4+)I9qBau+Y5r[2U"SSR"5;[A<^]F5Em0(*m"ItrNfcCit-!?PLH8_5G-6,5U)CQk=K*!ek.MVYs-kq:>^GkU2pF8f&Fp&IA
%iD4D*'u\%[8YN4Do9$`u2=s\SWTpOJg@qIKW+3qPb_L]d$:E=]oBcgdk13Q=IW&(m;C3RtR6h+>k+LG3f*_[K6X-.:g(;f6ipH4X
%kq%#S[i+Pnm8p`a:e13$@G=I;i>F2gE8,\JS@7T:D]qfmQ%De;YBg4aeSGs8aC,Nsd@r*cMZ+^kqZbFOj0Na)AJ&pXW,h-*#nq9S
%iM[4ro5"Uc;&IA<.<C"C\4uPoceZ5#fX;c$@UHA>@D<XU)rBqo?gK/F#Q]\GWS834-UV/Tf`G:BL*4n%hg7hO0f%oqF0<tS<4NNI
%#QcpEbfZ1gR2Hn:_4ZNCiC7B!A#XL+4\]<'8#SCiIuL[Xgt'Qi*OED2n08i+eL"441('RPJ-9mOX@eSRqWGrNMZ/47XoTRkYU;?a
%>3XV:\#UU2ruRcEZEc=C3efGe-p--`S?_'o8iV"'-#,B^8uqX":].=3Ti#,Dn?t5Rcg/+IdJT$SV]*2IK9u_h((1L&gm^<kU$/CE
%;la\=eW4=:eDeO4=hDse:CWV@NU3bQ27;'JJ*]]n,E^BoNm'3V>_fu\Vp_U2\D&E$9/QMV%P#,=*[,SAQ\D`IObW;b<D%6OA<5T*
%k3X&8qq;1MI<sJ@L?Uj:P&ZFTIN4$9Vn)H*N`a^WaeSMdGJ"DGYX=XrOMN=icD5`hjqL;QL#:%PCd1D@?=-:of,;4Q'gSY-Q"0*%
%h0l[O&ZaFSf#us@Q;&F_WBI<FKM[GkRC`)8,<97,m:Bq&BSomP[g5A`ObW^T@f&;uOnrVNPf0Te0'B\:$^2)aXu;A/mZ88W0t;)e
%8HJ@$l,c3](;k!_Y#1g'TW&)D:)8Zp3^qo^;H3e1[,8T0"iW:nEKKoBd'pW:rH6B=s(VPQLHb<DTZ-A;.DI=2TS@B/R_M`90V!>q
%s8I?HmJq`MrQ56(r@alN!mh>.%pB/efdFnu@N"5uTV.0CCJLrCLbG%-iD'4]L*1F;*kr`CYp%DfFsnGZ#&f"]JhE7B2`=k(g[BW,
%H$$\Z5c=EQ1`W0cS4Zatc_q.<70nRL4tW3k/U@Dpp\\kE*i4o)\;2W]-;8q4moNP'iAYS"_;O(m\D=Y2>PuDmK%jIaVr-C;mZSK.
%"Xr?\GUF$=dp%9-Fa-jNR$%cu<0<O5`4A7i3-,Zr`"BfFSA-)1Tf=kYcufca[J-[=FCKN&)#aI$jdt8qhM[r=4VbHhkF#[bBM$5s
%r;N:1ib/N)X`^icQ'eT%X+l%j(!D!V+O(KP3aI8##`7Z4BcS:AaA7aA;2k4[S]>XX>i*k':SV+D:V_@kH!);c-[`k&Y:s@fgEQ45
%(>`s&Mh?"rLi/:.Ktl8kg5hNtrgp$["C^W8;3AHS`gpe6%qJ#c33cpUO]Vu62LVR]D#SK1@@7>:2E5d(@68-A?2h3Q&jOIL$m_@l
%\!F!%oHGBa'1'u.Yl+H]nG>Zr]kX^#,\da[E`IWqIipcW0YlcQXKB4,QMYariXF\8f@uL;feMi-2dLUAO:T!fi4n7Bh1iSp]7@g-
%#BBH^dgn]gRN'`7mGe1QXqbqE#NTc=UT;XXfo`SA9nGZ6@od;5rg54mO"2>M]2(Pfo=#BAFcHg-*A>BQTWNte=@k<gp":\Z[)]_^
%Xtn-qSY)CHG'bS)cEHVuNHa'P\BL7?r4(kD9.i:kN2%#p%OfIloK"?\l5#38*5E*BehI3j3O,#$hLW5u4n.as&kS9@[:Z=t?TNtb
%du\(AaguRF8a9lE&+d/kK,DYhMI,Z=m:j'p2`GC9GMb$B_c95`]Q2ts?*?5GI5,-2.)&So>;s>q2IfBB&]NF2!Kb??4)c;a8%iL$
%m3^WUeob>L\!6>j\>tWie_kN]@iV-,8VaciA#jh1?VB!mfOZE4^'.[D+9mhXZ4p,ZVer/],qsci^1I-"j/A=?^0S/-Vk7'\^tj*M
%-@T+YdV"2*gGFI!/s^`\813T6G5"RY=Rp]?4,I.Q_[et\>GP0lW)8>SO@qKaZqoWo9;J`IZL<Oq2k0B6-XYI(.E/2GI[U"P8nq!B
%NQm%@bc+LW\t.2)bVPGTHMh=d`=`/s5CArsk/(c0\!,0Y5(au)lbY*UjG'_Er-ttQ\,1Ju!\PJ)W6,q=M5P?H%^JIA]i,=PVD0lY
%\l;JK:claPh6q\t*YEE:?tCB]:#ZC<224bio=#%rhT&J<S918eD!Q67)N<kT?8cDpp=E$Oh<l(Lj7X>G*k2T-0<4SsVk6op]"'=3
%eW6uqB/0Hq5]!STAa?*,7B?D?=C"ZlYekn7.oHjt8$rq@:7TYcbdeadQ;40_b(KGLhaX<1qPZdsSl4p&#!d82)465*0)SKuX`?St
%[&aM,ZN*Y.*.bfTQfE+5Y[/<dgB2eLZnGX,d?QB/'@cgeU[PYP`V,^GdX@.p:kX@3C;p@)X@0iT@oVX=5p?r$0?0b>rn!QOi7>]_
%MEh$*;?rZbC&TAmo5bH0l!"Po3e$LB<(dmGbPtuP6#J`UC"5+;-tfuc"N0oOiOM*bpIFf:pc`E7QSiN=DYS4p\N:R&5d;B[A9Ia2
%IpI[o@!^fdi0S4dD"D\/\K5u:&^-s:8_0FKC%uUhigB00Ml:9HR(;Bu1Q's/7nmbr%l6bt?@JEHpNUFKlal!7g[fB2Ec+Y*es.o3
%P?7I4't6k`_-lT1JLb8-2dHihlo(g6>W"[ET-B0/Hp,d4Ai*M6*;'JfD`?^"gMXHE.F"0M=a\LX!&RU!nNrj65Qo?N@h+$)E:qtd
%,"0^qKJkJ+pUOgM=d_iD,d<(>a.c^D'T%LUXEs2<38s_T!M-oO%W:%VcM(IUc3Y;eYs"/O-YH"YS%&i]D!A!a;b7,8odh6;F_i6Q
%(VBQEXnu^b0@o]'h7#MXjlR6>26fLu$1TqWD2?4Wh8nluni!$C=Ph:fK1((Ee[)Q/*F@O^"4FgpK?chWjQV1UY/6_Np'b!:ZXt(E
%0!V)@M%dAcPZc^n.8kt+,u]n6l\U!3*eKmYj;geK^>3\!-?d#OQQpKYa(rCpq0V)NZ^Q8Ip#ifN*4k7nL$r4</2!^!f:c2(]p"qn
%_^:FXa<bl!aj4ThLCit(RoB1qW:>&j[,@b+Te7G!4dms:)$FkBPUk'VL'9f)'2)I,LTq0s0lF)*+Ya5hdUc3C^=iP@PB(`E*nB?;
%ME\eg>l?7H/j+P,9,p@T@CCMcf?b'5;B\&s:/1sC-j;=@YqNIXSF/;ec??!e+$UPIEeYZgCi8TIC.,r"nI/qXg85:d6C(#5^rgVJ
%^Ds?XY24usg&oIW\BqO`@?s#sI26MW)'(l2LboMf[cELZh45ra_t="c0A"*^J#mOJi1lH_?23TlQV=u%k6ojFJ0[(8]lc&YN475_
%>8^>V$L=`Wj[O'/XL0./oZainIaGQGaEZI`$BA<#L-,C:>AC'/c*iJ#2YDOl*JkBsLr&jTfKE9dfeSAgaWFchq-'$_0#0nP.XI%8
%&Qq)s2ZNK<gmk:SU\C]4?P`G4m3ODlE:&t/Ai:0^ktguL!?MBC"1K2he$D!<a/uKZ19OJ;<ElrmcqGD(#[hWLn'`\TWZ>U9:mML.
%)X>1g0,82o:0T)V\`"HL2>k0GC34=;q]F/&Dc;2uZWsX);]C+2(iGDZon4n3q6IHTD_Kd_bHQ?M(8SbAV_KA,>:dZ0q`'pg=t6!?
%i0Qd\nZT_Mo4]e/Y+]"&'+^r7-b4T9'6dZ(h;"hJGJ]*F)<)EiF(YV9Z0amM_FU/K4\4%n7IEeNW2TBjJ:m(AN1C6a5lWjJc#hrb
%,H)q-P"o0rY<A6q[dMc%Y"+'GmlK?=p"1s%i;U3T&sOePNR(>33]Y(1DX]Y?@Z.J`%\ih0)i+pWhZ!$A\"B&Km;d*2I`nT)%"2SK
%->#CSr#)uq9J95O1qc6I<+0O^)lg:<J@BjFY@f0WndAj(JU4k+oc#LMb><X+XSBq=Dbfqr1Hn-X.;*#l\?a)S*Z/8QCgZO>A/QIW
%lT:6n0.9])#WZQ\RZ/6VFo1%1^"hoM1N?jD9@gdanftW8[H&ju`6[)l<3c^4#uq%/HH31LQ1F*K=jij(<1TD.MaeYRmXq*mH/fhV
%<\V9YP`bgtQ&/sp$8lfhU#C"V!D9tF,f`:RBZL9AN8E:_F^*EP/j"<ieLus%h$JCIe=O2Ilq4uIjR_,!k.P0oe!@Y/UE18Z?4TSt
%I4%#`B65F21l82g8De`;'\?)hP;grg+GqOZ=gtG.2*dRKYDbX!+SV#5]Tp46_qN0po0do"6mI#U2gSd-I5@TTe`cX4c*V)%3<<o,
%f@+beY&;PCUR$7tqWG>SbIhE-4nC39bno((cnRdA5G_SshOT]+iGO??"2pSu=9A[cbc=anj&>QeH/R>dV+hrb2O'.t*8QAS9'c6U
%?i$^?NAp;Z6q>s1dYgC=B7?h/Qqj7'?Z]4,kdRtFp=tc=/.s&S@li8&+@kI7:Z&q#h#G!MEd+N)e_f]@5JOmBdiCY[Yhg#LrUSXu
%dJMFn*0W7R)%h[(jXm<@`j,fic%UoN((WBA0_;1uK?6rH!mfMZ?5Yh'kLFMC_DcO?qWt?+kCD+E.VI]1LNOcVY8]5H6rmO'SDcdk
%4>2u%WF#&km4#S/:H)p)l+bjCI=?OfMJ%[Wi+rE<Q[dZPE,,C/<=i)^UhaR%HQ^LYouTAPXI9R$LQtLg)(6['m5+.;O.YG"m7uI)
%g!0LKrHG/-S$?D8mQPR1EBGUFs#8$.,QBn^T?X@h)_\R%[Q/WK=L,Q*PC0K+R6-4rg^%@pB?3a=QESiSR.)*d9eg"Un]ZiFU8e7,
%l3)l=K&SiM^Na`'n[J6cHd7Ou[<QcjGoE&%4tLo*ep4Wf`[oGEk\cEM"!A+7/4XdmQWm*1hkkVkF)m%uAgKIM<`UP6-V7KV$aX0s
%^>3dDK`gb1HHZ:(>BRQ[[g1iJ?dF#F=4YLT=2SQN`f!=I*1`#hRA[71fuQiePOK#jhjP!s"LtO(WDO9$.UZ%P.0H.W&.9,Eb(-5u
%7&D_BR'L<!SM$Fu8,ma6m^DS-Vf,AMMt?PYY_sV#_E5#EFNNRlbcM+pi>0\c[h$h;2[F0phlU6sk1j6J!KfBpVW60$"l6i17Ih>#
%[8&:'cXTCA2eaR8QV9K:;c#44T6b\\qmY<c&c$STDta%H\Ti+KDGJr?]?_DlPp=K6H0*m'RkHko7Rp9j6)OakbTM70500KN5=udj
%2T_.mDpIFWcZ*^T";(n_@>=RgGNg.7+$@l+9=HedBn6"nAW(*Ye)93G0fOkKG1sOA'eQL\c]bW$B9Af;43gV')6f&pFRp<edPLq]
%GtY%\VC$],_358l`[88Y=c7ZK#]EK(c,m[Z\"=K]cfp^?pM>;`-+8b#KB!N;E[*(dUofHY$'?QS<(\cY!9Q;07`EN86C9Z<:Mn_t
%F4*D"WrY$OT^VRc/`^3qd5TBIG?s(RgBusMk.c*P&(m;\SA1)nlsqrP+_)Gbc[CX7E@Pj%d+qR23L(E\p<srA6bVI!/a$GZ\X=A8
%!s42(Pi^D>P*CoD`9OTt;c[\!$brF\RZh:k'WW'm7nR>)2Ma(elDC/Q.h=T+qjLPnbjIYWFdB4-@31`?=Q%FY`]>KPq*D?V'9LLO
%c0T3(etGt,:Mo^JOa(kj/dH5T\M*:Gr:Z9i[p49r@=.Sqn%,FCJ_1WplA4srbUq9tb9QQq.g4^[D9">/@2Bh0%L.DiEVO]9DYNO1
%O-cS*XP:'*g=o(;k'hlrSFt/QcGW+q-")_>,,9lhUM"bO)?;'X%.!XG)(J<WNkCL=]$`]UatXQQ_W-]*I_VH<a-.-arIn%YP&jZe
%q&H(\msGM6j@U5E+UV9_AQp*mn5,d,QTP_O#Wk$h:gnmt.'IA#Y)"0Y)K`u7[N0kZS/?:ijkKaDE9&CVGK8hnIQ]4/=4Zc35uJC\
%Y:rM&.gZS=F;5>p@X)KR-b:`'W^WkB+"5ucLdV3N+H6IkB'5W+V\Omu)U>]mbjl0I)?'R%-T:((p[0s9p/&C_5#;*fGe#K/PF&nW
%WcA_nFiZ^nkUIj)1WstG".FJ7UsEqlH<`IDNnm`,Ut=F-'1#6tf5i,-AZb&+5s0t6Gf!TVO;K*<!H%obRA)43o<C-?W"\[5/Y_+i
%i6>TC3#=6nd*6::YkR/>^9CR3\PSR^:f[aOA\g6hZ?UuA%sQbLZF,'mr"\1M/>o)YFD^1U[Y\.lDJs5^+tA":Z0lL39E*;fIS0@H
%nm?C+gV(2OeJBUkp9`VHWsch:o9HLps8;SJ9m?NJo)=X:e&,LTbaYUKBF_U/0SJURrI@ZXl9]:@F_uo1.$n["s/EQQFi[<D#06'u
%pmkP9k/e,>;((f\^-Y4&n!gjB\t&6G=3@;s?7psu]jAqW<&f5\L`gA@--c[o?oRu?Kp:\dRVs7;NRPddWfV],G'd78(2hFJm0UEc
%XcKLLAa,iE??,4qT<EKHd@VAUOW'bGoaiQ0>+sEo3[c;GE-G!sGHLdr$ptL\LkmtD\"bA@cuWjFJFCa?qLlcpjf+OC[P[DYQ](Ps
%m[u7,T51P]F:>"-!="HS8((A;q0M@FNld1]omHJAlh[oocYkJiE6GI%bcNp-%P#.MV^:J#c,Kg;$4&@?dC`'n$7pkU4;$_[35T+^
%MH`aD-Wk`%#Hr=:H"VX$m=5&cK0?tpXH'81[EKbN<up*bo>s`+iVmpp=806Y+8I6e#)X\AM/:<Q8uU=67JI,N$&FB_n-#ZP_ma2L
%D;0]7B]n8;OnW,TTVkdq3<7n82e:6nd#4uAG?'kS5ghF@#3X[0AahH7//UH*KOp2^VU:hPPG9]l74ZHFKP4Y&)mLKdB10,F@VJ1e
%#XaHuAt7+G&+<9oi`cL#\ns[[q/%QL5#2u:Q+:EtJ9*""bZ2cr]5k\_df6Q_dmI-\/[t/f]q*"*fj7a'bC`mo]&W2V0&5jGrQa8k
%JQm$V0MV-Z%BaRuIDZP._OS['Mn[Ug-_pi6*t5FmQs<QqD:VC>XHShn*:!UAa:BpE@745ZY8G%jOQhX)S?Tqr:8XX5-63a"I_E#O
%odiD:nCsb&1DRJ[;k650.hA54dmF/`duUKQaN_Y@QgeIp\#d,OiX:LuDU.W-hCSCICMoPb_sk!S@Khboa@0*2[5Cd3^r,A.IB`"p
%Uln?IbW'3VRqmFgU>a)W?!U1CMnWZC`ZQ*Y<leol\4V"ab^ige5?KH"m9rZpQrE[lI+W:o9Jb%X*]_[1[C3Cm?6!-n*87,7*q2GZ
%&7(Usq>Z3rrgUCmGQ7AS@unmSrq5G2*':$b"<)-Z=iY()[ntF?DNis"aOX,<opPQ06!fXKK312jaVa>9At@ih9#Y8C`>Ut4rXfQW
%eL>RlL0sr]=G/AZ.-&Pd*F.l.4hccV1!sn5L\IeiD31]>G.B8B6:+qkI=!<E:6g5bef75S!3m+kdF(T&IYC&B*0?=S;gJ:5Ut"&1
%dQ0fj,$]F8h&@;Y+04Ah43GeY#K]%A\dm_OS;T'N$ZNW!`ahA.HO&!mWa6&XS@Tr^#]c_;or[X0:hr_"C[(uc9o=p4Lk5hUmRBa5
%\GAP;Kca^mKd&Y'5kHHp?4ihYdB>)QNQB-B/`f4lpDu)6`Y<Tt[`!)Be=6o\cr6_FiQQYO6qOfm7SSIPA[?ah]q5/175WJ9[5G2%
%UUPL;'ccq">#Gk*+b!N,=c5`G_)=Gg,GTPYpiY;=!5j3UerC,A(4^>!P_So-__B<J27E0Y4KRi@f.@fTh3J3h=/XA/k/4brK6J7L
%i2>-c2`>hP[Acp.UXp`;/8FW]5t9N<^oTS=Pdb%[OH2YFA`HU&U.Ru@AF=pWOQos+df_*W+BC8E*qZD&ZRl93_OjaHQ]-<;,FZhU
%-h:;[$`Y5la]@Q1&:nl;`aZ:?*(b622;6f&N)E#7SSEj_(VK3OQ46FhH8=VcKth51+E3(JOM[!ue!`!O&HgWA.rc8o>1fr8ZhnNJ
%#.#!A9eg)Y69L)+@^LG763fM_Kom93fL^_ZD,%71:0`3S/VUC.1%#J.T%g9)STP0'r/B:8s'l>.CNuoD!T?Y4,"Jk'qpn%lEsX`f
%[cAM91qe;>Gq;d"Zog=(hG8Z`^u"M)BrOZ,\.m!@=(+/q8"rZS(>s%YWpQm.J0ciHFD(Y>&4$NR$M\+uXJJeJ[GV%IimO=%IJ<f.
%f$fG<0JfA0XL2^\g_Of:B#I4?;t&I'O]c[c_`@mSZ3?=GCSMpXNsj*+*(*O#BNYq!4W%"9S6R;SBc[#DX8>"TQ2r[5iR3(VINMtK
%e]g=qh;QNYA>2$S2\Cc"b";)$:=LVjq/jQMo1njrM[=/&gCG7;^($2D<n=SrO;as8-StsqNLBeh[adn!P5ml?U*C5EK^2lfH$/)I
%GP8HLmSO1tbU_@sZ=u:tYX)N+TnTd^i/Q"edM5>]XA(ef<Y3?LZ3?rJotpG,'=:aBos(XrNAlo&A[C*(4`ESE^i@j1O;3TuBmDJE
%#`u(fr7,E+H4k3'>-+70]EJjL,B@ma,B$1<pB=ea:hBDfnMil_=chc[+VjD<]Tu.C,IbJI;^#R#.bq>@p(e"F6eu1#?jSgYni$`'
%]-33Zc`1$_KBdtE3C//pl.G3OT_<OS3!.*80YgjM"CcN[4l1`0KU(MV@+5).JtFae0*rT"$;X4e6Oeq%_UZn(`]A?;A$>fiZl0\u
%OgWQf[nOKp[nn'QrbUto;^,D<2*t)jPkNg1IbP3,a#mu;`'^<#+LW\_d25Ym_%:5Ze;7Y/5_bGg>jBn0*r$luP+ni?$R.6-Ii+%k
%pP`Su1?"A_O;)"Hmr":KmY3L;STC7FAZ1""\!C_>4AlbX#<ImAR94Y*_o$8H&!#T6^#P#9`%CkCEn;F_=6"H]6>m78i)kHj/(oFj
%lEa7eEB/pOqM<JU5F/pMEdJZYPainM5Y&8$jBj/TQ+]m@o38Cd!\qtdFIpu-#OH<m\S;?HZ*EAjj$!sui5s\uP:PXSI?(<nJa/g>
%2heho1I9p(r$)2Jot&LT/6DuFU)01h\;j4Ak]9&?#DW)Kn]$8s4n13EFA`oQG4-@Z3fQOhQpNdp.*V8o)(WC)^`31W5Cc[K4YH[%
%c`@W<_t'HU_+b;;*38c`]"`s4r4>r3$XbSa`Gfi'?/=*_eG8OeYg?r9jh=SL,<@H*BRm,Nl^c+ip1#lb&1c[QY\5G)60%8'jKh"P
%3oTR?-RXstN<LXJg&c6]JHDKTJOU)9-jjJodV5pMjFKn/AS?a#8bDMJ$k;0/Rr:4l(tpLa0nU;Y>4gi-I%X,Z0<h!uq_9;(V_u;U
%NP9@p9W9+ajm)&87QCH&E'o123@Z88#hq_;['JY[el%0L6D9s)+Kl6kX\QSAa]^GXiQ[e?0OiW4)FSY$cq,!HR`)i0Q?(9@KC&"K
%-[UOMLd3p$Zk0%II@1G!cJ9!@i$SL7Oodck3UST9jc*&rX*"'2]Fg7@qc#b\edBe\+Efem%YBIogGNQbG;l6/J'551ljS1'OP!P7
%TEW0XF??NFgtWqqB5h[H^(k<d=E^JPPCSp(GBi-JXTcP]2!>7Z!6>KQFU?O.Stc`?IE5NamNk/!'QYH-cFEG5.&h2m?DGcsaO.g(
%j]CTMD\%Sb9F]?j&jU]qM5/f,[GsRd1uSK4/.&1fDBq"/)A(Xa6<F'C#$.]9#dra)/@=+i8jdOpes02WXbA54:#PDYj(g]`8uIc)
%H2N)A>+,0#r@h':aZEm=e9/S2L$lXD,C^ZC].hO2OSo#:#5<^g*/<I"IURr^*Dt#WHsrN3ru:\hO+mG^(*^'2>`&;IilJ_$bJ3&o
%l;2^_.Yp?W,<fW6IX?Gj\3.7:Q(JoOm.f)UQ9mN-m<F'65Z0969[KlQGJ&.W900lnpB=kCe%u:UR1dC71kBGK0#oY#,Fc>oE.Cjb
%rJqi3`#p,u`rRFn3dY`&b9WHJ9*0YD/dAiYYV#o9),\PNV/euu5/`7Dkmt(SlCsF(Eg>U0f`8sO4D5U74,1(="WCt5ThdI-%G&E1
%Wh&[l6QTSnJ\*`'![+I-1\db818s#0JGhcUPQA;Qb)Vg-JP9HB(*p/tnQcb-HUWMI&,3L<18U_/-8*6X70B39#NX;:d4HlN75W#*
%@dU:)Lrn"ljVsBQREku"/l:<OPoR?+M'"Rf_WZmd8/cEh;4$Fo.?Ea*rqk99NEc\8i\N9_4IlqU.jNSB*u9kSB$Q;:_Yd)#8,%7!
%U4uSA=IREu:b<!&2B37rTADu5oJJ9o,n\*-,Rt/-0>!JI4pbM3g*CXmCt+WS"Kc@j9O?)O>VgQiM*JbW1u!U20\'TV6T?^h$7(2)
%JK-,;'C2-YR&@l;b!j6@i#SPN6V%?$C^Wg[<'>dOdG<8DI^g"DjYOM\rB\]3!r,TZ^d$a2RY!fMFAVhe"(0;7<B7k%[-u;RXaKK4
%"Zuk4G4Gj%mP/GV;`%0W;l&@oUNm3P.E-BS2.7L1G?GqSZai+%OGi]Q&,O?E.Q\#10R;'=Ap3HE*`:&h&%hM'S=G-6RYZDS@$?2`
%%p^ADKW32B09Zl4)\eZm#ME#f5SQKV5X5E>GP,AE)Fm!A^_aX^^H<:^)3S^Zi#rWk+GO3.\Q/qq8fO@U4\0AsaJTFP5]]c@c9(AE
%@c5rrE@p.V@M+CNkC#3JL_oh98>!e\?Nu%FT0e]*#6Dp^#B1P-Mf">W$T$+*f'9!@]I"$Pk@):B+O\Sd?9a2;n2%m_go:'?Z6bNn
%b_dYj(6;$+EO+N2_Va[tR$bqV_g4YC;&cf7NS#G;B-I^1XqQ%I2=bIt!W<*a8abg10`oa3I1QH63&/aOS/KL1mIqe3`032JHr+ki
%7&7n0-_Ql-L#EJ*V2rkW[O^tqCc++/cd_Gu=SJ?m/.<cc9XGVGT^KhU5M4@A\"AT+N/T5E98+bMY`gHW([UHJ`ZdVV,/C7Ph?kJp
%WXJ0I4_+urB]kj>BA_eA9M0'BYn9ZDW.aFsXF;h&]OF:)e:*Qcd:$e.ePkcV2H2CKE@9f="B6Q<P()EkLE485<lUGbg@T5g`2=K7
%dH1S5JqXQP[]rqkQ%MhlM)V_6[/f`XOYgf@AD/!-.'N,S<;rE\fW1T'0d;,X<R0@2=,md"gXV@g,+[6k8_B6H$6B3O@jNLNlo'oW
%>F3j^_J$@J[ida#-GZ%;IZ,%K]qVr,WB\6aW@2j'HiXWO%e="-U_1uUgP0,/l?1mkFXRA/K_BS]Mi'6XiTF6YJ+ML#eGRbEi0XSH
%e,%[aE46q1_YGr/FVRafZph>F9ac<[SJ4k=)6fU#^YV!6;e5N*1ictEW#$RO&FHl07#8m:*m8IAJ@HQ4DnOD-W3gRj+KTU:U(IM]
%F.JZ-CX1VYI7s)5]o\[qZ!&l660Nof!W$@kdob-c4/2h2\Mh[1GgcWrBIRMXJtd$*+#$]2?Y=?7peZ+$<W6%`E$Ui'qB*G2X0qWb
%bLQ7+aJDFJBGm*Y)K/*Y(FSS$jH=#p,<^U?n?[=3G[$>rS^$P(F_-E]TM?q*ArWGkdE$5<:j:om7Es<WQY<30p?l?hq8$lojj)MP
%(>hnDphtt[%]'r(;:YAGX^Q$oWn0+u<(U<&KBBXY0:F04SD&f4ECaD.T!ZNIcu;3@:=MDUFtRq!\rYZG1j)oW:)*I[rg[1,:bBYY
%l<[+l"/%Bap#e=gHg`^T.hc:uUr9OO[#nF.&gR.d40']e7]_N8b4jY!q0U\p%;Dc]J!`n-0ldot@3@I(7l%hB:9<9UHEBC'p_J"q
%IJ@TK&c\]$f8U[If:RO[LAqc;PR0540)&@3QW04<Xj2Y>C^l!i)611"Pf6KK@6+Ln:1h]'c=TGD^aj(<kqS^Z2ApoSH:=O5aD@ng
%K7pD-.Q5k^=,1VuCc!s#3AYeV1mp;pC<]b4<`M_&12U*s>0DcF8[pf,Ep%5j=k_Zu:"O.tqG=l_jJ^Z%TWE`$-?OQ.U7*pna6:S-
%^Vtqf<d<43(SWfe!k8:E=IUC%d_+:Cj>_8Wa[a,gB+QkfV:ieD1"S"`0I;RHeUV\?8X9Z(2L_qm9Q[$!qRO+o1FpG4QcEb>=6)k?
%1IHWV8MulcjZJZ]mL(Yl7bn`F@$j5&,HoZ5q5HY/*Vr//G:0iLcIFHH4Jk#%&"3OB98sf_U:)]u$6;0):lcr=d)OcD8?)'`=#<+I
%L5a@8GI`A-A:@Y2/C9$n(F&3Eb>=r"mQ_i4V\.`KI:J_%LOM[GB(llq2&L0=S_[*^`p-E6I6Uk/A6K7B,?UdUguZpEE<G;8+L81>
%hk5$8_*dZZ(4C5U-&d9NX1l0g\5\`X.mellE+Cui61!fH3s%172=@,O&R8+`+=5_gC5=*kSsMk*1?Mm:NOEFGjCp%O5$NUh1r3<V
%Q)P5OEY[5"i0-(GQ/46+,<p;+S=]taLtVE?%EdO\Y.0bqMQi)Z8b99BU/QqhLM`>oTermRS8`=1(;bh9AX-sJ="7-OV#]XQ5W<+E
%\R^E2ai@5BT#@pYYC.G'[/fOD7U7l`,GC4QM1p)H`d@>i1quaE%2j6GYBr_OL^ALo7pQ:4AeRHs>O[&(D._>VXpl'-lA0$4jsSUn
%^t(V;$o"19lFlB`@)#APV`c[M/7T&ihdsR+_c()Fb>7>hi<bM?F*=8tAY4p[qH;!djVr)P:rY#%/RnQ['lTSHKmnWY8f3?SA=]*O
%:4R!-XT>GV<C*mVj+CDN/d+e4g,.>[O_?\_qAX!Y\&I18JMep#)(fQi+u<4?\!"=+#%pJ>4+jAHTe3;lT<Q"6dWCYKg6t50S[k7`
%.#'DVMukTq12e-TUJ$Lq/qRW<@X$>@gO,t$FHq+(nZ?YD6ViT#aGG4L-`W1=UN]bF;]XUj]om4&ZMKj=$P7()HA?+j9iQ)J=]O@P
%4:K^^8gRjaEk?X[>"qAE/+r2,qYcdljuXc@#&$S71P#TF&bV$)dHI[9V]@,?3;6E0HQQ&PfL9s=QC[4m(l6Tpg$D*/8Amr=9*C@n
%aa@!`8O<SB:*0]HX/ib08DKR<@Ao@T4pP4(1/'`-phK7AL=OnD\(6/_EGKsVgG6afJu!B;(VT[)Q3/L2a8Y[,jEbXL+qPpZ/p\;m
%&#d@MaCH)opJ[B>gC<.I(4W!DXf!J;bc)b<b7J<Mpfc=g@11r)>B_I2PhHRK:JY=dX*3D:,%W^DWRhXu$n.;Db_KJUWQr_?Da?]F
%`uG&-6\g#bj:<oc5-\ZeeS.N1I^1n]/kk(M#h'Ae-Q_SP!#='3447l4bC*eg'*];O_l3hL?7ETbb,KjCW3OHA]X1!YE_b+jjK>pN
%q']7LL!6d,n#"ji_eB)Pbh@UsBEQ]fresX$?3U7KC8V_KW&9I#HKmY&riU7gOP@_aE'S4FHL)_'n6Pe.Qe%Qkj0l%/jk]Zu\eLW!
%a1AaVOi,*H(_"dCUL<ghBN3OaFuK3#eG*C\Z8a\?W`e[j"72m[eo,18IB2e<D)md>6:SFXPbM%&D>sj1)cXC]ghM']R2)-mHK%+j
%<s3W&)&koB/\G$:1(IK@G[hq?\!1GOIJ4b\pTaYSiS<\.XR4`l_$8OXm4p6J>pI3KZ,;hB54rY$BG2dj2lt7T^j4]^8S[68c%+Ga
%)Luap4kmCu?qXD@%U6i(c=Pg*WXbA3+g7c/#KT!s@,/8^*tb%`6(BM[AX^jlb\')[)E0E/5j$amSn:CV1SD6PT+G^Zb.1n!'?8&X
%gJ:p^M\@TH?e7cLN3-7f39RH3lWpt#L3*Fa\ITmh.dX9T$^!6R7X`0]+q6dRoh]7SHTR).iMR?5WK*0sk%26LLDgi$"0U<1:f`tF
%V?j"HYf@=Xk9)@plUI]qL:D1\]C9(\A?!FFh4>c_am=W=%R\[Uc(]4V8Z!s]<FV^HqAn%t4=^U4G]NTqW?V3[\$d;UD_nC_Ycoeq
%e`2R!:l\LD!a;X>!93S'@:U`<O%a4dq#G/6\(Qp/-2nm"="5998#r0i;I.1X*c]sY=]HasZ=Q2#\t7Ltr'-Y./q+TdYXFEj)0L`n
%`:'d(:+*bUA]ms-4/bL=6023LJITs@.[teiXeHV[e'EA;d!(V=;-&6*hLl'lp3P6h"J'MV<t,[\;^<eK5qLNs+rt[T#$9I*OBsd<
%2JW%1p8PJcG0Q$XgE&b-dnEFMm:"'[Sm:2R^*o2%Z*3`\%Rg&JSq]JB&6aBY5e9#]aQmYqji=TDUB3-4?'\'=.#CH5g)be6[XO>Q
%Xg,()Sm6cO6"I`6^Pc#T-MMT\eS/3tlQ#<sC=Y_';5B.4DT%5!!.7H0COIG+4jsY<EPmYM[9,B)nl@ska/lhVLj[1$#0]8\g8Cg;
%:)8qE5uKK^]3_(;r^:ka6%;\+$s.#OOJCnE8oSEoa@8jPC&:@]<=g9=YcRp?s3,6Yb>%+&>MY)eC0W#/e?[2b+[h_@M=>Mg"&4_$
%R[Dj3+l(C;d5;Vd3[C2($VO3qnK\Um`b(Kp8]uU0%B8eeH`*8$[m]b#Kr$O+Gp8=B[@H4L/`U$QAGU9Zp3u&ZZSebT:plb$+SXSH
%odb"fkb:?>'WuNZrj)[RML?*Y`t)H[Z-Tu+L\f<lVpZ2h*a&mLTl!V[i*E-Yj*JWb\"=;?oOUX+GX+N)`tgl]X(?@].&L6jN&.E@
%#Nq+AL&)/U;\`Da?_mK+J6\>A#1fqW'3`""_`Im28UhiA=?K]t:t75Pjb2E1kRk!K.5XBfMKs?%3iM2(pq"'B*^=k)k!#*@`KLIq
%#?f?+9JldASh-5/Dk)CA!)SIUrE.]IQ*Qjo3pa_.1_%*C\m-O0M0'pB`8m'aOdMpCB$"Yio#DcAV^KjFd)Q"uZZAoFMp64B@">Ne
%?q_"t2R@S?5qRKqK3?P"!XlF8_mH#]*\X!L?.u<)%9p#F3J8W<I1Z[R9=;(1kh)HWrV`cG0RGmmo9tYXZP"YH/7%k9daPig7,>nK
%#;Go&gRck"+o9*'57_/:%T^td>Z2(gY/1]MeX0lDH?'XSGt<5O=?Qiob5b=SFFbN$Qi3%ikH5s*B34^>_KS7c=U0uXUqZV6M5it9
%W:d/cg@PP0C/lYP`d*o%2\*V]as3XS4,Ece&*=6:EQT,EJ@HTBUp]At9oQn/gBjV0>_g,;AC3lZE,38i'=2VB,W*n?Fe"_D)g*/4
%($)$IG?U"r8TAh+"A3KKFpR*_6(B'AP$sg\QGjNjVe4+2[a4P7;Bmk9FQu0$Pu4do]9iL2Pd`5'6<*';!b3ujH"R@B-3]1kl@?;@
%fVkd1l&i;uj<-UZj9:6&A.:U@V/2f-pAZus=Aoon.gZn+>.Wfbn0l6*!U=gE7,a+d:,Xo`CpkdS$(:(2"06#<g%KHuo"qIb0I7l$
%mf6LaUFirR^-pidCSr:\ARsN#blF#Ub,t.I2#07=42q9D'k?k#$[?0r%?%WK;Q<D%D_m4NXN41uM]/YZZ8QNG>n$I9AS2_>$=d<e
%LTmPQiDG[2'W0)Wcr0T!8:jjeZ<f,5;3=\@ds<dKXPq@2m%tfH0VE0fAHP+?#-c0AbU79K`&*gi3hZF9dSo;f<`ho9%n+,>7`-9n
%/6q'-]JGElb2tu0<<Bi'%EK.F$HP[WlP'QblWX4>i>`)_#rK=6NAQ9T5rVBEa!C"m:eISC7M\^kpKU+U$`"d[FV\^uO\5LtZB0K3
%\1B%2I<]0;35EHU>JP8hB?Nh`SEg[.-Hgq1Zj8&:k;69<boStm/>R:.=Pi&Y8h\R<IY7k:mbd;UTalZBrKKo?S4kNX`#K6:e0R4o
%@8iRaSc!PSYJ3gWP3gF`YcJ!f@a71a6$Li$O;LQ9OUdY#-8mqc)K@%mb!K2QQE$_I%Z1c,YZ%H/JnmHUV4[rZ*C4Mb2r:?+-GrnU
%')p'b8Sskt@6K.4]=!"i9I.$f(@?<MNXbl/.VWBh*8@ERdC(iZC9f[0r>`;P#%3IWj.@+c(_'qI)lZ.#^!j[Db$qXsX#f-Ur<fW@
%cQNH4ANBrG(Shifc@%odON5>dCh/RLK`,hrUhS5;AMe"gGN?-sH8ML+%U9Oc!brLZXK[eGNjHq,&C1ZJN/eR7Y9V4a3*8#%mFilj
%!aO)AB!P?`297"%_`BO3q&seN/]='bNB&M'f#S7F)fZ'/fn:[!C#3"P9ahtM8CM<(ADkd-b7ZO@@6r/G[EC:q=d/u5aIK,tFhqko
%g+]r:]MgGDj;N6p,+T5+2!(8r2O5(ieXQ'$FFU[LUTBF>Ndg9?Cf4:l[,<6)7GTE@X_<56V7sDB:1<uFe79MK8]*GO$;;L]=+pid
%/DhY\D.*ZL=K$DSW)jguGIags37-Nop;$PHrh-6`X=U_ZJ1:lSh]hX"Dp*Un3q>oB2Z$p=.!]WGi`>KK5CXT%?:rPd>5?[K,f%DO
%Ej;$HK9")t]IYnLa@POh+M>#MXB?LjM_/72Z#8JA$tm&'\QfJ6%%QPAI`RrdCGSsR:o)On*:bj>F`BH?:h7$-FiK]b@TG8Dr8,kq
%aG#^kj0h&7ZYXqk0qO-4^+D&na01b>Vm@)U\$Dkg!$+bU:4=Qn@`=(hZ6q_S/25.?KP/f_neYq?DL3I(*6[[2L:[-Q[U;+c\;C=N
%s"bksp:_&YVq7t'B&d3d3t(!U,OW519A25E;43H]P-UCfe>W(8HQ[XOZ3JsJeRNM?DT45GAWSRfGh[H%pO3;$Fn/;u>YIsdQpJtj
%*?1UZLbHmrp=W6b?eU^$"'j7MEV<Pi*\<6Qo31`CDG)'+hf9:;"H-jZEP;kK'^<%,W)_D[/snR]BH)^VJhgdCraf91^4fb;r7f3@
%no'l6gPSrLOf?.l7^=Ru)9JoYW`?k"SgphC80\@6_"43boLb?f:-5WF6@c&4;t-Uu8_-^>W(JM;"^Wj0l,f/bX=G6g0&YMkp?Wab
%!@K@HdNVsc3Q'SbA`OGj;I-8H=S.<96i!"AY4bMFM:43H5?CCQ@Z*N'8@7[thC8F8K!(Zke^)!K2gOUk3r&%MD;&L5OoCs>kIjn_
%pdQ#PCaqdbMSTdjg2A\Jn#dQ4j92enBJ:Q@Ss@I<W(nUMQD8es,,6j=XV[HV2_?#oB?7@d'[[f!19'8$lXOOf3GY:&=rZ[kGS2#0
%n;#&ZM9k:QW;O+?:<.E%W'mI9F?mTn`fR6XhQYpRj*C\Tnjnuqi0iY:9inJ_7L#;un%`GgZJs/qB"gs!Q5"GKT;+KqM-5]2e3GUd
%+=EH`'MCO%%KO4"7R7Ls;[\'th1Fh2nlV__=M@0>=[&dMQ+YUj,,fu/GaJ/OCWRH9F-Q>Q[\A;G^L(a\'!_\sRZs<TGSr'6.i8PG
%4EpA025FH;@UC"UXT?t8k=A^2?E)h-]Ne<<0\US22$+,QJiL0`*6_(>@3rmZ;__GdZGh4&8uOW2']b%:S67;["tPm;+OO<\dN_]H
%b=:o.kR8(M/'G:IJ=2A:U1Y\qr9Ts?b&/HBY8p&$=KaS2DiWE=)dQ-fg3_@Yah.J1$b,cf\o4H@<CK,N8dn>4S`">&<R#c7j^4%[
%.oqn^AlFn0Wli;*R]K,iWY0*k-8:EVeY7>ie4mL6f`\H/1C#Vn&Cc7,b#6;T\N0BYO0SY8oNt0ajoFn<)H!?1Q\iDHR`H">LWGN(
%hRCqt+8"'#nS!^NGDtTD#V.V]fk@4Y\u54bj?7fn<EVe'`%*&",P"dQdej!qn,#Y`Q0_m^?^TUWDl[-0m^n!kFqne.b!,DJ>,Z6d
%D>Y2U]!f83O+Xl8I%5_?6te?qOp5l2D-=tj6)kG52XW`X!&:Jn8.P%L\>Id0r#L#:K/4?5=@T"M#Rd\Cl,B]DE?^__f-!!uEA?\8
%687kUXhNZe_3AZWm6Us3D;Zrh':m'6%8[jn'M#MPj.b:#A!fpbC?O@kF+oL<ST!Ac=8RgX]B$@O1W$O<Q+Y70@hhX8M-ppgQ+4n`
%l26l6Fud=o5ANP46ir,gM0(p$Os/$D6+No*Kr0IqEVYK8`f6*j>I&n?id!:sQ,%$0rt*dKQIbk.p=e*u>B[))SBDPd3GT$kc*O0P
%i$VM,VO73&4S22K#2\ekM\u#BQAi)6PMG8f8QIsYPTHFcJ]f=EDGE]CYk9lJ$g'LOnF>2]o(!YimC=c8r<M%J5'rOZ;\h4ld^CBs
%.t$g"l[cb_7:<+=7.,_k=lF]3i5Ve8.I@g0P0m<D5a&'.9?4bPY"Esig5<0%>.3`0:2=>ko74CJ8[j5Wj11@6]!1_[4^:Edr7m26
%f"#=&E+^t@IQ?Ld;?i:O!>I<fj:pgp-oNsjdCH<]K)a=qcZku0g\n]Yc\)`aFM+/5>'+P+EoWkR/f+frdsg_q,9==65(98K/A(Dc
%TBu@)j%?uWFYXt(5Vd8gMD"MNmUa)1p)b&`A'%@7GL&Y1\HDD$Zjk;r*TH,[7b>nsESi`@=f9=[eSEsFHl=MZ.A*Ufjf?'6pNP\P
%HoONNf+hdfV%$n%h=>.!c.D^/klN;V8\!($e$tlg]aZaSN<O<^<Umck%&BWQW]jJ]_h^-"O)%e&%W2mBPTPJ#<Gt[uo%mY!E-eGR
%.Ss'Rifdn5d+NXW8nCui=J#ScJ%m)dIAs;j-s5]:nL)G!%8Rh)mj,5(;!0A/IQtp<Jm!+]DFuL:lI_79!g:SfUKlp)^[pHk,+giY
%gcWhmBtmT/Am6\lTKR!UdT+#7SbLOb`cV`PQ&@+nDI0kp2F(K',;3XO6[\;=r_sZ/Qdp4QMtud)XVI10W/)L_aSJqkh*Z0-q^"kH
%EJcp5h^;^<(%)nh"Ym+FD9Kk"OdS4)=Y?Q7flC3D+37nnH3b2A4Cr$f=S8sU3GL)qVRs-:4P3+5lkGf,;kOjZ[E9\^A[1_=-De=3
%YOJ!9/lcTOS%&Z!4,ibXWhInt%">*ib$(ru32>uh<@Sjt0I2d+,@RR6V$NYa1!u9[Q#kL0ZG'mTfV>0?Z-%Am-JUj)5gTI8c4g)[
%'rIK_TC'T+=@mC':^EkuI*2tgGNHY4!c9s[I9+:Y.M^<'a4!eLRmA:0d\H`[*R?>gag7SEL)*m>OW%V^-aC38F#Z/jN_qp@L7(DK
%:U%eq_&@KoV+PMTW[5K,*Ft:bl=sR&euP"'EiZWgHoK,)\BG,[SNCpr[J7kEe17[c$8i^8OYZo<Ms@:s/#0J2;hk!BZ:%8_.Gg!f
%HVXO^\ono0&6md)g'YsjN%k.6XC?l>IV.+1Nnq9Ycuf3@N=M\8QXIAHd'h0Ya@k1>=FX],C6KF!:E_1!d!Hh<hBC'+oiqU1O>![u
%qj.)X`IRik"TYI++E&m;4k+mW=386h#^JAk.d$DGn?e=`VtO*4\@"s>X1FQf%W.dm1W)g&[B@WJW)=j0eQ+.[/,W#Y@$_1u4&&#$
%,SQJq]$o_?KbI4qaM-('Ci5Kjmc^.Q.Dm?(+L9[Y9fP\I2=I/dC[es\1>6p'3Lut))-U'faG`*8)1U>NT!P@*'cr-JErB)mkPP3#
%-V[!S&P+6*\$^ZnV\?(;@6`@/GqV>mbF%9e<djLL=<7qedc"fi8Ipa(CmCW>GB^G=frZOr\O4Kf+FEadb&9FTXO1%q`9&6h7eOMo
%nBT"&;YG%`h#u^i[UrH(Ip80R..c8![HPj,/>^9rLb`V,Rd4'Nf]j!_"@=c"eCcJ^6RZd]eD6I''Km.&LP"NqZC:ZigC44D?9?om
%A<XSJKH<"$B3BiJ8kLeO+HYU=Q<%''p5e_Hkk*=De5PPl,[+tdC"_clGhk\l?B]S21Ha7`8THFUhkF^pMVBRiOr%u:,m;kiDuBKs
%eRRnZ0Gs,U7KO3Q\5qQKqR?(E\7HDh1O*JS7b@O2dO3LMRgK6\5sTq'>AKc3;.JYrNhQkNlWah`WjOhZ(E*YK.Qs=Y=R@S"1Z;')
%AM_fB!"Uf:<LYRMU5r57!7)JB&lr`@NfL>D04fs8lKY8-:O<ZajslBBOQ*J>U*^0Y%mGh1WT+KWZ?&*(lfrQ[MomH#a#1u=VQ+1'
%ESg*K'$PfX,_=JRFKBRA^BB\>\J6D'Wo2QZ3@T+&c^ZVE3^QP?*NBuN9Iem0oF$Z/4NVZ%+aoqpFaEP(d'\%<[*to>WsHS+LkC!m
%W'EDFTP"d5-VPEoeWF"Pm&l"O&)8Y=Fsq#r%F4=c(07c2h=&qalAKoUL)7k;>:9)Nd/t>\W*tm[5M)/``c38!JTA.bBWJ,6nh'00
%X[\B)Z27!rNEpAiP;cc9eR9iO=J.58\?4JokMMU^]rSg;_6%D3,S-LD0gT>R]Fe.\fV*_D\CsI&^,hNS7suYBO(d0K*aLYi`o!<,
%qKr#\k;lYOYL)uJ[2_)>e-<I9In_&e7U<$K>r-H'6;9\XJn%HC34!A"'sJa[B'[T,q:gha2>[pMV.etTKC)f,C9s#L'>^;m+i!e`
%&?3-+B#m?8_Riafq`gDkbN:JGC5tqK>n,6Y$="K0/oUQAlEE"qH>]Af%t=nf[/<'J[G=YG,J'S27[H9O)F)k`7/?*H7'+.98f;]'
%8S"a5h=:=6"<(I<(aI^]V%#;)l$]C@57duNM'#CUW+Wh1oaMKD3Z.I;^C=hX[\B&[=SZ-m,dUZ[3Jf#AX=eb_A[?.L4Jd$\*igL4
%K4Du2Z:H(E_qnF"eTD'WSE@--3Uu6L3'QmOe!KOj6f]Vc1gjNlpLp53JqBUG!jdNmPipUs2ra)u;'V%MSSpcWD/E:9Qm]VN;&-EB
%%-@if&@M`IhYLujB@pfYB<)%`_il")R]+9UOqpN`c^jDoF+*&t#;neY![d`>e<(N]c`T8D<Flii$E")a4$\/X8(7MJ3KTjlorYM`
%)I-+b5Q8)B?I)7cX*:d!?3P2&_YHs4n"'L0.<+_WRk\C(4l>_KIKp"F9Z..m271,8,.?U49.T85Y8gX4jhqE!^2qoo9;/@aB3g`r
%VoE55TAR>l<AS`78m^,C[(=Y`/f(IZn@56,pJ!@&01aOb4g.TaQa9[<p-&Aek#GId?j>Q_VoVSlh%VV!@]f1m/W'5h240>;jJFS3
%ETX:lYH(e.EBi=JVtIbb$ZDNP/IHV9NiR%rm\Rk'He;XZW*cca&kL5le\^*jWudT>^9$',W9LQu0itn`XWZhkj:$O(HSf\:XMCXT
%_l=E71es("^A9#+[rHO1858"02FZeDQH'kj/?[N'.ISj+`AK]6<D<1?APH&q^%CV<VUeVNM-2N!j!aWlj(;^G>\9X^W-Im@H9CAS
%A3(^dKOL)l..#m#`?BDSbAVTEmAdZ*-Q`Gl]c9e\+,9,;qk]qqI%<dJLoY)f<&NWGWar;u%Mm=4$`XqkF*3"D`$j%`.h=.S`e[b$
%Kf^I4rdIkRa\@rIl4XbqBYI7"D9_E,Am$+;34-9<2H:X;FP(EsD5Jet=HoA#XuMn%BkjEFE!1Nl+%/+n!h)`oQl<`q]aWTZa(Dpj
%.fo!X[fckGK(O$N@F5gU&*jj=+uD<BFn"h'J`q,`OH<U+]@FPn<W;kR^QZma,AU;).Z.P<K]90#I[ZX9S5q_MGfkC_$1<#/5R,pU
%0W-"a(]RB-1OSfO1dG;_nh'Y3IfFJ@5)9L#O&a0h8b,d`Nf%IK9\*7^59gY\/!aI]/[K`7s#J=KT:W's_t\NML<=Jc.rR]$.dr%P
%N)fsCKI"oe>]#!=d'(Ki.5f0B^o;U*mjiug=$S3!"JhX/ct_;"WKL*H[dnm)g'2h.Z-kXU-O]BOrdI(fm&[j'T;AlgHk$Uj)QfjB
%-^B^GQ;5<Ch,d4;g2.N,&7[0B91[1TJ";*POVJcpr^.LuOJhTj*L[aB]q)ag:UZ3m1N[6$qNai)0B9d[KS93&J=u17$NpW8/dK?N
%84/1"F54O_M+kA!mgnLAr<h@'3K8#S4UppO:@IB)6904WGM*':A&c,k=;8g'bDFT,mV$d6Y[\rq7+N+tM4S&7#`G+B3J*EZ"Ir&j
%#s*kSc0Pq7-#*$I:boh\4/@#;WUk%6-N]r_=Pq,c83C5>c;DUbJ@ZHs['9f8%%iX_<%1X$KB,5_q=4E7R3<e(<IYIr6::T5Nn=4.
%8@7@Y%Ubj&b/=:?=8G3Z2,C">!RMeFJH8fo<T<cE8c]]7$*(EO)Zok,J2jFD>_\'A%c8e_?=1(K`uPS1#%P-UPfh$?'i8mYj2Wfs
%+NWDMc,n$+laLm@SEikee[)31JF/V<l/XQ,aljo.6q;8%/tHeQ:/&Gd(@gGDCcVinonNc)h5hM0I=RmPpaM\g))RT8q>faTjhs-1
%d-_+cmd0-<26s?%"\s4O--1p*fL1T=&-_lEg&*7l_N-!OG963n,dq)pWEb8_pTkA(=hEUOrIha!aTF>Z6Pd7N.jW];X+66uhZM(p
%f\&W)_/-Ghj$jU9+p5(^#;N;RF,*8U0b=`FosDa?bQuK2eNl$K`9:MB%?SgZ7RU#,RZJ<%T/Ep4Q,M$>3K:$>C1$JkZ0/$'KBX9L
%BiIao.=6T,KU`F;:4O*`+*<;;Fn_Z[#T[_<if#qO,m.9-p6cH&d8-6'>X1sm^U0#KfML#Vj>qr@kr?U(AjY#alTEfj%&TTS91G3U
%/F'_]E>#=["0C75YnM=Z!;(^D.u><p`W2U.&.+qq!l"?mj[_eb#U%l)OVnVp9lmJN&SA@]SRfsq7nj$A=qs@OD)<B#G)W4'S3Cf*
%>'9&`6"6p#JK_5XFLkhJ5]D\@2(j]?$(!n>*ed/ScTk09#4F7]5S&>\IZ]Gu-3I-q&<d0GT&qg0d2I@3@QiIf*1b\-I0;7)mB[0W
%POn:h3RO$!r(A\o_uR5i3TL'/Aas.r4=\p"X@LR/!>!k$jU?5#?okgc_Z8ieN9uHM*Z/lT!S3jVXc/3i#CM*qWoCgEP1^<*JV1$1
%_1;\>V\9HB?Di(WHc;adRK.\O59,@-aNX`FS<tk^eVTIqTVnD+;$058qd"h>5E^e!qaQLO-R3aFCQE`_!qO=e\(RAjd+KfDi=L*a
%#-lh=09uM3K`5DX.Jm`3o:C\)=b3GZLtKqJ"0?<u"M]-3&t^W48R)2;X]B%OK`C$2qY,L:ci<R*J,8r,J,1gJr.fe$oCr:\+T7;m
%Qoft<rcd9"rI=a3J,Z?1rr2fPr;,#pqsj3[TE!lbr6%=WVuQ2^s)`Y`^E!:Rbo4S)o+M&@5Oa/%&%<Tn)'g@Xoe8Gp3ZtqZKOVOL
%E@5BU$Fh&9rMrujQ`I]X\D>AbndY8d3!"$Fd!/M["^q#fgP4EH,7YF,m??tI_EnN28h'Uc44l8o+sR.(nK;#BUZKt'(r2d]qU;S9
%OrEP&qkUjKXFoe2n5F&[L(840&%1NIk!5Xk/@R`dqh5O2ejR,OTmmD@)(=kFhkuLbrmlLV(FhoLU-h@7j8dZf4?;Z45.U#\rStqr
%fj0@-]%NJ]DLG7QERFEY,?>c:CO:1!h#6;EmfDp,5KK0dE;ua.41\0@JLAcNVu(`EbkheB\+.T%oChujEUeLm?bWZ`:7f'`^6!t?
%rgQFbn.Xc,Pf/@2*@("hnt+c^OC(EB)PE5W<B^jfl$'BoXFWo;O&C%$&nU28+G\1W^b_VWZRRa8)TXuXr<r]HDL*^Y!>.BL1$Z-e
%"Vdam21Pk]5j[!h$u'J;-iM2lZ\BG+SjiPMm?)dbX*#c8m84b4Eo7`H]$Wg<T!e^]]bNLTcX69oh[]3WkME\Dn0K?\F]Nh:##:_S
%o=*O;bW<"LEb336SEsG/Shl1:K^j/7l>j,u=M,L/rS-?D>B@5kQfgt%p2sqRF9XG^T%[=ss!5/J(f*eM-TNKt"T<e>kad&A(K05R
%gF)pdgGAZtXa]Vfpb]6/>]a>%]8*00Qf%=TXj>m*mDtSNgMI3O?$+'6]^k/g,gtSpi9OEVp(Kl@7XE,<PPp`n0a,GC>6OK#2=pS*
%0.4B,J37!qOY9*0c0GePC3@n!nr+q`=pfj$RBj"l%`@C7IFMTeaaLc0J;(d#C$g#cg$=!U_&)O1-"ljnqS>sj8*f>`]O/b:$iKrY
%a9sa.q8+p8gH$?EEaD72L3Qrln.1N^CKJ9-f#C;"a$2L1>a*#'pe+uf*r[.u,^K9d%,[1[XF68ebK,a)WmoCR`dL`5EHGZHKjMGJ
%#$hYZ,#pdsI"3KjJL>Bp6*rE*8lo5jli&"Kf=2RlI#l6V#&3nu/1Gh*<Y6Ak%\#j>91l-%EjGE_ES>(hS\2i_VCKWdVl%'hR]J5B
%UMn_):lK'"lhTI[5$2Fi]5YO42s_36"1WNAX1O=]R!Y0<Fo"DV;6O]e.#eUj<kJGlY$B6hP[Opp:jo>e@g1FcN>B(,.jTH47te?.
%)9s`pTZlrE%X<%,p^aE)_djL,nA9@gZ^o`"<Q0fdC3Y)]IM#?b?3,tFqF&!8a5`**gtCHDSb%@E<YAWI&poN%`HW<q(U50]!==d6
%=e92Ri)!P86,?1e[u/m!Yqe/OCQ7En?;BV_\`]kd]-4lKn$`u*7?mQp8,?aSP`l2[_.7>N#OhG%oB"Tr%pRiWof=`2`Qg<W@U/Qm
%"F^sQrNMtC4ue!b4Y?.$rp-b73-.NngQ&E29X9mP'3G`p@miu,7T>WsruaA(7ALn=kgJuQHb;GNH92Z;[[,$Rd?`4q*2?'_8r?a^
%J5Ib$]a6iXhHRks54p\'AeeBCF'h4LK+Ci>6Y,!l-usMSaSI;@=NpLO"#0C[#G[5k\L1+FW:$jI23"2k-acsn40h/Wi$D@(eql)Y
%cO]Yj&&(l6o,=fPR[d,V.(+!@nUCN.(M[X\(XE?2,K"MmU1i/HK\7UT,GLb[G^VO=(Ga=;Pc6Zcp4[R.>OuNTc46ND*2YQH@g1XN
%"lG.XZ.uC,irCm=_a-!oJ`6F7k0(EODU$F*XI`5HF^K3r7b8\Q5;XKIp<CckD7O.1*99Mk+$PK]LYVY9[m8hM)i"RfG)1pLnEqDE
%Q3qV0%F@"rW8:8S\Ka&fa^4$;@K[Xo9BG"0%\fl<Er`DK_#WVi2>+\OQ__FDXOV^/#t2Pp+P*JE%m)>F!PD+GJ#kOF".kJ>ikY.<
%A,H6b<t[6<H.ZD!3bHn&V`e\@](L:QdJF;4d2OWp"j'@=%WYgJ`i;9jF3mjA8al37.4LS"]`OS!Gm.0e]Q7B_8L[ud36!/?lt:Fj
%+_#32J'PY75a/Bf>33[B'Wn`O\ENdo2r(C$n#S^QQ%=oPhr3^Do=CjLf)T'18#_s&#J%?*9qBu$[@K+U"nR+D$,*5kJW8?ni5I'2
%lY;`sj$]ST3SF9j3B:5g+c+usC4H,"lE#4U[!h4[nS#YgT8^blegC[#<g4XcJ01&/=HKe@!VWu,`nL\&BZVof(Q%&bg1T)CXKEGB
%dqi<4#IL.=h.-+paL..dn65,qPu/Bk0GJ/109?5)GeGnhaFqF/dB+s8Rp\['DU95BT_fUD\`iR3&-FiO+=;rV,-R!RP_AMdJP<)8
%;2oB[X(QD5cMFtMga3-IZOAI*]4E$Oq\In^GD8UAdF2.nH,DnC7J<sD`IofB>[JtOU,f;DrdOjj4:+V#Z">[D#Hcd>B@)adC)T4<
%9ZAb;1YA)[)l=_'Z(K?#-<^VLA0`W0pue6*,n%Z+#p[NS:FTedrF%2j4IHS]lT6N)4R2dZ!BRTj6h3[OcWW&h-Y[6GmG&^m7(#BA
%Ze>P^'ftC0!X80@HHT4T9m1^eY1'japfkqPKQ!n_Wq-+.Wc]JqqSJ99q)ecF-knXF^ZIMBFEQ5>D*)ioQ!9O$e]*E2i9NsM>-8I^
%[u"giH!lsh_:p+A!Skrf#MqW<LpM"ci%^h9"bE6pM[7/pBumj6SK6nfbL1hP+$`?S^_6?WM;&&?7<4fCM;dm-%Q.6Njf^ZK0Ge><
%Gje!?H7VGXPO-\t,tTL*jP'DP&%oBUPC\SWUUK]cDW&]C'E(?dTK;]&jBM3'0A(`T1O+/noHe+R1_/!-"r)e]QoZTa3eskAd+;u6
%W,a#-<(M.n9e";.Lsbfo%(F\sk6%hQiB?;u3LS`W@4A<Uh[Z^RgHTiXqd69b[^?Cqm3(fd9L]s+-ar;CO9Y7_Q`E(C`MKpeI1"op
%/YV?[lI8N#Q<82[#t,],6Fb%mRghH)I0&3e`82Xfnk)$Lro_?tV6'RPn)jg*Mc^E2qJgRcl]=``2#jH=5MW)iAYiMhUS_c@Y=53Y
%IU!cc$b:#2kLNhS-^*WG`s>c;8S/mG8e't\?nItni7]0BiU,BRg]eu*hE6+@f1NNm_mi:-:'ZB\_qc3Yb]OrmG_DM<>Gg:,^S2qA
%]Zsm(+/Ii43fBWSfSb-O<5!k`7*3s1)gr8J&$_\Z/"W;F,6'XA@9b*mE6YnR,M/-FUU8F;oe"l:,*t-sDarQSJ".-FQa3_2U^BiD
%g>&F*grZflfg1IH'<0ME&p'PlJ)X@agcJ]ZaZ.YW)IdJ_gZdl4I8*kEoGO5SZ(<q@oPI)apbS&C_@L7>3u^VSM7!61N_ieYl7+Y.
%ee>3&B@)lG6Ad6,+3t>p<&q+;VAa`gr"uYQ%b&V.dkuDB`/!5F.*[&8V:-%C.$`F7j\qbZ@rXGu2K"`qQTqe48e"G.,Y=W(oSL(0
%jILTK8EIl3kN6UpbL</*=R"N\YCP/0R<ni*GUgBs='9u_#--ZTVqf>H98h7o1tT5Lq-]7'Le(Ad&!2tR49J'&d/?1L\S_o9>G_+t
%S*@W,B"m5Tg]$XeHi&+:2_ALpH#K,#7*Mpame<;,)OHlb3g^gE+L:,M-J.tXDkeT-RE0a_,Hldr#OfPe#T2>l__J<0M"#BHnRW&u
%!iG2#T*CVhX-M6Q5'<e"KC?UioMhdNO]V^9/8#9=$R%m:(YkR)P2+b]9!.c0H+6JErfk+p,kul"k?a$=p@]Z%:J(Vcmh]_u9$V]!
%iWU30HssJ#TYX2qgBo=E3C"n]=lq--Gh8%%"mjl;^uMB.9[n$R(J8!c:9VZi39R'C0]jJ05dBiYb]9$5le-V2-/D.s$9?28LMnPg
%Z.mH@?,G3*WW_kN`1HRj,BAET^](N%rL"8E/RCHPcR1`QSs']UH$ar+9C"&)r,?KBqX?u@Dps.tT4[RcWP$`[1uZb23Nc73&Pq38
%L[4<pZK$oMh3i!?1Oltm:G_d_e%+R$hcm4cd;AS23N5`8mAQYkFJ[q^5s+<i>95m<2<;Xu;*raL+`[!3rY#'Ihp)0oDsigLURNd!
%MWFL>fh8F(08$n[F-'boSsRsl8JV8Q])J5nZRQcpb#nl8errDnphaUkDS(P)1\eg=4KEn.eYu%-8SRb08<8rr'-eZ[+1/k>Kh.(a
%nEain^Q]G]2<B^<chE^ujZOq35"=J5K7%)b7e9c4hqeF1X'-&bV%`a_8WJUZ4d%INI&RSlAs+GtgV,*.0j"f*eTG'@7A.VYjr,WG
%S%R3-fjCo!c>=Mkm%)>gJ)*!H.riuEodii7P@X.<pgAkZ=7KU1YlH]E+D)q(RJUP2C1%f!qu./Wm-Fng]bqqJ*cl(6jQ)d$PBkaN
%frINl)?Ag]l%(d`C)g#mUURKY*-K]P]e\N(1(8$[OsR%B)K%"SPu,>&[o:(ZZB^i)\!l)S5q^#L'O;]L+D3>==sLck75;_7i.<jW
%HZV?jTbTB:j0!]XK@"H'LR7]S#Anj<E4HF1c[h'::6jP6iob\M4QKD_UHNF=(L`E;IFeZtUd7/dbCC'2n-!>aQGW3n5M5f_&*82`
%&m?_J]!*f6n:gbO/uDD4kMls=4_rMI':ur;64pU^bs$\r+X,0YA2CL.rI4e>0;X7'"XrH)r$9tcQ60!Yln0ELEqXGjYXa\N6`1;9
%o'(\-/AC_`gS9q1!B.J)4c\)#,LY,T]ZU-2XuQ;RWHo,51FfgUZEgdK*RsWjM&MN$F-<si"*c;%X^V*nJmo4j5M3j\)Xr(p0:jBq
%`\kOI.",CKT$lYdSo:cE@5%>mm^?:`(blIp2'C!&&QfPeB[CB0F_92LR<%jDk$AV:-u2g;eGdP*LJMQ1?L.Ad:m.,mfi(+,`((;r
%<T/"&s4R3ch]gE[cX9l0U:m:_HG0P/VS+RN]_mcj%:/[gh;5:fX:LeTJ9l[h5=pk9n+huR*07lPmHN^sLqTuB\ls&T2(IJSo)P+!
%qs?&28R#UkN2NeA8O89MG2J1kj<(7qTp<:J&+YFCoMV+MPFp9_CX8%TI/8/n#3p)f079Yjfff&>/t^$FW$FUb^D/-N[s+dTlqr@s
%r;Q*ZC\%>tkAIH\fR73]oDOAjh^8#JY(baK>rTm-F,9A_obVN)I[6S6:_1`79:cCMmC]Y"&NjFulaU:\B?M'lP0\L#gRpN#mub]/
%dBd!t4f!QkOP=7E_[oEjI@,YMjK90nd`h3D><YbVRGh%%(8#N[rkbs^bMgSARJdY7L"QDr$qnLjnp^nsLXfR!6KlSG!,.pHiq('d
%Fk\X;M1+VOl##S3S=^Gc+!oJ5lPF(RjHo*c&acoM&i6.*pDNPn;/uoO6pY-WpH$AKATV%0?G-]!@X+W1eW60s'DZX,?Y3Zn9)aR1
%njt=C2*O22kDqd_HmQ\Yq*GlK4j!Q>V(]ZiC51!,m6/MS3KZhcku#/'qh:m<#$7Q>pCUIoY+9.Me9@laicNl@3Y*DSWuBu@gb2@P
%>j3Jf=(8`<T-R5$lHu'Z@AAC22)e"-8n3Kf&3XgcM0W&HV(\1KAZ?nRVNc^f:WpoS['l1d,[qQqUgtjjBkPKB>-jATbEsQ8Z*He3
%8r`3#="8',0_t>t<D/3lNZW'02P*.YH)1bnX-PGlCsWU!C!E<Hg<+qYJqehd+q/n]i7Id\bjSU1#TmP<YS;2?VOj-pm\GYdDf<MZ
%O0Bq%1=+Q+3O8G<ahRCcZ4Z3T*<V*cMI!9`pi%`4r(nHc<nr7<)2Bb]fIgA+'Snar:<L1iC&l7(>CZD`mbHr,8/g#/5b%p&b=?WB
%li\O2,6oR-rnk!MMmhf_PP)\qVtKt'HWp/P.6A2FT&j?;5RdK_$`=]gpID6#AJ@Vt*o[?KNUb'(U7q8MZ\Eao#f>U]KqBV$'9F>`
%+5K,n&#d;(irh>LE)8E@l-QYQha$n,AJh)C58TuUpZTC'9lkCV"GiM:PMOCm`$"dp40d$u@S,G?r+5u5-*cE>N8E8qG1Vcm8&7=A
%g(rE*6-_odp?W?/[&M#5+PMNoAk`WN('n`6$Sl.F6TcqF=opjD^uT\"W4r:\e8b:@%q->E,0!pOs+S*Wkdj'Y.fp/^n)6-6_'3)R
%j!aCDTsIrRP8;4Ca6%d0!.2ii8%2?28KpW`qDa$Zh04p#i:Oubf"UmO4Y@2bhF=SDV`O8%jCPdc"$iAH,22\d%ek"?h<fMA;)]*n
%GLht'$C/aq[J^5<#r0Xu!'ZDR)T^Pt\>/BTs*J_9ZhK"%<lEYGFJ?f>jTNfmT!^5kk/@N=mdl`eXr#?Os$'iD_0<]L3C\'n(W+Eu
%TLi7PE"^V$ZnI>>J3E.![K8Lu2Z"^)<Ajq%cT5,r@Gi2F2/ZARUSbLigaHrB(;!s(Lj<J^lCoCcQ[H7d:JK"e2).AF7Q=9XnE[0R
%BC3WREmRN*DGXr'kN0_^WOONF9`_tgFnY3kQ/b:&9)$1;j=1F3gU.38524Fo<(O#tl?u2`$DkDO_1%Kj>qOjU(`iV$L_M:-S?\0C
%;A%WHOEHMpJ"QM%p1%N3iq7PI&Dj-)+AHMFH4,o:7(imO();FoL`D-1mL4NsnML22Ya:r0V2*o"pBG4#N8UJ-aCjK`7QYY*ohR/*
%\k0=4,L_IenD2]t>K5%,=`fI+nBmK:.X]J"R&rjM$;_pCEX%;Z4<8+jSN]=Y;&0`&&@@<.akZu6+:\sig;>u=COefuB.1HuF1ET>
%&flK4llnj"I2T>&?tslJ$rY3(hk#oi!UY'Jmk<Ki5DJ)`6H_25'*?G"!''7MU*ri9a3XY)eK(YJg$\)2,k<t$4#7Y!\q!9kmRdQq
%.ja3U;_pse9ad]TXR;+.ap[dW'*TL"QCBa^GD<Zg_&&"""q)9[][4^#E@`8MXkg9IQB=.94:p>&RpiZ8rn$Wp$Uo>_A-[[f(-k7-
%"EY$W(Z;n1d34@gS[o'!fXDs/(@30h21Sa^)j+FU5n&U5eCpZr94_UW&08:a7&%%YX,8DoQE<LEM?Q^rpar:B[+b(1oj[t\MUjmT
%+L%I;WW?#"M`g.u[LZ[&Y_dEmTeu8+7*>_]Gt)^M-g%![gH>3=qDu,[[_ZdLUei<*\ui$tgCEVn=MQqVNooBs0FQ+6c`X6nf*;`;
%p7gu)Ss]0<)%N,8#mE6hTe[Cja6+lcFCqoLU]qBF>-+V`L8#M4euUs!VDLU92X,2";8fQLh^@EA):ZVV5stL[Aq)jrY7Ep$a,h^2
%^+VK1*Q)nY`sX0?k,%[dKl5pd<hR&o/)ud=0n]+tfW`$e14\TV?OjkGBokUW(&Qnh?B1((7F'A&X9r$i.P)r*hMVm!8'Kod+&+QT
%%H)?UFBn(7kUtg^GEbrV?HZ]#OrB\*.TIN-EZbGQ9:GAhJ5?.M'LMsC=#_YEq&-I&@<4d:Ir=FPSF(m_Z:'IAm@Y&b2bkc6e@1nO
%YcJGA>B<Nn].boQL]iMjAiIsW)/`mDNt#PqVgs^_r0RX@s.8+o,=HE/KM/Tj=b2)2R5$]G=1S62`#&<M_PgsmgM*S>ZkgUR7dE_0
%$OKc?d@V"5=S<S+2eSJ[M]^W5D_F;f*V8smhotb:<A-?Tc49RS)sqmoAuV\(6/5(n)N$N-?RmLNo,nOsQ]%cZ<Ub;92qrJeZ'RiI
%P6^77E;fLbX+PYDA7$<p)n-:X>LU#@Q;HS*p0>LI@[H]%i'0G^:YS5\%Q'9[%ea%`Mal]>Gb^.?(FRVjN$!^[CfGoKQT!hWN!5h>
%?(dQBShR6OrqZWG8I<t)[HeutF0coO&-ir1rI`b9XUZA9N^N4:=Qc7V<AJ!?7N?)qil"3DE2&c.I#mONF=*$"*uAUi_\c#?k8CYL
%Re8_k-@=.?4^07TZ-O9%m=kb&34M1hGiE)-<Pj3H4#@UQ@1atl:[?i()_ZUl>YP=iX'!"0jWi]0Jb*RHksT&O.gj=,(1)!cIA),K
%I?O*/AZ7UGktmGH(1]L^-c^NUPejt417BR3jGFmkB;`qq)k"qnN`.hJW5&D]n-o%/?<X,@>!>]qhFB)7'OYsI[Hk5H1U"un@h:=R
%<CFI"V$em03_SK/9NVZtbYk^I_3g=a6Z.4p#L8N<hc+QPYe_=k;pSZu0@bV[W=F1>P^D4rcjU,;c]O;tr1PJ_AHH]Uf\IT.@aJ;,
%;W4:j&d@O(aS#0j$\"BgW=d=07/KZ/K3HGh5pak)[usY?!,1?SWu\#EKTq;Yd0s<Oe[/`.9g`(t6XdS?7ughka@jEc4j/ri46d'0
%Ji0f.'e`^rJ)P;>,#dSWp#X5%`TBHE\*0X:AIJiLK5Q>efOhNC.)'T=XPPdbop4:J&f$RK8?9RFP;Jm3(Dqt=b3NO4RZ.EZ&I'F*
%l`0Yu+sj;cQ_r7`CQI<ra\m1rJ63*<.N?ZhD93":3"8]]=;0cURO?nZ7"k&;$%'N1G>8%rgWOMBN;?uf\$NbRf.@La8Kr.`bFd[P
%!T_RIGiBh5jRX6Md9jjOqYk#m9_8Du&c2B0(Gr?0.Yp!_]T7V-M7G<t]fN*,J.+^8Yk;bsmPj7AFE]Yk()dGA9=LP/G6UnVKt5pK
%3a(bAAA]j/9N\I3jaeFk,uT5.Gn!TM$n_ajC^E8IBQeSQ(E4TK.b*#b'AM"u2meQVh8pV`XW,sNo@k7\e4<<dmTqE_J3*1WhqN31
%(OU3Nkd(ZBF;VMrHfO8RWIY)9Xu6^Lil@T[j`ST3ch5kVX=Kj1lj@14@*<RjUp(9p_JnO;Yqttm:^;;cf+^A.B1(!;*4<aYYh$_c
%P+CqXUC?PW==H&ic1:3,me[X6:J5pQ&cZ##q8,,$;nnOoDhs5d*#SEg\_GQ'qRXmGIX`IVX8]?prN<oM;GM`<`t\bR(?ITRN1JD<
%//[4S@<+nBO+`;Ws5BH\;o(0D]raghhE:ZjLHL!L3_Xj&<cL.fdW[J[U?RF4kJ7D5_uChQ?s8DRq]u]-RBFGFc17<=RZ<Wn??5?i
%gY>G>QkeIDi?2`r^34iS(6BJF(u?/bqU1F'PMhk:5):8t.'lGKF]2&:0>g)7n;tetl5`e6Ejg^'$5KGdpg[WnJ`i8DMSHTF^W.%5
%VK.nHO\:nToJ??<*8\ZRS`s",q6HS)8jS(q5SV;UOdn##b0_>f8a;d4<TgeIP$%[M*<-Aa@!;j>OU_RhhWB^^'26o+%mHqXH<SNI
%Ws"N0kd;(>c0e$n0opf*p7I=JN[%CNj]]rKJK<h2SNDcGp%R#k&l+qGdHg9u-\H%5i3/o'UhG&</'[4%Fh)DBoc:5tfm1JHoqBMi
%W[S-#W&8_'XBfW%Sc#]pInrJ;N9EtH3DfuP91D,C0eM\n0SO:lBRD^O1TqJAnm^c(Xscr0QWft-HD;MA4b*Q[<t?Pr(8GA>r`Rt8
%E&Hr8F$+[Q?'dIZG@3O8o_6iL>BVI[SS-nYouG>;!7oKIgEq5kbqnl"U2>)k4$7.n>T]<(Li+dK]!JG@3Z:Th$oeJs:]+ToW&E7(
%$EC4Q>@883LfUBBZlDq-XCb5X]OOS%Y<0hfU1>\#e-"UHgnDL\@.`+SB\E6;;H<Fi634N$n^']U-q/W<I1%EraVO_TmGtXJW(R,\
%Z'-1^rLIJ#HSR*t6#q1M'+^S^K0`PS1u("4$%;p<Mfm*Y^0Si!K"KLO`"UU!m*2"g7/'$ZaRaX"AC^n#LQ``/ih2]`^%0Wg[2aB7
%oAeSTq?EuC=o-PiD@`T"V/`fFoWX\%<#098m,C*)p6s[q#%b.WSXEoUA'r]qD/s/q[TdYKo=jOMrpFTR>(;:?GBYU]S)V9Nj-DOk
%pP0^`N%/&phh6r\62s\m9E.1,&=f;-3+n6lEr=4E]>'b*#%uA(_%Ym!98NE%g1@=Gf1hoJIg'I9s"c@<Tujj.)k(u!O=):L"B&A'
%h?*>:K25O8NBj2fSqLG?`)Le5I!kh'@iLSb7,.P-Znn*8RF5BQYq6nAQn@@"<9.](o>0s0>kGQ9iS.8)/.UtZlh,r!UN2r,HQ0e7
%9BMa^G;hlRP&41Nm`NY:=]iC:0"P7fcA9sIg:%LdU.lZ<c,\^#k+%eQKpp_i_+a`DR2C[MgB*0DW(c3LL=D'N[3XA_?D_K44`HMu
%bER5(?]i]f^UNM8\]5*fS.)9R<H";Zke3Z!<@3gV50-gjeCIe`6-'tN_^&*AYj2dHgi(CY%]tpuEq,6c`@>J.r:@Etc(#[NJhQ5R
%0jPS/LK,qXXLjK&@YSAfDm6r5iIX!FRI5ugGqL[/H"q)H9KLZ3As/r"/.@l&(%TQH=L^>Nb5pMM!(U:EHXf?%<bl_Q=3S!AT<hgi
%aThf+W]mHjDiYu33>GGS>K#5m1X]q*8!'aBNh*P/:cjN=ah)^%aQPO9V/mlDc2Ki8*b`;Q)>Go?U%(Kc./(JAV]&_'&faYgWFZt(
%FL;sj5XZ<b$Q>\SMs8C'e8OFL=_KhLU:GWh)&S90GuBcC/t[_PQ4TS^J172>@g;o4Rm(C)VA7:I33pL-G]4(h)4K5-H5`iB^%`<?
%je[m6e"HLpVbV$nMC(M-iK*l"N?`B1/OGW>T&TiJ8:R--m5`8Eq,j%gH"O)$))%c>kQkN"lan7ZEoD7;mm3O54,<F#H=5=dT!E2)
%;I*q@/%'EPb]8bLE#V)H(S0k-J`o[?G7@XmJ+J<lP;HO0M/@#P-4-ARbJ.m05]pA^]GS)6GWnf&a4kE9FURgQ$UD4d3o3oX8V>;F
%P>%3_fG,CAS;*<T$=^uoCugF5Zb>GqD?iAn2o^%-CTZ:Yn\Lgq):klX>r%pCD1SM#O&M.16Lt!Ufo.V/o=[?snq)6-`0.dnpYYo(
%6uSI%J)TR?lZ%^`2pH>jMnc'[Ue^-,a%c:.-&A_t;Z=O+=WLG$Jn!5$q.[$9nroOjI"3=\L;=!iYAU1(hQ8L+/g3Df@LE84QjY"W
%]$-ON-SnA[?q,6PaP0jD"'f7=]auk"PC'MO$XNLS[L6\T5+BA-D=S6MN1!X^-k82\VY"SJC)'5*dIgs),h^DY++B(?aR0-/n99P[
%MW8mV!86:@gq"uZhSm*4jhS8Q-4Z+PFNe61"'N0=7Z7\9jj!:'+RPH&X=#5P;,Q=hB-VJ94de^aJGVj1CGI(1&3H`c4*j"1U[fGI
%<jH!SPrpo+mpM=`Cr)QC]+"/mqT(s5VO?tiCB]*9j0VF&Z$_^+o$!2Ra78Cb2fYKXaOPq!'7j6&J#lNOMD`+h_4#O8b)2^j<K8RX
%raR's!gIKI4X_XoB*R=^<7+/N`"iu2+B-,%6%ap@n;(J&W[+dtQRC/0MWq;6KCs#10!uuA'_>daTd#>0&=>gn_*_0q]Xr&lhVI=T
%DneJh_JcO,nkd5a\XQj&<l$XuY:mpb0R_g.pu"&t-Wi[0YH19:jhdQ[d-.B*!aLlPR_+n25W^takKd*jX*"DaeT3=k?5P+-c1K1D
%P>B4^Vql4ir=9MD2uookUBTu%/[@0K#qLMb[fnK`pME;)%7g$Z)g;R?H$oL5mKCa7<>@%m`luGl.b*qG]8W6>n9COW41dVjm&W_i
%TR_J(]/^V"-QTd*_Ei44cTh"V77=^\r5fl$pqg+l\_,hE6S>?Z;qY[$r/WF'=IqHD(>kM(C%oJlc@;JeD"+4QPr9?eAG8>H?>5=Y
%K$EF^E,o.)[7O]Kc#bqOp]&/Ne`+0hN),m$CaSF#%Oq0#lCjtSOVuPi?:OM6o;$4nm_.Pn5.SH.j+%&`s8%ekrkgu"nc(f0oDea'
%rW`Aj^\QbnIe(8Rq7lph6]peF;,8%74dnV+Y4=OmX)HfW_%tif*<=**4nYW:!1;Ir.#R(g9V0GR"$hpN&\W_PM9XNog&7LXmm86U
%PYg%o_6mo"K7_jtJucu:S!',;'U"t\PI?bp;n8+E1L=7Y%f4HUKatF4Yj:hJaM`5k2E]'IGPK,A78$7!9hpNNWTZJGe-q0sSmJ!Q
%le=$,6Ba874aICeFG5Z8F:e8Fg't5Ih.:\2J-dhr'-#1:T%PmJC#GJ%=L,k``s8f*j@3JWa\q5nY]i(V9&fBdT@p4F]O&Fr;U_a+
%'c-clF`YVJ<[;pW\#l`jSZ6Ld6ge`d\[^Xj#&GG4+/lD7L7U309#8GRHXR-W(3X;J`6FfO1NIYGj)L==FSXj,S&iWaQ%7(29PNqh
%[dLKrGB76X.r1q`-'F2tj]=;B&FlkRHc$lh*+1colj4,lnj)%g]+8EBC;kT'\o3I;[5H:1rB&VJLLgXYe39i*2`Mm_9t,U?7"3]%
%[N=aT@72VRs5XX]8(A=ZQ.25+7V.0W:bcNaTSXL3dZSqN=4cB3)(.A\\kT1A9[Yk/BqCr,pY'SDFGCeJO`F@Z]Ba/K-SYRXBdDgN
%7]b&ko1I!,F,TNQDE.#C6Mc$jT5EmGRJpr^LJ,[%d,%1)-2q')_TQM7L`1+"m'3PqH0Df]qQ4YDWVgJ$18*[(i88b1'67S%Au%C\
%>tfUGp%RknF/j#R,f3Jp%O:p5Y*D#uAZ!&&O0#dE:18GIE8+'KVIRZRIMaClSa:/k*P&2c!c[oo],UT\Q'Rf'b48Eam$.(hBH+7b
%m1(r:.!J+.ge.bre$aD_`GiVHO)O=qA=Q_)e`Ij@n1'eLP*l.",aqGA$&VU56\G:$.?Kq!41?-GG&u&/(qda<f!MO\a=m]<B/H\<
%8^(*e].UNnET4hYNa\:Lpm9f#H\U>V\\#e8*/P_uICd@/9/W(^(!u$6P`2uM4FU?H2B-V8R#J($T/rR*M"4++e@SQnm&DE>r,=<`
%K^`)>@ksRa,h'Sui'2MR9H*C41Dp1JTkOWa097?*#*pamg\/,l$9WM.TlRBEWbt&@!M[N/qrU)PWs*4C.3gOfFk'6V-Kh?:;gL$C
%e#.H;QZ-[iTd*d@>?H2[P,$c9)`SL,O(5Ob'S`aT2S&.@gb5L:R:]SXDmgUi\t#`/C(1T+\QO[V\\5qP[bBgWI,#g(5J54DptIIP
%/:U,@^574!kLhEREW;9L(2e>_i_rp?;,^OUNls&gRV*b\gA1o:dFgQFFpHJ<pqYj%(H`0M#/0j;;Jg:M7$]&?j7bfLUcE'%\GqCL
%hLp-H*<UUdi]5L0/@LITX3)3<Drh8/OsYVs;0h[Z3If/,YYpZo;[0'1XX38)(onJ_o0&(KiB%q/DCFaR\H4+/3fnrM1qQ/@<"/J.
%Wj>TlU>>bKhi!ae*]!Ldp\W)-b&M]o(h>sYeI!,=(SFm\$^TW762=0K#d;3LD@pC:+%TslUq+u&\('D"82H&;Iu=*T>W3M1+IF?.
%UB-[\7"OC\Jof5DU8hg&F9&sU.a+EVk:SM7oM9Qi*F^mY4IAKJ65eIOJ[Hp$QB!]oROd8T08E2Z(AX[RBj)(l>g#.pG[X9QJiCno
%8BbPo\;ZXoA9Y"<(:k`Qhu:CWI>:.(ag1.-!WGAa'I9dhQmJf#__u<5$7^pbJ90&lYCBiK<j0.AqohdtbW+<5*NH0@/!m,S#U?_8
%Va4EgX9DP$DbH*6Z1C*:TX"5"j=-@5=_\%GH3:4:n65saPOP/`q%@\YW!e%('II)e.fnLfT<q`K@<fS2:b//0jFEKses\'F$lOF"
%$0/(<hh$N0bd!jB6'AmNk>El7;hLj/3PCa);,nq3/>#UUPrG(_$t\"p["LU.5d(NgKa]f^cCQC(gkPb8K1c;N3e5)oA/uVVdG6bN
%0033PYkJlTg&`#t/HQ[t?<Fe\"je1u+s!X37)U;j?UW7B;0rVJ.o_dV<S57l2O=-n_EJeUWj?3eF<V'4bnQ;;1f?KMb8qV^08a$C
%'Z4iIE+@0jV]m\EcpgC!%Ql*/C,2DU+goQD-KGjJ9#Q2pG[K`4W0s(Y#B0t$AIu'H.F=Th0[+EKf]iR/(mULG("X%ZYhE+>#XSWb
%M.0>F9hcaqr6UFuR9Hh0PNYKp_#\BLM[i#tnQ"'<#67LCTn!^THGfCYeGL_9()Oo*'h9'KAJ6!?Dn6/<K;93;c+nJ8IntJ_+E!d,
%(kSReFsSr>1^eR16O-KDX#*`V;,:pPn=;[79\!SoG%Pq$=2ur?V]<I'T2a:[1b/pDhk[GF+qRUY'>6X3S2[BYKBX_)KqE:DPRmRO
%ijrj$^F`9:>9t>q51@VIhuR:_is'T2+],03>N2)?+>^SsSY;G%,Y.dKnT+.Oqhsmp0I/.))-"H4KFS#F&upJBTjQ/FT-L:dA13*i
%R$qMd:rmU6($5e[)"JC!&dc2u>Es7,Np%`a$\#p4/4PQ'!3.Ab8YB4a<q?B*!Pnqika[kW$+Bkl;.i52PWXf8l;G,gIfrd2^4oJ_
%RRCiiP3"Rm9%*JNE(Y^0Q)TSEcB,8mn/E<LO_),;]L6G#A'Y.oT.tCK@elWcfR^d<B9[X-!'mNRcCSVdo;2jA-'68'l_>)TPke5"
%P/O_hH.l8.#(-u,R/@EY0W`sDN]"-,LE[CHXpX-@$M0#XcQ!]=SnEoqNS\O3LEJBg41m>[`'OO(=WKVqFHm#6?nDQU`l*mlbV+L(
%OMjhISQ`9U_oT)>)VEetnAY[b,FCRt3]s-gd`kU*E31i%eFQ3dLnKXu`V@BfA[9+i.J0Rf9H_89^stci'bi0Dl18FM5N5Ur0G00<
%5\uPo8YmRF6GWe@-nq8K$0XRMB&Z2XIu*VZ&2D1G;h,iNf^\S5Yi1'Q2Ok(;4tNtt(iP2R&]83Y`g?eL&Rs8n<?Mab;@4]#RQ,o:
%-CHcEAh=(V;Q9d$GCJg*WY*cF'-9!iCT8=9-ltb\@]9PN.sTg3^.&;g\:]T-e>aG:+>-KoF&St==uC'N.Ze;pF^p)!R0dI'?Nm_a
%B[6W!3"9MC)em:rTUcWWnB#K"6pCj&--]8ASIG'g0pnjVD'5L*#XuN6"&3:&As3m?>'^/cd30qqn:YU;:Ekn*EDFrmI[J-qA#l?L
%*/CIY9/\q,?i]1E/uq<XNCNL<POL2>'f7%2:Vd'J#3Uo(4;?Z$8^*Kp1*o)DC4e!>e=..-pZ>%`=Ph9:@'HRDE80!4Ktu&;^a4Xr
%dZ$S>!><P*rC2VV!XIA>h,C)4DQqW6T__Wd&-D,JU;kf@(QIb6c&e4f5HOXPKb[P5eGhmis$<S;,::^0$tKB,Pe2Z`&)r;'eMjd'
%I5r"=d"%'+,[E;nMfPq]]prari#P90UO<kds!<CLR[aen<=0,:_JqS0K-XCe0I3;7VIY\L04C!19J8c>Yn8dKF&t0Xi;P[OCLU35
%^BR6H5F)I\:7aFaJqcZkeMG-AOdncq;Sm6),[pa16iEQ-Gnq=7BZt]b]["V_K-gu>kSHY*?>\LE&u929_HMUa^c,(i*&DjsoC'HH
%etG2!UH?8j&ds\I$QdR(\[/Z2V$dM>P?I[]RPRM2nMJP4<@G)1Keg%f5^j<:#9O2$iYMjO]]?V!WAP_E-Y"#=2-FO0+EiJe+h*>&
%I1`$p,b,'Tat-+0WT&UN0e"E:eu0[::1j2oW4^:u#')KF#GUg\_.:K&%%ok<3H?sK"%fN4E\P![PD/6HN!)'Y3_=/l,q_'<6<RrM
%f8r.MB_LE^$;3sZQ[%X]NRgN!Y<&7X:1]H0OA7=H8k`Up%Jd`\BG95GabZ?dH//dpKJ`2I#!8T;q)lO3YUhOjM>@(FoF>(Rl14B:
%#5I0mkji`=.7-FF&gWM'U9H<n-kShQ(2H%0aN0Rh$"Qi]Qcge="Bf86"i`2]eiA`N[?cUTK,ak#*\tsp3)H?&KYJIO@0IK>A==D;
%S"^22@c'H+LsmgeN5mQ?GQ@(Z`P<r86]sb,o8lH,<G`G[3BYVd]Ydoak0Jg(NtF45\3hAaW[$t2:?ILG?7*u'DT&M/fG:Dq2WUi9
%M#J&q:BD:S]*%TJJTFm-$>o.\9b*kIJ4)`ZEF,@Z4TmdkXq?$&TTT`R"2Pj@=Va:jA*t+!Y$2mbbnEm9_ut>kU"3<m`LP*'DFA]I
%#E=g:;$XD"dUcke;::9nY%4XGNQhZ8F[U>spuBIqS_[GS![f0VgSlXAI-+P0(Pog5"th]#)`"s*jNMbXh&JQ\>.oiF-:b?DA+\1t
%'FPNX(WJ)eWsQ1oLpJ8E/q[V7:1?to(qU(FOcp%kV:\3H/17^\(Q;X?JI`kBH&c0`E'`S,iqnA59BQpZScO?iB?:?+oem04\_0e]
%(n?FfH@_p0^rXL%bA]3sM)K.67)71_(RCR?=9o/)Odm(MHi>!\UKDaZH#BNE<^`l=0K']$Jc)2tU@7lpTZN,]Ht.0(10Tf&pPpW;
%l1r-Hq,<Y-!u%6M#X7O'C\VRDpuH&u+77t%'?bQb=T2eMZ#"'/?)@t@i0U]3!(`-e*8sFC:&D:U6U"<PcG3@&!_egRGVl`m)X_+!
%'oiMMaRr%:N9K?=rNnIefR#H=6GbB<Rb8empTXma!_O!O<.C?5VB?,Sp'P7bi<<=@*M#<bejb:f+CTX"CX/,D=[t@*+b^ZX`b3<T
%dUH0B?U^p,_+-@%/LrNEL"2We$N"kZJ3M`M#G;fakTLma=L2SV;!-'-2&1(Q.6D&cQGZAr$l$CK*0n&cg1U_Md+@'S3@JgP9Q.B1
%Fn--`rAaLGJHEIgYu=kW@cTO*@Lci]QkL%'9P>&>A[\&n2b+Q?C<g\t$Gu.]VWVfE23rGQ(mML4VDh`T3r+TkIN3]Y!/4kIVeoQ`
%&dul<O]Z92O]Z9TO]WIN6t0R.*/Ud_'`+9F(.L/#/LrNEL"2We$N"kZi7XE-A%"LcDG)*4/f+Q!j>=sihFk1Da'!I4Ki_C\"nu'k
%<*@4N[1r.oi:/XE$3VlkVim:4LF`h!-a*RmOjtnsWH<AmG`LBUJS*n`?XV,<=h)9L2[VZ3T@aQ^P<]Bbc67Y:lTQV;6^NY1H!X?5
%noK/&$fJ1d$BH)HMhiCbOL,B>8IBi2&=I1#g"C0Z`1":AqZA$F.h>C_1:Y$5lHfZgP-[J:&,?H01K#PqEX@r#!aLQPemQaW,e-$i
%WC,2UbttKIj&oSHE$>+I+r0Ih]#53tJZrpoBR6nPo27fi_)W8jq,-(<M#a@`iL5&NCUuO463DAG4!5me*6jL0S4>:?RccOiL>tt/
%X<*^biJ,SSVC\[91R0=s1Xe1KaDI>YEa[n-:W-9GY<fQcm_8pV)9487350<,7l4F:BhV)Hoc-aN%LF)BCRj&dF:f]V9nqNX_S4`C
%+)rY"&qQ7DK!d./BU4KqP8sbFD9TQ&2<QgeN-2,^<mu,;adPn#dP9kEG_N2X'J-Plb"?a5_Mq1E>U"%IPM3c9S#^6E'Vbf'9GX?@
%=-5c+dY&kfU-u;2F;YTUZVl\*_UpWc@Uj?=@o#elEm/98d$Qnl=f/#-X>HNpltj*=nn5.Ac?<Kk^9E@YG$u-9G$cg1m#,c5'fUUK
%q\H@%7!NW(m@F=o$_tK`$688&Roq!\m`k/I(=0V\K+PDXLlN0o4UZn#Ho//=J,.>)qC8`t9%1"_.pb\/0Aqql]/>dON]E@mJp&1+
%:Po$"4Z8gZb!^k%jjUIUT4nfmP+gHQp3DtB;,GB=(-69LIC@-;8@"SS12FNkCC'cH3.I+V=<lq14Ibppat`1A@`X89-!s1D&2S7T
%7TnCb$!Yp#=s/Hl6A9V'7bX^:KM66E'(Pm3LkjG"n1i"J5gs$P_jDY=*hZcrh)+YK0D*fA'N/?Zh^j*L$D]-ndDGM,0#nSbJ42^]
%$"T'l@R)1-^5d3tHsetn@rT+("Q5F<_!I.qDh15[>)D+.590A/kf>_O9;aT.=H!r=KBk"nN%mRG]Wt1*2kum#o-=_XMN2[Z#e"Fm
%Q>dTST&DSo@ut1^JXeC#0<rL%<g"BNdcq[9V::c5l6iUX?kl,`l@=oB2+nL1a$uBIR7QK9Bm9d/>2\Qk[":N2UsTo-][a_#\i*+p
%c315WTBu,Fq81'MZ.26:8<YM<fST+n*924Ar`>5$!<iX40AStFE=/k#,"&#oWW1L[<mQGo3*[>I:^&m:l!'fo>;3l"'U^"6!>c2X
%66R?cm-!`62%r+^Es*5@68EBth]Cj\+DZMZNZF>Cg+"=D&4AEIE`[E,'P.a4o#VMK"6:;3CJaek";MQ]^+)?\YqH_^.Dg\<b5,k#
%a!+[5'n4+Yo@iCTEXODHFUn'a]hIMW0jFGl5aRgIodKV^FdsdO^T0/+.^nU(f_o4BG;8%/KMnE#]VQ>ebr%tEk`R)$5Bc?8#7>05
%]C,8&gsd$@_V,:6R-V>1#+?Oo4E+=hP4r4C/6RrPm#T9u'cM],?S&5oQm]$V-Dn(i.hDe:UYH:Vng7?l2!/7UOFh`Di$_"pF#,e=
%ZEpGF'KR%TZcX$gBZZC:_"f+oZ7W?,3DS^jB*qm52.iPtOTc.B']'_Z'4kBVl>#-#=5_<FO'1HUZ>BBirM8`h@n+ad!HK[]7=q`s
%hTG;G,!L;M/j`;Srd8[(68/V_D8gmQ*4%@N#3R>$ekY3U!dOXkk?+BLOCH>-9'h"oR?;Ln'0b>qS7ctH:$TQg#+cYG/KeJCT))^=
%XJ)HC&;k$+c+kL-Wi\7;\\5O=d\h:ppIG&6JuTVt%lW5dOjLTIa*:H>*Fdn3;iPQ@EoE%)Af*?r(;V_j'G;[P*2G,qW(5=T^d0^e
%U+rSK2X$J%(len?j&+_GLNN;073.r^XbEnJ.3X0h)*BPa<tB=:#$YJAi):c+V9EaSI!nnDV*os:aOc3J<%pNKG.WFj('O/T6$>*N
%!X1F56RQ2:W4PEi"LkqWk*&fRDiV^<s%H*"nX[K\7r/Z@GL1I9Y<]ZS_/c%^DS0\lb+%#ojGgm:_Aeh?`A`glopWC;Md<lT#<FgL
%Lab\G=V3B..qUI<L0c5<L9OWW=Hph)Tk9I&GR>n$<IsUo`2*T7i;4cu8g^-r3O7!=$W&jQ<a[\O/l2b3HQ/_\PPQ%3*5N_Rc%itF
%H"Za=(%s,K'GQ"L*=+88R]n0dgled+78Z5R'_NcM0D6/m/rsV4Uu5YQPl_aA(3uX*4BoPPC0Bkp8-3-(YA;Ap^G/dn%UphW;(X>W
%;h^%\MBu4r()8fh(Ac:1lZe!tbgC\%1l\D`dNnaIJ4c\408N#)lF;`c#r0s3.jAmC9b(r.UkI/d8PoUL#)/JSYZ!5kQ6^&P;$u)-
%K,#c[P;g57]"/*j*&5Pk")`-)(DS,/=O?4D149Q>P51Z^&[[W3]G;F7C)R9,S5T_U^uuD*Es<\mH/39hW4Hf:(M!5^V3&0ql7@]2
%W*dBUOU]-O"%`3VA'L%YQtcWf!_Bg8K2Gp9`@0aiB6#?&AT5E!SB6k]kGaTDU86K##7$qiGuIpaS$:(Ql0(KHU,U_?$>^_'L<@Pq
%['K(OG)Z$s&1sq:-eTK;Fo3HAQc.9"]S)$`S/];BdO=2Oq:\k^,pO);+i<%>ilV]H9H:l?esWO:,:1&0)-7\.JQ4t\EVkrnR*DE8
%)E8CL,m/f$O@2i(R^A^]Q;hVq_oYeZ1FpO_C8VK?mPA'@\JMlTZf\pG!/;.GoC%ke6VpYeEh.6XV;BTV9.tiWXg::M6oMJmEl)U-
%LF#k]R7'l!XMD_IeS(Xg_)_UU8WFQI`bZVtLr<cbTE6nur^*'54LRpM+Z%4=^m]=*]<O+M0gQ6s+uqDY/"&05'!jZh=lo&QcdO7X
%7so$A];1tA=?9%cF?,`h2jmI!GWOG6BI6I4AU6Tub;")M[92SJE>1m6HNH!>0K<3eI(f[HYV(Qj#b&sV'0"`(95.Z1P"@G32sW%%
%b;LMtPuCpR@5]&+^)A?Cdn0<t6VKu@FFhXS3OVR/@*V?;@IRIh+pF=$6\M:9@@Mi+!*Nm&EGU&<Xb3if;<o>]kCg;ZDOSM$.:\/2
%#.pQ9'DF2B)jH$')GHO(aC_JB.ZTFq#(n;9[l75&ZRX`>pLX@*K7c?$8)0VJ59YMY,.2MObJJa7pMINrEao&Z>iWY0>N.6%/?=%H
%Med+%TG#N)bZ@qK+L<C+CIuEHTN-Za?lamia_fBJBdQTkQA9R1d%\DW9^A+W'HEmmekDh`FmN4!UC1`p$90JM[#R\K,mag].aL^k
%6R[T,So,i=B5M+Gqp:[Dnku^9k#qXdSa,6S1O>6U-jjWe1g4m^-f&jF^-kPj6u$:p'gSS8-Yk'Y#$3!ZEFjmCWeB&pD1g2;5'0eE
%Q0UQ.!Rc3XT;<DQqkh"f8aclO"?K,gCri^+%VmUmAh6Frc.TUuURM1a1.8EHa?d`Ua\,A'3_igk]h:^>`B##d0V_N^)_:G!e%-,F
%+(VhB/dA-@(@09nUiC^^GJeh?.k.4s]>htr%Hpr&StEMN.Z6=(TZWIeURFLOQZ0?.gm@-I#G@70<PWQ?(7LD/$Xg<8-k&^,P)'Zk
%r<8THk&U^'(c9Q:@@Ug[cO13b92o;*+5EVjk&+R?1N7)F!&du2<0sJGa^i"7;NMYhJC=.1j%GV*TLF!2861LGL"t7H_h+U;e,`Z]
%M02(7^rmV2dm\/DfN0Gp#O\WC1lNAgi%PTC%[nrrLGDB*a[:"gc%Z4Q<K`:WqtB5)9[;!1b#IA)<apYW*gb^sq\Iht!JZ5u+AUt9
%,8gb!+T-sf<?pW5EY=!HeE<[)Z%\c!iFGTG2.</Oc(pKe?1S]4<!%A)$5eIBIOmqSbrD_i1brZGAX#'mb7]@/P,"jGYi>u&[c1o0
%.q[Y^%?5MDljRE2oa8abWq:+I4_W91&o:tCBt@<oP9#TK;C8XLP_*5G%DZ+N0Ht6ojoLfK-SAZ*9ENeRP;>VBU+$/:Og%Zl!.0aF
%'nFXu;2Z1/!I[1h?PFWELSp*P"5$52`_mk[>Kd?roI"dsJB(Os(4OC+MYBBj(nPK<`[gpMlY>Dc%N[4c<m\['p]\Mg+p43Pg]a;<
%)_9!@WncQ1LBU_+-:_@bD0lL6;iUttK$Km*4p"R^6m)fkYq$\B>t7T$FBlC]?s7[g8BtNCb=jmEQ[N59Aj?4['*-tGou,W\mj+DI
%$)M0sP'gPI2)ZSKPXZDo9@XpN"52%h[GJR1=J*]E)-I_.#amVN(.57odmpd*.qBJ#''=d$.Kt"NPdQ%rXceoU-Mi7Oa%HRBPKCIh
%/'o]4`MKdW&_u7H8ue2U-@oJdek?lP9)%Bl\oYf+i,Zqn%&`tL4@.(b*uU^dj<im=<g$l&,USdF`gV!"0/I?pqEfL6/+-jcW6US9
%&/5.n%qj`!b7mYJ%>-$?'D`UMb19%QW%RE=B`.N']cG5dC`"MX.Bl,gQ2r,bRJIC,;`e]G>ha<f$c6d\T!L=)WBA*)%t.>qa_Q4M
%+JBCP32er;*b91%2iZ@s3hq(mSq1!5"/p<boY;Hf"dX%W-5'e#'r.9UDnBGt%(!SO(-W.?2^(GF]jkscA\`jGeEC@Qp4C0h=L8op
%r`DtiIPP5-i>?5B=S4APd)[sMM4k%i4?kh01GFYp#&%.KnMb9rQ:?O("a[H]/*IJ7)MA<IOc:!"6YF^ef\#b,<)>l'/:d=7CfiG@
%'10L8OG5je>V6HF)&G]aCuQl5!fJh3H-M<g0;^Ak]m3MKMY#l(g]^qZRb@eX8`?4!_njU;!b7`l1J?LHn`"ti>U/LC5YXuC#Yg#E
%9'XT\o2`14:n2*2)UaS:=%Qbjnpt][N4JH/Z2pp!OY_'DRpn^E-G$E?WaJb9"0dKYr4qO-M7GMtZ06<L-XO*YN"Ku(%n1-Yn;<q%
%\.Y1[h.4e&Y]]@L70sRQ,f2$]h\`;H9%F#FZ_];p2RoqoVofY[cYa_<<qp2bc\S1%2Wc=bMGg?Sp0uLbXP'p7caVge!.B/!iF_u8
%pqDCr:nd!=P"hBB'6j_7RuD5##\"KA8lB%'b44N4D@@(oP1^o5Q5npFEkIC.5;QB+=+gaepN7A'@t%fS1rf*d1s[-7+&FE,MDNO^
%+CJQ,Z`i\n?7X)1*urMM+]umG4!f/Znn*2S!&4eF^uq"^"No&bQ8Mt-9YWnF^_/k73+TT(aV>=hF!K\uRlgt89pPOV&K2DSJe\!i
%Z?X8(-5Of5@Q#.A_M$[21C#V;?/E5;R`K)-:IYfH\=.Z5fr4$:E>"++8>W3oN=UfXYN%q3CXi0+9rCQ=<r7^q6k9*G6L_M^K74k)
%]sjV(On_\PpXH)*^k:cNo<g`K3uYK[K7s8;F6(5:ZeOl[%\!@*c84j5hWo<jF6["[1j@[Nq.aJH\gHRfBF(lX!WB(Tk%N&B^SRt^
%6!lamd9k.9E.8&f6W`$pGR0WhTVH(V%pBD`,!2\qD#(14feYf@bIBtD_lr3-UYU;0]&=ePI8??7:@i6XG;a1Gr5Pi<HoA_F332GT
%n+>/uhb]lFLq7``F1.[c'A<?\QojWo&,etODWO0fT-YjO3pmDG7pf*ibgQ0orUnt)kN19MK!Y+#*'Eta^0T-8ITgT$%m5NtXZZ@t
%(?n%aXk@RjlYkL4^r!eFg%1lgmD;od/t7Jgo*KuRdJeG4]s.n5'd]gOjY?hI[-:F@NW(_8D@YRX/Tep`hFH>kFnd:)_X[;ok(f_0
%'@=G\hd>bZ#7o5[$N<AkgDg\bcR-R4<cQ^gm%JD4Eu@`E/7`>3jN6`Y7H/t9^tj`0^uSXc6d."WUIt;gKd]gsQ9*^C-<7l\kN:-l
%LZBlU%nubrVA3eYfs3H4Tq+g:h`j-/8^]&hFZsX`rC?[)1RmG?c]%R5OKE79r$206C!ASn9KSRGBVU%apn&,0S`M/:V3d<(UQp?K
%Lo<*3T:2<\rs*=GG&E=#"NXM-b@;9OaP%E'Ll7@fRKY)Hs7BLQ?*GoVnF)&8Gti*jOQCu\,04Om(NJ+,%j=7)^NUjX:Su=p'EMig
%HF)!#eaNs:jdl!h1#^uo-e!7_p11\)T4mR)r5?0pCr1]DOu.eYo%B0BCZ;rnSZL9jD]\n2n0)[`iuAmqh%SeS3Q*nfh1_pNs#AXe
%"tT5Ak/!_krIXbeP<sd!NWW^;*9-I9OY#sB!gN?9V<_/X`IGoD#cHn$I,4CXSGsTabenHhIQKHCL\S>U%]?7Y?m#`*"<t#'-6!"6
%J/g/p8Dd3^&BNfd7)'@>jGl8VG"Tm&V=P8?6>@*-I%IL![u-51l\A,eCJRh]o8J]i7KT2&%K0?]OPSjfBC\*opDG"A<Z)VZNMbeG
%l3qhar!0Hln1XF&j`[ldN+HV,'p/b=P5+fCr9[q.AfRI#lU<O:g(1bT\i/p,9-MN/bn=D"L^6X=CM7csD]tc2i#E<"JFZ:'1Xt([
%<mVdf\"PTeNu%u@>bEB!%JjQeN=c1C&=/TZGF%1&XO10MYZTK`Nu#N4JWs(O""=DN6@OK>dT2R?ba^I<OA?EpFZ0*.gE&hiqd7&:
%pqhO)XeP32p!DH^4[dJb91?.!S^2bobs'*qF*"OYSb[5rM,kmKgdGqF>Dp^:bO$,<?^Ed(gAJSG]g]'JTC1pgJ)YH'M2kdf,34Jh
%Nt(%M72TDRB-9qh2nNp[\e1>%paPiEj0trMgV_F33U67N&B$8]s"e,&NuUASNf/9&Cpn>&Z@R`D&'(qJggLiVQR24Mg#&Dt]e0`b
%s(F2,aO]Q03*g=1p\aX9rYh&kULkeFOC`ndS:SF9cN&qOP$m,F<fOZVBtN&hMt`^C<W\t#liFd,779T,ih+KS#AK?(e$.^Kfm5Nf
%SKV]6mrERf9cS*E3uQJBd?`s%G<f?_k2JJ7F#uU]hV;gdL^7)F5MNUYdFRIVbs%k9_p7F@(EY#3#9FA$1^BeR??=J^6Y#ipHjKXq
%$,&)UK6D;@D>#VDI!0-VBTcZAfg@.'98rm@0+dt+=&@PQL<P-Ai31PCcm;,d"7Q\?7smLfJhGT($JfO/lqg=!YJ6OD1UfNjdbIJ3
%8GO(UGjf:pm<l>)7dY\bCe%n!fcRSVmD3/s\_^]\5p$YK(iJO\Q@=SfUH`raI0<q#7/r\p+EZptZ#</GhjrjZ"+7-5^X0=6)pCH&
%]?RNl]%a`rAIo8EnARV8G,mj`/d'F2HS@idTMOg?>oba3H`a_,mNT1@la-JB5#.l`#G%cb&_i=bepi"%)2p6@H@G1%>D"h&GBTV2
%Vsn3gGFq0Bl"g&JI//g\!M3cH^REt#eeQno*rUltOtmh/[/BU[iTn%(fm!J4],l,Wcg<F@%`Gc)mZ^]X]JFUYUXNOrrB&6fr]RT'
%2;rF`E7FqYZ%1[..ho/ce%8I#ZRD'b#h[COFBYHK0KZ!Ls5>bc?q2VI*3cKQG3AO8'P:RNk<HU4p;VApkc$KZofa>^QdO3RK/fnc
%>B>6@4R)dMFRQ=*1O*dR_4h[1"TGq8^&5p#D^p_'g:s)/iIBh,p)eqtP+(,K!7U<uJ$`Eg+N&O)ZP4Y`eG3jQKutS4L61Gs4Z^NN
%#i;3+qgSgRobTK7rASAu`kU`<ItbW%d.JL#B\;25cOdcms"#JnF*P2UCkB/(l4A'VrpcnIh$^TUs$BBSa2.?"*]70cLo+HJ@EN^D
%[&E75%$h9lnX"/)g9&ZHkM0cuf^&N5D.NA"X7M:aa[Y%<Q/t$/PXD\Tl!q1AU+JA0p!%0qHjLp=:%qV.c,k$&I.<qc8"O4+S,;tI
%O([oo2"s&prUbNMG0mgiUGa$sN?:3-[^sD%IosNQHhbU'F]]M/Cm]T;=#;5l]k@R$V;2X9GJG8K<O/^dk\&C8]CK<c,)eW&1r"eD
%-Gl&2^X3BLXgoTV]EPIT"EWLX#b)4gb;UeQ:?7dVn]onh)U28cSPf!Xe*W+nk/YMAD%9fc1r!@HR]l+hj'J>upDUj7\Mn30>D2L'
%Dp2J[YW&k8/;qDINmHjJCq<#SZ-(kI/t<)G,+aW`7*2L]3S.^E/;3CHCVCeApYJgQ5nEJ7I];_jqV];O^sTU=-q?5K=gQlUmkt%,
%oUi_>YE+A*dKXOkX'rVq4i]oabA`&"/aal%p2@6T#^]e9L]_7V^#%6+f1U#lTUW/-.6._Wm4^\Ea'f:&cC06j%t;*b%XM9%XQu3A
%[Ja1Qe3hQ)^9Hn42sdcDo:VHPWPj_f+cd+,/:iPe6oEJlU4t_,gL*8p8+r*ZVMh0\g-Y@$n(OGflG,8mI^LR5[*]d"I3N$5!!Ema
%n<`WM[XT_C"QVO/_LQb%#(j1bldZ_Y7Cn0W(?n"8[)f_._)280kk><"_W#n!8*JDG<]s'bdJ;2?g%u(J\QltWQ`/r%QeO0,B<A_B
%^ZWalc<igSr9cOlhdePh[jdnc/+N$Q0#S2]\.a<06dm.#g7/7g#FSB[D81c6>++7*2<2;ng5!gAZK0\SptY5EfiWh(rpj2PmaU\h
%s6YdpUsJYacjuqNcNl\cN.H#gb1Ft#bReU1!IYM4entZ`Gm5o?cR$>RNA@W=j[`YR%"Fl$Xq\@5L7'Z?gq#[b).oI$E&E'UI'm=N
%VA[s[drXtnKU#(lIC_0r-d@d+T%NlKhjWa`(/14#]te+QeK3ENT\/R;rJ\^EklttR#E5J8$V)4`rT@KPLS<&FEJN,k3'rDfli%\;
%0bt$75@;a1#QjGMr;'l_!:K1jmM/-DT0ELr&\lDWA`eHLT?or[GeM\`n+bS>UZ:6g\\AjY'qo(4KAK7V>qJ!G7XYh@ddEL.S)A;H
%2`BYXg\:rX]YBKsLSHJK:b_LYR)&c1_UiINo8LP6Vr%QsFh^6rWo".H3&rnr%6<nMk&ij"_i9Jjb:$WA&YiNk*Q>MN^jO$B1R`5h
%@Y+o64*rV6_tGLWgRG=7.js4h%m-t%9rHM*b47bo'9(h)\>+Sk^AXM<Vp=M4ksKNb/*SjonP`a)3240D9c8M3O3^^t-g0r\E:iKA
%*0Kt8Gf"(.oVgdX,,&qg_1,ATnE>Qp$#qL,/cr/Zg[#/d)ml4JLO`adp(qDe_VH=)4Q?f[Sn=AYTHbCu7f<2#("3WXTe!_&^qj6c
%62.4.7,1(k@6h;Qi&DOkH@R4"WAtgl!8$:ActsEZ6\s$X7"jbcYV<XS]gX\bG]s+'%R,Wu<JTe^<un$=Yj)e5`DsMW16t*&%,9n#
%EtSED\]'4dljmEK?[e=^F(Lt/6&,APJN0h+aN@8WOp<3fYS/959Y0nE%7@^Wq]_9Ji[O'>O1;k,0LM-Fn&dm.Sr(VR_kHhKQoQ>4
%^$!_VrTL*2Yr?uEMsca5ca1O#$_!YEVc7JYj'&!@@3jhh$F2Se/<Y^1YluE?S[6c4DI,!*JSN$"a\D^gQe]0"b"C@J5r-"D2H&Km
%79_uZ<VZkIr&=PiR_!W*.[FEK[?(1$ksi#W,$f-X:R1"\WUU`u$jKllFa:_@M+,nh<&^7jI*"`C-(8T6)(E1;S\Xj]d8Jsl)_/`-
%[$pQ@[WV5PW>>)?hRG:(Dq<BueR%[1.^dJrV><Qk1`1$tIu99l56j8mj7t)9bLUl<f#fr%ZdTpTs6E?bfid^iZ.6gMG0oK>@):B,
%lL"O,UG`HVJ64D76q9Y'VsAW`gB(46PFKS76Ff6-r`#$cNF1fGh<5aR[/?'.%e]\Pcg.E.?>-6[.tcU>DSEjAdC-BVPqq(:Y:f+L
%pDJfZXek>=LX$K7']+D*=NjFDF?M%ce:'o3Npb4HWp:DeSaEU8*"8(j.%4&6#LVURjsV-`bA2>-dH"#L0q-rr)q!0O<<Jdbo!H+b
%K7hfmIau#rmn[U%-TaDh?8Ym]<LUZh#BI/3&@?=kQ)a"Og(i?(q@N*,_;r*_`Vu=1Qb@(<p:V?'\"jGjf\+h%6F=*&HTdFeMq8k`
%/M:p89:`q<7>)VpGORLK$h_J_gP1I1]B-?(]K'?-Fc"&`$0H$GejB<V2:T50R*:ht%5.t$]D6k(X.@3u"G("Q[FgbUI1hU9YK:.g
%`W=fuGGURAKOag"NaqDun>'7Vo^'b:degl:_qUU"U`5BkpI\eu9o<Q!e(u$&a*:dS8a?c?VsKE?V!HF_iPO^LZ2:=E)p=_OV;".l
%ac=%]f:KBmO%G=bL!,rQh0i2gqF7J#N?d2RBGN_tI.]Y;pnb,6]1jbT?_6STP:e<<FiA.EQ;jmoY0ef'H`_a(.&HM_fW!GCSEf\.
%.\63VH.dA<lJOGpL*oCqq,G1o_CY=YD[1LJ9+9a3o2N+ZD3VS%]2..ams.ZC*(juSR.?0ank#GYpNcSWIF?$Ub/1XXF5St@E1pX?
%g*XeF:fQ.H^>p7-8[ZKZEij\.kW7sU[AeLJ.TQ4=MWe*Pn'tNrl$7^#A('ZJWS0EuGFu7N\?XOs^Km4j7Uj6A[?LNb(P(gEl"GgC
%C?>1[eT,Bd'>rr!e.<s4ED0Pc5a7nseQh"Gf>d7;*M)g`*OkDmVe7bDmZVBE7B,g&Ou"ISHP*.2Sc?ejY+P<gP9+l$FjEYR1Z/.q
%a/$19KZRkdmiV;;m]6)AC3;&l3pHHXB@h4QZNK7cd@:p0Qt>!WF=H#^ga?s7(X?4q.r2;O?J]T/4XZ6-0&u>S^=Q[%UgNAgU;s'p
%jKItKT]A/u:$VZ5S.qNPFkZTco1%,;dbfe$f6g9':O795q,iUsVVELekAl'%p#*C4?@+4%l8@gWoN5glh']=2aR`K.P?g:"_IOTc
%)B>UjkbM!h_KKXVKp@Nf->h%hC=\_`Fmu/l,a^E"Rkt`sc6$oA^[E[SgM#<#Jc2EJm9QXRU`Y:*gSD*@g\DXJWD^BpGHKrb<2pqp
%emQo_i0^&L*i@U`;]==b[8M:rO@cq@Q'>iXrGB*1UbkYK>V5?4P=B"H$JW[^r8B5$RrqJ@`9'"]lZG&K?IUlI<%/m%d7ID81:Eaf
%pGOKCGg],Vh7@8VX8k^G^VBI2o0t_rJ_:ri7[;N--]_&QQD/-[ZZ#`*^LC@J?(+L$mJ^rS0gNg!d.-lFE>Oo5UC-hHnLWR6TNN2f
%We*HZ')7qJWH#MGH%!7K2-Tm3f;BqZ+SmUL5E3Td5-ILIcb$)]hgU[48fo:=:N'1[g#YQMp8JA'gPg6gI1Z/L[OtiR^GG;MY",>)
%:GbR+Fjd6MRcX)a\j8Nh?Sq.n:V(pJDg?cbOFAbsG.^"%P^XL8&qcSCo4.#s+a<,Bm<@g_l=S#qe)*1MmenGCqp^;Omt,Y2Z)2hq
%HWteM*XWs\4q-Mrb.d<6BbU2<GZ5/85(?atMbEeEY><L*rKI%?O&)Bpo&5APnUt!p+^`"Q0=cR:^]-?%>9D\2J#Wp<UW\KWbYc?A
%,SR@c+f5ZlU7(lO-McFlqijr:\utG6]76h,IOEa4f+Y>`mgum3?i)r#4tia6:/-jrZQF+V-]>[s+e`53)uZ-HRT4gGMk6X\')L],
%&gN_Tj[UM+mMa4EfB;7bb'F9"9%?foo3<a[Zhm>d`Nqalc=:-^NCr=HAmS<#YrG@/SVqsketeegKDa=V5]#KG#E(["\A#%c28V\g
%Zgj8F2fQK_`1>Fg$aCbs/'AmPBdW0d*=0SeS5auBM609pik(8LV3>ZG=5K.d='JhR8Yt]tn\d=7k/QquLbV*Y*&P>UIIrr7Q7`H,
%[[*3pbXi&We`9POpJi/_[B$dV)On+b'dm:ZO,K3:B8boJK:bXoA",:f'*&HnjtS<J-B[ZagO2ueqUT^c"Puqno'T`VMId%=8O7N5
%Gtm#$9cAkFW-!9)jZP&3,bEotIcS=\dM"/X=\j0K2+;_KJ"q8&)RA7h><a;V>C(&!)kfaN'$$diTb^8<Yc@&CM[PnWrBZVCnnj4m
%J+L%'q*.2N(i7G9^Fc?9j:qW6.uO1&5Ld.joTEQl0;jC7FRsaV#Km3UrbPda9ecO;*fJu!E1F[2#26*>6E;PfgfUENQpl]7A?U/r
%N;d(>d3$U`J`!p#kYUHsZ<XpZeqEDt$f7u'n.1%OlC^Y?6[4'L"r$A(@:71Y5S<S+ls%(AK-(@B\"m<=,uJq008auE=B);`,!RJ<
%M8%!,X2Q4]Z%8E4bQ;naKC08njKAAANX"q_s#=R.'$h4Z>W0-+53M\0ZbdJR`%_)f?l"Dpr/eTf0\lK+-/J&(oOFK.neiu9(:#/+
%`Z*`LfDTD;bJYp<QPXrHH>:N2\9fE6,W7RAV=>u:I:&M_-e!-uT'KA51'-9\+R-.%iX"BUfLARPJhPeDH4ijf/)=WXSJp0^j1(AA
%[c8GDG&DI:J6h:2A^lWSHeh:<pc&fo[E8<*.CYTIm:\2PV=nn@BsXF6n%12_ZZc92^T.XsdLtE'#J/eoV"X<<f/+EJL`tQY^(IA,
%KrOGmfm%Y_0pT):@#;hA!6g)i.kS/!(KlVU*0Z5$j,V6hVr<;]3H(II[2>g=7M2<bUjPs_n#U<,Jc]]=)us24XCq@uZ]'.BK+t4U
%E=]Ei<gC:hidT6oP'<NN??<H,P5SO_TOk?,0i"&\Xt/c4mPh2p9.=rJJZqWlDHrRdO_EW!+iMeZ/F"HEn>E[&8IsP*e^4"@0g1"G
%T$][XR[pJ4T-_\FMRFenq6k$YF)e`S2>77:nkk2I!Gg^E*f+j=RSpdIm!6:0Hp(n?\rX^[kE=&aZ^i2ZaK?ocZ09A5/;-2O@-HhO
%'&j&mJL.^n%i:g)@=.)qK>"`Ia'TXVQHm=J&'?_uHs-H_RMj%k\[lc(p9GUOR2NqZ'Q(KW;S<jp_i-LgJb!"J=/C.aD^RmcEQ>8*
%o9j65bZg<NJ"Z+8SZ.BTY>7<!Ab#%qIO;P0%Mk:W?Q=+mb-'#@(cpsAg4$r'W^]<@B+2&kQ&gg@&9JsKTnNZR^%`7p81_\W?m4L*
%(70_C@UpoQ#H!%Y/4B#5Lr`d)^a.jlgEjbfDtAOcEda_-U$$dc/fA,^VQ&RpkX3+I`_426Cm.eDhaLM;=U@<DLJgLM)h-J*)?LH0
%7R"I;aSTidgL44tem3MQC:#Z.!jE'qJk3[.#f->?-NW_"pHA708hQ/lYnN_t$c3!Q?GVK+*h<./]KD?YMXOQ^>>C)UDr)9Cho(=<
%nF;U^Oj$c$rB3?Kn0UTI#Q`MD=54$_jol9E/"OJ]?L`u"`S"uipT,09[8NAHZqK]DlMQ%6L1H-T8DLKMF3dA%)b23d-1<L@duX^5
%AC8uhA^@JI@^aO,DGAru4?o30]g9'$l=/^VRTAm`LM"*`\SVU<biQ2o2e7D:6gB(N34:.%rE(NF"F;-iM]S\[Z]bHK6uRd>\%]jW
%$4%ZYkSgPHo[`<taMpiQ>8OOUb!^fGp:N'WrMapOBJjgh]p0Z)$2Y;%gRgbJN/3.7#lFMMLN'QrZ?<F7#YUFF(Lhml"=m8]Pq?Ie
%U\NpiImYD,"7BjO&qGDNCF?bJ@faUCd('bh$ST]6$R^%t]W;?[6LhA)(rmDX"YU5T>7%^V"4Z/c7+eOrX@KTfHkRpuCWE%j?9>$p
%$IDkj?m53FDJY+$h+*)lF86(oU.Z_dU<1-Z$E'2GO+m**[Btq"1@<?&UCd$nW>hIOS5b<p6pcir*`)P!o'VWa*tO[*@PFid4HZl<
%S![AcS_IrhP?SmN:bL(R.D:`fGJUk<N':Q+4qAtA!2t-HU>4Et-Ue\djY@HSoRr3uiUF+O.2k45M]#W%&R4Kkd7heb8.@Zi2E""q
%G[Fj_),R^!LH:("%u0j5PUPb`41u^_=Uk'E?40+fJlgu,4@7e/nMjZIYs/'995ZF'Eps-2+*`*B8KT7HBKFA+>`+&!eBs1\'p*Z@
%*4g-'%<E)s#1sRb@!<0tN<aN:=-m?P/GLUtOkInh>eN@a2/+fS2RW9HmCMa5968j'aQj84Ap%hq6PQ%M#3/Cug=o-&=[j_Z-_s"%
%1aLr<"Sp+6Z/h4_NsD/BY'LsK]="I%/]?N1%D,Rq)1V\0o.:qLiWC'66>[LI=BPluK"nc(L#53_#<NNlan'\Hb=&O9F8fPoY8A0*
%%.bCMRMg>]iGg2Ee-V9t*_2gk20:j_[')Z=r7>mFSoVJtX)[)8XB*_g?UM2^gJJ7.WCT^)`:2R^C>:G'H@XGVOP\PI,V7/1=,i!p
%GMAJTLUl4OK+OPj,RiW9L`+YIQQdcOZb-]"WHo-<.lZ"dkRA9n:1m#!bE*Q\J0^$a&!Ko(\k_!$-AUbPYWgb3@Cl.Gd_^73=lb"<
%Z8YQJZiu[;/lsKscH=lW"q1%0d.bN:H38doKu@#J?-b0`_d_93&B0iT3oBed`'#aMe'QG:<l>8b8Y4K9]I8PEG^Nju;%"a_Wt2As
%9[A7MAiY1<FYB3pjb;8]V-7!V^9=,H*`m:hSUUb_IU?[u6g#OWLLoNa`6e<McjB0a<&&JdhZu7a/N@;M*M:h=K$L`[:DZC]+$h8D
%$Vh@&k;auOT_"*X*&E>p5CuXh(7Z_+c9I=`L_ZI1L<`#8N_&0Ya3aWPd(*m^-A\AeO.`8Z$X\["T<L84?GJql[J7Oa7fn*caoPq;
%KV_bWW$'.JK3kMG5c]d!Hb")53OC.5[VV4G^#9[,kri>obEq#]kcfrdf2!hHS88_Le'AH[I8f4t#mLe!O!h_7*6KbGTYZ5A1\C[b
%\2eU(m5k`g^TaXS)#7i(k"N--)Yk5G\ak;MR#nj$5G`<)HXH;e"c7n0lCc*<Gm`>8>X8K&[PG8Ef\DoiU@n(T$eX2%Ks=lKgcQ`'
%fZh;OA=UHR^3TAuf(;;5>A/^,84h[SDVdL*8:q!G$b1e5H:57N,!LYT`Fg?34CBjI4N!B2ZS<'.WoC6>q+:Ag]"NPZY:(Wj76Q<C
%Td0j+Un9_aeOKNhYLqL54m4#R&8DiIVi$Pp&3/L1<D??n^f9+AM=E/uXd[SZ(+oqfLuTEXYnNhkq!NV5I,Mo_JU-cl**=^l+*d6C
%[69.M`X=BjpOPOiFU?If5/1JIq!`9NZ16/d1QKeY_41]I/i/Ur<ou9,\&Fm7^kX!_+Pp]mLj<2X`a4ue98KRr6-QA(,mbnMY4\u@
%IpP8NQGK^/#OSh?mX3uMhD-ckc>NtLJ02TNOcT9\bCR/"[6D=/k@GAKD$=AOj.5#J_e<g7.!&&>&=Z$9+>jKjB+>MXbXbR/>c8=A
%=[q3'(XCHRL:@Cn=!o[A;/)`s$XO+u(-lC&la&]mSt$1)8/k&<@+1+i>l!FAJNYLVDYQ726d52@AFsu(V7$XC*p47mA>M?D&Q(hF
%7VI8;I<WOIn)VM#SEq&869&+2L_LX9U9JSD<:AI9^rltS`Q!V_2#&Wd]$K_Pj5?d"P'epho+gk"e6!V,:[`C@=PVPJZ>*o.7]&Y0
%j-[Iq.+<mtaF*EdBk56U;H"B5j,;r5A6aQ@pL^:bq:qHj#8,[Y(([*`Lr9A3d&,C8^km]'Db;*8#Xbp;_/5PQ$/n"R2ml*ZCZ$@"
%Dqsh%:[#:lkI=o?./1EVP?I>BgYu&c,ebtVo)=;KlrFJ"H4m0>%4>hf>8Oh]D`u<H8tGpbT!OQHD\uYe(?&cDT@WaJ_RR1m]O?q!
%EHTaM5iR1OYu!&#6%JJ3+V>oPK,m?&\B\:bl>q:iDeX:C6Sri:DFm96!Qa3pd+RIr)A+p!>20u+kG%,Mm8Ffb*\KGPfIZ%@^^o!6
%&N@FZWdd-9GRr>=io*;?4u4C#f(!^C7LP4m&')#F]+6fpGW8%1lk+6DNe_]@?mk++I,a,O=TZONCNf5enF$1n!)+(;B=Ia6`/@@g
%Wke4l%>kr0m1Y<\$QpK&3s`NJ,10fT(7d1mdoU_<67;a$6F;ZtSrgeK\>Q_ObJK1XYpKODFB=]`T.6#i_H1W`q7m5]4T":A%M;IO
%mE#2D<dntifWS`FGKCqW!R;KdZ9SXLrAAt*G0cR#At0A"R_8P=lK244R&=`jEfdpN-I`/<)lDc;+_5O-fmrTP@pVM]knT78rAD7[
%PblFCFb@^@'-1t'ls2'aV'ErQ:pqf;mfp-`QRW!6ePi7b8"bSBUsn;pFR7U1,>s$91*ZDC/0[uAJ'TAa<M!"4,U*t_1P:K_(hFHp
%WA)UK,#TS5/R03-pZOJm:'iP/:X[a#O!XZ\Hl1Kg+eIe(0UlkA)%&mtfXT<ij+bEZ%b=!334i!H$F-!&]"3[6L"BO4+Z<X@OcNa-
%_b`>]GCPpPE:E9#ZA);5_F7oW=@4n6abMVCb6[S5,%'(F,USGMA"3C`&)bLF3dSVMhqmK;6),8`JII0j6L]i*GaN8nP2Q_,$RCD-
%q/?q9:!51O09Gb+c]cC'_WKD5[jYI`mr@,c,A+&;P@ZE,g`A*>M<3OQVi*R6%=T']r)*VhKg.t,p=JA=WdOXNlF``X;\-#%kfW^]
%&W+?ma3_.,:%(=1;YKB#8"ZQ9hM8UOVK&mG]>]3@`>rS;X,!]$mVKDGfFr&/>(bYj:Q)+m*l2`NhgQ/\o@<`FGdOne\"[m'0r_Ec
%$&c)Zf\QEof[Z_-pS:VdRnmd[`H$kt'4S'2HpYVD[SMTKD8C*dC>*/qrG?-Cf1OpN_G7_Wp'Z%jPrpFZWcrU##eS_Zp@?=@d\b?d
%2/1T^d_YEqDo!g<0)Bq2\F>;#N2HMr]";K7;rTa-`XBSsYunZ2QE@'3^S?L+Ljl/RD_sl._9^"h9R&U,cONF/?!R$X<8;jrBfr\n
%:_i>;CZAf`QTf7%,((nBm9X@6WH*5s:Z#+<A?f8Cb"M1a<nmVQRU)9@i]VP!'Nh+V>c=%3rHe<F9jC98NA6C9VNP1d/_omer+t<P
%Q:9T\YA`2?EkY_eac"5oh&ja\jB#q9r;O@00*k_*6NK?ScA:eL**S%-p#EnBWM0:!gA""F]1uO[cDp-"75S9u4j;F'FM+pk9?//5
%]4a77X[QhC:$8qr@M>AF1nEBU_F?_DO/DOB[%CndSJt\8DLA>/FMSh]Ae@`RnjT-*Ra/2a)G:m>[@SM0c:uUtENX-#BKEV)3d9JQ
%BqjkI(djd2cO?Q4gg]N\ng[<S:$4uL$-tiZBKEUKdJ%4,d<'92F=*nBX(XOQjqMTWB,XM-mL;&>BKEVr-F*(:8(5!XjW@hi8Mlts
%`+Bl]2bSsP8(30Df[S;jDIsSa+8Dh0l.fb4Y\2Q]UZpQCkra$19cQmj(/#G`?TE!\S_F.o_Wrqp,gg^OZ#g"(+")lAF(8p3m$/5R
%e(K8&%B&0jd!1-eU]BVMiR#00nY581]fTV!9E^kj!*gPu"[IkQZ?b5"*_9oU!+"Q$n[\3#HjUg>l_2R3gr8XFebO8&Z`7*i7[UGM
%d0!,E<@\11`1Zag%8Y%B\)q%Q2A-sA;$!NY4I>,,?-]VZm5RbeK":E5E!i[1CSNRIM_ZV%R9"S]&lTSS+'GX4ZtG_]SGl#e1im8s
%]4npO_O%eh1"iJOh,sZ44qu#Ocs>;+H'Z"IeuoJhUmj[DD!s]7@r9;hbaf]\%#Q_Y^W`69UZbbBcJK'W7%(Xe9Fg0<(gQ4K2>/Vd
%nHcf9$Xo1643uIVbi12MqhTlqNJeG'g'hG9p-\XbGi0s1H<rakNph=.a%pg>Xrbi^>T#/UDA(i6gKOt=FP]b4iTp1@8#:o\+p7&i
%_VSVN$<+A?>B-R6%$>dE4ENc10i6-@,d9r=Ss;5Kk4rZO%>CSWVoCFomjTl])..&5KS]3BR,\=he=*.W7R*Sd-EHP!(^8a1):V4d
%&]l(#l#$]X9b^^Q?=\Cjm<^q_#crGm#M>4;F_d;a7l4<r?78M"f6_k`m]-osG'S]1lmi2emIae6IAefi-=(9mp7SibiguhPG0c;m
%,#^++(U86?b6it?@g+X_<Q^f*:c4:e9[[(@*[a>u6]e^EN&,mJ!&Dj,eZ)2<3j6t83297D:^1r+`XZPK[I>BsbBXOogXq&cmZgo!
%)L'X6G-O^(jUi+()MY51(Ue5SF;=5^aN*PKTiZr[8Lih]+&Crp.;p!lS1/fNZUr1D>N%2*2a3]<GF!QY/iE&DFL6"JI[\)=aRaj8
%,@^r/b4D<9@BF@+HeqU:D!EM7!:BL>9HkP\")C9b\\dB#Xj+GoEod]2COc.A3XN)on2R-$gYGh4K&8OPZ3,#6qZK2Yi*&K1]>QD#
%jc'ZJ#:sBse&/s[^="ZnaZUh!0Si<ASK8Kb[(Pqi=WAtXCj2BW)XK&/]3qQ[VWEeu:q&2J&[&/GZ?o]anmN*PQdI%6M<W'RH=D[a
%VJqJ;>*;ncA^`,f+634YYdi[N.q@e/[4,@>C[nFtj+SfQ#hRuN\WiN3cd%LlHQ(22g`m`[W]p.).#*RuI2[i49biP@.:kiH-U!<A
%=^1A=I-r8@qg%T)jLIZA#KO?K-&'8C5s+B&4IGke;a:%tSWB@.@lP;RUI?)q[o^(ofY2G%YoQP&BD*ILY68imjjRQS[8C&eLUUeu
%*rX=rRPl#*Z%7-aX``:YQ.:Jb]<Kjp>OmaO)uMg1]S#^:lcQ8P`OSO`Vn/ICIH+7GY50bt:+B7N%aQ[cAuifrml`d[:"o0=_cAl5
%-FJT*7:O/g\$eFDc33Y!pYmRXW@]/Di>mT,^q6:B.).nRY98,0rYZ*%Vk;,F<tLsI\048:<JR%+?DUijn^;L,j`Wc\jqWQ9Z.=?0
%LZ(+V4XV6Y0/fSsP=E%MdcZoPD&9.`c[MbsOXT%m52CP=qq_:"IKfF$(;B5f=%B!VhkR+K7e)L&P7Sr0HcO-J16#!*e+%N\Ig/*E
%T?O4Y;gblkX"MtrgG45IB2Z_8Ge*+5@e.m-pf,3?G-1=?P$m0#O6Kj0*GnfaBB,De1/$<(#`;!?9?tLLPB:"MbI,Lak^^8^bI,J?
%.W*.'\/I:U/YLsO6g_Q28/BLer;<qAfjB%fmm4]"[m2SuCCP0R70U8tq^ops-GZ@mq.U!camRe2>--q6S<YG&jN8bdk'b3U`uM[&
%8nFH5[%-<o:6#03f[/#:Q/@pO=kYaN@0cnD1(u1aFZQm&NF1X(Wn3\/56_kq_O7M(nlk'%^hFOP&-HV?*M!`qU#X+DUm?l_=54Wa
%I`UbXSOR.fD<FLd%`7gV'W,$(Q&PX:cJ+ZGOUX9<*.2i,+EXoi8>+KP!R!&4IX%+u@MUQlZ-A>Whd0@'Y$dd@eXOY$2*]B'bWmpB
%^<K\7-$1PC5b<V5@]Z0@a`HA\gG\N\2]dPi[k-dgdoCm%XBuhp'[TJ@6\]WmED!@%>Lf4bc>R+"mnYlEE36M:K*><'E?E=L*Z5.i
%P#]M(=)]]dpqck[QX`?5Yb'-"&G$3!F+apJEecsiT_Z;q&d@K>V-IL1^%.8<MZO;+@4#rA'1;kI&8"E@i"Z%K0e2I6nWr..!5leV
%#$*JMK#q+0ot4a&_aOT\N<'HFZLJ(<=;CMa."D"?^p#PDTk.afl^NA4i6d7tYKo<"?ku3,4=d_^ZmafK>.?#=nrX?9_;*gf7JUa7
%g&=fF^-G?N9T&CL9_PN;2j9t`/q+UdTI?F&[B(5^j`@J03E8p?l]TsHX&d'R4d5OAKa*HXrQGPKg#Rm.YNn,j,hGG,rELJR2oFEI
%['&;.hR6kYqY<Y;bp#(\Nk1]D2cPUEIUR7a9jcLje$l>!p.h5G>sEh*7FC.5R_!tI%(k>JB[XJ@ic^kmrEO)#:K5rlhk,`oE_Tci
%cZa/]l1LA>Z`*p;WihuoL5<f`qRV.T<W0pnYFM]h#Ce7:;:j,GdbV"iB8mas]WRlV<POBcd`,/mqduK>UTU4R+,+(,):\?NYNe&Q
%4[/=:i:6+&9j6/p3f6)qF4,A^p:>_PUU\@'N*k2_^T(WhC)NbKT79j*hoNhmlMC=3Vf9D/.I6hURj);8*p5;%>sEgoCRcJY#'Kl,
%L^1'I2gnY/^n.m6,24[6qY;)AXH\5*\pbE.40&-O=H>+7gk.VEB0EuniuWlRIT+kY$cU$h7!"$alPI^uG3ZYfr`/pL/CW2C1Lo1p
%=M"m6dK0KFh:R"VLnShSqY=4cS":QPKh/Hg[N==nf?cF5=c[LtCZo'SDu=p/PK;2Glj_7OIUeZ&o;Ls;Wk"RkY+IN&6EKJ8(&9h,
%?,*B&=Qm>FrbN(\Z0CTN$0uVoWlNB<jAjfMm'tZ(lMA&N@VW6HXN),TZjs+V2gmABN$?c!FKl^E(%^KbeLtJ$oYA%e8`-Os*ZFgY
%lh\024Lo7d6su$Zf?Z[/b^M0C`'!ipos<e7$PW-m?IpjChU2b9n`ouH=7mM"Y4NiA=2+.iR,3GrFoD4U_ar"22&sB6T0Hh![IHst
%f?XVb6<-6/bK(rOrVSV=Lp$EVf`]gtoCiK57b:C9f?Y1@4AruHQ8D':5QB=tiZ/ZT@hQ]/p%*YQ`$ioFlM<L_LULT'1hUN`I*<Z(
%>mNu1._T)gB'jl?:n-ej1$%YFD[TdVQm;Gc*>[3T*LFucDc(d+^I04&0EE3reXZXh;0]C_kgpm0V86R2['Q;DXmbYuq-Re(^22)]
%E@6R?W[H,RRtGD@GB,.DN#!79^9>:?1E5dEagKC^6?7MAoK%9Sq<1D8b'R0h]Vei-lMa@XWqJI_WHM0199%cF#H@7hngYZ&gMbNn
%JQb<c3T'4/8f,CS([4g9Ff!:YN?@CdqD'\ZUb3;.h:):aFFSf5,!DHr,O&(=>*^3?i[9ApTTU<(J+qLu5P!Ffi9)7*+"l`BJ0?lm
%6"K/!]$mZ$eIN$@Lpt%0]6TC=/B+cP(\;Fu@dNlk[^Yo&&Y#CGA.R].h<3Fn<`hD/HG:r5YHUj=kYJ4^*BrI-+^o:NearC"[+K8i
%[c<s=K%R`0E.$nh#Q^c]BY&Gj#pg^.*Pp:##I%5d"H8skl#HYc0c1n-PNGUb0umV.`)Uh`?/CmI`VlN1I<j\5C.F&O_hEHt#pNHG
%FM?#g8oc/+GUm@+%oJ-S4HV+[\HcC%:Wa`d;c[$0ToG>LZ4u\QN.7;m<afe+lQa8TZkQ69+)92FG52apDTgGHE]slY[>F9fB\eRn
%:Z`02nFdDWg5;bOe5eDKE)ht%HnV.`2S\htVm0%kP*,sZ\L=YGjL%m`R?_2^&)1lZkPu]"[A"Z%d;NZGT_u!sS*9UiD_0I4foPq;
%rjKC?p`)k'4Hma6!`=p*hqm*<kSs0t.G+C$r1/L*PP!2OGT-QTdm"dTQH3Nn5R0cDkE#(`PgsuSS^1VP\?l5$f,^ReUB4`bAhIM@
%+RWWY,:S#e>V'`r%n^R65pV1L;MmCL>O8-@XSEmTHbJjO%ut3"_*'i`=BEYr2HJ$[ETUFRAUXXPOj1FP],:b?e-^NEIOEN&$OPp4
%q#5n030j$+lIJB<rHZ%mNr=K27+>736'i>)A%.A`Q2i)P,?igBj!r8Ck\-$<ZCk>qiJ/6JH%C`V+bu7E^/_KEB-/W"p,N3S_YO=]
%RR@g"5,IUg,L%TaA@"CmK/[\rj_SuY8P,td?cs89onrGqOA%u=CKDmXi6%ispA-ZSN+@ej\rB4^#pDcK<#(I]fZTm$o!RcVEr3M^
%gS1MndB9W_L;2nDZCHgN<9*Z->sskih1l/k?Iqo2DnRTof@*S85a4T#c$c9M0<u;ZT<9I8WNhpX^YR%ckKQ3H/";5u"eF1B;oQMf
%>PZdsn.>5*5>La)C&ELV5HhBbgE3m;qsE7Y[O:]r2E'f75$FuU_0o:2W'2JE+]%Re_06=V`VS#K`2=>YX[m%`'aRBC&;<F"A0$-V
%K-+<Netg%W8+'p-?DTTm"<3D#W<GEfFLt'1'n"odPCBrl?fZnT6k+>`:HHu:eKm>2](N,P`#Ap?Oo_9h-fmJF_[g^^Y-1Y?,0sne
%Er%\Nkf-)LSN]je`0?q';MN96=%$Xj58'2"f;i%u'b$g$$m@p#_UL#j12(Y=(!s@Ka&a.d=C&a)7CTRChn$d"Q;`bgd(+Qkk7ANe
%aHlSOHP5UMc%o>snBih2kJ+$;H?&\=&`LV14rhFde/Ior]"csBP&RW1E$KDeeo%6'euEFN>a@<D^VaR".)+u,&KB=?H''u.Lg0[u
%XF!XaWOJ.uP%`D?+`iX:,SmT7V7kp>D0MS<-nAsS=N(!Cau$<09l6saX]/'$Sa4m5jg"`tJQULc])8(^Wa:_($<\][pDH,']=)?F
%8Z=C:6$df1<n/M(:sO5^<@#6f8(VWf"'m;]I,FgC;C@D=Ru4TI[';*o*%W.m=Yqs.DF6!fJ$rW_i#KNui*F%RP[<?N<TS*4cV*Yd
%eQ"VPs'G<F>^6>%!T*MBC:9n@DG'frR#Y\Y6ranm`>W@T?)?.,!/?I`lH[Om7<q!Xbb7C'le0S4D-=#I`4a!FXeJ)]QL!:=fYm%F
%/t+)[U3gid;KiW=+2XV<eW*=YQ.=mBaWX"1oH"EFOHUd:/c"XRW(hMOKSN,DI\slTX@,iZT^"dKh>(&!bGf_rA%GT;NI(<#QWXR9
%s!t[7B)15J;l+(4.uYgf(22`2'lEk^>COjKCZs7THeH\r]ErN<:[;_PCEZ@JX1)<u;Wmrp^oK!Uf;hVfLrE@-]G>cWoX0d)o*C2^
%%KX3GV6XF/b0R[M]:RrWQ+d>$>X-ASNc.S56ar2E;\/+B,2iDT<pkYA0Cp3,?AlHoc:%EVV8p2*"Q4A2dC.W?\oZPNoE6i;nQK*F
%2UIViA9B?4FX#n$\e%Z&Y]Ll_%g)kaV0omt8:N^\DL6-\6JiSNIQh$dUE=4k%THIMlEAr_m65SIr\j6m3/-n[`i63nD?GmYF$HqU
%TT[A@7d[pAITo-d18[\=+gc'lEGS(IH%HebV:Q@VD'OmdC[E5I=l&V[\AWO_(<s-a1$\6>C2,JQ[nDu;,!'Yqn;d)$[:^@SMo$Mf
%2M\Qlo:ZgJJ4M>[dA$31goj<Hj`HJrk!V>0':9%s@%><RUKsehXhNgm*j*lV(rmKY&6kD(rWWA1L^qAUo7+_-=Jl/!.b@;C%=B[u
%-,`mp.t;G#15i7%F=QVo)k`nuiE%?c`/+@/&_Yp=RIcPZ:NdPVFNj=n5L$gMZ;84u`a(E>U@$e2]Sl6jn8@UN6W>Nc7X6O3crl]j
%^3:N3b+i,@/nGF!Z+[:-]_/sF]:%$N:SYq55ZN*^?*'*@OGLc49ijT$;o5b;Q[TZBJ!uB@rpOj-8EW'>YPGrS1V)K]V`Wr@e4Ng.
%2V`9E<LAY]_W+]C^Z#!=DS"H'S/pEJJ<q3HI-<_#WHpTVb[s%$$iLPtKGD$E+/L?tigprK@XE"YkhAV^*).sOjo_@6GF6+tT/ir(
%)g$M$5i0ebNVj=<i's(*?<,VYDOW<HbVPganC!K;O(b1"iW,rQ`AR_/@Z+G*]J?SO=5npLeN=Z'2F"seKuC%E=*ZLPkcKZ-iLsNq
%c<%&$Er`1&Y@h\S6t05!a#e[):0b#O?t10RZ@J+3np;sj0!3sPEc\sb!qqRTODp[e]Xl=K[_(K#kQHAGRBGUZ"<%nbfROR#c)c^`
%q&e\V/'LqOq")l6W,h#@=TOqJ&8./1g&AD-2"Lf=@a$$h^EqlD[s)MZ=q,m*B5EkNFtQ!V;[ji!L:9fL"/!)T%i1Nqi53\iLhF7n
%I8Pe8'Dk@efrfdjR=Dt:E(X/&3_3(ko@7qWaHJIB"9diF)$dur'*N!7[@c1u%YQ>_&<[)+D?oG?"2_&hJ=q#5\n<.i-Dr+KI6,64
%lj8?170*ZuV=1"#8T>"jJ:LBePP^IeZ%=)2EruKC2i&h]F%7;d#g/2J&eD8p@UDQNfa<3&&J,/clWY#.nYa@Th]@#-90n\_a4@#H
%6E3V\!N^`Bb`@1R+fkdI\.&GHV!p_s4`?#RIGeGY&8j2`2U\0!LptfVLs1P,i";rLM<qV(ODII!6Rdo7^-g!@6Ndm\8jm,ehX8lc
%L]J\Sh]\kn0W>cZLi<h9p,#Z]O#:#n!nMlR<j"f#6C`eAI1hUi!Ld4_ec>o<MSpi.Wg#=U<oU`0+$pG>$(iRuV6BuZ"amj/[2dKD
%p.L^CfbLjVig76"b];-\.b9&W&0qn["&*lAWfp/(i`K;>c%\Lq]EV.Ob>(]QZB>C3-JHIa<6#HgZHACj5-'E`OmC`@5q,B[(i8K;
%AI)iKWagC<PuKF_r7Bk!FYLbN6:/dfL_8d-XOu3qE=%uk9m)%oAF($Y[?e7VfKs8VnPRtqX=O>@r)(2-^0OeJMt?,.]=ippk/I/L
%/l(%/4sY(8`Jh2%!iL@q2[)cs5mmg]khU:4FDi@3D:HG7pIQsLeV=:t0PSi$-&@76CRX8!5m2Of,`">PAbd8aG;ELkO-T[ebXo%1
%[5n-sUYVf]T1i9<YNjc#MXUO^heHH17j,sPZQ9!D_/:10q$T9j&2u:Z#1_#YBL?d:O\m$tU4@#V,+)O;&.l6i#HZcR4<fCp8OSC^
%?.c+6GU)?fEKn:Fe7)b/)]'HoV4EO@[BJsTl#I@<+!6m,I;0os*$*^,g`ka0#7?9sVO9`7N6a?gM(<:k$gU6#ojRV^UrE0chp;_<
%N"?Rtr!moj']d*j&f'_jXg5Kse^i!r2)[LJHbh?j[Zjn<9ChNA)KlG(Z^g[h:GU_N]V]S;O%qC]fIY[Qj"_/79KPHeU[ur9PM*j-
%9L5hH>(D!C6q324dRlsA4#VLXE,<N:J\\IkW_:Kg9Mh]e]@\E16c[j2"me-TiKFj#K;/jqfdf;qc0EciYdK__Upc30ri2JGFYaLu
%S>Op.r?UYY@0]TS$0@iqh+!"l'A>qJn/Qe.Je,uRa!K<9ThZ[sfL>n3@?G)c:_pkK#WA/0KQkb!7JnSq[@1P/Jq@_:g:G-8W)C+O
%Dm-I:MJoSJN=Tj**/+*7eZI$4rTqAV]I)7E(X#>LCs*f_fN)*OQO\MIU#1#dlI+U1Pu=@Okr&.`(k+$*;o)f4gksc*4&BmD3opj;
%I>:1fjTDFK#qK\<k+hIK:P?jJr3dP=J"8FESb?AKRuRpcjb7km\+6TP52CZJn#pS7gg,=u(X'?9GctdGq6%Pfjd`od]_7A$-`a!S
%eI"=-nsgUe&:gnE/Vpo/WSkcREJQt]?mgujZ5B9_(i^2]RsKGG=p!/Nn0.V@42>/Q((ZYZ1360pqQ)gWY\8d9N?m!9m&-f6aaL>:
%>tWK9f?Yu<o?Ak5`BY$"jp7H^&:f/^68UZ=$h5iG;NSBQ@?u(7Ep@(E01fDnd)qTkf(L"0"\!i]]\'CCh)r@e]D2V("Vs?(f8QRJ
%>3LX.H:EEHnLoJE-2<RhMG!6lAL2-EInWARIei*"`cN1J?=E@b=Y\enfZU2q=(NI*:RCU&-7rPFbTgufUi]hthi43NE,=#9qm,`k
%hFaB1QV7#/G:)[4QH`n'4r*_374%KQ?F9TS$/YF-`K0UA@2tct@2eH7_DKsC@9W2KQpO#1!!hdJ55)mY)!b<K1thn;>*iPfc(aT6
%E]d!agH4%4f'QTqFg,`o':-Vm+"#1;<.S2P'kq#MB&&t(ZkndY.Bb?m$O1nnU/h"LNJh;:Usu5JLZEG?A7hYBAiW;/\rWfrr+.n!
%V8Pj-"8Hqu`0JI;`U,eMqUQqa\W1!t[FQ8m1U#7T$5#8@4!cF<M&q`?[SktAb0l4'=I8aA=(U,:`?(H02V9RRVro:7H\Y%:=6k(=
%F*piN;l*SgKG-gf@eluV.u?s,N:0D"Td4N6]9"HS_;t.<*fUcM:Gk]ko6Z9\1sm=:DErl1AM:*^7HH8(<ZHI#5%m9Y0_N<c8k&[#
%iO-Is6?(glrj!i!I1k[Wn_HZ!C+GOHf[3dqGH%K'`q4#oC-5B,X`R]\IoOVN9a82Nf^F*JM7C&I.HOV#d'b*V,m[u+M`CmaI@NYQ
%YdT3^!7FLTE.MkKVgP?1]%+88gaE*Tg6&#:-!e/X:G44j@U#r`GJfK#aWuGtq$jdF5:-tm([HnShb!G*Pm(ON9a(*4e]t0#.)6+F
%S<CT!`1\+Ifa0[mguudl<c^aicFu9Nj';0MNOFsDnsNS;8"*e$"K1@jKKjOqo#"QnEgl_nSB5Q]VZ/K%<sElV0B03o?c^mgA0ng_
%m9]YtF4O$e'8^cRKK20<FQ-O2@?/=t\;52OfI^3q$h7tpe"97&$h7t$_MWCMqdDH:%(fQ8n#dft=a@LpmU21ZB(!<0=kV59c-8Yp
%&ALHLc2?0S(D>.8i)e/ammV(U.#G04##^SYN%.T',8,M/q>lUcAPm1(irK<'HLa\mp'/I>)i)BPkNoLo\b20)4>1Xna4D.r')'DU
%E((L6'[[XcG]5OIZW5.XYGN"Pe2j-(K7C"JH?hci"!<pQ'^F:7,tbGAE%0`gDtnBXg:MZg]8On#0VRY6@C#^e=N=a[qg@$P.2i<o
%,\]*UeOPf/6faV&c]B_=-'pO;qm'Nc+$]*"LWG5S&lgSZK;QXldNL;>ZLuJQ_Y"BM:j7F1MZ9VJQ_+Ie80&[<UYp9Y36IGB8=Rpu
%3'#-hNFm0h5q%gU8$>Nn7#N1.FWaEC=8hsSP],C5)F+^L%^?=rj["8)PWM4]1q+t%]mlk1XJipo1Qq"JMD-;^4W`SV'6m1)$Yi8u
%kP<1ss,GQm.,]Q.Se)NlXX]qXbNYcL,ArnQ,I*iK*c8kY(NAcs;')=0^R`#D0rFC:\iE&=8mINprV$Zhl-1CT]!%Kk%:%=ScKj;:
%^[r$*&'Juf4tXtNbd&_3gqT2@a2@'bF=ZgCL`Pn"D7lH/WrS*tpq.Y06p9MNl^9`uaNuP(]j@e`cc31'L=](IjL,Wk>$lD<m#oK1
%d<nRE"gff3F'G^)i>pgod2M?J#k@StNKHRNk[rpu/:CpX3'B,;4)/bL\R=DEi@^W;$5=1@i@r*A_,kqpfi29eP(G'X`:L\@aheK-
%L_bhMKK,!*iUg-I1;[<Ihd%(,2D,X6@H?F[n&^0-cqG5GH_l*NHBP69mT8k8NsC<W:0er*$=@"_*Lt'T_t&XUq8B4EQW8Ek9HnJd
%3ErA#Tf[N"gB-O@O*cNn6taKh8WHn(VX8YCBK&'#C'gQC9Yg[KZ$L3-A$JIsm6Lg>dt?<.`^,Z*0hSd\Yl_XgRt/TfQGp:ZKVp5)
%h$ujGc?4IF0&eHRjb'ZA[H&E1q:Ka"q(PAGb'Ab1i&jd*Ea/LHcsE:^pY.Ai!eKhkK4L7B)MFs,B?2l3+s95B9_&=d\Gp=,6F1Ec
%a1RSIQH%TQrZq*XH'gg8&1!G\56e4Ps$JhEF0.DSal@sqmW$K^N7GntNLGh6MHk8jpsWg#bL0_i;C>_A*tNhu].]<boZ2hlerB!u
%\3ftFo;P@O/2Z:TCLJoXN0Etp-AAp_[ET^M[l2SaR@]0l''s6H^)W[Ok0.+6p6GRsi/SJ&Q4!8Di/kRMPd`i_DRqN6bXa<i/QT<b
%4$U5197c3QBFh=1"=#XdkQ)-0#osP&gZo-;%enBB4eL]\haN<2OaCH<Dn<5(:]9$b,h?"$eP]LpW?`68\ca`^M#GW>J.5&Eq,UQO
%Et7!8EhOV34liSe_/PurRQp)qD4;\\%G#\Fn?RRSpi8+'%<IJf1SpW@g]a/E]kiL^0$Ji0T%GW8/j,ofb2J^Y9Iro:$egMO-Udrt
%rgXVOOup0n;pRT52dV2/9@/>-o<[T!)e[j5?@2jB`%9ofD_(+u\q(M;X<Lp*We]]U07/1:oBOAU5Gqkhd`]JL;$_%Z+]*[7`<n,7
%j&j2oU'5Il#`(J8Ff@O8Q,OF7G[?M2Wu&`_PZ)OM9/j)Z>+?9\c0@-9E@@X3pI/d\hQ!k`*d>CRl:(4,2Q`\1WYN(q\Bf32&>W/>
%f.).2)lN!5?nI5N(j.+6qh+'$3,h-?Uku=/>2LY-a4<>.@=ZJV^pkeD)+>]Ld7sH4Fs$4L>#reDKtN6i9)89R7r,Wc0GRQR*ekVq
%6t@OQQ&,CkLa"1&<crg2EKM(7?q7qe$SR>6]S-LVV2E/AJ3=8OlFtlt`NE<Br6G[<H?kU4OR+pK$BcQ^=D9?+M[T#o&&9M*>;/%*
%=;;ukr10=IB.%,b&'7N,]Y`]32iV@Vgmon#7:OYt>2/WbfVTG9=C)/<JSf.A%Gq%KJ^$\i6^0K^\43j#62]rR@R27t5!S>SNM;ok
%BXim&GV>Y?62VBDB$5@XG;gpn0<?gWfl9.##nm1N`ciW>kCeI*-N<oD&h*9L7b>@W_D+T#(W#ZkSe3Q\fnJC2nmZIOZNKkkd)g>.
%@Ysk.SjOXO8B@Z>cPU37'>tR)gmIVeAldaPI,VSLBmc8"e=ZDfA'E1KIGou87L3A2obE:YX[4;85)CrJE@3?G5Ap44Y6N;%MV,T)
%PD`H1J6TpPQ-G[)T0@9Bn/+;XpLWH(pfl_s<rgopE]mpnD<>5B]Z$$n2a_hWDlpmsL:DSOn[8<@[],\BH2JMF@@!hg4\2];"1PoP
%i_$FRfj\s)fTkCio#nCs,<0Q,8GhMISiq=d?W5+VOHd>"PE9,=LEP/2+:4k9=u7<pZ#0V)`pKC$X-\Oq*NlK$SEbTi&1b2`$5CJ^
%/(O"@9<Kht[n_&RC-qVS>#IV-YIHho]Kk6\3WbKm#5<uajmhj%b`2!TN:/ZV@f3Y#0Rk(OW3:deA,rl*<o^6I,;D,M`iR_6,gHJH
%^'FVrj.UKo);KY2EOYDJRq?rRW1Rq"a7&!0oF+5S3j0m*69CqafV';^-bI!Tcd8@J16iA:18G.AA1AZ(0+W^]i;g@mK!hcFjIU_t
%b/-\c2P,8Eb!LerXsWd,#j[$AVa"DQTc:I1ho_o].f]<c=oENcV\IFaFY's=h>KQX&@Q)QnGGQW!UA$g>X9dGSFHbS]'$[2\f`82
%@e^?%J*/TT"`a4HRJ@$^PB*KISar*t-U%gj0j$/U7Nk@<LGgK1ad$+G6`2*rg3:7+o[NUl@'L77e-mTd*ZI#O`0[(+`+O'FpQ>7K
%gs#^B5",i0na.Q]3L/?\C]2e?U7[GN&s@\:mJ\6ZkbmU?"VCCYWU+8YINlL(7)b.?OMI:]^221Yk>sqG!6Gjl1T'M/FQ;Om?$H6X
%5B@dd1/ZS@]rY'-Bc[ZqATapBZADVe]`mXZ1J!\>.`p"+kmh203ksEj;b`5s^=>+:l+XP-SoSM4:X+<%YPGUXf3[ptQ,Ki4MbsJr
%0>9=R@YpQ)U4N9`_X"3frs,F6S&;K^)JCe<2@[KsJUjsNf=),Xf&KLR&,#ZPADhP4WEC_5n/r>h42_6VdVu`+?Q5B%"Us9\&!+)g
%Q"UIc<;D?j'J!,#?%_(YFfWLh4^`ZJY?7kgWRoa=V>RlR@Y[PQ[C(o8Z*G97b!d$33,=^uRBO#4*+\kSMe4Z_jImF89=1kX*K\4!
%P2mL>+h_-nf5O92S6A']8#LO#<"bi#%9guuU`1Cohs/M@Bcc7X%B:\b\Qsu8"GPq$NFIB9>&VHaH%%oNi2Agj6OMf[X`Hn&(A#tE
%\bfT;g_M&CS$]CE,"q;`-1-+;9%^*,B'6C%3AR1,%Q!]F,So/aN4"<eT=rP"08e6A<'P:5_VS;oniHG(iY.\T_SODX,U7co,9D%Z
%8n,'/JA!]kf,?6/;h6\5J&Dpd&G;/>qDQK`<$$4LpZ9oZU1QG@ptU9XeLsK[G<aIR4l5#P"..#j;Vk.fhKT"%\$;pfNTLuF,!@0E
%0+L+Zm*Sp40pJ^3P#dnjc]>0d0PNB.D+/c-T;KMZ_k\)mAJ6W=hf:&3d0hN&fOD7JOCd1f9hc<^8M%3-+/SH6d4Agf`uR^UrE?Ua
%'tN5@Cc]KT'&WZP)2kUS78abr/%a<iL:P0g2^]fflle:GW1`Q@5+[,Am.girRH0JA7mm@*<!/2L&NP!k7"jrS\RBbec4%u$b*Jse
%@0G?oFcW[ENN>]G&6c1(bOq7VYh39qfpD$6@5.S!AV/eWN?3\3bodoF/8ggK]9*pE8iVO!/8JXFgIZTmlh`bdj8#WW=?,_q#+1Gd
%?65Lk^jN6Qo#RU-k'l:N2?=BK?7-.8a&+Ku_oj:0#m8Dl0Tnb>_.d0W;k1"83sHmHgtahA2[J^f(rA!=c!jjYY\TnNF"Eh!1T=bP
%"OT(\a>"5n/<jr.>ti:TJlSBJ)k<[5aTBR_[>.2g7E29VKW/J=(No!#FU_SaO=:%%i8>RmiRfLSo^[&*$C/[JZW,rfTh5g)^84SK
%b80gPle]$jI3e5h@1,ZiW<QhW4,]OE?!BAD6Blo/mVkXADgt5cSm`!_Zmsbrqd<DbCtZ+/Pda\>S`iZhX%(S6oY&.Ge6S+Yb*Us5
%s"rJsUbcQG0MPB"nq.NhmA@.P/`#gUO%;Nh3F_?!nf*#dgal;TG,QKAf,Be;qfB"R#\(,]Y46V9_*1r:c8@hCq.X:]JATOS\].PO
%8gB)1;h?4GD2o>=5r?:9nXRT8`SV>_f1cP4MddFL6G@UKV9gcC2Ot3:0#G;GfDTE":=sX_:Sq'a);G-U!4"tgNmHf_VGk;\F`^tQ
%Pj6C:p]STW(Mn[_MqR*R)`HAiVn5$Y"hU-Jr3&!(Fu&m4%WSW8?:aVf>_1Ch7edIDN2CFSB.[lA#]mYAU67D[CpufR*7%u]fP'75
%PSE7=&T@69\-6/*2"mWl#iW!_5h*UF#]aNEa[V18(a77KMX,g,Y"mVggf=XFg,^\V^dnd_"NXGh9Zj0!`U=(AMs@+X0=`EJn#/>6
%Q+TOQ@"SQ[()V*2Z*L:8$kcGWgJ1Hkef.k"UD#];E(V'S#7.HtXaj/V1fPsIlNYJGYh;`&P#$'e2@hsp_FZZ_p9Ik3WRiP?Z3N%N
%*9]BI:*j;0&d@tAUdh=Los%4:V\^]1/5qIl<K4;<3=`FM_L]tA!Y/sFFf2OJKhs>ZikJf>i_sUIg`SqnM]+;K46R"[2M3i(_lm=R
%UMo(".M=_Nf0L3b7?HgtQ3/g1@/kMR:QAqOH16r'9>N\QYY#.u-Ch.<(_HAQm%"g2(7EU1"tN"m:!ti3(+Kr<kb458*LC3'@/pLt
%/">`L<t%Lta&]j>;Ki?.8"fu<Y+NH,JO-pRV[CqY$)*1I/8qLLSWcEVI&0=="ur>X_)YNi67%Va&stL!fO>Mpiflk*Ia(jAJ[B6$
%NT+,"\[A:f&D\>G0f,WeU#)fB1QX.2AKSUMP5$RJKJPSudlu=c;pC/Ad*l*G7(EpT/6Jh8dU'&ER@W?HL?8AK)9TT+/26nAT^TO[
%`M^p!-G$Yu#"+'d0@O/dLIJasUEI!#=60)P;h;Q">/QAI=bMrn<Aa;Z_VH-mRmWF8'\1#4HqMoc>OqBb<4?,$CRmY(E`-qXHX!t8
%N68Z+V@X=B`IR5OHZW,)A8ZD%fH8uo,-*?oe\-NZiF\7#'Ol>Kh(0f_4T]1`<RgY145Id6alctg]f[38P)gANdJ3*$L8[%/9!n]Q
%9CqCCqtLQqh-5$9/sVBc_F`%icj(<B70q<p;M>/b]ia.=Q(<muJJdPBmXE`2#mUu*^`p7HE?6?\:lsr/-*r32PqL$os*oCI\Xp<o
%D4a)^!4K]H+dC'VajE#lD4GR\f^3iuN:3211XCMc="0mWOq?Gtn+:h<l+o\9<4UQiCN4Z^/lo6rZa('!R6I\>h)e'ePEo2**cd!?
%DJK=AHu*2(Z,IAQW7ZXe0:ieQ@_*Z7/_7k@APe4L<6U*CQ9cf$rSQoW+094,*k1N>.cqU2a-7?DSlJJQ#%E?jN`AdA#3)akN`F<%
%?0a<l^3O.>Z`!GZ,%'/#(JGP/la)#RQ);$gp4]kSXD]%RY^YpQ_KO)I:17e3cm'_K3sCF58W24Mm&UmnDRD2RC-aq8DJ+QaPH'&T
%a\Hi/7Z:S;#MO(LXe!=>V5VP0_,l?$5Ia?alkHV-_jhPk#3XR1em#bgl@HD+_q))0PS5a,n`.5j`=d!AG,\\B:JReMF*9RLauT!d
%Bt"r$)Mlgph/Uh?K8#?M`1):3jOk>&YU:M(SlgkQ69c7or4Ms<8bi,9.PJlf0!m36Vp!^mq)rRdqm2,$9=b+E9I*Hu!f@2A9":X@
%c.&*qY`7Ck!)K535grcHYJdLbfF,(0.9dQ'37XaIh(/l-Ejr-i>Zh,Kd.5i;(1Ao>8MRsR$p_`b@/!Tu/u&M!/KLZb=VhZoEECOS
%L6nAeF4&Y'S;:/fn9'ZHY34pP:gW[>DnfC!^LE0<R^$EfO!HEjp.W`^J;%^iid6$=$0RsZL#!I0d__O88bc/TV?QTBZOG^na;(i$
%#^"_))S+l%->1LH>]oYei!Lql@<SR3a4RE.3g@W\k=_I&[eJtLVb@m3?_i.7<<;Z0Mddl82@#B3U)$tpnh>1)=fVTLr8O#"EPi0Z
%[9IU9hfi@0(&#sYYkn8P<X#Id!qX3maZRpsZ'l9ac/VMX]FM/n8MU&ob1JS?:9D9ZQu5CnQq\;h`+#f]*u+8fH4b=d#k)pBZ6O_&
%7!Q1.0Kq$"0'j-Y4BpUfm1@9n#e-**[pDZIAhfG0Gq&F85NYi8c!9HjOc5,J2<@h0q]^n%I[LT""s:XKIi55N%m0?Z%cJCp>4$jP
%:Y:\.R"35@4VpD7_4+EV%fA!]"`M,.WNb2<`jFgDZsBd7&]NlZ-AoHaMn+2gQE\gYIJgIBA0O2DjE3KqFk:`.O#O#*(^]8S.GU=V
%hJ<Ib6QZi/.QUrd`q6U(@"oZdfif\`G=s"gHU%qm`odrTMp4Yu.s)tl[^QNBeak>%I[H0:j[<tO0`76Sk:@6u=r[AjU-D<:&<.g2
%niM$c3nloAEnH&V,`1tiMae9Ki_:WOR70>+Gi"p?I=#@*8-S20.gtb'!;O`ee<l%<)?Du!ARU7RS#^3*:^3;ZrM,pI"%[KI6K:!.
%2E'JF/V9+=APE"Q5jN6[\gBG+$Q1NAV;rFn&-1pWT%*tVT'0oNk"$5bZo>70aR;0e]mX&n6LBuS&fOL+D+hW#+B,dPQ`?6ghIlg2
%DdkAZiEJ!^Fh4P15cs($icJAl"c:0E&>rJCj5#]HgL6.Drj`+Q"HkA[G3Q\VaXT^B]\F^aOH'MRHlC$\@d\<*Jr(W_"gN'nG>Q$p
%-1#Z?N)lY8Vh>c?aL5]T(,5B.SpnM%Qc%Ue\V`l8b=QJ<0!B7tk0Qo;AVhBE/[`\(Z`erGAlnA@0Ke_5l6OT7RM%YC60_n]bm1LN
%r\3l&I\kG,$*9^["Dc=3,H1R!(-#@\#SApuEeEhgjd;Nr^@mXunX89HYu?\iO<BjXG=u\7F2!@hn>>B6;sqq,]N"ZiZ-9IAG`.C]
%.(r%ahD1[1-^,I\C.IK%a_1+7blAUm?Lo&IB/:*j/&0dJDR13[SmHp#%M%/#UK'Z>"5t3nX6nh'Rt6DIR=%W[pL3a;"Wd;Q!J!jS
%\H[b@dP&GTT0!-?_@X#3locS,EfJ#NFi;^j\/k7D$e99YQCT>&Q9-KmTXk8Bfs.$t`Y_.ZQ5q1&ie4\,aBYgk$8/VM.Cl,8=i.&D
%,l/[J`iTQ^pno2HPE$QjRdYC,_h!,L9l-,%ZTdW/"BIL]bf#(,;^RO4SkD:I/r;+*aeq]fb53$HclWk2]2%H^apquB\()F:H4m;C
%n\q8d&LdRY+j_pIQ1?-r^*+sD#EeNe_hp8Y.>LVJb76VHXU4@?7+^GZLB-e#Gl=)Ui8Z1sc?I.ZDHM(tal\Dd4mKb4o`<=`DG'V5
%I/l?fU]#`Yl4nkur+oTl"<GTCq;2+Ei8R9;9GHp]%uXO39H886rF+?1oEK39PBaqNUVi'S.\VM4n$I+KOR<llIu0NC<F%t-VR0$o
%MXJi`c&Xj2gWipCr<IF$-sea8GtMS>EcB@:n[ppgYT"IY>ghDtVk<Au\#DJ1-ErO+Tf79cc%JHgO)Gn!n%-ol;"\Kg-ZT6fXDLqh
%B?&I='AAL&"k,&?N:e=_^+>3eCC]r2Z#Dkh;;9ncPX$UCS#<3aAE*,9NKhXf:KarK)VP[l!,bPmq[*Y>dWW:;3h+ml&i7MbQGrbU
%T-e]<(KNrqjg.NYV_BJqUg8pEfT@1R#j4+\3sW)HLY(Z>CTC4h?(6FbFTsHFBE=Wl\m2IKJel.9Ler5r:>m44rcYD#W]GiXD$p''
%^k0q4^eM/N#8)Va%7)@4Ho\IX3cG25V,qesUe@R_=DP42B)UMHgnZqQ(CTk]o$&U!pn5Ts/\X6/U9mAE))NpNpuXDYJ7GTtNat:O
%q-t[,:558-%].j/gtSNd>HT4j1EY)Xa2ttJWYG$DWje&@dG_!$S#%?Name<",<)ur008^o$(]5YJ^2,fVI?rch._$`I!A@LLe?(W
%`XWnF4Ves5JSU6?hK8rmMN8sHLJK#"d-d(k=?)k<aEoJn`F\lpZW#9-&IM#2"Y(Rp6U9S'D4%?c:!b*>m$&jF=<.R)Z0M"CXF6%s
%SZ'NQYT[$D9c'7K#*r>F&:dVegb'K\;nCA<5$%kU5AW#+c63EKCU.\GhjBAB;C+KNFrKPGZX^4\:M74jG]`5OG-_'ArMm@(%;n4[
%=Lc%`W[b`9;fDOt_q`E!XrF3JEZ[`9_J&>)0j2d/;^D=`;S^u6K.r!T=ULPn:;R\j`a<'Q4TtL^ZdRV:+S]J40rt;u'rLd+^o69X
%M$kD9!$s3SM$q'KaV\2j&f9s?,q!]S<&@:e0cDSc3=QsPZ)!StIa6R79<co8Q>$fP`_2s_Z:o%N7ofdN(-<@C(Rn2i*GiAn,\Tnd
%1#p)p#si><TrMs1fYQu"BJ"\*WX8'R:XLPb%b0V.@p^'qp1.@(R[#SG8sc8"54r!h>PpkTU2GtW!^;1!/M[6.bLm33/Y'q*':3Hf
%pc!<m*j[[BT$"FP1TZ,\RqSRsg9f4IUj'!F:ru+*lBpTj@KIM'/.(_4iE:n*?PNLlrrQft^t;Bb1]j+nY?e=lZ^l=dImIqW+q(0R
%:P]5?EI*Q4%k%*'Z'j6.A?<])P9R7l*/Di>K%FPZD3>:YcoW<8\rbjh[W[I^$%`2tRK!HN9"?39:Tk8([DH$"=c?^'iq7(Z>W=&C
%jpP>/?c#+Wl9mT+[M[>m2:WEg&=+L/?.BOAqGB2b@9WrrEt.dMqb`^Ba!9TVhpe/U_P!=gYL?:K>_@#=ch#WP^S_*6#*GrtCqGb[
%$HP3q>&p\<Z`*Q,/Rp0oTk`dkpkNeHQ?`W(;DfV?&;#?\#O&Mhp?mH@kO&Q>C#!c#R&bbAnb+l\Ue50!ZB4>%B39-C:&jTAM/c6p
%BlT\3pF97Z6mj_N:FFP*8/)_?.\XC^=19T-/P5V<M<tU1,g)LDM:EL9)RuZUd(M`*=YEg&ZBFlIBF4h$A[h"Z%_V/nVMF76]^W5q
%O$@bfFu3Ri]^-/6Npf^2]0<Q-oUH_fb7e:79.^V[TiLa';-K%P+=bSU-)\Viq$1kJD@Zt;os!7->HS`(aFG/B#&-,]&JUh-Jt9[N
%I+!%Z=MC:mQUj7j/"A)<RcEGB-8l>t>:qbJn9OB.J^uj*NA+jU=3nfJ3"r2ke-m.$cRG^.f&KD-f\7*0>foHiGW#VhAhmD"7A;6W
%4L#/:B,`H\Rn3G`M7@V)>LF)F!oAEdn%u+r1u@V?HpgT"6chX'rUMNu%ECF(1>+]4QcT:E1;P^m9S<\>";6A_N<i?9\:Y)SVa^g)
%C:QkHqYmr_(D-]9F@@"Be.5M[<(S*1@o]A5iauCTNLN"49d=ND^\UYj/JepW93A9a?0aZX24i<pPj>PU-DC^a`lXo9\?K)k4j.%"
%`GD*eK%I5/2P)a\`A/#u@&t7^>=6AAE]",59_f!QS\?JJBVO(s=OJ1/LXG2=h$<!Z6JUJ4TS1,[(oP/m;8dW@W1Sm#l",UhURfAl
%LkK`jBSBA`WUQQI",K*0J?:LWOATOo6#U59H6Ai[QPmshpq*5gg6C0C-oA0F5o*JO-M"3rWnuGt[?b!.djEEu5lg/cc<N.+NIbh_
%^A6%Xfp+"sX;qci/L7Yb-$(*e/m1dTr;<uc-/hu%2$*^//l$si4l(m/fULVTDeqN[1j'2OgRCAn`i&K%qK),J:AJWWH\:"pV4_(s
%b#`+Dp839"?24hDI<2d!11k0RL0d"k?Puqgj`rI%)Ti^mgctDHH8q+"KCI,/4-or@B4>VC/$``%<ELUW.)'eoj03s0mCbVGkmQ$A
%-PL\:=W!AH;]',U=8KcNC,X^6k(tW/!_XPQ%pFh.h!Q:ld556rSpgGfYsp44#bI;ID'P9>jA^m#>%tUA?@CTbk(!CJ-f@CuCSHYQ
%aRP+(Pu0'GM>B,^)i!6&XkSO?Q\d3@-A$<lS?Y'cJ<6L$2glM$_p19KfF'\mLR/.^c*Nr^^#:t>24t"?p(.Sldt#S/YR*2ADkpLB
%7ss^TDYgF48pZq>QpQ4sp*+ZXA`[8EE6!['e=cHI'K^";L[?cbqhf;Rl+F6k?gcfI0CI_I.)nmYrVPem2IQR!1%:Inhk(SWlJUR_
%+6m+RKmt1bQ)Xn4nlTsKT#6GX7c?b//I\(qn+i'OP@bUMUHKLR7=f]KJ@7EF:8TSn:';qChG--EZY*Ll'>%8+FQP1/M,Lb=l!!=c
%%,-P^(JR.$0r&pOc:M1&j>I?G2>Q:/*0uSATCg%lqSu/1<jY%eqUNL*XlgHHm;!dXVc*[j+6N76Hi`Gs%^puLqj7ZABtgZm>4i-?
%]pEhUrT?u&WWV<G-A)4MT-aWJm'kq+*"lKF"(dIBn@tM/n>:;7qu=eGW&$^=AHi"6XFS/[n\:>(0F1[4!*K?k5(.D_cltc*%i<([
%3)IJliRajmp7-s)inL6ret6j>L[dkiikeB`Au7+R0#_3=?(tS]+737(&siet82,:KVk-$9-@bl:9(f*GhY6>5GO&&F/`smE%]<eq
%3p6J8aVNk/#@P^<>uJ#7I/I+8CtXL_@VQ,+mc+Oj';8#.lkZjIf_;Lgk@V37M%i:VSegTXBC2I&%anq90,I:>LD0&;l]<X.J8bDS
%nYCobD7;B8caq9Hm5>lj^RE?@ZA4`6qj9(Ki-XAlhR7L/X/??cE5)3S,T>4970p2<BTpitD&J7(c53q5j$4!GI1ika8J4dF=-;2D
%EJ$9iq7U!uU<QHj*8)Cna-_buB*Z%XBZG1??3?c[1D>B%b)9^t)0Gq2MM8d=RMHTa_s0]JrH*51"&?P*O`:!WV^/K2f32k)h5/o2
%27cZT#b%lX"n$k6T.i2B*j*(Z;H,.437EOg/)5$Y6ke!Ia[p]3'!O7U.<.Hh@#_6hKheYe)$BrlPD]Y&CC>E9IO\M'54q84/9'"$
%i(8$mj`i=#r#+7Xn]/q?TR]]gM?jArELrl_[C6Iae59_F4?ceSK^Q>W#oZ66R7P\?QJIFpSb^[[k/YqO*_7uc(6KHgiRJtZYZ7Vo
%*F:G;Z8bl+lgU47JBpm(%9gQ5DQ3L"?H0,Lo.JT*Y</p^ZpRB]Gb=5R"W!Of2;ST,aL_1MP[2L/gkf"M)*>0glERW*%j)3&Xh#^r
%.r->Wje#>MXQ>BhD:4!ACeh#(O%Z?.q+<qPq5ug$e3%Y`&b%%M]4T;_ZPsL_2P$L@U3n@d-^s2OLKsMc%ZlJ-B=!nY=(i^fehH\3
%W_eOgK<QkD@+O"eBGY_:2@a&/BS7Fo-*f21$LPZj\(#6RpZ"9eN8#FCeelqof&%h.4>*)jB(B$QKeTl6gk;oXD7eAbnL&3`jrP57
%EP!=n1UrHC-nu^3jn#S])#d$PBceJ1*4nGuD[,O+/lLdR(0`oVaq6h2(3:.NX9GBpJ5>C^):g.Ugo-&giiiQSa_frA]23t5J)E*G
%]UOK'Fm#M/YJPp52^LoirOcj-p>a#g><>a=Ep4FT`S&"#l4Q`fVurT#Ocr$6d/d\\ZkTSK)t9;1[$D+07m"!GEfr.,)*s52%a[HK
%BV-budALCT%[2/eE\Hfh["3*dTOI@3.I&Xb[)WLjW<mBW#OhPe#A6@k1IXuKEg0O4,#<JD@\l55Ae")9PiS-N,r%@6PH6Gq*+i[s
%(hpka/e,'r8sN%HcB$coS/@H/FDtFm`.D]::TK)@#N+UH;YI5U#uC0Tgoq0>[^(uWq(/;sn>_C6PfSI:dYGq4k"BKc@9Rcp*7Mop
%nVj=U6Tf@R>H[>X@Yn\"It=^F`*"3]?Q$SS"L^9<UJFC)^*j?l`qIb5(K9]l@p7IK5K_t[Z]g)W\<$.KNt+j,R31>:$g=2uX+bUs
%++kCCnmHMXG&2goDSM+l#A:]-Gc?Tr*]D*2$@Yse^`2uZ&"G+o>gCWgE,p)_S)]W0?!0QLeu8VSJFA@h.B/aAF5Cu>cAn(l3B7[Q
%hbQb#3.:EI!qQaU2^HU"+AA!;[0D:=&JlU!TP)H99ac5;(2opCd6)0AFa_FdfM+La.m8ZJiG$[j&\Fl#`f^P,Qp(q8=&c^:j2sAR
%5g`[1(^&r'0XNUNI)0U9h,P(.\d)6a!eF/#O&mYrCKf;hbu@?K*jp$%)Q$\9/UFa_C3:oq]t;Mj*2Nm3&oHt(i,ok[a&f@3E$gto
%[)P2(ZkItC6[d&<Y@UtK@6/FmED[LLc'ot1MFkpo;ZhQOLVsAUIE7YiZ$^=pKD"=!\/q2rUN0EEYK)!<\*c(CF_iU3]o`4mSC;M'
%IB[2$3K"X&Hmh&V[7ODQ*'plCiskT:S:qj#X(0?fFe^$IERo?XE!g_%WP[4&]?njV$j_d?5[,2CTWj:!XiBH'S"7:Q.gC?jH!*MJ
%?Z1JA&8JhTINMc^YoP1:!s`(^P_6krW"2r+;H&HFI)Gdtpe95:CM\@G:B57KW7+Bh!$Xr;:*W/t[IZ$O;WgPl#6@`%&=$dF#6[q1
%qY9b;5Q$/`b7?'jL%s`E5UmMCiolDq5UmMC16DQ&.M\\0I4R(68qj3'+#ta28qj3g[1!D<;B`&-FGG(%8qj3ugk<X4.M\ZrEd;Ie
%.ca,9h1AT67"o9;`\U:B+I*:2R7MiNPmU@pK5NpsPmUC1C)IRRV*\._.iK*mFgNS$##_E3eJf1@*0BHeAJ5bKV*\-EY0SsrNKI$i
%03LrHpJm:^!F5!f+s<-X;/OY$IR,FuU-^tl?m(^A;=PJ2$D^QA"(&LQ5cPbrn)>IT$;o>09HYJ.1Y7U>O@k5*3.lQdONOGj1XoEJ
%;i5ZqaqI=B6<$*t56-d;KrBlA,T)V8KrA[=#nEb/+Y*JVTKjtAU:Rf_\H&U.LoT\d"9DE"&6642#67Z$&=&(T#Z=A.Fo84+<6KZ/
%!E+Iraf?N6Alea5WDnZ\g$"!<<%:9nke8VY;Q13BC_qYR<%:9>lY'ZKPmUBjS14nt<%::9QmdOeWDn\r":7u*&61a^"6ICsDid$(
%ER'#4-5%FlV*\-mN!0;]W=[Uc_CPmhWE9hS.KfoQW=TfP=E#CJ$;lB;.PQrVKr>?a#R7)&+mL7S2X^OB.MoH$8/8>*`L];/NJ)QL
%H'cqe-/O<*5UmMC16DQ&.M\\@*34TT.M\\pX:,N5;B[NHLC"6^;B`&Wk+c:F8qj40>g^MU.M\\P'dbo%8qj4j0CD-+kab0P6WB6I
%,R+?KW=[UcM_,-2h<?7;$<!i7(&B41O@k5*0_YYOWU=UqMh"bV6oAQc/.>FU&9Tm`HNB4#Kr??<2BO(7m*Z@?Yeg'K!ibDJ!/#^-
%R,/rN.M\[]l`q'mV*\.U_Aj+XV*\.KQ%=Kc.R[Q-Oj/M#'rtmL"]D<2'mpdJJQ+*eeN?kuJ5e;!4):*5$UiP-bC#D/Skf.kp,1+;
%76rC<U8klWJUg^4NM3"1.M\\@pp#?7.M\[-==b;N8qj4@ClUqM.M\[E?;b/RPmUBV8:VhJ##XE**V8JdeNdltXWLP?apSEL;B`&k
%I;X%d8qj5/$53\9V*\/>;@<o/;B[Me@LWU=;B`&Lm0Num;B[OhQ(UAl'r(P747VT+[6*uXkBKmqr2==65:V\I$OW\-+Y"-3&>W2I
%.ME+"Uf&?c[_`1O;Q14-e`$u?V#JV0rRDdbB6QRg#Q(6.s(8)+bt.f&OnoG@;F+]/_fnR"QKS.7Onq!]ol!="*CL>l,?7f8oTPE+
%7,RD[s(8)+bt-CDP<'PDGcL8nBdJga%@rSe-U\0@J[O*&]R0_P:PM,,+K'g:QVqDuC+LFTk::AoE10]hTsnle]ti'[:lYa!k!]Xt
%X/t:`=$G+oKjJ,70Wd9hOUE'Jr3[?S6>Kf,W.%T;k[+V?@<"[5U;GnCd+jD[FJk^uLAslYqANDa06VU=$ffRBMc_AMDZ&U>-)n?o
%j<X$*h/9(]Y>>=m9[L2<[)-tAh?/3"9N#%E]M?kH-R+eG5f\Ch5q)dW*4U]&7f7]oV.W#@-'Wtq^Vf$"Pb!!tOG<fC!W@'MIh##S
%+D&A<-@n$,:/H?7XNM7GJ_$0NntQs8JC8ZZJ#IkC[e:E!J\He)f:#D8qEH=e^gYpsB$KG*m?XnJ4Q1/$O#Qb#\a>ICEV8]5Y@qD4
%+u.$2(LjO:K-s[$k?-/ef8[%bmrhg8_ep3hgUff_D_d]NNI6?6*e-LNIZttI@,3+%j>5"RN^"suHhWoDo0q>*Skh=J%g>Z30;XLB
%V9jmrD^o\sHn/rMF/Q(h6&Rljasp4OcPZ?tTMd^e>BIhIAJh/JSiX!/BY6I2TXABC5Djb/^H;ShTB]"?>=UWCV0#Q\<DogeNf>*I
%$]n%uD>'\O^@=cp3hq96r<_j/O+KjL3MT8kPB98^;q9gNEZ7mK$WmS1><`:WJ%JSTF??1p19"H,]$_\onA7)oeP5Y']59MqR#'YQ
%O#l1^D7oK(Q9E'Wc%/Y1AB9<iTMiNgfi.E!:SaT/[?M<M%np;DjnN-[cPD_fk;/fZ-D([B&&2GjPJ,)ej3q4gAP,Y-g(f:)\,5pN
%A3<$ss(g>5++:h_hkm)V-s]!9GJ!ZE@m#(P+,<s=Em5KQDt7)SglZ7t/RnHi4;?MqS^kX&gVs>F[UhV*`MLkWVY.Il]Fg1ucO1#k
%4JArr*k61[X*=a[!0(rTh\F7)fkBS*@Poneca0h<)l]=XHgXkmmk%'?FC2I7n#G_E^K9)@HuA%-)lHs,rET?QS6VZWpb::QXDX'f
%_Ip)Pk_Bo<_%KftERjme#4V(G"s@C%6na$N#ffiP.o<u%r)3Z*R=/'#kR]Qb[Qq^r&ekobE,rAKA5Y?YU;PSgnj]U;XX.nMR`b(s
%2bL@h&!sq+lINFUDNr;I/:"#?ZC[An;(?C49AV(JBc:iR9AV'3RlGhk<*(`<*)Yb]1+@o=\7$(%%kKQgAHj`X0j%.sY\rkZ.PC8^
%Z->&1AmK"b`!o9X^F!lT0JC!$p*]2gB+m*)j;;"b3=J/0"8Y(8,Ai[HOpXlEHcI/80!89m="5"3>%+)5p0$02l)2@^,?sUM>>/5m
%<K'9T^&W5KY/l4p_4Uo/8e0,0X^'Yk_C0KU:0@$SJ@]QlKeiD);nmU\hAaF[dAiu/idt%AV=l\qK=i/[/$U9CW?Id10!"8$N]"7G
%j,+UR]?B`5d+5iA@>^g:W\UMcY1P6Z'c>a7T,"U-I?BL<RX&fh@cd):id?guVf;5dFS!D)?3'>Wib.%K"T-]U'ToK#Q(.QnYXLp<
%(!\(Q>K58q<jp.fr]]o(QqTEq'1TGWhN:$(>-3Te"@$57Ub,"D#5_E&Lo6W^%t]Ng&bLYRCL3<)=JPr)EJ&rY&e(bq1t]do<B(V3
%jQb:Y[=n9CFU3MYf?j)hl_JtKio:'.(5&g47#kWjbZQ)rPX^#35^^-E?_$)`1[lipCDH];W152Pd5Y6B:;1U(7=8"Q?c6I9$P6p6
%gZT#r1\l*sXpsfcY;#lfR.Pq,Gl\7Al.0toIWb]uXX`f2Emcmg%ZrN_/QRdJj7<@jat%Ak`sHLYA./>a7l8,k[s9^n^(AHoBnXLh
%Ok'f)`^]a7f[CaI?lD9;c6l>*0p1nR-7B4I'/5PnrVV,C2?INWfmp%pB`tgM&o34K.+`s_)oFsON<sJ(1m4,r-&nR>ao"U.?F;Wc
%;(9!KX>GM'-.n1ZQnR_qcl+(0&*uUW4l%BC0WCUKk`$.c><BKnN.ZB!d#*sFn.!ZcT,C7]7DpcH\0sVahUIERGV?p=5gjO6i-oZ-
%,N>fNGL5CFj/GJJ_,7*f'6.07oHNaS=8k1okb&QY$Xb0"MdYQtB"-7EAeRjKd39?5@9AgnK\I*TOs-[/(psXu4'7F!>]_?:[Gs+^
%MRY8,R>Y0\:dG-YO?tP]Y6_s5;sH.@c[BR@U09s.<M*Ti/+)`8l+V7+^MiL6.d\b\[9c;nI7[LMbc+WW2ldE%E@`<Ai&FMRL,%h/
%`i!)Q&8dBN'YuG+%E#3`7/U%Po^iW<N*5%)RQoOfo&_QVp%TOS>8bO^J7r52oGuV%98K\DGHgGTihD&tjQo@Sb`;&>)krh>%:6Oq
%bEfjeMnIeaBmBs&`>l"-&mHc==o-NoX*kmbPs0>XB!D1!NSbFKmGKuN??bg?$u:^mjm)G!2BHfS<(Q,7'`qI%?jZT2>*%;IXlR(Z
%VJ$.c@]OFEOs5Ag2&l0Z>2.]>;=O"Xnu.t<NN['$/K8PTCcug:IDm+s3>(\e02)T4a3=kV$f:AAC9@A=rLtB8r*^^9HE1=G)BnO1
%)eiZTN*grHTbI<lD6_D#?YLn"".e'liF]s_0LACOC[scSgiW96^dpZ9ZYnBNiu)._a=X0'*QgD#nUY!`FnY<s9!P.4:o#>%Z;r`o
%Hh7^[r)g@2MXbL[CD]tMNVIN.BsNHf:j'q,@VOZcY5`!P^o'n1.7'3>gP,DVOmLYUgookCmUJj?h>'oM)8Bf#\d@Xk+'rFSli(%h
%po.]#LlK\,bl(Hq]#D[7=&A^<)l#R8JD>B0&X?.!(IJi4eVrBl/"ac#$l"gI79lHdTYtm]a4?."00;c3nFbBV.9jHA&&.ACIkDYr
%kGEA$6[d@'=gRt\BluE@K36EQ]h5b70h\lTl..?Nh-#oS9".j[rFJRoWha7/,3tUhHe%;/[[7[@!@Q<<oBkDu5[koLFQI0urVD$`
%1=rr(j3uc.mD$[T7L5.VGk<*URk'-p0cq#a)>$E'Y3t("0mmn1Lkg-b&@kP;-e$)aB_qB#G!#MDW!J^o]/qCr7]7.JpKjVA9;*2K
%)u^c3NP::&fBO9fiAJN.Wp"qbJ'a5uU(;*q='bl4r&=JILHbVAnXM.Bo:^Y#![$,*?!QonH[+h;OYXJ/S.iC`083^M.49.62C!t;
%9TCXEE^$kJ*&0Q''a4._\iJ)n=TL[JiONc2aI404nsghtWkp"WSW^eMo;E7[G7"LK6GHp=;iit&04mn%niW8$1BmB@;F0H`]HeEa
%Pk"mBPI#l&c<Q*fo9*q$1Fo3"AL5NjR4PA#A?(b;bG[lj98t2GLMA*&C*\WR<26Ok7Ztif)OZ)Fc_1^-PR;-T6m)2O_/cHtTdEVd
%`1q4ATH;iTh>E'i">t?.\f?#MMn2MIm4Ro1-Y.3+oLh2D83Z[_5YL0S09CrqB$5I.m[,Z@o7_!%N=o(oak84H.,Z2qYN9epO?j?F
%Jud36d/2L&;kJKC.1^k=4)SK@Tp`]OdbqhC2_H$;poiH(EVJjLr%I\$C>ea3oR6:Kog4L$%J!:c%dfFQNMjQTP7>LjTtr1!_A&51
%?Wog3F%3,SSfX202,mYlVH6J-Z5h0u[[6WDc'ILsZIrS`=\4^cXI(f'+]7BBGr2j(`M<p/ala'*f9Ad4AkV_tf?@.Y.Ma9^P=)C3
%?<@)g?8$0:g0W5X2H-'b]#r3uCHdg15Htc_`B75[-!94#CJo`DZVne"5OGVQcbA%rkHVVH0:K6.p%"t?X&i$@kI>=/D%!f(e7W-)
%b4A_@EOjU778Cpt9j6Ze>X"?'5]sJMYk\Pb_;(54f@4G?Cs)?O?/ZUm/q1L(D!G;([4Laf/=-t>=o3""ZS+5uH)rX5gpnpBW/&_M
%9*Lp1$ToDfZtjV7.cbjGhJ.++HhPFU4E&b%r1Y3&YH=LN[$os+WDG"q?8L)I[QJK9c2XN3/>E^n?8U1JFe0`F0H;l(<)V#q?W3SF
%Ypn"'D3oX7&cd@d"]K9GCO47tO_f6d:tqE/][c^WSYZn!b%2mj@1'i8Jqu@K%%lYP"[6^O9mu`SVEAe)?1)E!gG=ereZS-odoRg,
%CPLQgPio0Wb<8YcI?>,PS<,NI0E>5;F*Ku;cpfYKmB3D6^"AS2Xen`T8dVGcncd-7;sg#S0>.a1/fEq8;jt2,0)$>3Ad_j%QNLnS
%Tar?;U\&?-`.>&,=>?:<lB<kZV0P1(r1Xe)f2]S_<D4/`S;7`fm3TGPZ__rJX7$^dLZYtsa_e.t0o6Q?*=Gab*gf('4bdFR>'2[u
%H9HYJhSQBAZ^^4(4M6a"3U1h&O(cuI^\*"k`rBt*+.K\$\%[pJ])Q!la(EBjXm]b@hYF;B@rpB%Xm]b@f)Ml@o7sHoiZGTm97PUj
%/H'#CZh0$TcdEoD5"gCXqCMSRla-4Vf&rSBE>CLjm]fDDQ!tr"rS,B_n`9E.ANXBB5B$R7*4gQFK;-@-kaTrZAGh9jC`N<Lrr*F5
%6'%tR7j?3k(A#;@EtE?~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial eop end
%%Page: 35 35
TeXDict begin @landscape 35 34 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 82 1293 7 v 2019 386 7 305 v 2078 277 a Fn(Par\210dei)-6
b(gma)p 3305 386 V 2019 393 1293 7 v 3308 462 73 318
v 2088 462 1293 73 v 150 876 a Fl(Ac)58 b(upoj\350soume)g(\354)l(ti)g
(gnwr\320zoume)g(t)-5 b(a)57 b(ex\240c:)460 1216 y(')-10
b(Oloi)57 b(\354soi)g(agapo\324n)h(\354)-5 b(la)58 b(t)-5
b(a)57 b(z\270a,)h(kai)f(aut)-5 b(o\324c)58 b(t)-5 b(ouc)58
b(agap\210ei)460 1460 y(k\210poi)-5 b(oc.)460 1704 y(Kane\320)g(c)58
b(den)g(agap\210)g(\354poi)-5 b(o)l(n)58 b(sko)l(t\270nei)g(z\270a.)460
1948 y(O)f Fk(Jac)-5 b(k)58 b Fl(agap\210ei)g(\354)-5
b(la)57 b(t)-5 b(a)58 b(z\270a.)460 2192 y(E\320)-5 b(te)58
b(o)f Fk(Jac)-5 b(k)57 b Fl(e\320)-5 b(te)58 b(h)g(Peri\350rgeia)g
(sk\354)l(t)-5 b(wse)57 b(th)h(g\210t)-5 b(a)57 b(pou)h(l\350get)-5
b(ai)460 2435 y Fk(T)-14 b(una)p Fl(.)150 3019 y(Mporo\324me)58
b(p\354)g(ti)-5 b(c)58 b(parap\210nw)h(pro)l(t\210sei)-5
b(c)59 b(na)f(apode\320xoume)h(\354)l(ti)e(h)150 3263
y(Peri\350rgeia)h(sk\354)l(t)-5 b(wse)58 b(th)f(g\210t)-5
b(a?)150 3581 y Fj(Shme\320wsh:)77 b Fl(To)58 b(par\210dei)-5
b(gma)59 b(pro\350rqet)-5 b(ai)58 b(ap\354)g(thn)f(paroim\320a)i
Fk(\\Curiosit)-5 b(y)150 3825 y(killed)56 b(the)g(cat")p
Fl(.)p eop end
%%Page: 36 36
TeXDict begin @landscape 36 35 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 730 718 3871 7 v 730 1022 7 305 v 789 913 a
Fn(Diat\324pwsh)79 b(se)f(Lo)-6 b(gik\240)76 b(Pr\270thc)i(T\210xhc)p
4594 1022 V 730 1029 3871 7 v 4597 1098 73 318 v 799
1098 3871 73 v -12 1534 a Fm(\017)86 b Fl(')-10 b(Oloi)57
b(\354soi)g(agapo\324n)h(\354)-5 b(la)58 b(t)-5 b(a)57
b(z\270a,)h(kai)f(aut)-5 b(o\324c)58 b(t)-5 b(ouc)58
b(agap\210ei)g(k\210poi)-5 b(oc.)590 1837 y Fk(\()p Fm(8)p
Fh(x)p Fk(\)\(\()p Fm(8)p Fh(y)6 b Fk(\)\()p Fh(Animal)s
Fk(\()p Fh(y)g Fk(\))51 b Fm(\))d Fh(Lov)6 b(es)p Fk(\()p
Fh(x;)29 b(y)6 b Fk(\)\))49 b Fm(\))f Fk(\()p Fm(9)p
Fh(z)8 b Fk(\))p Fh(Lov)e(es)p Fk(\()p Fh(z)i(;)29 b(x)p
Fk(\))57 b(\))-12 2177 y Fm(\017)86 b Fl(Kane\320)-5
b(c)58 b(den)g(agap\210)g(\354poi)-5 b(o)l(n)58 b(sko)l(t\270nei)g
(z\270a.)590 2481 y Fk(\()p Fm(8)p Fh(x)p Fk(\)\(\()p
Fm(9)p Fh(y)6 b Fk(\)\()p Fh(Animal)s Fk(\()p Fh(y)g
Fk(\))41 b Fm(^)d Fh(K)12 b(il)s(l)s(s)p Fk(\()p Fh(x;)29
b(y)6 b Fk(\)\))50 b Fm(\))e Fk(\()p Fm(8)p Fh(z)8 b
Fk(\))p Fm(:)p Fh(Lov)e(es)p Fk(\()p Fh(z)i(;)29 b(x)p
Fk(\)\))-12 2821 y Fm(\017)86 b Fl(O)57 b Fk(Jac)-5 b(k)58
b Fl(agap\210ei)g(\354)-5 b(la)57 b(t)-5 b(a)58 b(z\270a.)590
3124 y Fk(\()p Fm(8)p Fh(x)p Fk(\)\()p Fh(Animal)s Fk(\()p
Fh(x)p Fk(\))50 b Fm(\))e Fh(Lov)6 b(es)p Fk(\()p Fh(J)17
b(ack)5 b(;)29 b(x)p Fk(\)\))p eop end
%%Page: 37 37
TeXDict begin @landscape 37 36 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 730 200 3871 7 v 730 504 7 305 v 789 395 a Fn(Diat\324pwsh)79
b(se)f(Lo)-6 b(gik\240)76 b(Pr\270thc)i(T\210xhc)p 4594
504 V 730 511 3871 7 v 4597 580 73 318 v 799 580 3871
73 v -12 1016 a Fm(\017)86 b Fl(E\320)-5 b(te)58 b(o)f
Fk(Jac)-5 b(k)57 b Fl(e\320)-5 b(te)58 b(h)g(Peri\350rgeia)g(sk\354)l
(t)-5 b(wse)57 b(th)h(g\210t)-5 b(a)57 b(...)590 1320
y Fh(K)12 b(il)s(l)s(s)p Fk(\()p Fh(J)17 b(ack)5 b(;)29
b(T)24 b(una)p Fk(\))39 b Fm(_)f Fh(K)12 b(il)s(l)s(s)p
Fk(\()p Fh(C)g(ur)5 b(iosity)h(;)29 b(T)24 b(una)p Fk(\))-12
1660 y Fm(\017)86 b Fl(...)76 b(pou)58 b(l\350get)-5
b(ai)57 b Fk(T)-14 b(una)p Fl(.)590 1963 y Fh(C)12 b(at)p
Fk(\()p Fh(T)24 b(una)p Fk(\))-150 2303 y Fl(Ep\320)-5
b(shc)59 b(qreiaz\354maste)f(thn)g(pr\354)l(t)-5 b(ash)280
2643 y Fk(\()p Fm(8)p Fh(x)p Fk(\)\()p Fh(C)12 b(at)p
Fk(\()p Fh(x)p Fk(\))49 b Fm(\))f Fh(Animal)s Fk(\()p
Fh(x)p Fk(\)\))-150 2983 y Fl(pou)58 b(apo)l(tele\320)g
Fj(prohgo\324menh)68 b(gn\270sh)e Fi(\(bac)-6 b(kground)66
b(kno)-6 b(wledge\))p Fj(.)-150 3301 y Fl(H)57 b(\210rnhsh)i(thc)f
(pr\354)l(t)-5 b(ashc)59 b(pou)e(j\350loume)h(na)g(apode\320xoume)h
(e\320)-10 b(nai:)280 3641 y Fm(:)p Fh(K)12 b(il)s(l)s(s)p
Fk(\()p Fh(C)g(ur)5 b(iosity)h(;)29 b(T)24 b(una)p Fk(\))p
eop end
%%Page: 38 38
TeXDict begin @landscape 38 37 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1140 1535 3052 7 v 1140 1839 7 305 v 1198 1730
a Fn(Suzeuktik\240)78 b(Kano)-5 b(nik\240)77 b(Morf\240)p
4184 1839 V 1140 1846 3052 7 v 4188 1915 73 318 v 1209
1915 3052 73 v 150 2329 a Fl(K\210nte)58 b(t)-5 b(o)57
b(san)h(\210skhsh!)p eop end
%%Page: 39 39
TeXDict begin @landscape 39 38 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2151 793 1029 7 v 2151 1097 7 305 v 2210 988 a
Fn(Ap\354deixh)p 3173 1097 V 2151 1104 1029 7 v 3176
1173 73 318 v 2220 1173 1029 73 v 150 3114 a @beginspecial
0 @llx 0 @lly 388 @urx 114 @ury 2950 @rwi @setspecial
%%BeginDocument: curiosity.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: curiosity.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Jon
%%CreationDate: 11/3/09
%%BoundingBox: 0 0 388 114
%%HiResBoundingBox: 0 0 387.2559 113.2193
%%CropBox: 0 0 387.2559 113.2193
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 40 8
%%BeginData: 5880 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD80FFA8FD07FFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FD0FFFA8FD07FFA8FD23FFA8A8A8FFFF7DFFFFFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A8FFA8
%A8A8FFA8A8FFFFA8FFA8FFA8A8A8FFA8FFA8FD22FFA87D527D5227527D7D
%52A8FFA8A8FFFF7DFFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8FFA87D7DFD04
%A8FFA8FF7DA8FFFFA8A8FD057DFF7DFD04A8FF7DFFA87DA8FFA8A8A8FFA8
%A8272727FD04527D527D52527DA8277D527D52A8A8FD22FF7D7D27525252
%275227FFFFFFA8FF527DFD0427A87D5252FD04275252A8FFFFA82752F852
%7D522752A87D52272752A8A85227F827275227272752272752A8FD0527FF
%FFFFA852525227527D7D2752525227527D7D27522727A8FD22FFA8FFA8FF
%A8A8A8FFFD08A87D7D527D52A87DA8FD067D52A8A8FFFD047D52FD057DA8
%7D527D52A8A87D52FD057D527D7D7D52527DA8527D5252A8FFA8FFA8FFA8
%FFA8FFFD06A87DA8A8FFA8FFA8A8A8FD22FFA8FFA8FF7DA8A8FFFFFFA8FD
%06FFA87D7D7DFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8
%A87DA8FD08FFA8FD0DFFA8A87D7D7DA8A8FFFFFFA8FFA8FFA8FFA8FD27FF
%A87DFD08FFA87D7D7DA8A8FD20FFA87D7DA8FD0FFFA8A8A87D7DA87DA8A8
%FD34FFA87DFD06FF7D7D7DA8FD26FFA87D7DA8FD0AFFA8A87DA87DA8A8FD
%3AFF7DFFFFA87D7D7DA8A8FD2AFFA87D7DA8FFFFFFA8A87D7D7DA8A8FFA8
%FD3DFFA87D7D7DA8A8FD05FFA8FD29FFA8FD067DA8A8FD3CFFA8A8A8FFA8
%FFA87D7DA8A8FFA8A8A8FFFD05A8FFFD09A8FFA8A8A8FFFD05A8FFFD0CA8
%7DA87DFD05A87DA87DA8A8FFFD07A8FFA8FFA8FFA87DA8FFFD05A8FFA8FF
%FD08A8FFFF7DFFA8A8A8FFFD09A8FFA8FF7DFD04A8FFA8A8FF7D7D52527D
%A82752277D527D7DFFFFFFA87D7DA8FD047DFF7D7DA8A8A8527D527D7D52
%277DA8A87D7D2752527D7DFF7DA8FFFFA8522727277D527D527DFF52527D
%7D7DA8FFA8A852A8FD057DA827FD047DA852FD057D527D7DFFA87DA8FFFF
%FFA87D527D7D7D527D52FFA8527D7D527D7D7D527D52FF7D7DA8A87D2752
%27272752527D27522752A8FFA8A8FD04522752277D277D7DA87D27275227
%27275227A87DA85252275252527D5252FFA8A852522727277D272727A87D
%52272727A8A8FF7D52275227522752527D275227A87D7D52522752527D52
%527D7D27A8FFFFA8A85227275227525252A8A8FD04522752275227525252
%27A8FFA8FFA8FFA8FFA8A87D7DA8A8A8FFFFFFA8FFA8FFA8FFFD05A8FFA8
%FFA8FF7DA8A8FFA8A8A8FFA8FFA8FFFD07A8FFA8A8A8FFFFA87DA8A8FFA8
%FFA8FFA8A8A8FFA8FFA8FFA8FFFD04A8FFA852A8A8FFA8FFA8FFFD09A8FF
%FFA8FD04FFA8FFA8A87DA87D7D52FD06A8FFFD05A8FD08FFA8A8FD057DA8
%A8FD0FFF527DFD18FF7D7DA8FD14FFA87DA8FD10FFA8FFA8A87DA8FD077D
%A87DA8A8FFA8FD17FFA87DA87DA8A8A8FD09FFA852FD17FFA8A87DA8FD14
%FFA87D7DFD09FFA8FFFD04A87D7D7DA87DA87DFD04A8FD26FFA8A87DA87D
%7DA8A8A8FFA87D7DFD17FF7D7DA8FD15FF7D7DA8FFFD04A8FD077DA87DA8
%A8FFA8FFA8FD2CFFA8FFFFFFA8A8A87D52FD047DFFFFFFA8FFA8FFA8FFA8
%FFA8FD09FFA87D7DA8FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%52FD087DFD04A8FFA8FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD13FFA8A8FFA8FFFFFFA8FFFFFFA8FFFFFF7DA87D
%FFA8FFA8A8FD04FFA8FD07FF7D7DA8FD05FFA8FFA8FFA8FFFFFFFD04A8FF
%FFA8A8A8FFA8A8FD04FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8A8FFA8FFA8A8FD04FFA8A8A8FFFFFFA8A8A8FD12FFA8A8527D7D
%7D527D7DFF52A87D7D7D2727F85252A8A827FD0452FD05FFA87D7DFD08FF
%A87D525227277D52522752527D522752A87D7D527D527D5252527D527D27
%A8FF52525227FFFFFFFD06522752277D277DA87D527D527D527D527D52FF
%52A8FD15FFA87D527DFD04527D527DA87D7D2752275227527D7D27522752
%A8FFFFFF7D7D7DFD09FFA8A8525227272752277D5252275252527DA87DFD
%06527DFD0552A8FD0452A8FFA852275252272752527D27527DA8FD07527D
%52527D527DFFA8FD12FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FF7DFFA8FF
%A8FFA8FFA8FFA8FFA8A87DA8FD0BFFA8A8FFA8FFA8FFFD05A8FFA8FFA8A8
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8A8FFFFA8FD05FFA8A87D7D
%52FD04A8FFFFFFFD09A8FD23FFA87DFD09FF7D7D7DFD1DFF7D7DFD14FFA8
%FFA8A87DA87D7D7DFD04A8FD33FFA87DFD06FFA87DA8FD20FF52FD0FFFA8
%A87DA87D7D7DFD04A8FD3BFF7D7DFFFFFF7D7D7DFD22FFA87DFD07FFA8A8
%FD057DA87DA8A8FD43FF7D7DA852A8FD25FF7DFD04A87DA87DA87DA8A8FD
%44FFA8A8A8FFA8FFA87D7DA8A8FFA8FFA8A8FD16FFA8A8A8FFA8FFA8FFA8
%FF7D7D527D7DA8A8FFA8FFA8FD46FFA87DFD04A87DA8FF7D7DA852A8A8FD
%17FF7DFD05A8527D7DA8A87D7DFF7DA8A8527DFD46FFA8A827522752F827
%27A8522727F852FD17FFA85252272752FD08277D52F827F852A8FD45FFA8
%FFA87DA8A8A8FD057DFFA8A8A8FD17FF7DFD05A87D7D52A87DA87D7D7DA8
%7DA87DFD46FFA8FFFFFFA8FD04FFA87D7D7DA8A8FD1CFFA87D7D7DA8FD08
%FFA8FD53FFA87D7D7DA8A8FD17FFA87D7DA8A8FD61FFA8FD047DA8FD11FF
%7D7D7DA8A8FD68FFA8A87DA8A8FD0BFF7D7D7DA8FD6FFFA8A87D7D7DA8A8
%FFFFA87D7D7DA8A8FD75FFA8FD057DA8FD7BFFA8A8A8FD80FFA8FD7CFFA8
%A8A8FD44FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2009-11-03T13:31:16-08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-11-03T13:31:16-08:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-11-03T13:31:16-08:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>76</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7vd/mXpdlcxW181vau8c&#xA;MksskswghNyKwRzT/V/SSSWh4KWqfpWqqUW358+R57iWM6hZ20ESc/rt3LPbWz/H6fGOaa3RXbl2&#xA;XwPgcVT3SvzE0bV57qHSruw1GSyt0u7lbS6aWkLryBBEIQtxoePLaorSoxVPJtRule6KRQC3szSa&#xA;aecxAUjWRmNI3AUK/UnFUstvOmm3NtBdQX2lyW905jtpBf7SOrlGVP3XxEMpG2Kq/wDiWL6v9Z9f&#xA;Tfq/Fn9X698PFOQY19Lt6b1/1T4YqrRa1LNII4msJJGVXVEvCzFXJCsAIujUNMVQ8Hmm3uLk2sFx&#xA;pstyJBAYUvuT+qVZwnERV5cUY08Biq7VPNNppmn/AF6/e3s7dPU+s3F1P6UEfpTLb7ycG+1I4C1A&#xA;xVDWHnfS9QZ0sb7S7h4zArrHfcirXX9wpAi6yV+Ed8VRUPmRZorKWKWwePUuIsGF4f3xkiaZBH+5&#xA;+LlEjOKdhiqnpXmu31ZZm0yfT7xYJ2tZTFeFgJ0+1HtDufliqGvvPulWKo93d6fFHIk8kchunKMl&#xA;qHNwQ4gKn0RC/qb/AA03piqhZfmZ5avriW3tNW0iaaG3N5Mi3+626hWMrVh2TjIpr74qi7bzrpt1&#xA;YSahbXulzWMLtHJcpfVjDoAzLyEVPskH3BB6HFUVJ5hEd5FZSS6el3MrPDA17R2VACxVfSqaBhiq&#xA;Ht/ONjc6peaVBdabJqOn0+vWq3p5xVFfjHo7dcVR1rrYlvRaE2zyBgki29x6zxlo3kQunBKBhG1D&#xA;irG/MP5seX/L62Q1O4tI576SKKKzS4eW4QzxtLGZYo4XaNSiH4j8PviqWab+fXk3UUItriI3X1gW&#xA;aWDfWhdNM4HALB9W9Sjs3BWpTl8PXFUZF+dPkmSaKD9MaWlxIoaSCS8eOSAEdLhXgBhIYhSJKEMQ&#xA;vXFVfRfzc8qa5qM2m6Rqem31/CvP6rBdSSSSKIvVLQosBaUcP5K4qhNO/O/yVeW0M76pp1g06847&#xA;a/untJ+HASiT0pYVbg0bB1alCNxirKPK3mqx8x2n12weGexdA8F1byNIj0llhcfEkX2JIGGKp3ir&#xA;sVdirsVdirsVdirsVYjf/lvoepiM6rYaZqE0cUUP1i4sechWD+7q3rdRiqQ/8q58of4lbRLny/oz&#xA;xS251OyllsTLylE5W6AEkzcRGZISAu3xUoABiqf6P+XOh6LJeSaPZafpr6hF6F21paNEWTevECYo&#xA;pNdzx32rWgxVf500Ly9faRfw+ZZtPXQ7tuU/6SQBEcxCHkkxlh4NxGzCjDehxV5lqv5ZeUPMWqvq&#xA;2n6dqWvajcRC3n1L/S7eBognpNWe9uoldHSqk26vSp40xVkmifkxH+gNM0fV4LBbLShcra20RvLh&#xA;wLyUzXCvcerac1kLFWUxfZJXoTiqGk/5xm/LmWhks0aVSCszSXpcMGLFqm7O7MxLE9a4qmWi/kX5&#xA;b0W80+506Qwrpc7XVnbE3EkSyuqB2IedmPL0Yiat+wKUHIMqyXzJ5Hs/MOj/AKLv5i0Lszz8fUQM&#xA;zTrcgj05I3XjLGpHxYqxdPyE8qw6gNRtGa1v1VUS5ikvOaqAqnhzuX4lkTiWHxU71ocVb0/8hfKO&#xA;m6gNR06NLO9S4S7hmi+s/upY1ZAY1a4ZQOEjLSnT33xVrXfyE8oa9cpdaoguLiPmY3L3go0lzLdu&#xA;1BdBamW4k3I6GnTFUwT8o9Hi8o/4XiFs1ikU8EEk0Esk0cVyR6qLKLhJArIoRqMOSijE74q89ufy&#xA;T8rabcpJ5i0eSJYY5YLTXbKS+1CCGORCgaWJpvUhYAk1aF41/afFWSL+Q35ca+lvqyyR6qhSIWt+&#xA;lzeTArAvpxGOVLz9hRRSp27dMVUbn/nGH8v5fSMMKWskTRt6sazOx9IIB/ezSAcvSXkQKnevU4qm&#xA;nmD8hfKXmK6+t64Pr9yZDNJLI94C7NBBbty4XSggx2kdR7YqmXkH8ofL3ki9vLnRiY0vnjkniJlf&#xA;eFZlQB5pZWp/pLk1qT44qhvMS/l9fra6Xrd5pGsXGmLxtbFrU313HsFqIIJZJat6YrROoxVKI/Jf&#xA;luZ+Wi+Qrdw7q5upNOj0yJmUMFaZZ7mK5anMneBvio3UA4qj7D8qYJrg3d/5b8rWM5lE5MFlJeuZ&#xA;A3Ln6jGz4t78Tiqa2v5S+VrTUYdQtNN062ubZSkHoWskSICQWpGk6p8XBa1HYYq1P+UPkq4blPoG&#xA;iTP6MduHk00MwihjSKJAxlJ+COJVXwpiqfeWPK9l5etfqVhHDb2KII7e1t42jRB6ksrn4pJSSzzs&#xA;euKp1irsVdirsVdirsVdirsVSd/M9olx9XeF0lb1zEjy2yM6W0ohlkVXmVuAd1FaftCvXFWOeaPM&#xA;AEGmea9NjgaPTPUeae7u7eC3ks7uA1X10acrykWGQfAahcVS/SfNd75nNyB5iiiitHVbm20FrIlO&#xA;dSsct3czTl+QU7xxxnFU90TS/KMGriSDTTNq0MrW0mpXcsd9dwy+mZjG88k1xOlUFeNadO2Kptd+&#xA;Z7W0jWW5t5YoXuvqUMrvbqskxmMCKvKUH43Hw7Yq3P5ktoLd7maBo7eNGleZprQII03ZixnpQdzi&#xA;q6TzBFEsLyW0iJcOI4GaW1Ad2PFVU+tuSxoPfFVOTzTZR2M2oSRlbC3UPPdGe09JFKLIGZ/X4gFH&#xA;Vt+xB74q3F5ntJbt7OKJnuo1R3gWa0LhZCyoSonr8TIwHyxVC23nvQrq6e0t5FluY5RbvCtxZlxK&#xA;eVE4+vXkeDU+WKt6j550XTdNbU75hb6cjRo1289oIg0qq0Y5evSrq6sviCDiroPPWh3H9xIsnxIn&#xA;w3FmfikNEX+/6semKouXzFDFM8EltKs6Qm6aH1LYyegpoZAgm5FQdqgYqhtd876FoU0cepyC2E04&#xA;tYJJZIIlkmZBJwT1ZEJPFh2xVh83mL8ur6GfzFoupfomcTGGfVdOurJEkn9MSFbiFpXguH9Peskb&#xA;MB9kjFUzTzT57hvotHNlpd9fTRyS29ybxbWaSOFlWV/qK/Wf7tnUNS46n9npiqG0fzDqXmS2NzD5&#xA;lD2wlaDlokWnxKZFALRl7u4vyxAYbpx6jpiqKi0bybeJzvbK615XLJ/uQu11GF5EmSB1EMlxLboy&#xA;ySAEBFG2Kp5Ya1o9pJcaVYWItn08Rm5s4WtIxCJlLR8kWUBeSoSPliqIk8zWscsUUkLJLPX0YzNa&#xA;BnoCTxHr70CnFUvX8xfLbale6X66DUdOFb60NxaCSIcS5LqZ6gBRU+GKq1z550W2sXv52VLONS7z&#xA;G4tOIUc69J/+KZP+BbwOKo464opW0l3JA/e2vVev+7u1N8VSpPzI8sPPJAlzE0sKGWRRc2e0YUuX&#xA;r69OIUFq+GKpjc+Zbe2ZUmtpEkeN5o4vUtebxxjk7IvrVYAeGKo27v2guIrdLaW4kmSSQekYwFEZ&#xA;QGvqOnX1BSmKpePNdgZXiCVljlNu6evZ8hMByMZHr/aA3p1xVTvPOmk2U4t7wi3nMZmEcs9mjGNV&#xA;Ls9DP9kKpNfDFV135w02zlghulMMtzKlvbxtNaBnllpwRV9apLchT5jFVebzFBDG8s0DxxRL6kkj&#xA;zWiqqClWYmegG43xVAr590FrG4vw4+pWjvHc3BntAkbxGkgYmbbj3xVFXXme3tTxltpRK0Uk8cAk&#xA;tfUdIl5OUX1qtQHtirFvM/5MeXPM99Ld62qXjypJDxcXCgQSXH1kR0S4QfDJRqgCpFcVY/H/AM4u&#xA;fltEvFLUcS0bMplvmUtErIhKtdkVVXIU9V7UxVLta/5x+s7meFrrQ7PWbe3G0z6heR3LsRQt6A9K&#xA;3r/z0A7DbFU88j6DpHkYyquk6rptvPcm6lR7SXUCWMciUEtlPqPFays5Mm9TuelFUXqOifl/5tvY&#xA;45NY099VjklaL0We11JYpZHl9FzHcQ3HEep0oKHcUOKqTf8AOPXkf1jcQ2sNvdejHAtxGLnmohiM&#xA;UbDlcstVB5bjcgE1xVGWH5L6VZwaTELsyfoW8OoWJZHVVnd45X/dpKsfFpYQ3HjtUhaDbFVDzd+W&#xA;X5fjyyLPX4tPt9KilkaJzDMs3qXJb91E4nMzlmekcS16KFX4VAVYno3/ADjh5H1aZ7248vNptoGW&#xA;SznubrUFvZpP2ppLcXR9HlQEFpPUP7SIcVZHoX/OPHlLQtRsL7S29BtOZZIISJZIy6TCfk3qTM28&#xA;iRsQGA+Af5VVU51H8oPLd96TPbWkFxDdG9iu7aGaG4WbkXWkyXAfgjUKJXitFoBQYqk8f/OO/kuG&#xA;2+r26ejGQ6MVe7LGKaP0ZouTXTEJLF+7am9OhB3xVP7L8tIrTXJtbS+MmoT6Yujyyyxu9bdeO+8v&#xA;2/gG/T23OKqnnL8tNK82TxPqb8kt5WntlHrIyO8ccTnlFNF1WKnToWHfFXmw/Kn8vbfVWPlaCbV9&#xA;XW8hmv8A6i08sDSW5J9K9urm5aCNOR5SRq3qeCkbYqyPyd+QegeXpbLVLOCHStctn9X1rWa8uQvK&#xA;RHkiEs0sfOOQR8WBjGzNSnInFVPUP+cafy+1CcXF7bLPOq8VlaS9BG4bkKXQ3qNz3xVlXlf8ubXy&#xA;zpMOl6XcLHaWzcoFaN3IPqwuoYtKSVVLdUHem5JNSVUk1H8g/JWo3VzNdWsHo3TmWSwiF1DaB2hM&#xA;BZbeK5SMNwY0NKg1IpU1VQbf844+Q4+JhhS1jjf1SkRulXiJDOib3J4xxy/GqrTceFRiqRah+Wfl&#xA;rzJPBFocDa1PbXE8155gZ5be3kmmeJpWlvS8rXUitboyLFG6KV4sVG2KsxtPyW8v2ui22lRFPTtY&#xA;ZbeG44zLMEnuvrj/ABLOor6xahpUKzKNmYFVBv8A849+RXubW6e0ie6tDWKd2vXkJMrzEuzXZLln&#xA;karH4j47Yqtl/IjyzHpotWvHht44PqxkrKtIFlW4VDWbgFW4RZthuw+KoqMVW3Whfl/ZatY6heea&#xA;tOhv9NtprCyNzcqOEUvqIE4SXPWJbho09qA1oMVT7XPMfk7WQIRdwaraGKSGe0jsZ9UjlEjxspAt&#xA;wwNGhqOteo6Yq88l/KP8sLq/N7HoGo3l0SedbDV7cOXHFg/1me3Rq7sa7Ekk7nFVkX5J6JFbyQ6d&#xA;5T1O0E6xK8vr26KyQ/FEGDanM4CPRwPT+0AD8PIYqn+tflrr2uzWNzLoWnQTafDFbWsx1O+tZ1gh&#xA;DBY+Vqs3QPuwflUCjbA4qg7X/nGzyjLC8V5omn2Qmg+rzPaXF9KxXiu55tCrNzRWqRu3xHfFUwk/&#xA;5xv8lXEslzf8r+/mEguL+d7oTyGZ5HlZmjuYwDIZ25cQBiqbQ/k5psGsQa2l4ZNWtrNrCG6mE0lI&#xA;jE8KVQzhf3aTOFpT7W/air0PFXYq7FUPqFw9tp9zcIAXhieRQ3QlFJFafLFWIax5s8o3NzLpGq6r&#xA;pN4kSt9aE1uJ7eJ1lSAwysZmRJS8gAjb4uu2KsdbUvyoiVW03zPp2nR8yldHubi2t42Cli0kdpdr&#xA;AFFKVkXjXbrtiqb/AKRvtN1G4sV89xXFzbW/1ua2v7GK4SG3qg9RmtmtZAo9ZDV5Ohr0riqR/wCN&#xA;fImja1Y3epeZrfXPMGoRSy2t39We4a3hCI5WKGKXhaK6yLx+ENIKVZziqd+Xvzk8l6/FYPYeZbEP&#xA;qLOltBPbyQyc1dYwjq8w4M5kXgGpzBqtcVVrr82fKljqeo6dqnmCy0q40yZbac39vLao8pUOVhaW&#xA;ZfV4qyklagAg9DiqcaB5y0vW7ll0rVbPVoYbg2ly9orcVf0nlBWT1JFcfAVqu1aitQcVZKSFBJNA&#xA;NyT0AxVjUvnRL7lD5VtDr8wJVrqNxFp0bA0PqXhDK3E7MsKyOO6jFVreUr3VmWTzTqDXsXX9D2nK&#xA;308e0qgmW58CJX9M9fTXFUbqmpafoUdrCbmy0fTVjektyFigTg0aJGvxwotfU2xVjE35yeQ4WgWb&#xA;zfpMRuJJYo/URk/uJJYnc8phSP1Ld1D/AGTtQ7jFVHV/zs8j6XGZJPMtldRCJp2lsreW6jCqqPRn&#xA;hmdVYrKpAJ74qq2f5xeTrhGeXzHZWCKFPK/tpbOrMZVMaieVCXU278lHTbxGKq+ifmt5V1q3NxY+&#xA;YLQwiOOUvJaTxKElkjiDVeRRQSTorHopO+KsW1TV9O1yeW81vzzpaaLWRYNJ1CwltbQrEyq0zxy3&#xA;sf1hQzcazco+Y2UEHFVa+89abDCrr+YpNsiLKz6TptvNBHCZPR5Mxjugqo/FWFaryHiMVX3vmTyx&#xA;bR3rax5+uJJNPlMF3bOz2k4kFeSiKze2f9kj4R2NN8VTC9h8j2kGk3Gpa0HtNcT1NMk1C61KaGRG&#xA;VZAaXN6yqGDrsRvUDFWvK6flZrupsmjWOianJaTrDdzRacokUyRSyxus8hk58jCdxXFUwufP3kry&#xA;9fz6Zc6xpWhzxmhtXhKUUyzRwgusiIXf0HIXr7Yqhr386vINnp63s/m3SwhdY2gWN3uEYsqsHgWY&#xA;yqY+dZKr8IqT0xVZa/nb5Lnlu421+3tnsrh7WX6zZXEVZI3KMELSfHurdOyseinFU2k/MTRVhspU&#xA;1i3mbUUtZrOCKzneV4r2UQwyemJOQXmeLE/ZOxocVU2/NDyaBJ/zt+isYkEsioQ7BCQobis5PU0x&#xA;VDR/m35Xb1jJrUNukAQvJPY3MaUcgKQzSDrU+9AT0FcVT258yxwapc6SNStJdXtLNtQl09YXEnoI&#xA;QORPqsFqWAFfHocVZFirsVdirsVUry2S6tJ7Z2ZUnjaNmWnIBwVJFQRXfuMVY9qP5eeXNT1SPVdR&#xA;hS71GEoYrqa3tJHUxmqMC0B+Jex69sVS6f8AJzyLLCIRYpBHyDEW8NtByFWJRvSiTkjeo3JD8LV3&#xA;GKo+2/Lny7bXM11ChFxcWn6PuZGjt2MtrwRPTl5RH1AUiRSWqSBiqC81flboeu2od4bWfUrWAQad&#xA;JfWdpPDGiV4RNGIkPpfERxUjY4qx/QPyu/LPWrF7OTRYLDUNNd49R0pIbZDbXEypydSkMfIOsKtD&#xA;OACV3HE8hirItV/KjyNqE015qlhb3UrvJPPPcW1k5LuAJHZmgPUKK/LFUn8v2Og6U7Q/l1pRvo5J&#xA;jM90ghtNIWQRmLl9YSKsgUO1FtldeVa8TU4qyVvJrarR/Nd2dXFa/oxFMGmr7G2DMZ/f13cV3Cri&#xA;rJI444o1jjUJGgCoigBVUCgAA6AYquxVA6npEOobSyOsZilt5YgsTpJFPx5q6ypICDwxVis/5L/l&#xA;5OqrPpFpMqElBJZ2T0qSTTlAdqsTT3xVbafkp+Xlncw3NnpVvbT28qTxSQ21pGRJEQ0ZPCEcgrAM&#xA;AduQDdRXFW3/ACX8gSyyzXGnRXMk11LfO1zDbT/v56GRl9WJ+IYqPhWi+AxVLtc8heWvKmlz6pp9&#xA;nGulgCHX7T0bdov0W9FuPTiMXposVFmkULRlRtuRBxVOn/KvyXO93NLY2876gWa7lktbKQy+pJ6r&#xA;cmaA7GQ86dK74qsb8ovJLAj6jGFMbxBFgtVUJIXL8VEICljMxJG/T+VaKqb/AJN+QHLM+mW7SOnp&#xA;vK1rZmQilD+8MPOp7mta79cVUtV/Lr8t7axhi1oWgs7ZAkH6QSzZUjQUCKZ4jRQO3TFUNoJ/KzRL&#xA;17ry/fRzySujTw6RCl2sjRRvEnJLCGQ1UTN0puanFUFqXlnyTrV/NqI8pahq91PI0zzT6ZaW78nI&#xA;brqqWr7cABXfYe2KoKb8o9HvSzw+Q9Nh5cuTahJYQTHn1Ym0sr74vfnsa7+KqJufyZutSFmb06Rb&#xA;rYxiK2iNk16UTmZCBKXs9+bMalCTyYdC1VWQJ+VWiTafZ2Wpul7FYRJbWyfVLQKsEVCsdZIppOPI&#xA;V3ffvvviqs/5T+SXCg6db0RDGtLSyHwEICNoB2iT7hiqjJ+T3keWNY5LQMqt6m6QVZ/h+Nz6dXai&#xA;U5NU0qOjNVVH2v5eaDa30uoW5kjvp7QWE10Fh9V7YBQI3f0+TUCLud9sVZPirsVdirsVdirsVdir&#xA;sVYjd/mJplnc2FpdTWMV7f042n1stLEptpLoyTqsJMUawwsxdqL74qxbXPzC8j3s9tremeZdFt9b&#xA;tA6W9xBem4aeFSGltZbeOMPMjVqqj4g3xLvWqqy41vy81ppmuecNdsNc0/VHl+oTfWWh0NDbhmci&#xA;BY3jPFk4hriSRg+ykE0xVkWlfmt5b1TVLzSNKu7G8vLCJ5pYre4kdTFEkbsY5BAI3+GVdg3j4HFW&#xA;cYq7FXYq7FXYqlPmjzFbeXtHn1W6ANtapJNOxLDjHDE8zn4VkYnjGaALucVSG7/NXypZ3z6fe6zo&#xA;1pqEbKktlcaiIpkdwCEaN4gwb4twRtiqUXH55+R3W6hN1a3MMUc5mKG5licW/wDfIrC2KuQh50HV&#xA;Dy+zirH7T8x4tF06x02y836H+jY2Nraq8Vzd3cES82iiuJEk4o0UUZjLSRb8TXeuKpxqXmSLTtYu&#xA;NI8wedWsryCNJZLeW5s7GJ1dHekT/UFlYqkZZuMm23iMVRHkmbyJ5yj+sWM8+rWpDM7T6lqNygcL&#xA;E9Gt7kxxiomXdV41BHbFWZ6d5N8oaa/qafodhZybVkgtYY2JHcsqg4qnGKuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxVjGr/AJd+X9at7O31hf0lFYKUtBdQ2svAMoRgOUP7SqK+OKoG5/J/yLcI&#xA;A2nQIyI0cUsNtZxSRqwcH05I4FdD+9ahUggmoxVJNT/JDTRFDBpiWM2mwRGEabqVr64dSIq0l5FE&#xA;JNuh5GBjt7mqrWn+VLDQLw3c3lWbT5TbGzlvtEWzu4fq7KicCkcFtdMQkSgFbckAUBxVnGmecvK+&#xA;pXAtLXUYhfHc6fMTb3YH+VbTCOZfpTFU5xV2KuxV2KpP5r0zQtR0aWDXZI4tLX4rhpzEIuPEr8fr&#xA;Bkp8XfFWAHy7+Wl5AYND0FvMCMSyvZafY/VW5RmJnW+uIYbV6p8LcJWanY4qtj/JiLUPUS803S9L&#xA;06eb157VIhd3EhLs+88aWSw7tQoodePw7rQYqn//ACpX8vA7SJpVtHIzc2kjtbONyxJJ+JIQd+RB&#xA;8VPHptirj+S3kB/T9fT47sxFWia7htrllKRRwrQzRSHZIUH0V61xVOvLHkby/wCWWk/Q8ItYpSxa&#xA;3jSKOLkwjUlVjRKfDCooNuu1ScVZBirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdiqF1LSdK1S2NtqdlBfWx3MFzEkyE/6rhhiqTDyPZWx5aLqF/ox7R21wZbcDrRbW7FzboP9SNc&#xA;VcV/MCx+w+na3EP2ZBLp09B/lr9cikb/AGEY+WKoRPPWrTiKODytqKXEzBFmuWtorMFqBWa4SWZu&#xA;Dk0UrGx/yRiqKGm+d9QAOoatBpER3a10qITSj2N3dqysPlbIffFVaz8jeWbe5ju5rU6jfxbx32oy&#xA;PezoT1Mb3Bk9KvhHxHtiqfYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqx+3/3ntK/Xv0fyg9Dn9U4U5r6NeH72nLj7+OKsgxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-BoldItalic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d2e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>xmp.did:A44F860881226811994CEF6A767452B2</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:3ED1D0EB91206811AA2497B09AF50ED3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:3ED1D0EB91206811AA2497B09AF50ED3</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A44F860881226811994CEF6A767452B2</stEvt:instanceID>
                  <stEvt:when>2009-11-02T12:32:14-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3ED1D0EB91206811AA2497B09AF50ED3</stEvt:instanceID>
                  <stEvt:when>2009-11-03T13:31:16-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:A44F860881226811994CEF6A767452B2</stRef:instanceID>
            <stRef:documentID>xmp.did:A44F860881226811994CEF6A767452B2</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:A44F860881226811994CEF6A767452B2</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -113.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 113.219 li
387.256 113.219 li
387.256 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
16.7583 16.166 mo
21.0918 31.833 li
69.4248 16.4995 li
true sop
/0 
<<
/Names [
(Cyan)
(Magenta)
(Yellow)
(Black)
]
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {

} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
0 0 0 1 devn
@
21.0918 41.166 mo
84.4248 53.833 li
104.425 41.4995 li
@
93.0918 63.1665 mo
108.092 78.8325 li
108.092 78.8325 186.759 40.166 187.092 41.166 cv
@
153.092 15.4995 mo
187.425 31.4995 li
253.092 16.833 li
@
256.092 40.833 mo
231.758 54.166 li
361.425 41.833 li
@
224.758 62.8325 mo
232.758 78.4995 li
337.092 63.8325 li
@
109.758 88.1665 mo
174.758 105.833 li
230.425 88.4995 li
@
85.4458 89.2163 mo
85.4458 79.0562 li
131.935 79.0562 li
131.935 89.2163 li
85.4458 89.2163 li
cp
false sop
0 0 0 0 cmyk
ef
.39 lw
85.4458 89.2163 mo
85.4458 79.0562 li
131.935 79.0562 li
131.935 89.2163 li
85.4458 89.2163 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Roman def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 194 /logicalnot put
def
/FontBBox {-203 -428 1700 1271} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963
E3987D5E4E6C9FCD> |-
/logicalnot <1C60D8A8C9B7E7C1F1EE7E2DBF06031369CC4973BCB1B36BB7B
E0791> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHAG+Times-Roman /Times-Roman findfont ct_VMDictPut
/WGFHAG+Times-Roman*1 
[194{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFHAG+Times-Roman nf
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
88.3017 86.1226 mo
(\302)sh
%ADOBeginSubsetFont: Times-BoldItalic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-BoldItalic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 74 /J put
dup 76 /L put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 107 /k put
dup 111 /o put
dup 115 /s put
dup 118 /v put
dup 121 /y put
def
/FontBBox {-319 -426 1612 1275} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/.notdef <1C60D8A8C9B6FF86FB9868E636EB1E4A833A4372C2AFE6669DD3E5
F073F429C5C69647> |-
/J <1C60D8A8C9B7A73DB95826DCA111739661B9CCB9A6371D3C16D80C08075B
60DD37E39F8FD0E3DF536BD156793F949D9354F6830DCAEEBA4F73DBEA15D5E7
EDA07B8DF10B406CB6760C47A8673AC325C19F71C59C615551B812B35F4A23FA
6ECE85B34882A5D663BC5E375EF02E2486CEC680FE6EBA55445228A86A747CC2
5DFBB032812F2E8678C62041BF7CB0114AF61776CB630ABF8966080DEE87C511
8017AC694881151DD0448EF09C24659A65E5F5CFC99F22F2F4> |-
/L <1C60D8A8C9B7D8BE959AB2CE676A438FFB2A706E13577C8EDF5E701F2F45
D6AC81857145A062BC5F39BFD0BDEE87EB867B0CF123EE1DC86AC9A093495BF5
7B463D4571D5F99679629B4083A88F74E165004B7ED8417522EC877D7A896B6A
752536B8D18C2E6C6C55724ECD0A1103DDCD865338FF5191C4F899F6F1C792C0
C2E7E309DD4B3518106043> |-
/a <1C60D8A8C9B7A73DB9C40DE8FC203A1184855007CFF7617A8850D7F00088
E5EA9111329A58AF04D4A11C6FFC9348E0546132E0B828659F742A17314F4DB3
36085207CB32029DE7203843667E458263D0E569A07540CCB63759DE4D6B5F47
7B206CCBA1D75A454276A87B2B30B15A3D6716DF916D8D904EF04135D2B1BC86
7FB894307F06AC574C6C7343AFE912CE7DA55A09A5A9C56C13E7B61DFC142A58
5EE22D466584F9141756A48B7D0526D8DB196295D5151723134C79205FBD6CAA
DC1C1F2B36C08B20A25B6BCCE932989CF00D0D00CD0936F4F4EF86DCA47477A5
6123DF704C6DA6EEE053F8F30505BBBDD4B3C33BD74C92B6ED20199DC5> |-
/c <1C60D8A8C9B77FE29D6C434D879C1A7AFF8752847A1ABFF84E9003DA7EF6
03B4E9C5E789B9C4112701466E65B8859DB84AAE518789ED65AB48E56CF47466
42D3FF05216A4B9D79A693C2FFA23DC03056A61A0F74055D08A0BCA768C587F6
E867D6FEB75122C5C3325ADD92DE1837270C0B598824827CDB1940BD0C6A20A1
CB27EE89A6F08EC1DA8F892A6DFDCA039BD0DC437E1C63E44AAD517994CD7F12
E2BD6C7014820337A4DEE7902A22D9B23D5EF458A04D379C8D6F1D9D7B82> |-
/e <1C60D8A8C9B77FE2CEC41D709C5F76BBA8B1350D77016E39055AD6161498
48FA9495A33F76CD53155F2762E044373106ADF8A107379AA3B6E619A1566E41
C80E2FBD40F50114FCAA7A22B02A3842EDC5636A7CF695B4EA2EB3BA157D4990
EC4F6E115D1B6A391B4BD6F91EC5FC59A59512A89F5360ACCF9BD906D704E7AC
4A954A71BC2F1B5490545B408EB8BA132C8D06E0FFDA79A308AEF523CEFC6191
FE1B053596F8290B8F9BD061D5615AB0ABB4B1B6> |-
/k <1C60D8A8C9B7A73DB93D0FA5E3C19E9B977AFB9655DA398FD1D5E5708123
DD3B2BFD09413F79E995ACAB2893E27D54234F9A4A818967D57C3AD5F4F1263A
6B057008D570170DF06B5DD4DA76AE68463E483CFE546652F1A9A8D11030BFD2
5163BDFD92DB3D7C9EF5B980EDE2DFC6E3F46A7C974EEA4E51124FF92CCDDAA9
E80AE5155BEB5F6BE3FCC9C2829AE560FE2EDBD97CFC9D3C6FEFD9B4C1974970
9C3E378F30F055F4EB4B9B092F3BE4CBC4C4F0AF59B568604EC73B1DE713AD5B
B8913C84DD9B6F3A1DF06265A07C28ED6BF4635627C7685BC3D3C42657378B25
E300AF5F01> |-
/o <1C60D8A8C9B7A73DB9EF59406E0AF05471DE207C66E76F65EA78D5F2CD14
2DFCC0EDAAF0AA8423A07D5972379ACB523A8095EAA026728C1B3AB97C81E2D9
AA53971ECBF2E9DE26051A0CF23605A4D2FB7067242A76C551C275766A0D1F9F
A63C611B485062943D3E12B15C0238D905C61C46D863A8B93B954BD14B3F66E8
4869489569741F> |-
/s <1C60D8A8C9B7361F6EBA612A7C3F66960496E3D2170F04089D5B3AC9CF30
BAB2A25B525DF6013F6C848E760C63B5C0EB1E59184CDA9C0B929B932BBB9103
7790550A1FDAAA99460ED3C4458393328FA932193346A8E992D7681B04F78CB6
A078DF9CAA6D6DAEEADC5394F5DDEEF75FF14426D82D54C48EAE4DD728C2B0C3
1367F70FC6ECFD11EF7E672276C0D7655A55152CB66B906D2FF9ABA1D2B577A4
A31E05CF35755EE4E1CF7882C4744D732A50439C6E2E1A00BCF8E22732F78204
195FE4AAE8E44A702F41A1C4033402C46E05745F5694B4E87E9961786B20F184
01635D2E0F8CF7> |-
/v <1C60D8A8C9B77FE2CE42A08A733EFF8B025D2EA22345078550717182ADA1
6A6704CAB0F381F8A88F7BEB7A7E077B2059234A53889F3C10FF09DC976ED309
4D36B57A5980B19D0B27B1390D14C78836DCD71868CF84436C5D408B2DCA8B69
76FFB3D252C9862502CC72D225251AEBA9130DD4CAC25AB0A95F6AB3DE02DC50
2835FF234DAEDD8AE3FA622EB09B4F910ACAB95A2B49A1872F> |-
/y <1C60D8A8C9B77FE2E7BD47EC1E9BA6F387348996881730513C994967FB45
4E369FA8E0F074C24F0671295B4E8F219C8B097EFC8CD30C529788DDE4D2FB43
D0A31A449BEB4F67AAC63FE23788FDE511FAA0BADFA8ED3D8961249AD7C47018
C12D4F7E1EC18B213F34EA8CDAB71DA05DB368345F4391B3F544CFAAA3BA3D62
F76A8A82E74CF4762D33BD8809A46FF3273CD9F679888740704273B5D66252EC
0AD622D133AEA0B6029540A2F47AB9B9177F1BBD8BFCB8B9A3095C6C1B5246F2
F11DD47104A6A5C893E9B015F57D4067A8420091C37A2E0886131D3385CC3FEF
3C076C391CFAA82F406C21D0FE65408F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHAH+Times-BoldItalic /Times-BoldItalic findfont ct_VMDictPut
/WGFHAH+Times-BoldItalic*1 
[74{/.notdef}rp /J /.notdef /L 20{/.notdef}rp /a /.notdef /c 
/.notdef /e 5{/.notdef}rp /k 3{/.notdef}rp /o 3{/.notdef}rp /s 
2{/.notdef}rp /v 2{/.notdef}rp /y 134{/.notdef}rp]
WGFHAH+Times-BoldItalic nf
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
91.8368 86.1226 mo
(Loves)sh
%ADOBeginSubsetFont: Times-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
def
/FontBBox {-228 -407 1779 1295} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBBBA1CBC846D6875CB85192F5DD7C77104B04
E63A1804586BB1AD> |-
/space <1C60D8A8C9B8707C25> |-
/parenleft <1C60D8A8C9B81F2C7477EE054D9B4C05FD7E0BC54A2801FEF51C
576C2B9DF0F055D9E0D40D04478AE72237CBC5F0D5EE283F2F38092B4BB5E9EA
9A0057935E10509D66A7883F060F95D427ED> |-
/parenright <1C60D8A8C9B81F2C3A145835C0DCD48D9B815215CCD51DC44C4
A0353D9C1BBCE96D32CFD852FD5A95503B9F1E1CE64398ACFCB8D86303DF588B
DD7FF39D9651ED427AADF17658E86301D8AE94F8704F047507F66CA2EF63B207
705> |-
/comma <1C60D8A8C9B8707CC5BC6205D172FC0333F1482A914CD8A6452890A6
58B43A8C84DD455C728BD1E56CF80046A731BF95F6425EEC83F1BDE0A5CCBCDD
4CBA1463CE50FD97C1410340E8640A735E58FE41F9395D3EB41B392CF0707CAF
8EE934CAA95B6325AF085CD01DB5A85E16AC084F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHAI+Times-Bold /Times-Bold findfont ct_VMDictPut
/WGFHAI+Times-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 211{/.notdef}rp]
WGFHAI+Times-Bold nf
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
106.804 86.1226 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
108.891 86.1226 mo
(y)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
111.673 86.1226 mo
(, )
[1.56706 0 ]xsh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
114.807 86.1226 mo
(Jack)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
126.992 86.1226 mo
(\))sh
202.611 89.2163 mo
202.611 79.0562 li
260.768 79.0562 li
260.768 89.2163 li
202.611 89.2163 li
cp
false sop
0 0 0 0 cmyk
ef
202.611 89.2163 mo
202.611 79.0562 li
260.768 79.0562 li
260.768 89.2163 li
202.611 89.2163 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAH+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079F6DC76A9792A08502996B6DD9CF20B5C92CFD5602F75B
BEA5097A950B3BDFDABA38742F190EF5838803438D182BA2160EB7E4FE107225
9F1F1169683DC8BF085A248A702F95E8EF61BFAA9DAF9481FC09EC0A5574D69C
404A78583E57EA38CED209D8BBDB6424648BC3C102186AC9025FD2E03EEB98F5
ECB1F14CE29C0951FC4670A80E5DB346A3DCFDF95383CAE49D82A12D31D70D5C
F6F76F0F15A2185B50C4282BBA7C4EBE838B1E7C723B1B503B834E40765479E6
D099449BFD05965963E14EAA32E2450E9E2C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAH+Times-BoldItalic /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/WGFHAH+Times-BoldItalic*1 
[71{/.notdef}rp /G 2{/.notdef}rp /J /.notdef /L 20{/.notdef}rp /a 
/.notdef /c /.notdef /e 5{/.notdef}rp /k 3{/.notdef}rp /o 
3{/.notdef}rp /s 2{/.notdef}rp /v 2{/.notdef}rp /y 134{/.notdef}rp]
WGFHAH+Times-BoldItalic nf
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
204.015 86.1226 mo
(Loves)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
218.982 86.1226 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
221.069 86.1226 mo
(G)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
225.596 86.1226 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
227.684 86.1226 mo
(Jack)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
239.868 86.1226 mo
(\), )sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
245.09 86.1226 mo
(Jack)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
257.274 86.1226 mo
(\))sh
218.945 17.2666 mo
218.945 7.10645 li
284.104 7.10645 li
284.104 17.2666 li
218.945 17.2666 li
cp
false sop
0 0 0 0 cmyk
ef
218.945 17.2666 mo
218.945 7.10645 li
284.104 7.10645 li
284.104 17.2666 li
218.945 17.2666 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
221.369 14.1733 mo
(\302)sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAH+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFFB45286F860C8034B524885C071B1624C841E689913E
5DAC29DD99B5AE877123DC5FFAEEA18526AFBB8365281872826994A2FDFC90EA
8F3C5C717DBA56D82A8ABD75AC6E9A610948ED64EF0223D3086A0C3979084E8F
89B94A3F20ED5F5A568DAC74B4477A3ECE7F516585FD223C64A292332386BE30
454F9B84232D7BD55CED28273F70E65063DCF828EB145EC0B4921DB1144A25A2
51D8F015DE02D7EF502114> |-
/K <1C60D8A8C9B64EDFF4D41E8740511E9D6ACCF6410EDB5CB977C9A8B1240F
CDB7B89BCEA23ACCD9125DF404D54DD96C8E962C5E94746BB198F40E454C3324
59E72E6CC00C992C1BD338B7378C9913493FE7450F864163F5D5219BE0EA1B87
7C1C489A9A2DB5FB68201E66273A2082CC4C370841758C84E89962B6ED037C2A
3B6C738DED89FD8D3A53C6F59D472ACBDFF5F589C1FE74CC20799594CE61C69A
74F76AD42F6ED0713005699B2FD110A853F205C70B9C3C7E25EDEB09E7FFA51D
7F6F9855E4CDCFE3B6CAF09AF9DE3AA8D740A3D66F06AF59AF997BB07CAE074D
08C6F217357F5EA309DFFD33B1ED4600D8D284C213F563FDD3> |-
/T <1C60D8A8C9B7D8BE5293CC92C28DFA6F6DB12A1B6F9A3486BC666332CE54
6FC25E85CFA05D70C25A7C5C397B703BFCEE2DED6E2D0756E61206FA384E3584
4CD4F27DC102CE184E7789186162CF18D3BE3DE85E5E28DF92DE2C8734EBC655
584195102091CF33359D54DBC6881EAADF1A1DFEF5CE4C> |-
/i <1C60D8A8C9B854D0A68BEF2EE7673D9807AF9F503BCD39641387948BF3BB
BC30E3569BC32D6B4EC23EAEF02B5015233E637D52A7052606C7510F5AF5D81E
23201C4BF9BDCC744ED9B00EBB3D0058A0F38B62E4F3A40433F28B076C684C33
9540E4F5065773A31CC527DCAE962C9B9FD9176DFA16F23F6AF353A7D182055E
1D7A347855FFB9C53E7353CB22EAC42CD81D47F44654FA0ED3F688B7CBDF80A6
76BB798D2FFC8FA4BB3FA735D3B8490FD83FA14B0CCEBB89546EECA9691ABE7C
37E62DAD7903D32872FDD5A7E036640184C4C69A95E498B7169FA2> |-
/l <1C60D8A8C9B854D0A68BEF2EE27FE7F901AB0443ECD419CB4423804D9566
276387D9E8856054BB7E36047EAD38DFCF6A55F4F960DF5FDD6385A9C95130E7
5B60477EF3D749B9A78E3FACCEBBE539164D6A812CB7C17820F2192D199C9B12
9E95DCF80FBB77534D3AE6ADCEB3F59FB6453E24B69FE1E042F65D0D9C667B27
6CF175C67C540018674F8ABBB8160F49AD79C599C187AAE307992F34> |-
/n <1C60D8A8C9B7EF322B31F1DD9A06052D4F1E042F9856DA34F4FB95EBE7FD
9236D214CC260A2A1AFB6C5D63D70D08ADD7D8BE2814599E72450A0808EED770
3B10F3E2D6FB3FD0D6BFEFD8D07B06BA9DBF6F7C5F8C0017617008AC88F5632D
50930E555B03C215B35B3EA61465AA5D63B384369254037B15B91E319F22557A
0CFCE103E1867A50A6F9CE97E3E50B43DE70255CC654D7B0E98F5AFBE1A540F3
8484E993AD37AC117BCB35A4508B455F2346FD66190D78EF7080A6AB62DBF2B5
D642E4D591D1DBFF2E2E4CB42F8112A638F2281DC82E1478414BB6C649268E00
B29B042BA52663D049054CA13E97D7604AF517AEDC20EF46116CCEA7DFC947FE
3813A6> |-
/r <1C60D8A8C9B7361F02A7E8C7FC20DC466BE755B3B2176365881056F515C2
0A9E113687A377C6E010D882700E9761957FF47E38EBD093FDE0F8BE37160D48
528D55AF73DDE762D4526612FD710078EF508012B15215BDE38F04DF2C996299
879930A4D789824B0BED4AF576423BB3976BCDADEC46C05B8F628732A7170EC5
CD57BA6E2B2D8625ADDFAA480EAF617EACDF9EF1A38CBD7B32ABC48AD9ABDE29
9498EB02C0AE5B> |-
/t <1C60D8A8C9B854D098C0509EE36264FB56895BA208125DBDDC7D5426C69D
E43D4888B08CF47FB9546E0EB5285E50F0C610005A72EAB444B6BE79AD25B067
E16D57BDCD36BE34CEFB488C49C36BA78765B3F8946F1A7C0DE588D9E03DDC35
3E8C1759BBEDA07EB3E2223B58FFE400A96098826D2ADB5723446D328249ED35
5115A77A3988E80C0454E2C5> |-
/u <1C60D8A8C9B7EF32617101A26AFF67ADDEB523EE478EC2808F5390FE165B
B125FACEA3A564E7D9A861026D11DF10C62FCF7285D8EF317C36ED0753B87503
9FF2EFFE0810B143DCF15760F05DF42BDB82E6E68C4F93680B14AB27428AEB94
19B33247AD13034095044DD403430261876C53862F272AE7C47961A74A4E5CB0
57FCF779D97A5F5A9275E687F7405EB442E022367B6A9933533A01E5CB7D2DB6
8E73AEB31B2630FC94BD3374FC8668D3354BC4971EC4EBB38507FD168ECA0105
D6A0447E008C752DAFE4A84F4F25161F32B15EC27D587C57DF95CF369E1BD30A
EC1118ACDAF3F7354B2D9F58F3A7761C43A43CC264F98CB76FC09D0424E0F335
50997B1B1F2DA4359BF01C90DB3E2D007956C825BA9A21D9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAH+Times-BoldItalic /Encoding get
dup 67 /C put
dup 75 /K put
dup 84 /T put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/WGFHAH+Times-BoldItalic*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 2{/.notdef}rp /J /K /L 
7{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i /.notdef /k /l /.notdef /n /o 
2{/.notdef}rp /r /s /t /u /v 2{/.notdef}rp /y 
134{/.notdef}rp]
WGFHAH+Times-BoldItalic nf
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
224.904 14.1733 mo
(Kills)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
236.749 14.1733 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
238.836 14.1733 mo
(Curiosity)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
262.523 14.1733 mo
(, )
[1.56708 0 ]xsh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
265.657 14.1733 mo
(Tuna)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
279.592 14.1733 mo
(\))sh
104.029 17.2666 mo
104.029 7.10645 li
213.52 7.10645 li
213.52 17.2666 li
104.029 17.2666 li
cp
false sop
0 0 0 0 cmyk
ef
104.029 17.2666 mo
104.029 7.10645 li
213.52 7.10645 li
213.52 17.2666 li
104.029 17.2666 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Times-Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 74 /J put
dup 75 /K put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 115 /s put
dup 117 /u put
def
/FontBBox {-296 -413 1661 1205} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31
EFC3300D63209ED6> |-
/space <1C60D8A8C9B8707C25> |-
/comma <1C60D8A8C9B8707CCE417FEF9F0A913336B24C639271A9B7670779ED
2EE327029C6055A8E88066E2E6156B021BEFC61870D672ABD053D11681409BE6
FFD2A6CBBD8CD2C318D2F9E71C299036ADC4FE4516525483A4B3C13CD31A2A31
311A6BDD3B7B49D469B4107011EF> |-
/J <1C60D8A8C9B77FE28ABE1B1E776EDFD24B7C410136F9D0D61194C468CEAD
992FC50F800E31C7FD247B9DFF29E644CCECA17C9048D9BD529B9FB5A8F38801
713DFCB204371544F9B746064B4DE32EA8AC1E9CA2B0A0F80C7C945F612FF001
DBB766E9302C606E9AC7BDD4562956BE5B08BE49AB5202D5BA41255C0A03B002
6D716872D09DD0C7502F1BFA63217E8A208382D1F06958E91B35FB53A84EAB2B
7AEB151592AB5D5ED357D0AD> |-
/K <1C60D8A8C9B64EDF91173DB7C1AF9942AE8640A9AA41482787735E252279
480245BA98BE85B7C6434D1DE975326F0968AD0992983F393F67A33598E9B682
0ED97DD5859DB61B2F095783347FA961F058E3B391AE0CAFC33C590969DDEF99
7FE5B4DCF91A66B37581F10482232215550DA4804F385BC0A8EF6EEE818427BE
EC4733D74E2022E4359B3B8326E9CF035732D27ED8803775A08C6425DCCBE711
5AD4F1034812F624FB2FDF6E572A83FC97ADB97E2F79F7401F299ED13DA7243C
8D8D96673A4F4DC7988CC30E9CE3D59AA14419B6ECA0F9C6E4229D1345FCF449
6212DF1ED1F623BC46024310D2D2604AF96BA2539729AA> |-
/T <1C60D8A8C9B7EF321B3943B51AE3A02BBF12394AB0B805FF2C308DD1155F
D8F092D6859F17DEC6181A36120CF96AD7A8AC36A24059DFBE69D2EDB5BFB90A
854490EAE9EC0F48C8AB25DA450D46A75B2EEDCD4E32A236F001F8AD95AFBE26
079CCF954C65AF9AD6D939C6C8D9D88DEF66AE89AF0929338E> |-
/a <1C60D8A8C9B7A73DB6B88E0E8F18436A1F09B15968F061B1DDAEA063D5C4
77A798AC6CCDE7B463CEDE9DF10C85BF943B1A23D3A955ECB71BCB056FB9145F
938F3DC645B315F646528EB3B53DD647687CCAEEE4F42707FCD1F2C3675EA58B
243E03636F03F49CA1B8745B188F869696A9EBF8EE67DE9F54B2262AFB12ECFE
1B5AFC17FF258A2E69BF5FDBED1B3699875019E7BFDF5BACBDFFF080973A7F05
9B475B810D35DF16A240D17D43785DACF46760EB7C69CB24393FA52B17A18DAC
3BB84FCEE1276951F7D05FC09AF0FFF01CC340EF8E3D1B60A8413593334DB81E
DDB8E689D59958B942D922AA6D47B5EA98AF3FD94329F39900DC6C7A3E34CC1B
EDC577F37F7177CEB364983D36A3C88B53058AE816834C770ECA0A9F48A7FAA0
38CBEBBEE56B6C67BCB16529CEF4CFB3FD5C9A0E29> |-
/c <1C60D8A8C9B77FE2CED306AAE853DF6763ABBC1F195078D45F35AC812BA1
76B02CD229DD186FFB355299AFEDCDA3C3E7A2BBB8C0138FFC2F675F24D8A1A2
064E210ACB5567CC4FF99B2DB190FFC6CD745653327D6267B9720C3E2FAD72FF
086DC8533109E5D3541C360CBF9F8DE6E15D008E77916480B96C5C762C587981
712A1AA76B3128B5597081D3A484E43F2332F97E00EB8CA70E92480D1BBD05BF
5279454393B0CF9B35A14103B3932D2CBA> |-
/i <1C60D8A8C9B854D0F4594DE2CB230C00D72A8CCCE2ED8277F493FC10530B
A725C23B7C5D26CC1DD529FAE26E52F10603EC22FA434A5EF589284E8D896B14
DE3C8E9013A43C0BFBD48FDBD41845BD7C76773CBE6AD8D328F71F5EB664393E
92995FCC5BC5635E470649C6BA303A1FC97AF04ACCD05A0991A8BEF1CC5D25BC
2BAAD39CE1C6888E27BDA0C5DAD2B2DEF6529C8F477FC2CD60CCFB7D1E5F121F
78DD2D61A9BDDDD66832C06CF970B6465E11B9DBFFCA3559D4996DEEC891508D
B90A89509F3CB209B732203D177FEE5740FB955889645019ADCD680F1EA155C0
6327806A2C9546A05C56> |-
/k <1C60D8A8C9B77FE2DD200DD45C11813ABDC03B6044910474B554E57BB048
0CAC6BD6CC8C9250F4273F3F9666A8DC85E177AD3F174B3AE7A78B23C6159231
C1F6A4922611C6E856968D82FFBB12221AE2FFB9A979FD861F9DB03E9FEE7048
AB88968E3D3F88CB7085343A6B15428D7605C61B4E3F0791F17D29FE791343B0
842F29FC14EC6FE397E3D6DD8E4C77286B14FD356785514252B295F6685F104E
0124512BE02F58F98B1F197813E4C080695457AFA592F48F238084C8E842FCBE
BEC3674DCE04D4C266BD639F18281729EFCB27826017> |-
/l <1C60D8A8C9B854D0C3437F4F75DAA30F079F9030DD04473DAF4EDB98D6AE
7D76B255812E711AD6FEB0F1D3EAB33054CD89502F62B172DF2B972086F82916
544C8ABC3E938B6A6F34309A4E5501DFE51E47D9902C8B32B667C046A6123FEC
CF9B74909C58F1BA4B097C7FEDCC0EC75868836CAA9EA97D1DBF2806EF8E2E50
0800140B3953BEF57EF4B7653ABD426AA2C6EC78D9495ABFB6569F8A0F8A6F58
0F4A7D63CA> |-
/n <1C60D8A8C9B7A73DA6C5ED73E6A15E7B613EC1ACF8D9135E0211B96A9DD5
07603FA1725674D928ECB39B1B734A2103835DAA300CD2AE69F0A57AA74C8891
165503B63C735609D200F32C64F9DB97B53C0A75B2C2B76CC0D1A70E9B998FB0
3121D94212C4DC5CEF0B7DFDE932A9568BF9C90798E4AE5AAF1A04DAE2CF71D3
9BF8C15DDAF880ADED487E262CF0998CB7E225B780626D38B95E0DC58875003D
93440042561035CBE30D8426DA5C5AD79C8032A01995500F84BF5B77993A78EB
E2890DD75AD6F3D3E8D10360A4FEBBBE7CF62C8BBEA1107BE06B13433A219E2A
C1FEBDB9A74462879C309EA91970ACE271FF1F2C4A52A6405F895975FF075BD2
25D17B28F2C0563F5C1BD4C83DE4AC43724BC0AA9A33EE705FFBA2> |-
/s <1C60D8A8C9B7361F6FE833EBC5233F08984389D77FB6B8A83F76643BC2F6
33983CDC51718BBB8C354566EC82EB0333F6910C1E2FF8386A90ED6FAD546E54
E6130794D6A3B06BE8AADA3099432325C0A84895D7A1797A5E133A09FBD72E34
0C7AD5EC3779F91D42CAC7DECA404663BDF32122BDEC1F78EEF4947AE6135A38
C1EDD44771BEF7191ACFC7ED05840C4673550E76EBFB9560CBC793DF675B9B90
9F7CC3B4E758C0E1E98A0611191EECC2B214E4FC7284093D88D157CC9BBBE2B4
0DA416E572C088B7AAFF58A9D9152D1BE1794E0BD308E3FD5558953D1414B9E6
8B20AB8EB0> |-
/u <1C60D8A8C9B7A73DF7FE0AA4489FBAF4FD51113EC368CC27175BFEBFB889
056C6311813AFC193C90935A21FDAC7FDB6988685798B08CC664EF4C2B587425
3A6AA8C3A85919AF99EC0D86B61FB31F658394E8DCE2493C1FDE3CDA70903EE8
8C970F0547DB5AEB13A3A3CCCCD80C538AEFF22EFD2716DE4A12A6C479BA4E5B
75CC6E6CC73CDA57FB9DB93A3AD28F0E69F7AA7C4D0CAF479C311AA9B1170829
800483F159BA059AF167C5EB54C789226A61A113537A38305C48ED04574462AB
C05D151FE00D79EB6E0B89BC456AD976ABC89ED76B57CDE10B0F6BE0265F12AD
08936DFAE316FC9EF28209A129719C27982256CD68AAB6E6F45E64240AE67254
30A37D4C598A43BB9F37DFD01612092C69BC00E679F6399523A76A2F856A8E2F
4656> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHAJ+Times-Italic /Times-Italic findfont ct_VMDictPut
/WGFHAJ+Times-Italic*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 29{/.notdef}rp /J /K 8{/.notdef}rp 
/T 12{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i /.notdef 
/k /l /.notdef /n 4{/.notdef}rp /s /.notdef /u 
138{/.notdef}rp]
WGFHAJ+Times-Italic nf
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
105.491 14.396 mo
(Kills)sh
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAG+Times-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7477F0B9BCB3EBA4BD58438260E6F0349575
D982C091745F57E6DE656DBD360F903D8BB7BA1F42E7A2D05B5102174895284A
8AFE5BF20A5DC15D43366CD93FB67607779C4A32BA> |-
/parenright <1C60D8A8C9B81F2C3A0B9AE48BDC8A210A6BC24B132D0FFA379
76CAF0AD48341BA40F2639F857493B96FE8C9C6A5DBA67902E1141CAD31E1E1F
2EAFA78B4F0B158589755ABC3F5D48640211E0BE78E8AD3F692526A7797DC309
ED92AB9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAG+Times-Roman /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
pop
%ADOEndSubsetFont
/WGFHAG+Times-Roman*1 
[40{/.notdef}rp /parenleft /parenright 152{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFHAG+Times-Roman nf
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
117.335 14.396 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
119.423 14.396 mo
(Jack, Tuna)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
146.926 14.396 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
149.013 14.396 mo
(   )sh
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Symbol def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-167 -299 1063 827} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE2
23F5D9796E7E2CD60A70D0> |-
/space <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WGFHAK+Symbol /Symbol findfont ct_VMDictPut
/WGFHAK+Symbol*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
WGFHAK+Symbol nf
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
153.715 14.396 mo
( )sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
155.282 14.396 mo
(Kills)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
167.127 14.396 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
169.214 14.396 mo
(Curiosity)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
192.901 14.396 mo
(, )
[1.56706 0 ]xsh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
196.035 14.396 mo
(Tuna)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
209.97 14.396 mo
(\))sh
40.4453 17.2666 mo
40.4453 7.10645 li
98.6035 7.10645 li
98.6035 17.2666 li
40.4453 17.2666 li
cp
false sop
0 0 0 0 cmyk
ef
40.4453 17.2666 mo
40.4453 7.10645 li
98.6035 7.10645 li
98.6035 17.2666 li
40.4453 17.2666 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
43.908 14.3965 mo
(\302)sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAH+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B7A73DB9886426AFE3C58480D7E06E055FFF672959B42918B5
64689E6FA24E16E7FF37FAD3B91FC24815DC5276E39ACFD3EE96EC2C1A160590
F855C2B09AF47E62527BB5CC54B4480005CD2C18625E86E3C5CB935DCB8AB592
841FB39875ADC6D64942E3E12F14E2B609CAB7BCD1EAC335A6978BD11ABDC19B
98D4C48B0323B8633B0F3AB9E6DA2DBAA77C698F6EFE50FFCE12F9AB0371A658
3E015D7275698EF293FAFA446A6DB0A58AA09835C764105D4AAB8E03F943A5B3
15B683DD7488E10986A43972530B97641ABB33CCDD192544ED82A17908444B47
2FC48C2988169ACB29F870BFFE55548514B714CFA39116FA1EE60EA7AE47B57E
61E202992F9D18941AF4908E47E69487C52682FF7CAD2234F502AE5909188FA5
35CBE82321C34D7AAB73C3AA5D93B14BD81EB3DFC85731E45139DDFE2EDA280A
634197ACE6E652C3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAH+Times-BoldItalic /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
/WGFHAH+Times-BoldItalic*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 2{/.notdef}rp /J /K /L 
7{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i /.notdef /k /l /.notdef /n /o 
2{/.notdef}rp /r /s /t /u /v /.notdef /x 
/y 134{/.notdef}rp]
WGFHAH+Times-BoldItalic nf
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
47.4431 14.3965 mo
(Cat)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
56.4997 14.3965 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
58.5871 14.3965 mo
(x)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
61.7212 14.3965 mo
(\))sh
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAJ+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B7D8BE1644A068CDE9BF59E715DD9027A2A9D2617913769CFE
6CEC62AD40A69B914AC4CFE5A74E3BDE16C9EFDEA63DBEFE05BB4FA0045D56FD
1E764F616556232BBAC84C21222363CADCAC8F19970754590B38924193C29B22
CF3D67C6DBD0D09A290EB7825F4730E70CE5EF5C28968FD88D7B8E08CCBE5D8A
65CB6665386B1CE3420B02AFAB6AF944BC93140070EF> |-
/m <1C60D8A8C9B6079F6D82087FA6EC15EBDE59F4C7B6378B0EC8811598F387
E8E402950E63BD587D4AA109FFFCD4A67070DB9D17B683BCE0B16B7E44F48C0A
200009F6EB97117D8BC4EC18BDF2479479081AC90BEBECC81742B2CF84FED01A
03C859A8DDA16327F30735B2CC23292C6C7B10A15CD2F73AACFDB57463B4704F
08D5B15E454703AE05065F292CBF58B582E47CB73DE0A32DEF8E0A03CEB97D51
653C4A7F65E54CFF517E4E594FBFD53351D186350B359E9BA0EC796256EE0A78
5FBF9D8C1191897B4766E605B7E613D7AE98EB88180974AFBC3471B304F94438
DFED4FC757D962136EACFC46D9DFFFF9D58100C854BEB4BAC3A284D2A476C1CA
832F178360E1056AF1D9FBBA3D28ABABAAB021E5D50D394D81371ACC7C74892B
060C5302FFAB1B618E6EDBD4DA5A9E580F3F9B1F39AAFC3B0239538DDF482B27
23111A87E5EDE6F88A6580E7FC7E3FABFFDFC79CB9F93FF08BFFDAC111C57148
6BBAB223C170F621> |-
/x <1C60D8A8C9B77FE256F7B18763C7A7C72DCD5BB6BE677861AB8491129EA0
A9B90BAC2782286AB292F39893D623822F9BFDA394DF3288BB1E2C0731DE2274
E95585890989774C288E45C07FAC336E7CAED1CF76F8C4ABA933B07C9D08F35A
51DA19FB8D6A90A415AED1907569EA206F80BA2A34EC4259B21B20E0F44A082A
AE50A4358E22A49D905B014FA8511F7144EBF05944BAA07BFC30501EAB38D5ED
B15555BD53D7F7D15B60F6D8E1115CE9E90FFCCB77EDADFCB246798D96234174
27C1C1AA7C7FCE4DA7F97CADDED9E1AED0FE4273BE451700930E9D67E7A87B59
4ECDADEE331A2C9D7072DA0B54A7A81F17AB92A2665CF5BDE5C2ABD133111C3C
7B9A6FFEB838F4BC847501F9120DD61D13EA3BA7FBF23E1073C8FAF240BD52FB
010B6779F0D879E48DC70EE8962F3E93A1107E76F5B80BE87C061FF2A440DF25
9EDFD6146A5ED6138BA9E5D266E03928CF037F57808893E155917B7F2856A3C9
5C54DD109031ADA866DDA5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAJ+Times-Italic /Encoding get
dup 65 /A put
dup 109 /m put
dup 120 /x put
pop
%ADOEndSubsetFont
/WGFHAJ+Times-Italic*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 8{/.notdef}rp /J 
/K 8{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 5{/.notdef}rp 
/i /.notdef /k /l /m /n 4{/.notdef}rp /s 
/.notdef /u 2{/.notdef}rp /x 135{/.notdef}rp]
WGFHAJ+Times-Italic nf
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
63.8086 14.3965 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
68.5098 14.3965 mo
( )sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
70.0768 14.3965 mo
(Animal)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
88.1839 14.3965 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
90.2712 14.3965 mo
(x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
93.0534 14.3965 mo
(\))sh
.194824 17.2666 mo
.194824 7.10645 li
35.0195 7.10645 li
35.0195 17.2666 li
.194824 17.2666 li
cp
false sop
0 0 0 0 cmyk
ef
.194824 17.2666 mo
.194824 7.10645 li
35.0195 7.10645 li
35.0195 17.2666 li
.194824 17.2666 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
4.02362 14.1733 mo
(Cat)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
13.0802 14.1733 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
15.1676 14.1733 mo
(Tuna)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
29.1029 14.1733 mo
(\))sh
175.736 64.5532 mo
175.736 54.3936 li
287.227 54.3936 li
287.227 64.5532 li
175.736 64.5532 li
cp
false sop
0 0 0 0 cmyk
ef
175.736 64.5532 mo
175.736 54.3936 li
287.227 54.3936 li
287.227 64.5532 li
175.736 64.5532 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
177.844 61.6841 mo
(\302)sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAH+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B64EDFF490E5A57826C1DF55664325973BC27F18C2BC002BEB
62E470C2BBF729DAFA64AE7CFA0A70CB62CA800996031BE0D5E1D4BA4BEE7282
B659C39B45D2DCE05EAEC89C379A426256DF2CF80016F35173B501E75CB96678
FEBA0AE06C3192D40CAEDD75C4A558074222111703E4520F362E3C5BE6858683
8E5C1EA7462F3E91A408380AF9B706419F> |-
/F <1C60D8A8C9B64EDF7489CEB2DE7E900054B17AC06470A0032BDA3E01716B
2CDD74A88E7DA7EF7CD704C2D51DFC767DA6F319D4625A09A879F08099FD6F79
B1B3A2469323F57416BE7E43B982C58CECC756D2B8541A89FAE43A086BF9338D
F6FC0F48EC5A3F0139371D0767EB282BE96A5C32DE6ED190621CA959195F0405
F21E10666C7A9199F18A4410F58C86CD15C100F0DA6A1FAF87CD9CDCED4829FB
2E4FF92998659D60AF07AF96DF477417879134F5B137D2573A894FD8918BD5BD
04E6> |-
/m <1C60D8A8C9B6FF86F5F26458C50B8298BDF101C072B89D256198CA2230B3
839796F63695C5F96D9707FCF58570E349D587A87005553FA27C8147FB5DFF96
8D0564FB517810C0F9B7551176C409BD87F553E72A630B464AAD027FED2C657C
47C1741E026A4E7F66ADD2E06871A9CD0C131C382559E5EFF20396C179008D26
5B215BA46C4917D629350A460610F7724C4763137D78D95B0AB2B31F2D6072C4
D702ACF5531E08AD2AC4483F512599E65B090FD0F9D353D48EE73FBBAA0640C4
8D41D937D4EFE527636F31ADD8C4BCB7B51B6DA98F665FBD52226463B8BE42BF
AA8537759DE2DC6A50192D2DBA2346DE7836E51ABB05A105F0066491BEAC07DE
43787988B2EDC2EA029085296F7AD187CD53C99432633AB89375BA2A20F8685A
2C77A76BD9D0D1DF574AAF62B03E7708B495F172369E029F6F50DB66A646054E
C7CDF0678887035782A5D32A81A153753B51CAD983AE9002439EF42434A7A3AF
3722CFC464DBEDEF18BBB36BA5680DB0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAH+Times-BoldItalic /Encoding get
dup 65 /A put
dup 70 /F put
dup 109 /m put
pop
%ADOEndSubsetFont
/WGFHAH+Times-BoldItalic*1 
[65{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F /G 2{/.notdef}rp 
/J /K /L 7{/.notdef}rp /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i /.notdef /k /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
/v /.notdef /x /y 134{/.notdef}rp]
WGFHAH+Times-BoldItalic nf
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
181.379 61.6841 mo
(Animal)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
200.538 61.6841 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
202.626 61.6841 mo
(F)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
206.807 61.6841 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
208.894 61.6841 mo
(Jack)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
221.079 61.6841 mo
(\)\))
[2.08739 0 ]xsh
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAJ+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079F6DEB623522134CFB7897066C3A975273971F4B167038
F8618E7BD3FADF2ABD2D4BD48ED1BBF77C6F1A9907F781C407F8A977B98D689D
007FF300A1962AC16552E60CDB5C586453F48A452E1C8E3CE8EAD207272F2A6C
A9C7DBEEDCA8AF36966C0AB768EBE3C98A0E9602EE5F0838B79F26D8E2271956
A8F0C1BCF2B5FA06F143C7396E73331D13D0D38F1A223E14F3D2F643F83D869C
F2CAA66A928FF7BA4133875A7748EF55DA1E4B380FCE4E9B7C9EC124C97B3F57
E1C317D795836EEC14F10347AD6AFE843B164CC73DE9DB91DB0D226672012EEC
7B8DE904AEECE89CBB965B77EAE1> |-
/L <1C60D8A8C9B7EF325E2398B8D06B95968E8CB2100B916DB849021664A934
6E7F599B071552A976F221B71690663697D73861BE374DC56275D8C51F5A18C6
30CFA49730D769C8EE99EE8A78C25AD1059B021CBD36B6C7E99FB25A9147064F
C9840E89A30C62FCEEE8933AB93E303B2E4550F5F2923460EC8D8B8310E1E7D9
57DE785FC4C4A6C18B5D832191EF13C4A4219D184898603E209D4E9A> |-
/e <1C60D8A8C9B77FE2937C57D511D7B2D85185E1E61A4651B494CF7984DAD5
47D0B44C659E0993602A01A0508DD4246E85558E4C72973FC23C60AC4035E6E9
D0E422570DD5D38DF226B21995C7BA61F8EB00A50CA6D70806ABFD5AD7ABBFDB
00B34E6EACD0CED09AB1732A7C4141621EA5AC5DA00EFABAA2E93A825555212D
DCFFA292FEA081906B69270F2F05CDFC3ACE97B091CB5EEF0831DFCA492B9DD5
B67AA24B4E41578EC78B32C9D391999DC5E0E0310611AD025B836A14191D7D8F
5A10> |-
/o <1C60D8A8C9B7A73DB927A82707463565634BAD3AA45515B3CF87E47D4AB3
4C23DB9D832B50F7DA5B299F7F24FAE2465161E80D0D884EB708407D7090860C
C020BD213D4F18FCDE46EE0D6BD313E8F69BE781CF2EDA84BAB84E51C3339404
A327E48B013592D79A04668DE27B20D96A41137394FA584518AA9BE018055EC4
276ECB3C55AF> |-
/v <1C60D8A8C9B77FE2C1A754606E11446669EB88AA334E5F3B6D965A8ED701
B036229DB5EBDDE6B935BCE3F66F4D9FFE0CDA8564D56F119D4E8BAC84EC6FD7
4D5F688F93D3C535AED4F795BD797833B416F17640B483FEA92F84680B0E02EE
70EA76740C57FB0DCABF0436121561529ACAD441485D5EA7DBF73E6EBE89B580
57E6BC80EE1287C37EA53D3DA5C1251D7190FEF062DACD77313626BDA5D066E4
CA4B06E58F5108EAF83B066EA29BBA4663677A2E3D211DBBEAAC86400A5F61B1
1194> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAJ+Times-Italic /Encoding get
dup 71 /G put
dup 76 /L put
dup 101 /e put
dup 111 /o put
dup 118 /v put
pop
%ADOEndSubsetFont
/WGFHAJ+Times-Italic*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 5{/.notdef}rp /G 
2{/.notdef}rp /J /K /L 7{/.notdef}rp /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i /.notdef /k 
/l /m /n /o 3{/.notdef}rp /s /.notdef /u 
/v /.notdef /x 135{/.notdef}rp]
WGFHAJ+Times-Italic nf
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
225.254 61.6841 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
229.955 61.6841 mo
( )sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
231.522 61.6841 mo
(Loves)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
246.146 61.6841 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
248.233 61.6841 mo
(G)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
252.76 61.6841 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
254.847 61.6841 mo
(Jack)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
266.328 61.6841 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
268.415 61.6841 mo
(, Jack)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
283.03 61.6841 mo
(\))sh
292.694 64.5532 mo
292.694 54.3936 li
374.185 54.3936 li
374.185 64.5532 li
292.694 64.5532 li
cp
false sop
0 0 0 0 cmyk
ef
292.694 64.5532 mo
292.694 54.3936 li
374.185 54.3936 li
374.185 64.5532 li
292.694 64.5532 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
294.01 61.6841 mo
(Animal)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
313.17 61.6841 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
315.257 61.6841 mo
(F)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
319.438 61.6841 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
321.526 61.6841 mo
(x)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
324.66 61.6841 mo
(\)\))
[2.0874 0 ]xsh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
328.835 61.6841 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
333.536 61.6841 mo
( )sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
335.103 61.6841 mo
(Loves)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
349.727 61.6841 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
351.814 61.6841 mo
(G)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
356.341 61.6841 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
358.428 61.6841 mo
(x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
361.211 61.6841 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
363.298 61.6841 mo
(, x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
369.214 61.6841 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
371.302 61.6841 mo
( )sh
47.0693 64.5532 mo
47.0693 54.3936 li
129.227 54.3936 li
129.227 64.5532 li
47.0693 64.5532 li
cp
false sop
0 0 0 0 cmyk
ef
47.0693 64.5532 mo
47.0693 54.3936 li
129.227 54.3936 li
129.227 64.5532 li
47.0693 64.5532 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
49.619 61.6841 mo
(\302)sh
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAJ+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B77FE248EA82E833F65893A6F5440A80A9F7E10A78D653F58E
B4707508CA8B29F6585437E7EBA5E3EB28E9B310B3E77CD3AECC5A96D5FB29AD
2B9DCD42314DEC2E4597391CD800398EF141701D5A1FF8E46B275E008387755F
91D2E1B3641A3F2DEE811A7510BD85C4EC7DD1D80D8F84A93372EFD5DB75ED1E
5CEF2119C75C21F63989399147C0D172ADBCDB351A8422130E41F7B12945658A
67200CCE37E7882F576C196C0A5E7B3509752D61FEFFDB35B6E33E63BA0EDAD9
9992B53F2D8BD7F2B7CF04B6678875096EA654E3F917B9EE2900B8C0595C9E61
484A192C40909576CBCA0FC099AFF08F25C5452B4C646305185474B67CFA445A
EB39F2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAJ+Times-Italic /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/WGFHAJ+Times-Italic*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 5{/.notdef}rp /G 
2{/.notdef}rp /J /K /L 7{/.notdef}rp /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i /.notdef /k 
/l /m /n /o 3{/.notdef}rp /s /.notdef /u 
/v /.notdef /x /y 134{/.notdef}rp]
WGFHAJ+Times-Italic nf
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
53.1541 61.6841 mo
(Loves)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
67.7781 61.6841 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
69.8655 61.6841 mo
(y, x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
78.5639 61.6841 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
80.6513 61.6841 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
85.3525 61.6841 mo
( )sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
86.9196 61.6841 mo
(\302)sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
90.4547 61.6841 mo
(Kills)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
102.3 61.6841 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
104.387 61.6841 mo
(x)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
107.521 61.6841 mo
(, )
[1.56706 0 ]xsh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
110.655 61.6841 mo
(Tuna)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
124.59 61.6841 mo
(\))sh
161.528 42.207 mo
161.528 32.0469 li
212.352 32.0469 li
212.352 42.207 li
161.528 42.207 li
cp
false sop
0 0 0 0 cmyk
ef
161.528 42.207 mo
161.528 32.0469 li
212.352 32.0469 li
212.352 42.207 li
161.528 42.207 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
164.304 39.1133 mo
(Kills)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
176.148 39.1133 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
178.236 39.1133 mo
(Jack)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
190.42 39.1133 mo
(, )
[1.56706 0 ]xsh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
193.555 39.1133 mo
(Tuna)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
207.49 39.1133 mo
(\))sh
49.9443 42.207 mo
49.9443 32.0469 li
156.103 32.0469 li
156.103 42.207 li
49.9443 42.207 li
cp
false sop
0 0 0 0 cmyk
ef
49.9443 42.207 mo
49.9443 32.0469 li
156.103 32.0469 li
156.103 42.207 li
49.9443 42.207 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
52.6293 39.3364 mo
(\302)sh
%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAJ+Times-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B7361F0D9FD58DACA2F6F46C9FF803BBFAB72D3F1BFBE4E6A9
FC166E1ED5DD937A8608F58152BF219C9335B7481AF2CC22A00E19819424FE62
3EF7557A296D9E5905E2C1FF5FA8D92AAC5B14949F167D731333438B11B2629F
E9B0C63C4AB82C29D2EBA02297ED7A60D191400B71186B8DFBF4EB3F8B1DADB5
34F73FEADE3FA4C409605185A651F04ECA6336A0E58D4965A9986BDF100A4B32
C192881BCEA8FF965A11B94755A331735106B90D8E33CCC3521B798FF00142C5
6FCA41856B130EFFD182F9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAJ+Times-Italic /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/WGFHAJ+Times-Italic*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A 5{/.notdef}rp /G 
2{/.notdef}rp /J /K /L 7{/.notdef}rp /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i /.notdef /k 
/l /m /n /o 3{/.notdef}rp /s /.notdef /u 
/v /.notdef /x /y /z 133{/.notdef}rp]
WGFHAJ+Times-Italic nf
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
56.1644 39.3364 mo
(Loves)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
70.7883 39.3364 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
72.8757 39.3364 mo
(y, x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
81.5742 39.3364 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
83.6616 39.3364 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
88.3628 39.3364 mo
( )sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
89.9298 39.3364 mo
(\302)sh
%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAH+Times-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B7361F4047416CED70A0115DEA127A88804A7817D07626C242
764DC1DC19E3D44A30744105D8C3D6AAF920723AB943E40073748A7B29DA85BB
0EC993121345D92BF61577BD0874F105E97E26B4537C73275FA6F18B65820B1D
70F9FA13F077B05C6E95D854B2BBF070416B944855A8DA7CEF766ED75522DF49
931A67CD42A812BABC4ACFEA5342CEFAA33861E9B9DB568543DB16F433E5C5A7
0043C8E6E1C601E427D61F33D7A77287E610E30F5308FF24CB52D564B77650> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAH+Times-BoldItalic /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/WGFHAH+Times-BoldItalic*1 
[65{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F /G 2{/.notdef}rp 
/J /K /L 7{/.notdef}rp /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e 3{/.notdef}rp /i /.notdef /k /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
/v /.notdef /x /y /z 133{/.notdef}rp]
WGFHAH+Times-BoldItalic nf
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
93.4649 39.3364 mo
(Animal)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
112.625 39.3364 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
114.712 39.3364 mo
(z)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
117.152 39.3364 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
119.239 39.3364 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
123.94 39.3364 mo
( )sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
125.507 39.3364 mo
(\302)sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
129.042 39.3364 mo
(Kills)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
140.887 39.3364 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
142.975 39.3364 mo
(x, z)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
151.33 39.3364 mo
(\))sh
1.69434 42.207 mo
1.69434 32.0469 li
44.5195 32.0469 li
44.5195 42.207 li
1.69434 42.207 li
cp
false sop
0 0 0 0 cmyk
ef
1.69434 42.207 mo
1.69434 32.0469 li
44.5195 32.0469 li
44.5195 42.207 li
1.69434 42.207 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
4.47196 39.1133 mo
(Animal)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
23.6318 39.1133 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
25.7192 39.1133 mo
(Tuna)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
39.6545 39.1133 mo
(\))sh
215.928 42.1675 mo
215.928 32.0073 li
301.752 32.0073 li
301.752 42.1675 li
215.928 42.1675 li
cp
false sop
0 0 0 0 cmyk
ef
215.928 42.1675 mo
215.928 32.0073 li
301.752 32.0073 li
301.752 42.1675 li
215.928 42.1675 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
217.796 39.2983 mo
(\302)sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
221.332 39.2983 mo
(Loves)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
236.298 39.2983 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
238.386 39.2983 mo
(x)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
241.52 39.2983 mo
(,)sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
243.839 39.2983 mo
(F)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
248.02 39.2983 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
250.107 39.2983 mo
(x)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
253.242 39.2983 mo
(\)\))
[2.08739 0 ]xsh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
257.416 39.2983 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
262.117 39.2983 mo
( )sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
263.685 39.2983 mo
(Loves)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
278.308 39.2983 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
280.396 39.2983 mo
(G)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
284.923 39.2983 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
287.01 39.2983 mo
(x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
289.792 39.2983 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
291.88 39.2983 mo
(, x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
297.796 39.2983 mo
(\))sh
308.903 42.1675 mo
308.903 32.0073 li
387.061 32.0073 li
387.061 42.1675 li
308.903 42.1675 li
cp
false sop
0 0 0 0 cmyk
ef
308.903 42.1675 mo
308.903 32.0073 li
387.061 32.0073 li
387.061 42.1675 li
308.903 42.1675 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
311.752 39.2983 mo
(\302)sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
315.287 39.2983 mo
(Animal)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
333.394 39.2983 mo
(\()sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
335.481 39.2983 mo
(x)sh
WGFHAG+Times-Roman*1 [6.2683 0 0 -6.2683 0 0 ]msf
338.263 39.2983 mo
(\))sh
WGFHAJ+Times-Italic*1 [6.2683 0 0 -6.2683 0 0 ]msf
340.351 39.2983 mo
(   )sh
WGFHAK+Symbol*1 [6.2683 0 0 -6.2683 0 0 ]msf
345.052 39.2983 mo
( )sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
346.619 39.2983 mo
(Loves)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
361.586 39.2983 mo
(\()sh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
363.673 39.2983 mo
(Jack)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
375.858 39.2983 mo
(, )
[1.56705 0 ]xsh
WGFHAH+Times-BoldItalic*1 [6.2683 0 0 -6.2683 0 0 ]msf
378.992 39.2983 mo
(x)sh
WGFHAI+Times-Bold*1 [6.2683 0 0 -6.2683 0 0 ]msf
382.126 39.2983 mo
(\))sh
170.695 113 mo
170.695 106.749 li
178.509 106.749 li
178.509 113 li
170.695 113 li
cp
false sop
0 0 0 0 cmyk
ef
.438 lw
170.695 113 mo
170.695 106.749 li
178.509 106.749 li
178.509 113 li
170.695 113 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
WGFHAG+Times-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/asciicircum <1C60D8A8C9B746F4AB4CF940247769B307492B173A7C33FDE9
ADF9FC16E0F579B550DE185844EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WGFHAG+Times-Roman /Encoding get
dup 94 /asciicircum put
pop
%ADOEndSubsetFont
/WGFHAG+Times-Roman*1 
[40{/.notdef}rp /parenleft /parenright 52{/.notdef}rp /asciicircum 99{/.notdef}rp /logicalnot 61{/.notdef}rp]
WGFHAG+Times-Roman nf
WGFHAG+Times-Roman*1 [-9 0 0 9 0 0 ]msf
154.257 8.27002 mo
(^)sh
69.5073 8.52002 mo
(^)sh
88.5073 33.27 mo
(^)sh
125.007 33.02 mo
(^)sh
262.507 33.27 mo
(^)sh
346.257 33.27 mo
(^)sh
334.507 55.52 mo
(^)sh
230.757 55.52 mo
(^)sh
86.2573 55.52 mo
(^)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Procedure [/0 ]]
] del_res
/WGFHAK+Symbol*1 uf
/WGFHAK+Symbol uf
/Symbol uf
/WGFHAG+Times-Roman*1 uf
/WGFHAG+Times-Roman uf
/Times-Roman uf
/WGFHAI+Times-Bold*1 uf
/WGFHAI+Times-Bold uf
/Times-Bold uf
/WGFHAJ+Times-Italic*1 uf
/WGFHAJ+Times-Italic uf
/Times-Italic uf
/WGFHAH+Times-BoldItalic*1 uf
/WGFHAH+Times-BoldItalic uf
/Times-BoldItalic uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Jon) ()
%%Title: (curiosity.eps)
%%CreationDate: 11/3/09 1:31 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!!klY]uuOs^#.HjBX*d#A-kH,'-H9Na//LK-7dY*km1(`4f][Q2SaW[Z'?Su4djQS1,g?Al8HdK!!-]Yr*\.kbn'aN2[kqss9p
%S(ICQIf/d,hnM/FY+EZJc;W'P.@7Be55VPXs)e#'[*;%BUX<b"&XnWQFh286q=."i8A43Vgrmam%u7bUn%X-o]Y/[dmcs?$n`ejG
%k?gF.h#?X1nZ0\hmg&XB?OhR4Hl2AQkPVsh_qhrNs69&mo4Igq:[`3CmV`oWQ]DZ\:]@^Zkks0GDr3b6hnB$(nWF]<b29tFJ%0ju
%piO#k58N@t&^Z=%^\i'NnG4d[%Y)*;qVjW'9&TJ-0>LrPh>DNl`B!rNi'4ocIJE=.m[LI4GH_$g(a$Mf&*ioeqmUe<hiD=jA+sIM
%=+C4As6mOh?_"`dRU,FCB;rSOaM54r_YBrh?dea7r6%=\rHSA1rR9$gqo:YqlQ:7':QKE)2c'H73d0Ojn_q.S+J4(+GBj"(oDXdE
%3kB?ocXY;nIK$B$a7KN[g3I`%\Yo%&PC,9ts6f(I]>&i8ro]d*q`!schu33G2d!d1:[c'3s$(!VHqM]+GPU<l5!7U`rUnDum2CVg
%XP]Wl?f+$9@d*Ee*c?GV8W4/AGA6R&c-q_tmg&hU5('$fIrX?7L9Wtp2o"-2^!kj7pKt\KHh6(RJ*4ZEkg-RckOI>_*ma.;m81=]
%1dJ1t$U)3sYLEgMJ?HrLJ+h.>a02-'J%U:&`E6^oA:+@"e,AUC]/?*;q8T2EBZpF9s"_eQj7i$2hWV0K\m>8[p>arIT>-X-I.u+*
%^c+4HZs81VViAN?3KW4EbFA5b?_$<1h"cH5qtK\8IsFg\kJgS^oXtt8hE-/#\cO]XqACN+)C'YKUO;q''g4-EPsVTFTta3n<i&Wn
%;I7%'T=n0mhPj3k?hAI/e>d_-7DI5oC3=YfXfehjaf?rgjQ_WV]R!#=^3Wcd4oOX\IK&Ms4<l):n]H+;NUeM]M9fZoqi&6f/".-"
%VcGW%bZ$d$):<YC6SkJ*1iKIK4A0ain+7F@LqZe`Z;/h(c%s*_]]ge0Bhn:q=\X0+[A%roGA?a7'u@+=1ic`/=[cI>qCYRdb[pE%
%Fr?d^SOSW&64<U`<]!&;:-H]/b,j\\feN=pX_<19@9F=jQKC]pkqAKrlp#obOV<D^;_+:YI@"4R/<P(?pX:(4"#P&V&,&]:-`^"E
%ADOIB134<rNEjILn!0KL?d]!_e:qQ?bbWq>dkY_7PibKnWKlC#btlnYSu(o*L1YZ'))*#:,:b-[&F9T2"':"i1igDH_$/0hp/KUK
%7OP5hn!/$jO^gm82]4]b_V:o2H!W\$0,_;sVI6as\ZCe_n;=s`Ij_YI1M<>2=smliSL3b4Fp%1\rmB1.LHt*FQa+\S+)"&E8U>]c
%#0)Pjik<dD4R'Q>0D[,&dHaj>o#^eY?R3,EC]9R%Zd3Y-aS[Jo[E@CuVgJr>b[7L2h+bXj]T>qO:\jkX9DNr6PcqF>?G7,pr$bu[
%I3jBhTCV+19DCO7*IX9&Q+ujUr#G;9kpkdr0AD#iBWkaRHM!E9G(0#F6VKZ#i\uA8^1q#YNo(j$rM4qmU;!/Dbl@>-0kC02qp^,V
%l"t>o,'k0B!KR21lT>7IX=nXfs.RleqNBEWI@B:WT3Q_FJ#=[7$7/hrqHmS^UO)/[ocn>7;gIZ<-[IgQqFBp`>kFZ&djOopqP<Z1
%HYMR5n*Dk,D*2Sa9<G1k:h?4YaC"QY7RqsAC@j>`6/'a8jA"EBPJ:[No2D)\W"WBG,Zm]uD#KipS?!0*1OON5R]IiJb%pXt'q7.i
%8bA@N.]qF90(Ta%k?L6QjZ]ip4616+4+&k_Hk+jIFBl'MZDYHi2Y2=*bti?-.CMft8+0X]^C3`l]YA<D5Y(/@RIlDD0ul$;QSD&n
%R_.L@4;#``o.MdE>G!Y=p]@gPo'R=;Z`cUpl[8?\02J4iFa4k9Y!p/Sn`lK6jr7@tTcWi=Ig1?JfV3H47rtENlg[%%*;"O<MN"7,
%S70-QV/lBJih4XWd/^Ba.qEFdKMT[VJ@!Z+dC6n=D+Ph5f761R&bIO/NBNDQ_3J\%nm6pNPd@I,/$/QB.AjFQ1;YU_1QZV)aG"-N
%kHY-sQXsKYFeSi@/)W8T2#Sc]!Cr:/R&fJAk3V1W[3pE`^LT:m0(a`-JaZ8lN?"I(EcZ1aN8\jgo+N&<<`VrMh4sCpD;\*cGeUPd
%7sP#Jj^1r@*^9f<._gV6/t[7)F.pFWNZ'Dn][Fg"*,&dq90q]%,(Y+D7Z?5giRLTiNdIZA$'d&hpnb0=_H(N4;FZ^CXiE9/"'T-I
%i&+"(C%=;MKfe5KdL3b)7\B'lX<N^.StFH'HbN\ZrZ[i[YNeeBlH'VrgjeKO4jADaQ2@Ygk1BVTNSJ.(,C%juWU!?]g)Pm-R,t!c
%iaa&,V;mf<(S0r,cHg9_a!3g7gZW.D0nF]3(8C1jDC=.m:ciARTP\@PR"aO#K*2D93TV:.V'[je4H&&>,DV"aCJp1<iRC]Us'coI
%,LL,R)Q/h8s7Php)lVnn=LW<JaJkHZ$K[B#U[QAU8J:eY=s*?_:q&ui\I+4,iH/G9*)G>W@]FF/03<Nak,+f7?_a;>$p)hfA2TXl
%dXo=6KipfG7BEFh8Ih<s4NH;P*Ydf/ATC;hiqRr*jQYJJ^XRHIm3O;&kb=ek$#bPnPp3/*Fti!V\P+U^D(ha7'jC8`d$ub9nqQ9i
%FbF6D//9+<K!mC(-1;WK.m#cgR$s($d2+VjZ>)dOJAcoEaGYnK7*1&DeGb`97`oem(9*K6SaYZ$/t(V.6`[(5,?l^LKGDE4ql:Gu
%@tHPYERV?;XoHT(dAtD<:K4V`;&1V^S]l;CNK+KaDXF32d"=G\^RQeTmmOhjVXbWPd2YCJlHO,8Ls'^<Ns?"r]S!EcS#=;^`ujD!
%qjftIp?qm7[qG_](Am4.I<^-hp[8%*Nt6Ht]j1R3FS#)EH/1,\]Y;.-)P=[SI.9$W^:_%jH[Yq`E-(j*c0^;\GF*f)J,f$7mdb-M
%41kEk4`M]@DRd1!S(mh<gCK&]*q'%+nn,=mkARm%>BG>7:S(kKaeO('UNcFq]l\`WD=3`KpX\I9GCOf3-uC'&mGlXgdFpe,:d.G!
%&(:*fCjL:#_:lW;q=2M;Vp!\%J9Q4([q!*)hn?dOHD"ER]=Xn9c/mhH4?VE4^O1D"6n@d#Vp"VKiTADN^HINUHK(=CkjA')mGlr.
%T'h++l2B`@Vjl:^'\0dZ1"beEhE8N%IJ:Y@Mm"bJIeRgQm\_iC]m]\FmVr3g_eb!u^YHN54FB*lT5E<@kMt%W+7;U"pM]K`pVY7f
%gCFhe#9)A+\A%q!52<iH8\TZOqjYd@J%pEA3Uj3S]C'TU*l\<Ue.3(N@ro,sq!l8SlFXsoqhMd*hTrrI-12fqmbcI:hn?_6]t8Y8
%S+/h-9n.P5q+*L9k4KS>jkYK;0HuQ(k"bH%oZ;SW\,]mns*RTJ@Z+i6r]feZ+.d@\8&+oioZ/7g9!NC-?ejJjjU_)q_MTDpc'N@h
%HQHN-K(*)B3r@[V]/prSs"TtVs69'k]7D/=QS0*grG)0,Kj_o%2Ror$C&TCI5HX/G-Yr?%C%SeiqKhB:oDVosr)HquFm\=po$M7,
%WH[h!0:/SJ,7ZZA:PA14GLGj?Q3flK=t'76nu!":I_9t&E-Sngn:&aCj.!Z1]tD#rc^fLY'o*k%J,B5WG97<=?_%.-Hmg^OAlE'M
%\UC:#r>4YS9Df`;n:.uJ^nnmoVYT'J-P$`:LI]\*Hhq^Uh(N^8IeT=tnG6"\ICsXso5\^Aakn_%qW#Z2]jLcQ4DO]67mQ;?CEe>C
%Sc63*gAG<'o?mK&b_;fh*3I-LeF+7%^\HfRKqJ5\0*`r]rS**sL[dmF]RTOj@"n'!=Vr]`5;sGMna;,;Rf5;<bnH]iI/a*Cc,8lE
%++C^>F$+EQ_WBOMa4DDNLD76?4h`:hp-@U2bHDG#5Mhp&q495EdjL`4mX)X[Grm)BG9'+jQS7eKhVXh.T9N1^#5`o<hY_VB*g3;<
%%tf!R&U_>`"^./cqm"r6%!n]lqq5?5dO4GZD]V*$O8d>Oj+k*nHLo&7fg!,orV3k6Yrn96nDj>rJ,A+jOT"585:Bq=p?dY4pNIE4
%pM^*%=$(a$E:\0q/g$+/q+pqdmAF=JrUBT(R#_XIX#E9#4ZpGa\i%Q:S*0h3k3;8OGQ#e(c't3#F,!oFfCqYmq;u:jdHl4sIRg:p
%msdCunmP(aGLi\iH/,%-I_3@5D^e?=l28`&&+=s.s6fFI_7Df/aEgoA6`L$6Nd#lg&%q`7N@`HM:"nOt9eW*ps/14eB`7iJ`eXS^
%Hb[-0.M_9CK/rA4@-;TXPC3'G5qM.dp[8S*T,,L,`$oUHm_8X2BY]C1l]"qTYi419&Xhn-d68W.;F]R>[m/]]^#M<6s7D1QIVTs9
%@f%\Aqu$'CiedR>:K.qgllZ4IpNOLrs,Ug\r5JI2c[S1VE9>JR]KJX1eq!]SrqLElQiDIT0%0RQcdV]^ci<*V\b"GF^d"B<?AJK+
%d<b9E/[obL3/45JO^0r]->6&!JFUkVVO-VT2e+72L@Y#*]*PQM?d@IrDQ_PYGunP_1eP#o3EO?)];W9I6Fh8rZ4uU!`O?P03reB4
%ZS:P"04N)or9s9d==ur/EP*l%kL%JgA%RQ1o/QW$)rhpB&hb`r>n0uKW77&^m:-"HQKN2Nq&7:8`qTek>MD%?gUREn-"$jp]W&LS
%c`bWS^c>YagiTB-^[SoA!lp5(6A``Z01otbJ0EOa^jH_,3f):K#<'@MG;%n$W_=UBe6]]f6`:>ceHZ-OP4a*E;-NTIYuDXVMtXHg
%.);?G3L;$sAl+)^9["<0B$#\-V+TK]iJPq_N%&eN@B=L6XU,fg\L&=*E6@CRk0UN<Db^OA?/fQ)-Db8_YKi0D=E.[$0o!7#d<Qd#
%9Okb?d-4H_?(AGgqgi^m\P=#nitZiU#N947j5!GV20MUh$mjDfM4eaH&Zp:I1e']9:u8%RhKWm0BUWWA!mbkZ,0&&E2.V\[a)or9
%IC!a':!9Rk_22fLdg>j[1^Kd'D:X8PJpr=hHDjgu9hAab45Rr//\uu-_@]TKed\.Nm?j9ifoF;bMEW&m1cgGd:@otjZXj9eF&oX>
%g-RsUI8&U1pG(Wjh-X31mf&SVE?UtCm?hej7l$sj.CU;',/[Y,,&cU4b;s7ii1i0U"9cgK*%!GbSP4c38%VO;FFjnNXgl^d8"8o"
%?q&648s*C@*`lLQEe*u)Veop==b2gD0#0bD*C(`m*>5/;JYj-L(T)T-`h!c]Yf\HjOhAq3J[\6u=P2;Mi_oFc?5@>9$s):#Q"7E.
%P9r'I0pa:Z1XU@upNF:dQ/W?*`%+H"`6AUD.,-<c,8o;G:,789m)3PVTttm,/e7EGT&S*BZ!CgdL2_?nI$Yji=iZi'fOF6Bi@_u2
%KA=(lYX^EpMuE"^ltt]n\$n=NM.;ksmIRJ$55.R$ai&8YWGK;r"MbuA),'ZcTfko0]@=Gcl$HZDQ[`gsbpa%k(LuF`WAZTK\X&n7
%$XVD[Xf*hO]90s"/\scdBMJZbPZ\]1!/$'YR[&LR7KIac4\K!WB!cD/[^*+KS\YX/*:_TC-8`9`ZA[HX=6qAYBQSnk+o,)kKsV]Y
%#YH(?'1o,>L9ADqMK%qsLVOU"E+n3q],^V?0Pa+d?,YNfdW<n;IE_Q]\!Q_GKZ,;On-^"cPrVX!$Uu0N24++kB\\;o#^oF3mh\Cr
%r1o=V_j^mm)P0i.\aXkQpQW7pE(kQmD02raN0@[?)f&]Cd)"CG<($6[CX13RVJoIBfCSt7pgB&\g!5m^9,g7@H*cHjr);%,\O+W[
%(.=?r$Q78"fP]9\9BRlG3CSJ?7eV)U1Mglojm=hD/L*EtJ7Yj+;.pKlSjCP*']):P]sW<,?ZpX4Ze;6)Y_nEG#//4&pXoHe(="Fr
%cb2Oe#i#6AFA.Fk<&S=7&OdJ+c*DKR_JM5]E9=a.r\!LCocE2GVL4HuY&"q0<Nr1AGuMpBS.a$:[%>i*5m(j+Cl?:n2IqCSd:1%K
%2D7dcG?H;4](n,9'0C-VT^'Z@Yo;Boc$k)JBKbHu>6Lm:hJHEY5*t):aLeO#bN?:hhpuKXJTaoX)780fiE^!O>Nk6.AU"#042'JM
%.FiT1aI]KdO\27gcEA%l[jY5&C!/mO\-3;Aj+rXJg`q]7B$2aTWA?`7@ruZXo/h^+TWU8/XJh5?kXa-Ei<7t[^"^/rLNIVL9Fkfu
%(ukde=)-<#1(9^H5(N>h1Z9&/q4b'M6OX^ejAk%QW!=UMQj3Pia,k[VKa0:kIu<AC'NAntZSuk.^f+4tMkRm@,?UAUp2I2.G/$7u
%-;f3B(QIU1g%dd!]RO;kUWZc`e9&0JEao%X?9=sL%]VKoX'shF<Dfcq`RPVAl9!F)TZ+&`Tl/A^3:Z9+,>2A5385J_j9EU?EOnH-
%-uP%72YCDEP0Dd'5J&dm_<p.q2:h/TY&2rWe92th%N>,ni?[bRB6bA\EP#kU6CVX[,dH_9,cbb(d6`B*Uui8k/uHQZf5Ot7F+@1)
%6Hk$"T(8!AGg7b'nY=_$fFQ72J=C5!DJ9J1+@(f4%/ZN15h^8DDe%q,KPZtBdg:3Z>Glg&=kkVcguk0=/9[?tD]/<6?47_-@ksZ\
%%fq%cQK=2FWHJ:PH.Z*J=8Enq1Du7p2R"p@4F#KRF-sGGeB`!Td.b3I;-l.A;=]Z0-\59Y!=W0rNs--bGd,(%OBgD&<<f_$=qk!:
%Pa#mu#$kN8T^Y?m_Z#B$C;7<(D6'q@JV(T2ZiHf+%LR-pD98K5R`[:0oGLO#&Ze5BIH.fFE!"jk1jEdfjV[km"X,O-c+H)bD3NF*
%r[.?8BW/7*0U!pX-eOcs.&IXCFUM;OXeTR/9%"SZeTOc/AdfG1GK+A6`bmNBp$j>uk<q-HBnV/W=iB>tOH;t^)EZHZJoteB!$AJK
%!OT(snLaf;R+Kc082ond<1u7_rNXR^ZVm\%n@>KEX1uDFHTSgJo33Knim%t[mKV$^6g`3Qj`a)eHa3R`&FV@Q/E,O#_!s>(]T#'M
%U=_oNI:V0nod@%;QF0;Y?lb98pJbZIT<fPn:!_JKnZh@rj*=\SL"D*V>F;]dkal)4:e#W$fTh9"j\uqM(j$RT.$K5*Jg1@dd:d"@
%*_[Y?Z$cho6QX=k)%GO_X7lp0H)E05fWY]gOkiHTAjc:c/f03"Q;'!o-C[s1S:`iD<Y*[:>GpkOT$m>T67^GNc-c^B3eg\`]Bs]!
%XTTK/(MD\le0/G)a>WPG>q*;$6D*;H]6sE7*ko\`G9t.-MJS!i`5,`$hkQ)M$MoRc'_U=%mLA`t`f?t8C<t%<$+W]0VV'D2fZtU"
%:,GS;H6/n.FbG:3m%r^:iSKa^1cX9qZ\rjuW9k1_+oCI[XXYDsV](I5[PIW(R;4L@-0NIV#B\>:'F`ZBR-=:#dV'*J\?M?!:;Z9>
%=[JC=aVUe!KX]HA-(p9+a_K7*SKJFiCmmr_Q5G=oW\oDY_]Q1ND+220,YK(L7'n6#W5)j'T't[^8#mr*oWaf%Fdd'RS!<Vorn7QZ
%GL:_T9$bb2]1B]BS=;pUrKOg_oXRcZIr+$V",C#__#KdRXMQYdaQ3/%r/[O"_$nO(ED_]$ntMTY>HhRc\qRF:E1t,ub2k'lG-R$\
%37F%Z"bANEgmZXF;(eAk#-juK<SQ;s@#%f(.=qYHj>]IAR%*e<=P@Xk6i]=q9q<ngr1NImrdfV.1WaRo)(-Bs$'^@mA5=rkQ[.sO
%iU1ILDTprIDE%GL9k[8IgWa$Zc#VT8Ltp=Igrm"Y8aea\JL(tK05#6n?[.G1.rOgMd6>G7+Qj8J])i.EV607?'iWG7ZsE42.k%kn
%oottJ[,9sN]=_XGc0TJH?/DtZ2U@Q=*\hO=pN/&i-"9qZn&tAE*T2^Z^Rk,iJ,%(UJ,UPM2br!)lHSXiAGtDN_ge2p^RN",GI.%5
%qX-s*&t5s*KuPIZ"ak_"p-\W9[O1N_+nhjFnp`h%s*2u:5a509^6JO!!c0,(Y8%mIAJ\O=T$3`XY*gVOjs0s%%?]1J3Bb*W5I71m
%[%$SUYBXbir^:V`5Y1td\JiejAaE,s\tM(!F947Eam^K)q)f8^7TRX;k@o%`R3NMZlU;m;/1!:[%lmqf<K?j`$u4!(n#trJoGm8s
%"8UKjWDlI&2W"Ln*1,SbBnS$0:s:s+if,3VdKLRUe[El%Wk_N,Nkh"BXb2f@a%hR`CXTVm_\TSL)"Z81jk0Ml[\r&;,t.f,eJIf0
%KI_-uC_gmBCY#p?#45e8!pJQQ"BRLgWn<sp/41@\R&@RIUD((-AMNHAL]VqI(k]_8P'L1ADP7p&p&=9]7"^KpJcUnPFW:Lb/nTRY
%\\NsM%8?F</!.<$!9723.t'V%U>VW1bt4fNK+KrM1B=N'O9a1pV=d-jY#M5!f::Gf=oi5XXO+:@.h5n](/dD%?Rt9)0j`cQ/OH$L
%&4>!-*dTKn;K,Q2F79P@L?c/m>E%40epoqJ(E"gD.'V^+Bi&2T'k%7Q'jq.s+Ykbh&m36m6ZrJ(KV]R$lG-#+rHrg+YC6j"ikPd&
%b97sq?,lH2K%Htb$m8#%83GQRZt[`)>`*4T=4)Sb!gLXrj?YK)g)e39k"Moed*]WsDr?gS5R'To2PUdlNX#_8>J))u.P9MqQ#<hm
%K>'"("Q!D(7U^D<HeHmuc6-PJ6#hlNaBePCe3#f0lBZ#mZjIsIWe3ZH$*7`u2Xt=$kCr#.rD_YjLs[1BmTt0YN&nKrE@q8mmf@71
%_I;Oj!uumsdaT?"?;'nR24X+F5Y!_S>^X?2;[,.EdD;'Jnp&o%;KHu5K(0][VMO>2M+D?4`W601o<,HQ5uo+*EXrK'Q(hc(h2+hl
%(V*pf3hcc\:<kOF=U3'WX`kotH;t9_n!5Fm*OK6?.G3n!ot`9m4\[LT?*^0`krs'\"I;/qBFq7'!(juheeR5i"B^jEk]O$t*CEB?
%3P#Oj^bPo-%1W+aH)rWi[j2cMe`rWM!\X.JAd>1<AY=O^[R5*Qb-s!*M$UN`$L'V`7+H.sW)<(JJ0@7f\0Ae(K1ZfrRKG<JrX+9X
%'cXJu,q=pP9KJSjdO+Ur%qR&/P/:1jm%@P1l%BPD5B^1T2M$:1grL\Mk]fHP[\FKUY[MQ&7X,_k1$Bm9%uZ5U+J6T:G<)@+!k&;6
%dR(8M8oP+q!haeG=4Z_m8u9=nOZhW<6jLY/"6b>-6/*kR*&#Jm.Bn.(Q2spD^a2D,M/R'3]XR+>JgN[Y5+c^!Bic45V_OI`PZ%-i
%5UBKM7#[a0"68hk/4;o?SXWLT>BP)U[",+.P:Y%@DJM%3f42eT3^IkcX=Sl1Z6$iWYuE+G!\=cp&Vgs+8?0:tr$GijUDX['OCuf,
%&?l!Np,g]UUhO]&&-h/E?.\E7r>8U*7MdXY:q_g\/p]'Yn@I];p0fLBrj@0qU<X'PB\5(Zk:d-fqL4B]m[8X1N?j02Yeg6<$Fr>^
%mTPU#CYMRjcHae9RD."qIJ7kF%Pkq:<R/B:HN718"#XQo8Ess?[A^*=e!kCb$g6XU@Vlbs^NuE[=6&jW22mh:F_t$VkWDE9WM0_t
%gC0>Qnr!q#O?E0QSEC.dVno4_r.%mB<JO#LahUe1on]&1f!/ehD+ur/L:[[edadP]]jV@@&=>B1X/snamCm:=p9"g3mAo)ZCJamp
%5.]U8-"g1[L4Q0dk91HOW/"7S47p0`6r;H"L:]@';3nErBqH&"-%eIe]T79Q,]H-H=1%:Oq%2()Tic4]elG3+!.rLPXIF>OZPiM#
%5t+&i3Mi\g?&[W>TI(ur2.hB0.>hEmmnbgb?6@ag$u0IZ1$b=7OIq&c'bs.]$#m3/mZf/!j%D[3/T`]A"8[.L@[*QeGE>^$0*%R0
%l@uRW<oY8mbbL_/``UH/1JK'.R=MQ4%Z1b%BmmcK5"5b66?`Su%eL$2l>WR.nCTaL=f;hcDCE!@*[p`X^m$?;SstWDVah<(<\0?*
%&aPufOfKiHMgce@@OLEMYR>`e(qHY:fSQH8&6L7/)#3>VHXd@A%+>K]><t)6CXBR:LQ!Wio)#-)-3ZG9(fbTA2<kri4E0Llfc!lH
%CDP6Z]ST;kFMPG&110%819k<V3lr`o#kL,\m9m`pVLo2N>g22b8.+LV$+<tJ4go*+Jmr?1o..h--RoU;)Ga^@(-6"*&tk5G\LnoL
%a]#RkakE'CTN9WM'f`<81'[5q.hT'Sa4_fq-Q=c:>k/HJ"^nDcK1@^1.F<:[*m#X7T_"7Y*C`1<l"1K#bi/o%bYZR1N8e@Z@#:Q:
%*\6:X"UQ[r2gj;sjS`VD,[1C22j)WAOV5dg*[boqQnb$[?G'rB/Nm:j!R*9+AnJMN&oRkm7o`%4FGc4rlQN0NmtG9g3<s,dIZqHR
%nho3!p-:DjB9Mk*&Q.:t#$#>u[!hYJ<n:=+J/WGhZ@bIeeq.jgQ)YFNNse-]]i;/8?eluHM/]qJb\V$9/rI2)DbVo:fEf=;]K)s]
%]!_pDb\6o4@4*T&>O#5[=>=qcZbmiC.mdZA0>7G.dsIo3^t5WIFp05I#F/]C/iaM3LFUW(?k*P3k)<b=Wk\Z`7;3Xh\#6SA3cX:V
%/OGX(1IY<g(=(&T:p3]:AnP5t2Vsg/A@WCk\A"FH+u<&?8FKBd20ejGN,AELfSuRio,$XOOR3%PONCHgU@=+qUf=YTYXR9dBH$s\
%;!F.R%L@?Qj]$9+U9.MqPCuuPbD*`B]cN5BP1:gE`nuEK`e3S+:,"K;L;n%FBu`,T3meu4C!gd"e)fG52"sNRj'R?+-Ok`.[C)2H
%JU<p?02K6-o+<;-@a]F5KlDlKn\gBP0g_m\Q4uB1ZqF)d4HIdZ[\hl\T:e&GjCD$77d;g,3"`k3Aln"T&a+fR=;.D]S9V4X":If?
%5!*0N8\h>L%UdCd-[J6iR-4YH+^&Mqeq)uUYWc=!Bi7G)H.8)U(@+q0%.\eN3"2p*LC>,Z8AiBWlGIJ;4QcG%c@h\Z"uD`cDm6!C
%S_9O,UB;#Y*BM5S8a-@-6HFhG%PhT,.+Pqs?l;^P7oc[N:5G:p/#W2jb4*t]FUU-bKrYJZ)BL\Wc%6PL`]pm'+R6BthC<b2CVX&P
%@]tQ97dFnXL!=NellnlL?,aYgjAQK>nE-C(Za`E<L_U(JbQJ:bbFk3$%9eGjbH"h@'4Wd;50UR@'g1#$_o/tlXJgKL;-kYiKB#2E
%D\K`QgGVa8;9Z40n^2knlbr,ITdg[-)Sk.e@W7_KmYF>jqXW.<GQlMQ9Rpo4g6uu`l:pW0]kNKog'Dd3,B/e:aoiP*Hup57Th>`^
%mZ*(rf1jj,@Wpt>b^tB3BO+/"BORGup>,'RH!.&Og#-4V0+T0]G1HP!1(H#7,u7E:VAL:2#N"P`bQJ42DNs=:V#UXT?sP:lFqtKA
%^1rKWMt5HZU'.t3`Oa+/=6u&E8`8UEYFubV13PBZ3'V`#5^8*+$a3O<3"Jc^ks!Dq]2p,E[-1n"%g[Q_2m9,jD\0nRG'omLFggIK
%n-GP`5Ct0;%)ucja61jP%Q>?B%*2$j(_9ZlG)^b8b#*u`]%HVEJpI-6R\#6t;hfJCi1A+T[e&=(onE>mKK-%UQ09LgY\[.A"u$sB
%*.6HjOE0CsaWgLqT9eV]%e[DdA6CO"#7`>P%`Sc(G#OT%WRmj*,&XU\DPs9ZMlrNs\[Q.0@8QX=`1j5V"LKj@gBZr8/dA8qhEJ<m
%#c;A^kY'!0H3:,KEtS]IXUOff1_%tVfEWQ?bV1biWH:E(,&3p11>IGl_@ipn!`!Zb`haDd9Fs^c*M$,_rL29E11&K_-u%DUJ6$_]
%W^=k!G-c[^V!U6VT#VsDqIBS4&n.4h=p[`hO4e+uRI6**"9ghsGN^/O1cf%]$&CQ0&e6*N=F$@^L^r@_TG%B)rK>oI7;i[4aB6%X
%^2[b/!)'`D$P?pqbfWkSf[tt:9`i5sQ,F8WXZM/c+OsKpE__T3k$Tj.EKDI>$1\pDM/EE9/-a`a38lsOGS+#6WeR6JFfSTkio9,@
%@*ZMa_FKbl02&TC#S'5^\>chMXbMUHSmHK_pTfH.>f-iEe,pU)_g$<Eb2[bEMU^N<@'r8K6=ap5UY0h4gM.JHFIDZ')O'8o+lA&W
%PkgJS)VUKO_BR,nO)GqC4=I_,/.*0KVVq^RlI\;7hX>"K%Y%WEA)HL`H*91.f,22!Xka+-"i2+in\)JE2iIhibJ?f.n.f0fPP:!f
%+KT`5Grg54%\OS111R0[>/Aj*dO=to2K?OK#,SHdMplM'mHZG94dIVbJM:'CTqoP5cE@hgdkqklCeq%Ojs\7r.NM[)J/C[4-B#/@
%:=&S_PEiK1e,^g5R:>_Hl%-;AP(^`g@+M8e;@mf'SqImp]K[td$CafmA0.m1YAAt&1%7+tL($+FXP=lC:LS"EmAqFr[ZZCaC81*7
%ZS6'_m'IZ0R]IiD%3QN]%O3YX0Zj\WSi:.W:WU)T\:7Y2a5[HgKdkE<j@-,:$F2?ko]'NfU3&Z`=;0[UR`t,!?Zh,hBp.!i,KR,n
%#<h'srD3Ts^+@TL>a9%!@@7h2TPp9-6Js;-24-;CH&s:.)s._6FJd_*'R]P%EMBKARt*;oL`$['B.uLlO&!O1/Fq#r)0LJrSLKd@
%#U*WrF7W?d!K)kko*EEh6-riKX9@$?MK#5]K5Ri_N"O!>?Ds7TUZer1d`ps5q+/,=dZg]aihYR7-f>CcZ%aGC:^.+JpT/!_8+M9L
%VTG^c)[<NM85muOLGlXf&ipkh"Epe;P(foFH)LmV,>V2eRr>#3kSSE\q\&YolA$Q3/?U9Z]*0s<^#_ZhiHWe5RotQY$o9Ib0#THZ
%:bI?jXnL3c9@<Vfl2JSfX['iD)NO8G8O.'LI3ou%JiSoq3s`r;AAVs^4N$bofj_bl(eHO\:4U$&j0X!:cRl+Mm'J#\'pCpQZDQt"
%E,)?<!0IbCl"=0ckutpmj-VRUK$p\B;\Vn2],2I93`)cH,E0'<8Jm$Z@1]A;-lmQ;6)AGKM%/9*61?tnMJbE%*g5Teakeq4Kuq9-
%S7`^q=>Rm$&77R$&S9BimOL_0EtDre%AW`EL[NXm<8Gc?"JGt,N11h\cn6h"pYH>"R%pk2h)^ob:rEJ_+Ca@\+ViYFH"OH1U;[De
%6*3k!lfndsqdSD33b4VoBM%N3VP@pm0(Z%^=,gHE,ms94ABM+Z1#8D&BG3[DDt8a:CP^OMm-6&f*%d0k*fu?XjpE,45R.dNW@[HB
%eq1(?N9KtE"6QHJ$9!K>"rC%dOkN8akC%I9!"fXf0<A5#p5grICq.,'TJ/!(.lb.TE`R;@/W6S'PbGTXi@Q*:WM\\YDl3T.2rmCD
%;<Kp"f%\T4@-4^7m;J;+:Vc8R7E5%a1:61h9jOQ`"ldmL`b&B8hUA<o@hl?IPAlol^`#($M!sp&A/N!fC<pa"1!u/'4GA.41pLRh
%HTM9Lg4l^M'FLK(J:a\!6o["XL4D(U\!3F/]bf?j,pmCH/Jh&kmLE1o!G_#,[L7L*-&37Yr<O7j:[otc62NZV$e9Lh[:@1:okc`k
%gm2X*aig?DmO7Fh)`q@FCh-3Korll'I')=`]$/7!GPeo$h'B^Kq@7D9.8.CF"U,c[efi0@'%"PCE@ILJFK4qgam?)Og%MAh;>!b@
%A;OOnCAHT$ba*9L#q$d,XCA)3I:&QXf#X_KSFKjFJ*=_R`huP(VWUk=-tQQZ=dK$&i$jt^E`5#)@EBU;oSa0&f*n0G\Xn_I%nV^O
%FPA,WdX0BFT7Tcpili_1'o9crFPa@AU"&&\+>=EEW$7)LZq?7.W*qkBH0@D14_pjtAT\ihE,So$nX'XEA79nt(89&eZNHr&99Fau
%,4CYT!I`8VP$8#sZc4F7OI&^OWYo^JQH:J*W>M*1*i_4WI=DO21og>Ga__>UNW_b-n7^QEm7tn=DMe?h&<;Yi6->lHFK-NdN])%\
%S#.U3$\XBD3b04n)i>WHc^%Nq"l-I#&G`FNjt1kD:15AS2ed"C2r-G5\6r$bSOK4U4O6=(UZ_CJ9U=e3`)+D4@juNoP8jnf@PCI3
%[2+ETEhcUdKN-\QRi5CNrM"u0'Etkn@pCR37Mb5R&*0Zi'MuH?GW9Hgh+g5fb"5,C*=TrpSt>eK$dA.7'uaniEhuMW@YZP.)O5:-
%6J%sKPT@@SnG&/E*"<(n#=$OO$4[SS/dVqHiGOjuR]DnH7UT7f<DiA]3)2+`anh]ceb#FI1igh/2s[9>?QdVWBG?;s'@fJj9hReX
%_/]^2(K&K>J'HTD<cr6%$6\AiMMjBF_A8'1Fb1/kAESsrB!pe,#3]Ab]<WDFb\G>@R7+#XRlk!#\!f9"9B8`PHI-13(-7nYT9)r<
%ob=er/DF3EpVaEY1Z6oc!]u4o8fu#0;hC%C=U,EEW!VZegL+XVHRkWi=(IQV#C/Kaej9XGr6[0hSZ\b/h3&JjYmT`'R+!+f^4tVa
%Qq_6D[4r4Eq5BU$0J)C%1$90'!h:F'ek-?[g:*jL*j/(;T_G_ITe@qcHnHY2DACI4^_C5[B$;AikX172(efDZ+\F.udn3@-A<A^0
%R8NY;@.ptXG7RYXTq%LL+e))mb`3$E8Op(n*s0=rL4_;cCM(\2/[n0aN\&*d[gRK3X@,ttjIbn,_Cho<XB@cR3UePfh)n8jK?gMM
%c<&7^-K%;'hNkbC3Q%YI_hhG&lj1nL!UOtrS+V,M0\-dZ4]kjKalMEF?m'JQm!(@(,`XZp?MLr$Mc>N;G>0m>"9M8%0[(=Yc1njm
%Jt9Q.D%nDrC,lkkE@4Kkkoc>G5r3IQ<rB7%699.$-o@YhD?PfBcdZmO#V9V[^q#mM>6=mokeUM,3nd-Q$TM']I=Q%XcG/l]>6,rB
%-m$oRZs[lA'Uul]=E_0L;%p,@d6-ia68W-WEdU>;L^Q(S[#/X`CUFB&?3-pVK^2cpT.L;Hnf3#j`f@B0EE7P3VD6MZX'DFS&sabm
%%RnfY`i/$GmFiE2m7dDL78:'6S60>.#$U`&SlK9nd;s#1%P2dn21^[$<kMmZS'aN]L_*>]/V,KD?ShB]R'X[22G*1s?41c`E@-?l
%k0/j<ocE@"$YYJ0_h`8$bZel>6=s"L$Q:eNE%0qbFXZn=\qb<[o=EFnqKk'FMk:O2W@Dbi/Yea\'<)c"b[,1ESmAjiXJ%D\!M$l^
%BImkJ;*nX]a3YSL9]<Z1"g)/KOWZp3S=PDP$4]dfI1%O]*U<,N59j?DGT;"5;1?WTR1r%V(#TYla9"\^'@Q#p3NTSU$NX28#c,lW
%l*BT,-W3Ek"P6uS.k+c)54,DA=UnIBY0@YV8P^Uk*_B7UX99ldX<#3pphNt]'f#]fkeX,+,\C"5.i"33mFX1ligmoK*1WI?Q0]$K
%%rt@)JJL`:UN>W!I[MT5M#u`O4Yk`oqKJ&h;9C;Le3OhD(I^nIX1I5J""$tbTaF;S8KoD/oY7E+2O3G\0;2[^7Fc^ZH#tO#rGMFn
%E>D@u]cL:NH):_''raKb^e8(651?s`<9H'.g1t!4M7fk!3J+,FB-%\Ri@[D^:fQf@oPMW49"OI:_?e!&GuW&?FQfU,2Ccp\R\DTj
%Obt.(l6@Wr\Sbn5:)DlIBYge!gu6I:Fr[JKBl*WDgkU[r2c7E56%Rpl('\'uPeh,:78En)\c[U$lGA[Ma3nXk7rdINf?J<*oPER/
%aGC>@FOKrgb>qpI)=/[G3BCZL]c,5Io-HL#bC>RmP0[a[5H#5']<?hH!10%]>!T*>;!jBQLT@ZXFU8\Xl.`4M<oEncFDAiI29<9J
%!.9HB8^8gJ2l8l/:`M8D390iDSKS;SV\>VF-,,7Y'.SgRS_"th[i*<uNGA\BUF`**"Vp=J'je`1;7ntI&==32BN7^\0UU8WF05Pb
%q1/t(',Ukj!K&G>iKXngRCBK&Gc-FBW[eUVUuFR"kVm5'>0>%m96+^2k>c,.*A2ZU4j\7F*FN(,LMo)mE56IU3pAQVhIU]Q>Ut%A
%DAI1VmGg&S:t&>^Qb:DN?HDDCBSBA0cYgFej@lFp&5^otA@``1o16rkR8TBSHM&+ADU)J$cJ0F;[0\>N;@rS^;Jq):Ls%)1@-Q:"
%#pbn2=\;ZZd#PSKod)6BC*(-!d7#Z@K1JDZSTL/5QtE2CD@&@<W@q$^@hQX*`@b/Z8X+NnR"70Dl%btL/e)[j`'+3ABIgt68VMn.
%KWM+k(+c;:-pm78/S6IaPU(!X\qlosV0>Y.`mud(B!eFdbTI`O1%JcW?t1PBdangqSoHYa(p0)E#gcI1ZF'j,J0[J<"mZuPHX9nN
%@i]+RGa4hkRnHCf&>A."7:51cl\&cNN1H9;_5UaqZke0bW6E5*D^WhmdECW`bT5popb2sa(Qh*rM[:5G$)Gk&pR=2L<g?>')=X[X
%rJPa"0X,hY);A*P@8Ns@O`Au-4;1;@Kb;6/%#:ms"A;3Y8H.dmRLYI3N$GG-T$)oqi'*b>MpKH/rX`1)>S>V@>`=/dR=C/GD5Nn[
%(_Tge[DE*dlY.F&MO&g1e`WRh@.K,IlSRp8QD@o<L%+AqJqj3d;O1;#!#HO'3671TY_5W21^SFK#Xb<HWKnb4S3!m,kY5>H<(]FA
%$75LBJ`_rMQD$ZW)GL+9ZIVa5`/g_=[,_o+jS:-#:AC?Ec)'tE!ULJ8:n<j\T_oF2??@X!$+u'-7KeHMJ\?R`hS%D];lM@"?n-0S
%]8!eb)B<k8VHjqT33V=E=g'0M<4a$+J/U9%BH4&8cj<ST-hscJ9]o,5EoYhALW[I&RO&Z.U$E&9hT>\[<$FV\<dBN?eTm6G_iLgU
%=BgSH!X=kV*H?:@/!;XI3"lBM-u!YHI(hZuSMFJuiiQk9,3C?'-()h*1X71";#+H6euulJQE^F.krQE`OVO/&W.9J8g&VWZ3hq@2
%4T*Vn[A<DQMK]3Al0a3c!Nf*MDH_XdFe83KMe,1C,Wt]k3TA?]UVZV>R;$c"@mX)2F=n6:RU3#&-^Co4mZiLBb+#7`1Up8hEB2Y)
%7^4Q-BhUkW!(XZdb:4D"68T5gZAPTHKfT4?A_kb)>db&i=l"oF$VIniJ8nVjPR_mV:"kO2rC:P18)'UJ6J4e+2<c6.9W$;6oDbsf
%OUn$[#+'jMq(*$EnZIEo:mhb[kWleXb@f=5i!qm?#"g`1<2sD_CUH/Qc^*Vt-inrHS*"u*>$.#,4*sb2<,]l<Ghq#AR?Uoi6,ghJ
%.kj1kU]Ye+]M/8i/Y\Cm@qa=dB7c'_e!+aD)HRBeOVVCt8O`T-/M?Q096t*3)<LtL-[+D^SUac<3NflNalD$"_8;W<6'uE1?GLct
%Q.*i[JI-,tDJ:RJ.ul^N0WOnZ#q8!_G,SUMNi7V)(T(meO_jH_2Y1)COq>5Cf(GpjT,irlBD_9:Dtcn<&"RFDLc35XchV/mhAf\$
%Zp9WY@s<RhF*k.eU_M2<+as:qDLr.(/p'bBOLp!DJ"<;@hg+=Mqh`:"9N7B+^m*Cm6u$lI+)s3d2H#kE(Wa?BrqAN3i1X>TDUO'c
%jQ+a"r1)]#URO5BaemC<fQ4jAR@fDl;;Aq0[2I*O;_/`$:bm[!h]6"B5q*EZl!o2]*8"8=rHqt0ALQcaW#QSm1;QJiPk!:Q!8H<D
%"``kik-461s7%%TaK$_-eU%[c+f8,-jba+_rQ')LZ&[g[/Bb^5A?uR-j.`BeV+Q=qSubJr:Ua<8Kr<8Fkj7#b;i!l%ZthIjSV"7Y
%#]7<PH](nU,?LcqEm^'-[u.85Wh5N*3q4FFY>PD_!fqN(k_Z$tbr`LM@W(&.?utr7p'8jK4'h>OG!F0tPa<=0&n72=jq?,p)j8$=
%k4)TSBI\<O/Iq%M[98?RbQZUMGle4d->lMs7@!?m<JD9+J;Tt!-,]pQ"Rm0H6BQ)mSU3Z"L#1'_CJHe/hH$Ft^%/Is<2Eb6IG+=)
%W4Q?=O1u`IMg!a**>I<sjt5T1Jj.j+d)1#GpG[J4ZHk,HrXtg*p3$skCJHfsTr:-.gS<4^bf^F@J1"`:H7BnB!EMd8TQ6)k%['Xl
%:Pr/]*,D=4pu5AKl?s_/'!asElb$nn1.]Bi+X$2KNPKW9:DSFoS!(/gP:@m_pa&\B-&e&<T/8B]D-_h>Jpm"Y>?b"G(@88Z>m@TC
%2HOP'4*,iDln7_opWca1>F+0eK5Q0cWIKO*IO`&R(Q;LA%ad:@Fo]]>[(ltM'7_"GAmh!'855R#44Sq='Fb^_0,_BdAG\C-Zb>k+
%Wop+;f;pM`.gq`Js-TKuSOK%b5u.hjk-19B-fE_u$3f>DU#oXlhscH&Ze_G]le'mFh$r,,luNQ@^P&McIC][+:eirX@6T$SC6,4i
%iL?c-r6)L((\=;W\u%qp$+m-;-u_j>#^Om![Q8Dul#E"Z\kK@^#AoK_1)a%\SD>NferV<cF'2qJEhu<Qh@0,C@sR3kc49`P11TU=
%61#0^FJdggHTT`f:V_=Q^)cXlVrD6OP9LfJO]SOBS57:N#a7="@SHtp8t=B$\cbB7>%a`od_*FbJ[[[O'WtQl:3SO#'^8C1=nBg2
%AOdRq'i=Jjb@(uqGJ9niM'C5_7GCT3lD#6MQ=pd*.uP_/):k=.[ntea"E%QKl-#W07g']-5oR^sE&XQ*qVti!=]uUYLbiC>1#L&M
%X2MlACqX&,!9B_JHCA-KTh-?JWo/0m^0PS^IJo;p@#OE-Ze\\-'5cV#V'5Bhl1fM7JI4Nm5bRhYqDaS]ln&l\T4"66Y%J#[O((n^
%qo;Qa&mqFo\),KU.n;#mij2oCEundd$\g4a5-p<@V00q=Yb`Is"9;=d.<9DiZ]gu`D-$ZP(Y30.c;uG>O)f?8`DQq>k8FSEAJM1$
%8NC^TAiA:T(KaBC_!5F7bM,6GEXaTN4Io%77ee3`',u4pI]2p/m:8^5QE-qHeh<@hc`KFCcoP;uLS\ht[^>Xpm*1!-XSK,(.<@qL
%Y3FfsDmp$-SJ2#KG&Q]ih"?!]q<O&"E:N>_H3#rG_lY/Gp\!$u\DY.T[VQQA'1qb0MBjg*8)BRR3?kbQE_rR#7uT3/iJZt,(=5W=
%/"Jp8#tYW'[Mc&9Wd:QoKt'@6r"UOSUKd)kA4u-GpE#0i'4EbRmKg;.gSbNRbEZC-Gc\9k^oLt%7$kup=$OPDI0<KP.%LVhYGakY
%3m+\S5es`X]/Nm3Wh&h_"?+\?8It+PD71`o\s2n[1C+0rLD-<5;p#(OKout#C/g6hhf2UKAJD6-Gj49*198_]L8i#I'J63EO@c#0
%Eg2<kC^.l\3l8EE"rC??3MHeRUj^\.,$`f[7j)GU)&:-DMP;$HoH5BWE"2/kU)bl]*5gQCXj=92?'`1Igc'gm.j'e:V(KFM&]R!@
%m1A#)<UN^<;JCWiPi(/HkI,0<Z+C:G72EfW:F&.QG,lqUlP%V.*d`4UmmSI-XtA0EJ=[^_]?d*nGfd:>B9,Ds\JaDU-e&F-gJ[G\
%M*K#iFudSaO4iP`IouBN<*5.q[cp'*ib*A:Y$@ttRY0a';M\4HoM`7udLn"a)%_1hS1.%jb^+S-P`LE[$fjq&QAV]_A[9lYs*XK/
%c:ap$+4/eM^0k-*1Ka&#jXTOAMOA[J?URtn.5_4$3*W0.HR*"Q't>2f9fVu7JQQ3^=]U&&0mIj4DH?\1S_'?]1%oQ*>i#oWDaW(k
%aZeQb.$.XifL;1@WBRdBq[<2s@W/$uHh$X>=Seq9?[IS8^2=sk@ZF!3jK$s6e[&aN=\VKHA567fHJa(WHKJA6+;,f(C!Ao-:oY!S
%Actd>+m=eOd+jp<WfdpdT\u:T?n#]A;hh]7gl=_]%e=OpU0"D>1umu6>JtAJMK<,VlPW]GdmKCd[bHlaJ>\W9V$!(o+T=FHL:Y>$
%EU!FFa$,&p\XDeU,/UoFHV:l`gA;hq]7laA"r<`i-NFNtEZ'&,*d/2BG&o,+ZS&]^!lmhc;[`;_&2jh&Vb!HgHX](>GdN6GHeA/3
%EC^N?kA^-bE7u%:>EO,P[S*LLB>6d]]>VJ%-[&Y80([a`qr^L\T9qNiGIeObfS@$_N;(9aSqp_egHL!/Rm,O`>afSS;"mMhSB@7S
%7a[&qL-nadnD-28Uf?Vi?8l^]G)-kska._J9Ngd@,=bj!Lic$3>EZ6t.nWR'<2\C!&j[ePW?*rQ]:4$lM0hMX9dgrWk"1](/8D<=
%#"$/UF5<)Hhb?\nJpW`^T.BO7]h#2');)&DU`RA7b9Jm$4';/,:BuJ>Zu)-,O)(\ji'MHF6BdYMQAE\>P^cQa4BeU@p/8Imn]4GP
%q@:ICMBF";WCW#-P*XoSFpSZ70<&,;A[.%87!;G:UF\2;]]4l1)Qqg\/%Y#n8MIFXek967K"/<kDr/_4PD-"24:EGXVL23Z93@da
%1g^;>r_(,!"pEEo]gWB'3s=(Bhn38:6C_!?8QKcO1]qrAda6aJZ*M--hJR*h>02:6mao^f1)%^_Fu%s9QhO^k!BTYCfIeqN+>+;'
%:6lZZh;*hA%GOSM<u,C\#rg%eJXpTe#.?l3]>V$CBReZ<XePP\2G/28:*]*#`i?0Rd7R713S7Il.Nt`J$._[c0bC78\&c.9eQWBj
%g)obU-aPulNY#2<L!:*BPVfr)S%KhTG%[j'61IQ,?6"h'gKA:scc#A=6p#1(ZoSemLc-c!ZR#8`d>&UK*ULfON1WIkc)Zr9Z88T<
%$#CrH>e1Te5pFnjP3o"(B"T2t12](;<u^$)JQOo>:O+B-/\kJ-inRae0.qQ4Rc:tJk%KXtBHphWkD[P33<g.)CJ4#Z&#"-1(-!?$
%`s/!Amm4<sB2&2T5FEmrItITcr[F-!'%;U)Y4fp4aZ'8H\O_,LEaDp\L,<ganQ&)3]qT\8@;RD]W=HtDF\$(Fm'7iS7iT.A[8\4o
%b!AL8Vk$`'26,`,[L4q#j1YHeXHCc.5RBNiRQ#RH'.=F>a(nLIQNh5egFSY.5/&W!S`9Rtrb/K"7FoOpeBje%_4%-MkG@);(J#;!
%]VZ3P_T8LRa5WUga#qT\Z$nnu?0('8R)%"?dX%i6_iIh<nn@?p<W"s_JKd58Qi_GFAV6m^qr@Y8Rn&d-9X8=_i1N@PSPaB-YdIV2
%+6$L>F@dqkLF^MVTFk9u12rI<,I^&/4A4A1&SZFI86RNOe@K0,Yeq4]414&[<EEno+JQ:Jb+;jLf]Hc-a!PfGS]8_4o=U%0%.+DH
%oOq1f(glt'FAnN)NF&d3e[?+hU@`98:LLfo+7"%+:A&T"go<KGI)els-]F+7!n`'0s1s_ni>Ji;YBqtS/_Khe0X-b3\NY@`(OpkJ
%kJ09D-mWW[LftJ4":f;r3M4Gh5DR.K=t#\P7EOeZAq`n"M&JMYljd$@MmJ'9PjTh0;_j?><n!j,[aU*<_rVL3Feg/!K<)I-c,3#n
%C5_TZOeP)N?0NKkROpRth?shb:6C2+#hlp.k_O719B2C[f&VgD,"^$3:a[XIi"m%XKiTTNU:+lK`lLYJnU,Ns52P($ehtVcbm3'l
%Q=32A*'S56B)tdLB2.T7IV08_9'5]APX.TT$=(Q1=fG\$F=NeJf0ftsV<Q0QDP9f@'nQ)m%X`]u/)5H;Y<O66[do"qM\n=j=kON6
%%lMRRD1Q`3m/7VXd1-jiX5C/Cb$`dJQj>60NHMk.?-\=O<Kp=@oiGfm$@,Hg6-NGO>q[ZL;N0A&@*Peon338G$/WAWd0b]E9CPE3
%9KB<ED*%>CbJX"#`'psZL_NE+>XQPeoX_GC`S9pWgZ!$.BQktN[f(tgUUAnmhVF)siF*[S\'#Y]iM*q(pDMic%(5PEL)h>@M`H8\
%b9KAN4@Nd#d]8I&W/(:"G!sOb7:pY)'Q<;n&?F0TW^S?=W8pr8n0<t-NgjftPp(3]h$>CZO1]0BmTKa@[//lS!^9^\a!:Vu??NhK
%!YY'5NhZdb,gI!VJd?uUg2eeHR3^+3/bBe`noj;@XV;2+$bg\iFG&t4J*[c6D(+PN^U"]Lfc/H/n=Q38?8Ui5\BiR<5$=,CEk#.[
%OBaVB4PV`,6`'[fJe8Zr<^D`16cibE._S`U3"(/+b/W7&r6FTF/H4`@AR`L2$)HUlb,:(e7'GZ,GG#28!b!dn=lg/d*g?6AXS(Lq
%-iEMk8Rds*'edPpB:.U6[Y(BSSM8DH!@,(KRr=W/rU+QUL??"'QS@:`E)D!t_ebEf\&4U,37ru=?1$Yh@cBK(o?9\lD>Gl:m%_u5
%m4baXh?YI<jeM\mGDA80Wa[R#eQR,([J8Q5/^Xn<;F1)P2]=X+rrKYg8CO6JHtj%W:J$fe.aV(K=\:MK#&4EZ*GS%d!p\'tKYbNR
%V,Cn&`eB,bq_OUB@'tS+:.W8r;V,m#Ppdfpo3Yl-LsC^j4RDh?T_TU<6aPjXGJ;cLTd.6`QHh'qN35V)'#l:.#/U9?"fXQ++<KQj
%f^2dJ3*2$\$PGD=kq9)P9#3[(S,r:"=[QUrobUV%p!P]mjpV%*D9m9`>*bMnG/m'b.W\kfGV&.'Ega\@^d2bl-CFr;L)eTcf^DsM
%aed.Vcm69-Wh^6FXprfXAobEe?GpuIoEa:rk(cZ\&"e`&MYj0U,K5Qd)5mn[d#6TAO(acA:B$>e6lf<1ks%ccZ0=E!M([aF[mh?P
%']2->S<L!45*r<j\>$uN8HWV$)E&?*B4'lLO/4i6XnF863+M\`CQbZNj?d[2E8b]bjZ-ltFs<tfB8Sn1"@=-E?:nBoP$b(fh)Ak8
%o<A!.pfg0!3BTf15a=Y[H+oJSkS'ilCtCqS'f*Ba-)4CS^)G,1+'\l-^qj/CIs7]k`np)t*NkE.F_HJ$GU"e4NX84efj,Hs3A`eQ
%4r_+?RS5uh)(4*,'BX)R,Xma1!'r\cH;,r)BoW$MoWj"!-UZON:h3[rY(_rIa?:j`L'Sae(O&So9BlK$$6YOlYOO7;_,)=,0J"#o
%-b?BUXgj<oYG_[Y7e\nbi/l,tH#L@WJ&2[4b/87d**Knd"@Xp_&6=qgQ<0Y.ec&&'+M6AF4EOLi77HmCQS!FB8`=_[KUD.PW@gq%
%i4G@e!3+)IMVX5=14QAtf@lgQ0)7>ISEZI[RR2%[NunX$WhE>rQFT=]j.bl@T2V"`280$Up8\BZ`RT%YBgIk1<6F)EV-Bt>MH%p;
%oeNM!j<BbFjR,*U),,O[eB<V&G[?&+dK+_.1kVkY>Z@noNn*]:>=;o[P81l1$`\bFHm6s,jQ*&@*%SVTKu#3?X^/JT37.ooW3REi
%oYj0o<"uQIYOFS&9.3qY8C0Ppn2)T&8NNLgSB>Kc?u/.;H)b.M74#VTGD`^?+]]Hq'i2Ms!mFXrB`b5D=>IlgQ_rfqhIZrDmO,aI
%3F?tT=1.NJXTU.[AJVrqqXmHE`'9.G7cA^DITDp"di1D5:;@\,/^F.qpp8ZaE]k;"-#0BYTFtn3HW2HYrb(%I\SGc<R04Q6-)I>W
%U0-i.ld([NOf=4uBXs#cqJqpKU(eG*kO\;u&\)lP.,qgYcgoFtjc[`X<M.C=Ff6lAP,Ii`Do:oQh\rucRrh3;:W6Q.ANBu^_9b1r
%)+.:b.?V%RPW@DXNqr6@a;D4eos$PdhF?)gY*.k8GV3M8W#hRYR[<P\G516a<)g'25kfM[057fSbN\-JeV]jm>d9b"l"2G#^ms7\
%0.hl>A`=0k.`U"(.E-B12j'ocPD=5r)9M%Bb]`kRTF2HZD$SN!7Vm193_,SDbS<)?.&kmV,bOp7K9rYR*YoPDQO^[`"iXDZ>!Ol3
%3=s'VKbJO>#0KL#.W4dk&VgZ`f(A!"\Qsg>KBO7rQ[*'O&CIqXeFs^0F$'%@hWj\u0"iCQM4;[ERDhmtQD6j>4;BDWRuHD7?-"62
%fT@cKjJjI,NcgS5MHmBIY`C1498n[A+//j3\Kh#KS]b[$1.s_fgVr2#97XFDbIgr^*PXTaHR`gKau?a&:5VXL:iEBOSICE9-ns5*
%rIJ5I'JNqXJX^ksGmBr\8PiY-h*eH1q*maVl#pi&@cfKj;1O$g0J<MJI*C>V)ldQbdXg5r`ikYOF^0(Xq#Z<Bh$)/jTf^77YIW8s
%"EA!r@NeA%<'"p0f%]=X-M`i5YDJ;U*'kj<irr,c$4*?SD9BEq`Muiu]@N:(fAe-V$V8fi`F><56ht:A-dK;8c'V\(*Rqr.j.iI'
%42%>3!0aA"]1[[^EO_[aPI.[(0e:@I/%/2?PIhKV2X]k3HEE7D8*O(cr-Q*aE`b/hiZL?BY?0]qYb<V?GB0AaF\k0]Za".up9et4
%n6scgH-T>O^`jduj_Qb^^&eZ_%/Z=q<ob_;)$*3Bg=UQTNb#KPH:b:s:KpXqBP\?I;-"#BHpmCb,cW*`_Ttj0=`3QqaY'2(]3FB_
%<<.M4P8VB!;0OJB`)DfS$^>rAWT5%:Hf<.F`NR>V\5tgh_P\`0<[,[aG+B=>:n'LuobNdac]5fKLti\>UmFDLW>*0Cq&8sedOTX<
%1m$D.Vb+rG:nSg3.f1>`_5d3_mhZl%O]N'D>WG+e70P]B1)DUDlVQ0>M8sTe8RkPoL^eJ2dLGg%E6*%4FCi+gjEZmOnYR@c@gM,F
%3'T17O,WZTZi.s)s22R)^V4u7F1?RFmer8T_$UtX:A;V%q2,'2SK!G%\[`^W:khq`P)hH9f14asRV3Sj8"DaE?93A,U\p2K,)4(R
%="UoOMFp=;,rdm"Ph81`Q,/^eCYX#R_@Wl8,H^/HkC?G%;@^8lQtn'(37;r2o(9.jJcH/f:k48L4pL/&kEF]s`_^h=>q<DrA!+5(
%1,'QdV;li'Ep`AQUtG(Z/&t_KVS]eK(S.\+Mb8`p^gQ,^%+J%^4FKg%7c#OCGFmla46\]qipcV6F>f#-Z$$,X2#=e[e>ncp8K"V#
%b)N:h[&b)$YTX\7NaF/'gkQZHnbAhrU70@9NiquP*8P<M])o[)MGuHBTF>A:Q]9Ah/I.ZH%Ro-gT"4npoR\$9$qW*;f$82V"I[J$
%#5>!^5`n@9]lK?3J:dn;=M6]n)9bhb"pY2CYY$bm*c7bF:=:T5"drDQHE[f1g=2$X-U?Q,59&K_?I*gr&/aH'QjX)hL'$Ri0ht%h
%$td3C>/?%f0abG^a9Y8,/r%Jr[g_=s#mLkBXZG64ai+$<hu%Gq?rkWb&Bmcba>-opjb&9hUf39$09$A<HA^i=\9>\B@QGdl#7tK"
%"8TNE#.gB[0[b6)[`q3ef*_3mXXi;!a4itaC]ThuZ3![\rTtg%d'$6X]\TiB5ao\9JH_@&9*!,Q3lUgq=N/W,)R!Z&918DX.7F9C
%6W8NZ%2m5gXeLH:"?>lUO)pKH!!]S)+n'VKN]dY.ipeSCeUu@F^/f3H.ruSu_5\uQ1L5O-ft'So0,J#_)]PVjbJCu]!Z/*Z5cV$?
%3dUHS>.snL*B8)e0fTAC(eOg>HL?*5P&cC/5cWH@_BZ79="%RQ!e]hT;0`:3.7-aWh@1f"()]9WD+ro0!HPG0"qICL]V?1<;$Pb&
%(9/ON@&9]2=ieY3YUmaJp[24e`HJ]4E`:DC_`"g.XFon;ES`e>;Y6h%jrX.1ojtP,@O#R?CX*s91hWHtD?qi)bQH%7#*XUh:+$D\
%(s>kr"mE:$5nfu%E7.)!9[/2mUC0U>EXZPs>>bTnah"s-WA&6CC%aFMGibeP#$)aHOtd6H%968K4;AT3jM$M/)gls$J4#gO_![`_
%GQrH?X^cUI"5cF<,^0ANn5ZG4Vi94T@3n<J0m2eIAJbS3=CDpfmXgTq$3a>W.rKUD!h;=P+cmeIg0EmV-Y>*<Fo_?D>N&dHAm7PJ
%$3h#FYN]eS,?%e]pfpru)5!f/j0j[VRo&8%1>7ln?+>+K(]fCR-h"cI;8Wu1&J`6_FTgPg:aga.72V6n.Na8NE\<r7S6W,#-453^
%l&rG-"*5.>(h"?7*!"r=n=^.jI,k_&JamCWdZ$.b4%N7a;8@RfK>DrUXTB0%;$%(+oNc+\BV04NK.'hl;V5Uj?nPND*C!h[>?r$P
%Wb(:_4PKu1c^Y^:40](m-L[1oNMWf)FZn@s'+"56c6a7^_9$g,FPn0s1lebH;S%"b'^MD@qkSQt"n0R*Q)\kW!&d:=cCtPt9=[&[
%rl@Wp&bq"hU'`E^orV^,-YpLg6e=[7P%CdE(VD(LCc^Cdl;[j1&j-t</%f>=@3R!S1U+Hj5eZqmqG!CBT5VN>_fa`mMSS1$Mo]hP
%^g9G9VL*ZcoIG.DP@tf/c"[L*:gj>a4=78s9j>W#Q4?McNE_X8!MkXa"A/BWJY^)dFufeerC@1#.9SN<&K';=$!Gl\0O*@;7'(8`
%DF)$_2&e!M(8*8ep+rq_W0Ac5%7s3*)IsGG.q"KNX=QE#)cqt,i%-T50F!Vb/V:SCcD_VaKjM0(WSeMR[;0Jj*V^nWJFk?YK4a99
%]GJd:(d$aNQ2k^L8^gQ9>Y$_3-oe5_EcQ/j!!ft]W\-&%$d]9U;uW<B+fbL\.`/u"$A8CpiI*)mOtQoF@+PnP6GW^Xm7>!J3W^t&
%TA!INK9Q2Nd4a7(?.nf:bU,@RhdAOm('>RV@3K7(Tah:<j<I&j!]mh4_09[ckR]Q(AnE<?:E_0kG&.B'WqCX%Z,&l,h*uG)C0TXl
%,gqRZh)#o'-acm3)siq3[FuBYrWmbS"BZUPq+8&T1%#$0X\g[%+^I-j3d9Di_Ei(U4u%qnK9h_Gbq#,-TbXel>]WPS!qLF=0F-'%
%=pR$q*kd.M/%OA"=&$aIP,OPGgWnp+RuJNn2F^:&MBsd59Jp*"'nXh%XJ-j6oTbPllVN9:OKA,X8s<N;`kW.CY!I2nFY5>jAh4Z.
%CFdc"$HQba$.(9&?G@%ZOii+!/tui;Ee)2[fLoOCiD;?r@c:-/7'KP`W)a'+,,G=I':>MO1`>%M47rl@HR%h9*2ZW,P80^Hj:#Y(
%%>,taJ_aFu0u?1sF@=7:ARO#g>K%8QrDpJ<=*bmuAJ&>6&]8?unJ4\+Yn?'"i(BT3,Q3@IW<.=MZ60F1X)q@>L)K';+NdfkW$GVG
%(;upCq4ML1k,MPLfrHjqFE+fB#MI$bT,e()nZfA>]E4:8C:WMpJorc/<'+J<?9(s*b+Z_+jeNk!p$,;f@bPe!2$,1=JbPI<C+XBm
%Fbu5$TQKh-&qP0]!VYr'C/QjUf*:@P7<aqSOe:.g+^[Zqcl&'o7^'csBAab"l'8U`F9$MiQZD*n'FmI"R#f`fYL.T<o<SOk_6rA-
%ThHVPgYQ2]GLlhQj31(q`*74XE/[Z1ikK"HT/^IkX"(lSfaO-@YlJb`iL>FO/*NW4.jgo].5Gn1M_mJS*l*Il(73lH!u@PR@PecJ
%PeB#,>Fen.oiiut'VS8*Le:Q!8Z`StcX,/[WZ)ODNK1mIY4R"iHg#`<:<VS^\f/`mgGZW^Y(Ocq$G.1B%_*3Fc(U`fnNR!n=gSf$
%LqmYr"V"F"+^e\@N@Kg@TNFO[kaB+P7Ff7jJ;ZdF_2F1;5Z&[2a9Og##,]I/[1\-rR\o9h'MOp:fK7reb)%''[MeorSUYHUnKFs4
%1Ve+^5AIZ5d@/@\[\OoPJKV`01"!!tZZK$fm7Jup;46ZVCs?_c3E`UJrRp88WD/J8DV6U1D/hab-bpp$/QQ>7ld7#li_13)6'nT]
%&NIRDQi%`c5\(5&3"6n4.nUL'ic"$'eGqgK(Z%KR,uPG3'1<?Y@'%LDX1I5"$L6"^B0dq(!q;m,!jDlDh\19u9o]]?&4?E)M"T%C
%lF_rUWYVZfLOa9Ig*X1ET%G=?qX?ZQ0pG5pi%u\`2YFqLF%(<hQ!)2T:D.q@Xq\KW($h)Zd%REW0!*q9\)BB](]\o?n3!5<Pe\0a
%6#I1d4XW/s+DF/2L[&q[elJ]riPf#DD;_4*,OS"b_?\^0jC]$smQ%EEdVWaO0j'oe:8CoHE5ZkX.nbb,[LjOYO<@]N8&o+XHMC@V
%M,8KX'2`?o(tNl1":/7k&Mn)9m=7r+<>6WR3A&Pn8heYiXkLY-kbjrQN]AAEG*'k:4;Pq.,Y!4Jkh#X57)g`uXW(Djeh/r&6/%@l
%<Y<_YWc.\I(`5tS,"FHZ9>Je&s'W;C-8K.1O!P`)1l+S1=(E7YE,5jL^.u^7]-OC5fi1*b,A")8GFGTrh-qTE!pKch@@K8ZWX;'m
%>+lGMb9jc3$qr)dBFR9ZgC[+81fk;SQ#pIEJr*2h5l_+%p3inT8FA]V$_N$GXB0t,`<[.[\IP0rK4*C^]<`>6'uQ49bfq)_"0JRh
%^_=Sb4eN*7f=DYk_OLa(5#/<o9i+%[ok_8oJ5^AmLN-i4gejYVe.q!/f=N4=#A4aLL,oLG7/NY#Y8i3daMpE7MC'ql%h[5oMg,s>
%^rbmsXs@os;U>h[!>h\Xd,M'N+pj$)UZN5LB\?<a$Zgh3H>OO94i&%BoJH]-Tg1kCL:>'hiuOR.4<'O)L%,qFiG*9%I=,3mGSMr6
%".R,:JsUM@bukKq^3LZP6#h(SKIFua:p?D-,a#&M!!142KcsssOH'=VLY\t_;W;+RE.gLL#E!oE=2fjr"R*F*0RTC<4tg,R<)iu)
%h`;4Tkd'e7l2[?GmroDa'hn'5X5m9BHq>3.o#W>"RUU:]%cE_=Yc's-nJZ$0&.moC2uebUG>b@YA0IeTh<Mkc@/>Yi9PTY;N/0HL
%U9LRLTg0]mP@?5`^kq8\@Z?Ob"ncN7Ze4hX$T?K]#L=o74)-6UoaIq5-(2tF'ETgpR#l<Y9p(uT9Y0,aRNa9)AZ+;M$5BP)&R]8^
%EC:G253pQf8&UD&'[[]So`&rt^B,>u*N7a>*>Ae@S3!lg3e`b658.ojAK[Us!B.a*81lFC9Sgg-ea0mM3hB#2k=0+V7BTQ_]3!3.
%;WJq)Eq[0Ti39E'9I+!]<^I$k<Fm*D<ha%+e_Lr:JaBtDlO`9'$?_\,N0/\/g='`2-4=NlMeB%,UAC=iD:'bkY5>K6,KKiFH#M`#
%)GS_iLrr)I)Sd1$;J&W**>BSQ=qmaF%.RF,5E"Z.4?VaG6AjGWBG$B'DC2";(%nA"/6UY,'aQ-\j[cd*?_1;8@1ZMd(Jp$g8u\25
%j=!lZRTfie6h18kQFag18iPO^?\+q">rS:5@pKssW<h/HITK^Z%WXoP!1_)O:o+AUm)LZ+?TJk[/I0(QRHp7f%GJ&qQ+"ECD;17,
%bQ_^2bfS9sjL!)2:u*q=JO[6l98L**111W!dfk!#19PFU4%k$V!\H[YairJT9J$Os,0C>UAN<J[,7#;TZDI97O*OS?'X9=UPYc-V
%0lQKo+?<ZXBWZLq,ar_dhoW;!*[Dhd0S1]tp5]%]<iN3jAGAf$b4U32g,kSA(R(K?)A"dKI)Rn'+Gsc#2<G8p;3Ig\k`H(d-ZlMu
%K:%Oj9?P-Kk[ao'.sV;F,Ik%Q60aS0hLc834e(e/N9Ig/2h@'cqkCmoOp>a/3AdP,*-IqEeZMb[%';#,Ph$OYW"MM-r".)S;#m?T
%3]%03;"`:tn9=DAO:bSN7&W#JB[k_P3s8M1(',q?V;?"hX7aH1/4`Pa%@m[129&>QRsG4$$/hCsdRg?u03!.gVQo?*OWGl(jSi\h
%e1?YnMtE-e='q5P6Y$ji<'W@:dhH8t%cAPTG)$ldB1<CG5^HQebsB6me5BOm]ni\#rK[YlqEO5MB+76<?k<Q'?Q\46AW1JL0FUE(
%i1sSH&P4<OaQU#'Y+nT$*cD70"]q?V8HK=/F*\&n_)mR?@ZZF<W[L;)MN'lB&]oK\\cahYd)91q^!S[H-6C'?h/UApaJC<T/\9EE
%M%jk@OUrYJ>tqK&16bX#$`-$:c;a@IkSX(A?3.q#f#=iufm(Ir9!hInTZ>!Qga!P#kg"O.QDurP#cuE.:%]+Tk"I\],\.>&/Klp;
%ou5VHXH%Nd1oehJg9Z=,Yl[)<8Q)',P(JP9PUVIme1q=8_t'6*8-]-*,Iq9,f;9ReZse(Am\Y=Y<23*<j9Gk+8g*p;-"G^+g:BR$
%.?Q;__+Q_Kc#gp\jkR;!+DMhUX`Pb=AF9J+:=WgX1I\=CJk0:0%2bJ;PJEGsnTqt=C\.>1-J_We)L20!S#2HHB8LM$AS/UI9bC5W
%)sE)/q\UfThD0dW*<FTSPKK^(G&$Nia?-jm!lu`^\EAMmGfKMN.)CWd(k'*TqV&N;[eg*!2`fogZggaY'Mc#7PZ$X7;B?gAh3_:?
%pgg0T41*6e<[a)>7W)NsB@iD&Me#[+Pe4GqQ'](LMp2_t6&Li6#sI\YF/DbF,"/tBojc@r+AE9&VPI*o*HfkJ7Kt%\*@4O$V&b*%
%USJ8J0Os3)!jXlhbWB!)3HGViT[;uBF.L98]2gVEO=]Pbokkk=[^YIF(WZM@_*6&L]>\57-#Abd?R^JZZWIHoS..Ue0P'rAk]efY
%q[&eB;b.'0fPi&XbX&36RK_>qaUG@-/I$"-$5NAGbc$bUi$H`=AJ3W[9.dL,Wl*c1W>Yp5;:3o=gRdPmKuUQ:TF4Q)opXOTLpGH'
%\#PZLbp6kng=mmH31#n]8^4mpK(2Gpn<-pMkp4.$;_sAGRet;o4Zl%p<faUHWbH=L$XFE=&t_WlGml4n#ZuLU<JTjmRWq0Y&KR3>
%;kf\XMXK3J\5-<AYS)YBP+i3@`:Pfbkd;Iq!0^;hQd^HJ5dT42I7P,UUs'Y"\03!\f!::KfG_OH,Bo\tT%)!gf8WmX'1E+>X9Y4K
%FU,iD;E'MhPQ4!G3b%9P/ke/^&YXb:Iup9P]rJDs1/Pnf]Kr<,:%5\K9$+6h9F7t0#`NGj.K'CfX2l=pC@kAD!MPW8:->>IB(0,h
%.H+AOnk&_1%\a(.E$u/9FDD7?WPG&m5U[[&bV#S#'dORAW1#-HUl;N<b9QZmi^/&hSPu,;Ml4T4lnrj;lmqc?'+h,n-`[K8-,haB
%Y$,LC%uP:3e(UiVkA(75eBg7o/\^W5g,Q?^9e.4kkf/GSlotRsm'N^[,lq0D$;a\R!Z%-,APkgl"@aes9;f9Ll3Egbbk&HH.cqu$
%I&Dt(4$d,N<"C<Af9(.?$k,^lM8$J=1>C8=/2M:/qRCbOd&jjaOL@iKJB+!H8d)+bPp$l1lk$7GA11mjNYW10V:3n0eS/1BK7`3(
%(4hZ1UbgM6#--cO2!RL6O>dOoJ*Lc0EEe^79]RWQYY*=Ko5@d#/A1.Hfh>o<;4X.TqD-W"#oGM]S%:%`C@jh&9"H'f!411SVicMT
%2p=pHft7M1>2aX='Gk7<gEfC.o"i*_a.AMr#hUUhVI!MsYp4%;J>qb$`P.j\io>dF$4c3?%E_l]W:EC'=R?S,r(cK6`^Q_gluqN7
%]"FhOZHnljL$"YA9:VYtQ?5Hi8Q&Hj;+[(:#m(NIYDSC!J`a9bj#AgZqIEoF^)=,,@C6H3?PG#&=KtT\R+\i%m+C6*i1i$N`>\Xa
%bOiWR*7DP\@2q!1W_B<\%*1b#9Rb`"EIeJ174;2n![e3Va&H&IbNbst1?/g\S,/sZ:iT+CRc%(>;;LE:YZ94gaD"s\1R$9/$liPe
%#JMCo+`TB?WnO/D=4"1!emT`8@QO`]g#iC?/9134Jt%CT!'*OU#h@lJ7KUZI_8ePr=8M^aG7AAkg,>?`(G8aGmV;Ykh;?Eo.)X?c
%?q=Ut;O)Q=E?9sMKM=FAjoZfc/aGF:A1>R$W(7^P*.!Q'X2b]m4Bu&Fa-rk=ABU:b``<;jBoYk"IlKJSIWZFr9u(:bd,b0BU!\nE
%3V,j#$V6J:5SLNh^dNg%dtti"$WL11)D\u*FGqDJ:dPi%k_ul;$A,-.d@la(6\d[p%7#Od`VdP(>%jjjIoTjPk$#US%0aoe%0C<!
%NB3.`H1IZ.a-'1\#NS.V`'=Pb_23pa9Ohp18JbPa(R9qO\2hAu6d&Kf(P?4W:9CJC:E#fa^j'XYC:5E-()Mgd$Wq6c_TW-7(oA,4
%-kt46PKT-u6B)^s72?MQGQ:kn.F:A?jsr(2JY!Kd(RuaD;B/RTR;EG7REnirZ_`;gQlQI$naS5BLMO=8*uKVG4cf)O<h:j.2*6qA
%%RPgM-^jF?$EGZ50+:,;PfVCP,(p0$QCF2Id1P#>Y%"1t7R9r5#WD\Hiq>!5=\fm&Ek'0oDK.#=,NU/5DNIi-2U+:V[KVha'0-aD
%]>e0h6ej>,Mm2D>/CsmfSd.9L0ApA,$sp+,[h_?(7(b-T&lbF&A5+$$dfAs9?i_d=gek3X)tiSUMNJe@=CTZ<Fh!/1<6oqhjAe'N
%WXboh\"hg9`go-qD[KKi[gk6aLAWJQ?iV)]B8;F"PGjg20TaUb@KK:;mQ/sd.X7AO,U:=r"V"sD,+LA4?'e#g9V.fef@hlQ:F+-5
%TL(.DET.--B3^`F49gNO$oueT0>P7fp47M<BNq%?ZW[TD;p=bV[UY8>Ld0W#"5;MDKSeg\.,-;s[hNc%i]MU>aDd)AMcVpPkf!Xk
%/TH@u]s"dFX^AnA**?N%,@@rVNBb^u#[M56N=bG]3.%U-P\@?k'jVRm(bP3FcpNs%[R:@c/8B29V6dEklC_P<8I"M6]gUt^6Bs)\
%k@>f8e;tjV]6ShGoO/c%Wd=nH/e[&qVg3H53(8@_kKCDW(?8%boC+cd:,;k`@548!1b<Pi317XKl%td\(X<LRd5USXHaEBCcnjtj
%":ledC"dUT'*Be5.[@$J>q.Fq`Ec$RCF.iRQe[Ckkp9L)<]cCQ+9^hk%dgYam3!52i+*0m,MnE`aOTsUqaLK]&Y63(FHW>rJDbO\
%K7`(UXAW3nHG?lC3;36mp+Qu.)-='[^uX08&P48YblJIe?!pfD&F*6@@)7#O4]UKNqRA;u.NY2;fDhOU$W9GkLo+5G^_>?fU@@k`
%.o/Po9=4RR"IsIXRF=.!p\XplMbM8pf996_&EocpS4h%gZ485D*=d6Q9*sL!!fPgfJ\E9"Kan*`!YOe;1'&V?N8XDjhBW`30U_,)
%gXHdd2D*#"5T"T)J?(]9M#8%^h9*eeV9m.i1J,>q]hD7<UZb!^9G#80P+C`mc423K42jV'?mukWksPD]Qpl&-T1o,-=";K>%r"&]
%)83T.aYf0b5ViuRdEq7`FFehIoN=4WMEmlEGU$pmb2^,<Ypo9=K>LU>9rgmJk6j0NJOQ[f2,HXa5,0Ytdr;bt,n#H6'jsL.I6csQ
%bqA6p17s]37(M1>(@_]g/h+(\c4RRD7,*Ak-UD7X&]/!?BFp\a9r,L!iqV#u#)N*(g[ncOZVKcT=ooa`GeE@ATe7*6*Z#n!VqA$7
%7"\BQ`Bap]r)GR8=^bMM42D2knCb=X"(*$%I7pgrF\`;d$)bf14lE;G$Y(oq4"DeDdsQTUXJWWSF,+qMTPb?:o2=]!MW<g?EifY#
%&lO:C>iA8_fP+[BLOHS+(HUJl*Afe%,,<\@6rZ6,+HmVe(uJ<`EZQgsS[[<=Yn9BHl$A$%GuHOZ5sVEYJqJgq!=o-Ro:aR9KQ4@:
%*nc_-PrU6=;2@?$S0S1A-1m(2g"5;,F?t>\E/+uY_Ps$GW<ieUS'VR5VC>lj^i9I"lDc,rU=i,A*rbl3orN6<&T'sVA=tu[[StP`
%KrP.g3P#@.?(_`m0S_[MomU[1>]Y%NIk:hBnk)"c$uS&16991Chi&)p)-Dr'33CZ-qK4FS=d=ffl`aAdPJl\f:(TB%32fVj-M591
%W,.*<'W%J)\.A8r7H=F[*0$C_]7&.n/VQ"*P)n.&#URP'K&jt>N)n!uioMKjfkF[99N*+,)t\;Hp*Gth;a`GU;Lh2f:S_E7\l_Xp
%%aMa70!VM9h@tnnrrcl-KLac1bT]U]jI*i472qJ\.`.^=T[WI'Q!9GoS!AP$j1IrHgXr5-IH%PYp0,X$Qpd%3B5S,hB@Fo>9G&DK
%d<j@7P"KcGl+<p:FGXRZWpc'dZ0ar+G9$o:WbP$/"`qNrK=OUj2-O4,8X(@MlXZ"rF:tF+X\i)]h2N&l4JaNEXkg2i[:1Z:WEY)[
%Aja9rkP8BO\%]:V$Doh&49aP/;\I`@Nr@>C/HQ18qmI11*YE@/)J(uY3(pP.Jb<h9[7rW0&2[3S^]jsQH;l<^iD:p,&UnZT<UNkO
%g?f.mHGZ<4,V"V,2j6R2D<<'k+_p55E)Y:g-aiD;[nt,.Z^;7(1DGSBM<EV*>g9CQ&H(CZ`2$'p*&<3V+O*3[?`t7MLk`?#%CI@Z
%;oRMM6./p&oPZP<akO"81SKioQ,C%uG/?%;P2WkB`&MV[BAPtBLarY$\mG%2e>h1O.ZhOdi1`Y?S.tq:hX;CO(Q?\[V3XQgOeU!p
%B-g6eQ%l%p36\]H`'e#VqkVF:(>q*m)UolW>g%GR0kE>`:'ND3,<9bdrYT29YcSM^*FmqlnKSZ#j8r8_CD8hh!0Vj_h,Pn3<W/]E
%dY]SA8js!*".01+CopYde6>c\LYjI'03OSf>K>_s8]Zph)+U*7=qZkKD(0*VPGQh#o0M9q]kEYb!F4;i6G0IV&BXC>qGd:j\U1ek
%9:"p*ljN)#cAM_FE4%IhOnKI!)ZgH:-cm^Z-UTMM'S5,*+AcqIh`Jju@moH_/(YB&/GfDO6(iOqgp&&87*M%mU$hq+k"TQJ<<X2t
%c()pQN76gd[5G,Q7uL2Yq.&us^!>Q+)D)&M*3BK0[F?(D*)&^5;:3G#bV9"NTY)A5d]1o=:SX:/dI84Z<-\4$[\@1s(>?3/)L@KH
%.E1TqkNJ[ehN9O@?COZ'T949\@E'^eA=E*857XF8o=jk&_-#-PaKppbGJ4Pu;hq=0TRp#`mb.2<bpbn!<SuN0N$"7!Dlfc0f,8re
%'u6\-at`k+Spe!K&Z`A5f%])PQVG3]QhIMC'-\H+0@I6=)6"Ju[9&oI&eqOFD]+?@U($_HM4O+'MUZi]:0F[0mW(OorMnqrLoX84
%O9[%#Fq!dqp8ie_\FO/aGt[,)XfYHmB&KY*<h'_XgjG!R]qqb4cI./hXU9quo&Cjb:S;WMs8(n9C]A#L-pI9kc]]r0c^+,L-!/[e
%SXnnM.16tF]!25*G66PCrm:M,#Kl3oM.-b+-tGPUKrANh,"IQ&P'6p127?Zr@S9+:C%;_*`#lu1,]:EX[ke1G`-'Qqjl;lIa$4i8
%09`:m2PKd1ms],!EkDQ@-[[9_N_iY?'rlFfe8.H?fE>K.=gWukoH[3#p"Nn;ar$C_&^?tCS:El]?Wl?AhluJWK5W^/G2qFqnIrY?
%DMo!#Is9)I04Dq%U4f<3:76^37t+bPGZ/]X.0='qbf^H)4$hXYEta%j,D=+JIQN[c3'Ab=Fb'0H7e7%CYe4<[rV>jJT%rbjS"78V
%'t<AhR9sK<c,VI7h*()Jd6\[RFKh0-R&Va<L1?X2bP^uT4V0<%>_(]8M%uM:NXoVM:Q-(:N/kK?a):u2+)%R=;,R"mEPBi5XGYCe
%IDhSX0jn@t`T3L?]\Vp5#NPLhh&a$Arc/7t3*,`spH8Be#hu;/MDUtF&#",0O9L=O`5_Hq@4dSnrM=kI`QtC)AHIO%C?CYrG0j!+
%q9.2Tr#so3,2le@7A_ifMdk$V"MsTClM%d3hZnFek.)+fW%37q<=sEQJJ]Bb!&#^-D=u(d\Na/6cJ\)8]fk%%42sE(ct1N>npu!#
%r&9#;gQ4@@[k[Cs5b'(UoUQPbE+9*bI@A*t71i#s5jkd5]&*?k!\"Lo&ccLf=lhg2a$T<F>_.^fIGmIt^YKc.f;OAVM,Ltdg3T+e
%8t%bXbVjgG,L4PVeQIChr7i:"gG=,!I^)N_mq%j610`W*j-Fb)\JtT(JP+]&TdZDWl[ftP>9oYY"@)fda+UDS_J56Y-g">!^h]!(
%'[=K/bt]@q$kCgc+m3#B\o]Jp)J+d:o0g\d9(R$kDg(pL1u+^mRkscIhd/32X0?42b(X&C^#L[<"i+6^I$N2N2o&Tm`n#5TR^3q7
%+HPCii]o\fHHY$s9t8r[f7!VPV0lA&Xp.p,VpiVD$%/m'*?NbNW-:G?[]ULPb<[J&$ag=.%"d,i(!potSO<iY@f/E;X7F6M;.&J_
%nZ!m"rPUGmm\Y%]nWuZsI<H!4Rs/=rRjHGr1<AQ^Hh\jWXCXSt>stkZi.iDhX]?l[eDru!`?i_NT;V18-!")cflt?tRn\1VP@)o?
%A]:PNIMmMn2><r/VB/!GE2qE)h+h]'nBBs^++Ms3Z\3kc&)S/'\b$d9m1aYIb[@cjoti/ajG'_Er-u%S\,1Ju!a[k[U+3o3cTFpC
%)^GZ!go&)`?lFqIW(ZeOL>"qrlF%E@MMP(?#qPV_C(YrO;fd\(\UL"cmsQ05d7L5RUqU05W53_Mn&r^%ec'\)Dn#VgdC;>/[g2>T
%^FuVX$W"O5&e)9#"4^2Pj(C+J@7]aY/J[nT9;]+A(JpGS(p&O#Mi*aO4BQI=R1&2aF?$bYe'^\W<^lNWn_7T]dhl)`_RgPpQiRe)
%81#ZmfbaX#PZEL0H<Jf$0j)4;]GuKDY@!=5mD4*i#]C7?mEpC9Z56gBKmAD6^L?cjQFtm7W$`hP=FhYa4B!(-r3;[rZcl:!7gDUV
%1pNF(]#7qlTn/ti$]71.Qgu8fpLX=JHLo>4qU;nZr<@`=F]>/nL#r=gJ^&)DQtc.Mmo7T:VG+o#c/H2rB_P$fk4h,SatIQ&*o6>G
%Q?.7$h?h/I:c%D/PQ&.1!J),F_h;B7A$IW.62'uel\H[EG%=g$;5=f=22#IccJM#S>JeUtIToq8p,HenMgCaVB(kfUCno$LIp1J&
%-JtDMgQQ]"b"c7<AU4!lhQZ"*Bl=iIc5O>^J@ZV1Y[f\cc:dd$UjebG#4(rlITtH(l#G33%)1PVgMORUih\IV4gW.ua%"EH43+CL
%"ree#+Wefr\;!hpUFO.A6:Y^M!qM^O6-ICpiZWkICciIRI8MO.b-L<[]5X\6UMT;`'lsZ8k'"Jb8or+e:gNI6@QgPi!b:45*"(+q
%G>0@k/2skb6J'%A<%`@gX'YPF%,\/Jc+7h=FN_oVc?j#U<&3J%[Wt4a*Z7Gu0U=Y>)Idu9J-MG8^oM*Zq/pq';\)E[8dm]jOiT<a
%Fkhp;4n/rh\?iCJPEo>(q':com8R'=`$n<7UQT>t@2k&N,T_PAq\1&A5JGrkT-nfoeLsGPKcTXXp<)8/?9P@2YH.[!p6J(T]R8\M
%=2!4I;<W.Y$E$[>ZOPXLM%.!h*d`q==kFmNr/Bdf0a):)K=E-c)09K7a,WZrB.lX1m>#]s)9T>EB+AD,QN(Br_F'?QRVkYGRs4+.
%:JJRVs4``XF/g;3jOY,pI=&U&><]aioKt/9&Fk;(*d(aU+:R<\Em@%Bg/(U<@]F%ter+LYqn@5s0\-$p\P42Zr%Z@VXq%<O$78P]
%TLdIb1=W@,OuNK,iGA%)oKg!5&E2=f.H7keZI(ALT"2+-C?1'h4bLg4N$.g6O#ZQ&ZD6CO!15FCLZSM;h&O7$-2D]B?f0]ql'@lY
%=H<GRkp/db@fDa4-%&pN;?MXG/Y6toH^eg<#:!aM&]NZ*XW0+D2RAO@.+\aF5J![$\^[iXo!Gt%C[=SaHq+1sQY?,dXKr]U;n#!$
%UA7uus)+TiTJlK\%jJ?!hJN8Z0tB;?G=V+!8Uah#f=/6%Gf-pn%`<+S-Hi#"9`lRFdO&liO(W!AEfYQO.o]cK7B3e7a.\oESe8it
%`8B`\2,tW+mSL.r"V#Tg^XpI^d%IKSZJ9D)\f-&?N>b/gMuLbDf!i1fL`ohMs4R\7*erEZo6S9>MYscgYA\@4E6GJ4hH$Mh`MY.>
%&6k:Ub^J95H<M8WrpZ8_k2Y?T58M^O#$klJi#j(5nZR!-Fsl^dludB9H9;<L(1p*>/A[mffnk[r0rcF7!VTnqH`qU"!hc9qWrc%*
%F>FCNi<&'&U,Ff`a,Q1L#UGtR/7(H+,k_i%)qQ=`JbM4_BD!)Y/Th$QVJK!A5iZpAf,uG%gB!p6,ISLpmi[ABY`l#imHkF6If#C%
%hCdu7l*kJT_pBdnF(4@$&C3=B1VZ0WBmNeAWPd5:2q2C(&T@?&?dD@8b:esN!;-\u)E6C((JoQAXn\boDaB>R1GM4o.0m'Y?J-5s
%%uRP$[4`"FZ]#D=qG%b#$YhFK;%A1JH^BKb\p^4.hJW#bR<W/\>LpJrnftW8[H(E/R@e2HWItI[R8j;nqV\O&Q1>`%>LGl%<.gRI
%&<.N0mXpXiGnV.&X^M-!/0g.b3thdB$8$$Z>Nb$'2Ce+1Ocm!Q+HQgd1]#V8?ajSuj(/I6\,+@S\2uupNnP.jT3]RB%/KbnQ?dE$
%r3Ralib/H!dHc@_Z_&F[1DnpN">+*N-H`e]!l];<f^6pO$:Km7/9JMXRKocQh(/)em:Q)i]Y$tQY/AsAUZb*8UI5Zge!n!&n\0R1
%VA_i$X$*X(]UXM[ZIdQGH`h83i1lV83q][pDjPamOF-+5&?Q`dH0?6@_bV-cDfhn@Is@UtBp+iUR;7>4%eGF4H@?2c>Qg)7/T'[e
%mF0/o2:-b^T_-'-Lo&Eef6EAU6?8mh:3lq_Em^6ALDf0d`JY4k6[i6][b$NR@ZeU%&_#]^Cj%YLmcioD\,1Z!;XR<1U\al!oWN1O
%flY9\2loNdHX&c$S\.b3feM/8Rh:c2<?<SHH`Ck3dR.^+[rfDsK>F1_$mqV[D)u0>oEss/6W_%G$fBpON7juJkG6WC.d*\j:NRc=
%Y6,Z-,-*A&%_*(@cV%2PWqST)HV/2%e'6QMqX<bH^:q9n`A>EgE4-CA.m=qn3;%Ob)MpIOdWHDP&]fi9I<H-F<0QkF5e47bJMMl8
%1"4Oir&*p!m_nLah<aUYJ'X?m(`V[]pN8huo/VBu^HoRSq6-1]%&`CS]$P?J(?A%s$$WR`qc]7?G7Z"0Oi4]R:mC5s?RrpZp`/Qn
%JZfeN$f[kYH@VqTi?>S$Gb+=gH#X)ZYO@hOS/;-AnSnCp)Aj7)/U)U4H,N<RZ0-'F@?/5+:o58!1PLT7XJLhn1HPC:H-f)L8WKqg
%b!b;9a\-JJf'CAc4&2ns^`??lg&GZbDR]<4!'Kf;3A:5oFa!SgD-'gdMFQqPh%^$DVm"k.W(^2^peJ)TAj_1O/efaW.Depc*2tE1
%daLNlAKk*EF;0n:<$m8IHa2JmL"#bZhsSYCp>,0/mAY>OI\%DMil?N,SQS"/jmcpEkQ,"t7Je(&%koOn$>TCodBBihm\-eFW160;
%3,M2PLUXcs4qk@_Lpb3ICeX+0X_-g\q$cLe<Xd!GOkp'5m<2Q)^>6Vp]mb#ThOL:/e+UZ7B+=g),Ko3Eb.Tkp^[0$s*'q8V4q4T)
%-96tS8Y1A+;7<HBZTU<nF*?C:P'2nU.0:qD@$lESQeoRXWUlXfFL4odPK_?'>GMOsL(C2B3?7>>Blnd(?<H#.:BiQ"C-Pi-S=`J1
%@2X\7jtDS!HN7dN8>d0!-@N^7,T!g$S*99N/b7.0]K*)Q-i:lnrPT7o:1'E5cfR/jJn8I1*/>*5)qepKI79AD7(U?7Xei0$Pii1/
%8sLo,0Q"(df"!/IdSe>*)e\Y-^=u#^Lj,>K5!2%SFEs[k<Q,p8^CLoPfU7.JIfjULaD=a!`cUTTp_&)<<8=(<];'Oj.UW,.:M[<J
%onFQtS9r08%Q2Z>KF/rgjkP!AS;[tfMqB8=e^j*(Deu`qA/bUc'nbI9Be$tH0l9XrBr(%J__(c"jV8WMh5@.\q$N,D@BGFkd2ZZ!
%F-:hh1u+U\l"k$Ff;c9>NEUgKRr=>*S&=i<cqYt_bPJre^#d3bfA:H`DdLmuO7YFF8#B.S3'N1q(E$gr-9Yj=^cSpj'P=B165.;:
%i9r`;hsSMO^>8/G;Y2?J4ZfBdg8G\Q(])<Tmk!IiPmHg]XI3.#'F6RFB'6/pE72Zm^UILB_OTu6S(Xbk4eeel1NOofr]'UYDJ/h+
%8VqopKeL!"96$-j5.@u5o6hQ%2n;2(.,7M'D%5F]ks52Mnhc%E*9<*1$32]b]W*p%,/,RB0GL]NmJ'c.R3B%E^>4hdNr07Ymb%HU
%Y@f0XQ$$`d+?Kp;<Z#AoQ,Eh,?%p5>(`odB//RDM[0Vc^"33J5E>[S6VK%]rls.&JH?CX0o1[&2[V+N`d@]<FAQ/#?mr"n=&&l0@
%o>IgK0D>k?m,bC\\XWf*%_IK,>t*gfB)1\!5W;K0oJt:!-^96)fPOVVH/7GJfW7J24VpImBJ%O9i^#+Q'$bg#`#qnaE8P>l3P+32
%+/I"(T7H*A1%f\pDta%P\Ti1MDGJpoHXGR`0.aM0DJN!mW2ft#=`E2n/<Sl\4l!K$CotH#rlX_"Yu;/f?0o5A2Q8[e*A)+sA>S`@
%eiePk'G!nWQZTuDr]>"=]2pr'qW7q9SsJ,PotmrrI-&tfIsl[aVE97@o);#Ee&,LtbhHDVci\B$EeqedqG*Y2eV2jUf/4%2FY;3L
%r_p>NIE4$,L;<.dpg%#NnDnKr;<R-k^-Y5Imi1%!_p8#?.i$J$-l:p:;(i]3C7IFV6l<9sM0#LC3+2cAO@"sVI.QE8g*8`C$L*Ui
%[qEZhiT=D$T"piEqP`,^/H+nh4"f@[o,[9=qfD?c8qY#ehiad)YB"r`K2U8,&''?Of?R/?1upWK`+Us@S^i:H;20)q@W,;sB?Rk_
%O]n`&CY.t`]4d8c:5Z@L[FQ*[#:P950H_j97!#KmqlRUn->sCDo@Z32f.TeoqY$3a[g[W$gu`YmT[IUsH<0I`hGmt1#U)Ya_Q3=H
%JV@qh:II2oJT/,5`P(I,/$-G;K6Os#]X*+bmD&\)#CCq"=<5jkC)J.O<up,Bk*%1gHhc&7>s7>aI,lXe)(:dN(G_44Q;F\LX76_'
%'/5P?i0d?dLMuKr[I"t+6G*6rKm_2=*;$P:<t8($s1R'k-gF,KgKbPjR?4dJ[c)LdZ]&4FJ-Al,L2GUR^bf5Y;fX_3;mM"Z,Y%*g
%g5(/Y4X6^JLo!ht+A=.\_`6CP4a]?mN,MEokh(?]o4'6"50jd^9t=e0J.!XdU/fmXHf[M_V#TgE9Fk,`\(nP6pN?c0BD]9G>9:H;
%f,\euGN!GSmW\Bu%,>mHLM;P4BPM\%dl2521ZpmH]bi8jEi4$;kYjc*JB;rceJ?I6A=oB.iRfIh7_VCWLa'\gJ)pZ45`mR+E<:tG
%6VP6o9ElgDrH`P8lQJR%lJ(ZhZTE7>;dD]E<usIGVhY>JV]TuLOdh3`0&b&qDcq/)`&A+>h435:]NOZ,f%`%NL>c4uU^EUlO@ua\
%l>*%bJ]H0/qLIkhm#ju;bQMO"hq._S6mIT@LV'"B(LtFK_&sXV.-/8bmLgQsF0ZPZGL[$iHPe.3qsJc;4m^fFBEgZKZR!)oeooW`
%MaIkJdp)I_"!&d3U6d0TrVp;_s5InpgOFLXZ,^Hds7O]P3-ItM)`/J8=m)rjDd-ch\Wcse5Xmikct>Na#'iSM%"`Y5Q8.SqL/.5g
%;F0ZWU@I:**uj]MK<e9hq!1-MMm2S:P_j"0!A=',*oFidf\(0:Hh=>0I>[63G%E4@6:"k*I![3D:6f<HesoF-+L);0&a?)!^VV+2
%!D"Z8WA8s9;XWgVM,"Yp&2#2gmR)uHO4EIg"6JZlJE.^Xh&p]'c6XBoPrRRl`+3:LqZ,')Wa:>j0&7+R"9h]%qc8acW&54P]":3s
%P@>*(:s]Koh$(o`<aWpri<LL>:lU7@#sBc"<t$K,oIH`6$2JhOV>Ll&I>#gs0i]6pOnc&5Req[iN"kM*3:g"9:m)F,B\>)7C6fs7
%f=ScaM9U-0D;E^u0j6]X$4csL/L`(G&Dtl'(:!'_f[+,'A@1PA^J9+a!6hocmC8g#$2>i>m;/CZJRKV%Z-ceGYc?;^pJMHE>8N6'
%gLL5^*7bQ<]OOomT;$=ClKX[mWU=Rmmmm(Re@C3s).h\3ZPq1fd=O5Q4qbP/NC2)]<KPWHmXG\-gK`[c!\"9aWu-Wt4h9`l0>sN>
%kEO#`0OGkha@pe%n("n?iFqXoA\M4h:eo_HC3EmGLuG4CHeT4/'I]rm>N*!on%5$"PEL`nb]u,,YCT@McE/XnE"I.q$R]THVD[a8
%3/U#(l;h-=rO"/.3Jd4&J=)0)0;="7;=>gpTYRW/WH3]E1kjf;%8.VXeb9e-I*IXjpPmr9>ICN<mM(I!Lu%qmV\-LP[#1FhXo^$Z
%"<4dfST6O<%F\6KrlIFSa#B1E!X32ZK7b$>"9]#NmI#Rl]1"tUEW1AB[dt8*FBRK6]Icl9cDh(Ni\F8a#9X-]AIqn8+6-mo7YtoS
%!KtB41hHOr"!F_D$RK47KRuL*d6=rid23;1,QQ<WgUo>KiZN1*$ijjs+D5A_^/Z0iQCe;7T)6p8,(t:sWT42m-%aSMo#5SBH(?Jd
%0^QfUO'_c>^tr*Ns$V'$/;oUHdEE[VMRuloiMV:k9m$!k`(/uhjPq!`er$mX2gg%c-#HaicgJg&.$(u=6bmMGrfbu9+5'0d+>Jb6
%85'f%qngNl$YOmd[l&/d$Fp>DA1,MHE)LD&KZmm5jhS[$6P!]UP/LJWq)k;m:ebLO6_E[u*t'FZ<"[p+[[h>!4Dmm<C(kpOr6PGa
%;&;Ju&sag6A4e^%="!bnB$a%+E>i#^?GO2_&D7\;FDE";>!@uN>Wc/#pd=%\hhoL01sZQ/k\SS'9[]'1"Tb5f$%o0q0CIOu-/]8U
%8,[uji6^S(2[&OTE=>(4>7"*)"))_lrr.7PUDneGg6(k1JCe<3=uL36lnEa5!'(lH,94PHrVD,<JG?U,9rPobdf"9?ik05QbEB+2
%hU9q)s$U&H()dcgkkeS\?KkZD%]B;bp<P`,/J*ogZQZ0?2HAZ..b(`E)'SOskSf:@).bY$$X,7')$+lCR:q\U*$prcp!<ej(l+ou
%.Jn_<9BZm2&J^mWmQqLJ1(Hn+7>gL[7H9t9k.Gb$o=<YFhXXUg"9accKP_8@#AGO+Y'tV?On]In^<o$V)FPRu:Qi>?pg&m6h$C\I
%]RjYh7B^5LAn]CPDiDk2`4&6aLA8#/glsnCLoKH/,6S4VI2DpH!3,HGje?[g&rFQ6:SIC@DE36VBp@`tkf;hKYCZR121m8lkJOHY
%6hU\`L'2799#;8\!,&%?L&<.s?B)D?>S&H[GqgdC-!nWg7Z;a]eSbff;r^R[dsC2p#jA'mV!Kg22!@'.5[pbOR$08N\"m-jh#]e(
%8,,iL@e@0d_nR"3.%eS5.KVQ2;K5P#=+,S!HMJ(N"<1`$9>q2-[LIFfDcGmiCr8T+jcmfBWgVLZl%]LWm_1l<%#Q.]ZN7<h4q3=&
%$5YP$?;E<1j/NIsD]e!"Z*(XQA@K8QSAurW:l@W7-4l%mZ%hL"g`Q%ddVKd>>AGEPGg_>$EO=]Zbm&o_$?OK8D$qrlE>O).9DbZp
%SVd4uPI@B5_j/KOE0?mD:Vq,]p+DOK+;d(7?m%sV":ARa\s$.q^1jXufI%<cGoH5l&8l@:$^&i"Yo@Tk;?Oksr<5T1U!Ume-LJ[^
%MjAD"S:_gLTHHaY"GoN+,.%oX5/,6@`8L%o%1jn;%['FI,7!Y@^=A4hJZEncUjNH0+So&$X;6NRKb-=54U9*H`U/tLjEh_@=hb^*
%#BrX"$qT_s!RNdCcO?>o+55M4P%JZLNP@>agpZQ?&@6qQ6[/=P!53<*O6P.-7O=-2&aD-Lom2Wn+R)85)Kd\PWhR@e1c=<jB;4Ok
%Gt!_$?DBaj,EuQkQ[O379Oqjfcq+N%M%_8G"`)/<,RE?pq^`\`Bg7a$i&)(SFeZ&44UeFG/.bu:D-:OhS1"iAle>66M6s]K>A+4Z
%:FEkg:n)S7>F<Ig=/qNgs#U^CUm\mu#c"O1DCG/@h44,lbh]+8hMgM3cS;u>)96/H^)%U:Ghn4a][%D&A,ed#Ve%L1^V18ANTM_?
%57qPuNF2[Mpst3EW_l>5_OU*5o.RSn7tN73)aa?l)kA!VhUu)o->J1:DkB_gQ(No%on\Y&iHrZ_f\j$MMc3rlTVG%E^e_:ND<Q"6
%'/QW0gCF`i>J1!8&=Aj'A,eB9A\h3H/Uj)sF,;.BqX;j%[iX-i+=@`&/0^?(L%c`:(/"T<CSWS7]J!>(Y87BSIcNdF`7b7;7Pe]l
%aO?asGoG&IPH#Yu4Xc@u2aP&3gB&L36o4V$7P^gr2M1m)FOWmliMMX%FFiesOK;,bq9Z`a!;=D6bO=D,0k<md-V[p'=fM^7#nP.#
%(o#bc>#/sn(W86.GTg[lqq<u>j0MtqW5G::QRb'h]+TV7o\/G0A4"^4;i\:CT-8L0VX`P>]c#llKbe$O&JaPH'O?ElQN"+'b\]"E
%EPRs6H0ON)&'<6rRN>,3>QrZ@l"B&HM#QYpA4^-Q;4<:lL(J>s-q2gcmIso5e^,Y"j+^EH.2K:f'puY0't\'sm"IZR>%uW@h-d5r
%GXFSGp'P>_Xc],!W3bcYK33;TeQf,29u&hW)5iSKi7KrNnn`aV:IOqJ/,:5Y]TpeURe72*IZ;-u`WZ99LXBuFj<=h?S3?EXhPm@Q
%G,0Nsm;:<^[j0h9l"oNr5T(W<:,#+E&jqeYIn\uRa\[lV8F"2UhSNiH&7KVh%:C"86([Y.`DmB`e.(uC;p?<1\K[bI3ZiP;RbTb&
%"Ib!m4)'nAW"26>5D6"Dkgs)M64?I[_Lii-#UC=]H8;-Z@^u7oJ;g7jlD>AF8A@8&2&)5<_;K#<itR5S>Idc>3E[<XX*Tk8$cJr0
%#XCAJda0"p(,9pu6!RVRX]WLbpN9gd#PeG9$I\,,j%fbB.Sh5056h2qM^,`jP/U0'Xp*$*QF2IGY4'KPqKWqJ!f6J]5d)9I7eg+o
%/E'S+&fHO9,-)mo`#:@E&9elE2YqcQR'Q;8@b=4""LU&/'Z?Sr4Hi_unN)43<[1re]Wlt%QcOg84m")ufGI!V$pcHAYKfi'SG9e9
%!q?[h8.5i\5[oW+lNB>VjtJpe;oUqFVKRZUK^He!n4_)o#.j9i`52MZ'VW4e"a)clq1F<:F2t[*%:iME+Ve=._a3-^^4<E]3>_L*
%&-H6Um]A/NV7OKLe3aGU7q]Q(EqUZKp["]QP.JGnVG!joL\:*^QWMDLPhIdQ)`pa<[!HI-`6KhZ&C4mWObkQ`?IBo6i36]J^rk<H
%W86?s7=:PT(_%j#1G%%!Cn$<I<&kfVP]\5:mM6r80p>'mA>VMGeTljEU[%$hA$8>\`(U:pF?/e,;)p\TDKe=Z`cP5qP,K`;$6BKW
%K9DEQcSgh_>F40g!jpPN>83WP'@=sr+1$[QBWQ&klAtI2)@Kg[?_E"bK03-K#pNS]@gH)<^5i)q%Y`knf\Z%3;)q)NIW"cNpXfqN
%k1B#*`tDKAf"]O!\G\rVc51lXbsYL_((io#$i@H)PYQ1g[$uZ^d5gC5AG072GuG_s'HlfhijDuYMT<p^b9%Wf\/V\k]$GN1ZuTb&
%XD3FR&I^>a3\POjcInn>bNT)AOF(NCU)3nB\g/&CI_fZcRN#oV2SaiY"%L7b#H1$`WN-_t>oWHe\RPGY#1njlRP2"jhjPOF,-+04
%_ma?f[_@."RN@#bX!NOfJHXAB1[;Y5;88ui*(q@K#u#rC]j&@oP-!qbNajr:-/LP(8c`'PJg!OG^1BPmLkcbR?d?DTX/']V%r9H$
%<njZo`_O#<I[\*&6hCd:[?QWQ[NBArKCuc](HAC[[V?&LDqA<;9:gS+:=R3LnlG>BF52`nm[)!tRYTYCjl'J=H1hrsK2uFm%6i$$
%f+r5)QI8QgW2790C^fh0o9pKP]0ale9\9CsEG@-9o'/pNo%8%sh1QBY[YVKnE]^@O&)Gs,L3icQIAoFRB-SL9_WD_0k/ZMXg'uPI
%NTnKm\m+U??i,f#0293!b4'oZq%%*4IucpaXX2ldYq"tCMt3XnflVkK.F:8OHFlmSRS=E,.,Z"S[B(B`2WP4Xb/TPU_s.+FZOaod
%/6"N1D7)(=2I'7Y`Ys)Ee:msu_-km=geAA9Du/#<<u"n[,o'tE=i#u]'2=YrFi`X;f5R[qH/MEkCUfAgHG<a\U?OsL"_UHkN1*-n
%Bu\3[`u)RfL5m[pl\c.m)eoE/#RTkBhe)SpqI8MJFST4'5Wm=;(,eh'`.]p)OBIsW`Qi3`\[tEK"HOHcTam9WBVKr.S].!ki[i5^
%4?t=cZa#pl5)l?V:&m:M,-q)48@.!p$1)1>+HW!m)iFR]5p[Pkc498.m&Q[-/-.r3(gq0OJ]^X%$med298^T::,LHFA.@9q@t:)i
%=n^"XB5#Ab*<)$m*5L\AWb.)/"CHti:Q_=rffb-Rb"i\_IE'9K'+b%6$I.6o(htbZ(^@UO36]pJ%XgQA9a!&$XV"AYRa1J;T=E!`
%#nke?@[s*41Xe]56kt,bfHlJdrN!YYfXQ$g<%((3YAdB"j?XdPANMh_9RGPDdp`\JM1S]?S#dc.,">n%N6>2G\o5#7K92Fr0_K6"
%Xq62k%4P4'KZgF3?34K@afb8e+e/+4kiV_XZ\hkXO*a^r-4IkqT!*t(=Bm[I/<l]'^`Bgc`^46?URZ:?5V^+\L-fI?a0j&h="+.)
%$1'!tPY5")>^Qt1kt*@OO4r32[MD]qg2*h0Ch=G\#I1:('YJ's7egi/bE/]&rH`!"OdOggI^W7<#+LD])Su1@[)&d$?(2DgmYD$e
%O->D(W&5*A)pP7gH8!8<gb/rnI*RWSb<,rEluLn5)(@>DjVN$_N.a\#\N3U5HCg)VqH7@Al4&Le<;6fq7Eel7dVT(jj<p=qKQ0%K
%2M`[V"@Q;H)PD@X(DKA"5'^/l6BG_lh,@SoM7C)JhC+oMT$H1%W_pTD7+/;-Ao9YI2%R/)/sOX@K=.=<gK%%Z@!dU')'W:mKg19^
%\UmI*L4B89JX1GH%h2@fV'Qfl6Sb=eSTXIiY;Cdg&hb6^ek^/H8b"Mq9@"PDeH%BnB/Q4Ee<fHcD3NT%Y66MoeqVd<4bIFB_@*NH
%qG--\Z3J]+J_H4Gl6U.%SN3k$X*<1aVee.R&1K_,ch<eF'F7+X/)m;F=b3KA-Jc?.<J8'3Vg"_$FuGY=(bZ__ehP_A_uj,[-$Dp,
%;&9O&.;4lD_2d!B!OgNY*%I+0-;bVkjEg/kXP!qT3[fAm$kp,#f3,Qu_<Z2XI&FGb2]F92`jo@Jl3FG-RR!A*T5W8_a"Alo&Q8"*
%A0HE".\*M5G4YBSate%M8_fZO^WFYWnrcdfC=qGGibUM[X-u#<K"%8P]<bp<E<Fe@1KMmQ%bsCH*0?Y=rKtF:124UQi"GDEbWPP6
%A0uAFkjM=2n>MTL*[TJU[`menmDR"?GiSOPWOj+dFJdTF#CQrX_IBf,YGSka(M,FCJ9a/FDU8r[iX;Sfl5)oah2^Kk'h4=,QM+d3
%2<*]'2U@[E"(gBG[qffH!<b*7"&mkWVGI2ZT),`"puU#N(UR!qMV7sX8&Y>Sj0BhPL`PK*?jM&E+"HbIpZ@h+9]9u<n[S;\7nh`r
%bpLJW[&(%F,RbM"0\3"LqdhT6["-uEr)[e6Dd6EdRbZ[LG-1kkVG??a1TS95pX[%ua_;on,86o"<-I$rY3#p_m[:9t5"/L@AuM<6
%&*Snd:,2?nOQm5B'O.G#WtB7m;U:Z7lD,N9"8>!f++1\DHEM%qcK\d;G"B7#(@Ef21f&)#o"q;2m/\qm8p(5QAdQ`r2G&'*?Y]k_
%G4P][e*q0`?c\Q"Q5s)F:7VdK9UZKYD5!o*[Ke3AnSm9jS0*TY*(eq4=j"+?;8?g-`L8J94[@EJOIcY#q@#?$1NnY_[bJ?CNS3HN
%f69De8M*\6&AG<,>8a2>L,e@iR/:10!7Ntoo\:fk=;?(]qa0@;]h@7=QcK9M76R2E&`-8+F2[>(?#&u*Tg`,QntDq^kWihT$^?og
%3>A0W%/)[0VE%`dM7QRMLg+%BS&9J'@Bq_"Wh,e*Ugss&EGs=S]'n20`fhrR`2^b4L)>-Yo89U`mc2:J>HNdQml9$Em!bF,28Y&a
%dnr9A=FbFV.^H=eWWs(f0+Oa<ECFETUY5t"qRXpBrj;G.XBhlO1*9@T]30:4cK5_Z*O8[FZQi]<@5[tq<oa5%":t%7:k:3-E+I`I
%)Mm:iTq!9RX/;2X\p%,-g4RPQX9&ea*%K_9%&0J_IFGBH:t^%iQdJh7)K4%*$%'@2!.dmuk3Ia,V)sjIF[I^e[NZaVX:9'SV(')g
%m[^<<;qS#)!o#SFHl.3lkY6\sWntXqR!<V%2uB<l'@U(Fc%Ci?4*qlpO$[OG9cMR;3C$_[@p=BjI%)++Z0Xe(-)2^t_<L+_K"$_t
%jCf"::4@6DbpH<dC?$r7r\;$WbO7(4.`:H=CnQLu&rIkJhJj)_b6.OA`%UsV8:-X5g>d'$?IVn8&XH5cF)_W5ND7nQ%N7)!ib@:5
%h0cJX/.AhR$/p2!LA;K;F9hiZO>9.f)+KXp.k&l;7A:\T`MFS&g8T])R=]8bi:pqf"!BO*(Mn4=7b"qO7_!"CRNWrG+Be2RmfQ:A
%-:5qIXWbR-/C?<qI6&XC@gbq(D!<,RnqkV+)3^EeoJNFn7bWX99Y;[3:HL+-(s"LYY-74$a1$qA$'XWN:"]>1J$7G%EC/Jr*^T5%
%C$o%8&CAsYp>*7,RJ>)<6p()kGapa8IDnDEF["T)/j?\/B_)K]oV]17'nUXl<f\13Hes3CcoRIA<TjH,;&rm#I&rXY"&Vb(jqMHI
%D%Fs`RL5#hr0Jn;rk;S-R0:(!_[W\7Wtr'c?\WbOb``!T969W2m6Ym/jH($uc`p!QYGBPOjX\p4WU?E_C=_\l*dI\>+e$GVig*@U
%E?8pV="t<d5<i9o=$JNoa8qA6h>Cd;ku=X_$#IC0bX^,)R]"n?_NMt_$:)ff8J6_;)K1pY(6h%Td<U!=d=sQM:U)tTe@!pq`sN'M
%CB2?'85qD2cl:cgpFr!5ln>S>oH0ClI.__m$>jLXmPTr0`HDM7*W'R[\<(Iu`1g1Sg@4j?VSMKa(sZnS_C\NQYd8GrCU]lN`?FY5
%mQ?$u]R$L=1f9'XO5A3HfWS4RZlBm^J]Dp.!EG-4#%]&-O]\KGVhilEJ8H1^=cG'/A*gKco@^Zi1]DGDH4Jm=+M"V,5^@BWr4,3q
%Q;84.Wj=X4JW?Ji`88#f1@Ut<e4+^12KU>:4Q067![-nhL)qHik;$cAgoQ>]\:^=`b0B5`>a[1t`#!;CQsaCuek&1i4/pN+EfX)L
%!HCC8gN_oCBXAJ/gLcYfNb4%lmUm)DZTAKGAqX`P7/#HCeJgUDlUFJkJ.B0f6-%-DfPP7SrS:<,=Djk3.VB(sA@V6V%W]]%%cQ]7
%[H#o<h&jfbLO/%+H9s1k$:2`O3$#Du5dTbU$RVMqMT<+-8dd3k\Igk0Bm"rPT.j,bUQ1P?$ocBgDdl%qq@LHB77"A'\\i]$-k4DR
%aN\@JXNJpkqB]KXS."YL+C.oV)VJ_Ub.Zk:6jfB2*haTqJE;[)]Z($038]J0>+h*@'-u:*EW?gLq/LCaohsCrSR*,j5-4+0Wa&tm
%lf8V"1^+rn9M]*>;@G.205!2EEj>:p!(LHb=ip!OPd8:^qm)^:=9a;Ufp7WmL`?DWQW,Tm3f&&ghWg*fs-]Ia05bV7C&*=YG6'Pg
%@Dp%MSM+VFdE]%C&neNNms5(.,.[i^;<KuoS+Cb75>aBfJ7CL*?<p#=+D08#1@-_'qm&5Y'"F(S',[KDe+Nsn:5h5eRTH9tIkMS;
%08c&a-#:^Q$mQ"A3.qGd2g.JVEn=RBY\Zc5ln438fDD*4'n=,Ra+T./0,_s23'ujU]>W$46%m:f^0[mn&CE`(;NN"obCZ+FTpgaj
%-Pj-Po4Wr0+n,B]Gp\ZKq$<=p!(YuFEt\+QXc/'-Zo@5GjikYDVb.M52Qm\/,-a$Jm;Po"ci@_D<6B<"kIqXpNDW1Yqso_jl]W4]
%$JE:GR4Pm%'5Le_@,u2W?\&h]1"kjjm`VkdDg*RG9Sm8<8f<VZ)7q7HK/V"pYA4."BEeBLooI3;7bUDf]\dA5G@"EGfWjT1*S.F1
%Wm3WcbstnH60*WVlGIo(O0mU#&na*Oa(;1I%pJ\6jMq<rg#doImCjWIl'IUcK<db2"dZPJA>A2O.R,2!67nt]:<>G^AS)o5)9TIt
%fn"YbZq6\P;I9HM6tb-`7_CoqN]oe"`S4LPP@d*]+;r+G;j,D6,eD2],i5?aKGa9eq?e+Y1Xh7N9O1asqqBccQnBj\Tfc:L;^oFg
%(dKtf<kro/jH3a.!F+X6Tq&!#-BZPaKqWgV*g@7tp3Mso;*EQ-SXN8*cA"6i,ZN8L7ClP2YZn(KI=Y<^^SI<W!L,F"!V3,KTl="V
%!6+L@\a9bdW6mrNl&o?RU@*&/4`I@5&+;gV4o?p2_-'oWX[#mLVEZ9qfXGEV$m0aBJ&?`&-<_Ic:#*m^NT\Uia@dCR=Y$+jPltLM
%C)7g_)g53#nNpo.OdXQ<6$R&&Tii>`M\3.Z=9nVV_V'?G0%\5YK-81D5AX&3CGT6Z:p&/T%V;&q^,U`o-oTi"3o`tEJX+G=J$a<r
%Fs3+$[I&PACn"a39V`i8Den'kj4EV&do?_f>M8Qc5Ro,R-\%"iZ%=-BgQR7M(*)C/KNHY9q2>,hDYog53EF_W9m?%HIDKq,E>8Ss
%rs'bHp9>/*R9o@!QkT3,mOX)K5WnY@?dbf?:<mr<Q5!O!8u"Fcg&j&BQ9E$/=X3W0ilRSLXk`9$!cQ,IpjKjXiB$cKH!a6a8f445
%Fs!3@%#JoF,gN`gQbRWQ(C,Vfp&40^`Z?[i"F.'A)Y^(h^pgtE>DC+KHX&3k^I5XfJ@*J-bQW7O2fI_u78RE/+hl1De46Hkc+cVN
%/cU!"]PU?M0j+igCo#3?P`b>/YLX,`*i[$%M?J4r"<nAF`2H(lf<jS8/d.\Z^'%eh[:J+I$<9(i[F4B[0-cl?Li$]*[0<'^l8e`:
%HQ\-iT1#KU3bS6[7"IHZV,TB&*f.O$F/Zipe.o`_PrP?*q<&701i>%)Q&0[Zd6"0H@aK6']))6sEKd<8Q%KT[kbLAm)u8sQIQhKm
%N,OAo@<WTP;%1a3.=Oo-G^%[d,\NS%7Y;khkc?Tu7Lc(GZNAtC&fINsNa?P)gdF,*cOdAi*7:1T19'e3qdX2u"`(&OU()4j3f*kD
%pc[Wa_WQeNFT,M%0#r#ZW$J8p$pq^mVN<;rn$_.ids;!4o15B%&=MTgc#BgN@0RXYGOdKV`GoOdR4jc!B*V`4F)iW4YrFIF)CVlu
%8lj&!7G@:t!9?dS']^Ac[I?9,/Td#7a(fGmq%CSUqk/7To$TK260$-_GPQW)OdmRR7pRcXY7;DhqmC$D+^<X%aiQ!$/d&u%L4O<b
%o1Zkg6b;q=Ng8SW4&ISPNf8Z/Q23kg.hoApUV3k/`]t]Z+\pFQ6[8uJ>=nAX;N*LlgL;mC-e&2YL%umR1Fo:=YVO0$&mYYo,:V0V
%T#a&%SPc*qB:4cR0U)<7oF*Lmcb[`^lo%0-i[?:nqHB*R&SN3"pVeDVI8h6<EgFISiCGV>kKWXuC@#R_M';,.-9-XfWYmInr7c5;
%MA9d2@;;*&c++ZePBFuJF(,Sp!bdOq(+lFVh46W6+E21c"b;_iO9ROBQ9si]c,&F)kNNeIs2o)^#,'!N7$jdb9^Lff7"2^.`-si?
%^=OP.@&.t87qYs(N01a_U.S*))m-Ksn?dY$I#d&b<>NZ5GU:@X9Rb,dqRdpIo/op!,s+BXgNIF'ZrM!:pK^$FB,,4Nc9@.;>,lC!
%TD1(RFFAET*s_0\nSnUG&mMh"Q9@LsC<K5@$W;E,YR0cl#=utu5^$i8^bqD.(@T&.)-k!+[Ug/-Nj,`KQ<q3R(O,"^nf!b\,VB6@
%63rl5?Yc`%IO\nI\Qt/eLCIK^<2,RZklKLIOQ2/l0eKu?1kpE-?i?F?"';FH3V;IIHaTJJE0e01AO_>Rj-!L@BMbt@3tX"U[#u5N
%/=lfPOL(J7miP`[)3H'"8<TJRLL_ekITZ"UDP>lPqm:`>B>tD%W@uquE:JB3DOnRuW;i176C-3u;"cs$!2o0cBfIb=&EhCW8=J^L
%^VDM%#"gV06$2=s$Oice5r!@0.p=^kWLT2]cV-gu`):o'_C%"#ahBcfc,%u_N%Vngf]_A5eB7>"=m^K;LAMMRMgUO5eX%k&#,JLK
%FZ=aj^?`nT'%LBhb![;&P$-aj"lSOC`2W\J3O7%5AO).:4NkOS?*6eH/,G..S@*1:9=V&t[EOislBg9-erKJ\R:@'Q0AOIi7)dKI
%=C@[m<<`skPLc)4*D4UB$7LESVI,hp_\g@#UCj&Pq^TN[S`q#QPPVdrfB&F95h!b8=QDpFmO'q63pq$N-nl\)?99p0$Q%iI8]Q,m
%hN*R8s*e42\$8\?5R:KS/Q^?CI(amG0.Qt=!c>$XC&[(:aCjpkr=o25k=(.c4+Q",o5<=o%8bY*MFR7[G:oN-b$?K`l:Lkfn&G<1
%n\RI0Tu?hc.A[Z0+LBh:/A(_tH#\R)8ja5o1\W`oagofsQlj>"3N&nP1!U3'lJ/Bo=8W.gR?bfMCW-Of)K[Hh5gcT-:[7N-]hIAT
%:7"tRk&A;+aEF5WnKsODjP7#F'7BfNIZVmPZF9"*@D'Te,24ufe!U%I=oEo+?MVqE5qWr^aUP(.[33"i93DNk&c57FPq2keMU/;N
%i_"6L1mb';mZ',6V(."UU^9[qq\%2eO.eJ7COkDL<4d1ob+6EMI3jodR=Ph;rJ]_(c@V"\]&@?Ph`[jEipmHl0d7:Mhn$%=3f\l#
%P-g^FfH^AZqm*>Ca':'LgWJAB-H:qem.6D%;QHFlJ2R;N/;C!V..Jle2Kg1C;9qprQKj@lY&'C0[YY*!MTb$/n-YC`Kns>H/A-X-
%j_cY#]G@26(E1=@Xo[;fj1:(bk]Ab9^\'Ha/_A!%U[cZ9._.9A.&-9%[\ZIEC3V)G6s&)D.EuWYr`4$tLl+gDWp<[<km$\YIfB*'
%4Md)\0]dcGZb;cX.`npuLHt.I[le*j??pLP5c5T[4tGbkZO.PGj7uB7gGb0-8rrQ_cZjV=8Y5=42710aX471eT#0W=RD[!hE/YED
%29Hn2k6--8'5ZEkC$F&L7("R*?O'`pc#kn;.JqZ;h76O`EI9^dBlLlln!uO^=h"/TX4/Z%4pikDhoH[bW^VnHmZgZ'k9WKB3a&3>
%h'q3<#"MGeb.8'")\W$kAnX7OIqFAma,5ciY5"F0!sEf5RR-]<$TC,'!FEY)3^XjSa%;W%pUU:;jjb\p><[c-m)%t3TR)B&q_W=&
%j?e<(mFA[&/hI:EQYc^^QN]g!M:4gT(3PlN]F86;`kI=U,98n=8D1WLeB0c)-#]iq<Cm[K^LUqo.qKE#PA><;7S9hcFE5t+3u<O_
%9YfIu.WZl#YdCr&9j(IUgVjsh<]U6C-CGm7^0N[/,18lRR_<+GS+Ts0s86)"hjl<^D>-)hMj/ddL"\n*`*(=&b;T9g-$Q;D3-;Xq
%#J$@spOc^-&a)S:R1O7Os2(1!k^J6G=p#MQpdhK-2j]EfMdM4hiG]q\Dg'ms@DU/gq0@(+G:Si_Q,L1U.!Z`l*5/NGgP?_oFB:;u
%\VQ'`rN@3R$h9j[rS,Y9!pM8E<`?hZ>FcOCo0$9bprn\+V'KT-1M=%`lQ@Qko`n:p@?a4WlrSrcS2Nn&fp?;O586kJU>i\gR`D8Z
%%0MSe458@tZb%As,C+g\Z6[VaPQ8EOO:pB8<`^+1O,4#'r9G?p;]"O@?>Eh\g$WnU\qRl2OEX_],1cN8EiDgkP%Fp;m?03'M`00"
%2VOWBqYOOQA*Xa]R-Ub!!>:L(<Y7@g\+B1#FVVV@GQg0=q#,0r'=?BZ_SA\RnDF,oU2qGmN2"-cEoC]df><8X/M@!UVLuKU:Y-"U
%]?6g@Gc7uaAssOo+_S#oZY`BpH"dKpq1;ee.d]Ep,APaZ).KSV\gbVI?Hn+N'h;:snb7ENPD$jZ?c8,`ECY45\@kK")Z.&u/u.2G
%XsmCo=!]qfo57p%@#cIB$1(ukF/>qV,tL)B]fM;&"jcu*m*siNF1rpf#dq#(d*5rrG4GPY^X-61P9QoldcYmVQNr"V^=H_Q%b\4!
%'gY5#n`J[4/s+pjcuX#(-Qil!lc@F,HT9tD!k/Z@*=A66K8[=ID6)@7g$]]$p!p\c_i*R7elhrqoDetm2f,ekkB1?sE?'m8U0Of3
%g1i,'I*4ELX3kF#lFtYH@i#Q&nYWpsH97='&1G^_DQEKuq=j8M+"m#0E%?O1mD0/p-Ab?Q#LV(VKA$QeX*mATX&J7(W/m\;&`(_`
%O5V"#n@+Xmrn]i[I3#@H<bQhe[2^#@H%WuM^F$1e7U<0O>r)bi6Hd-XJn%Hc3O<J#*O)-9B'Y_;p:",<C\SG+V<IT8K,n)[DR30l
%'-Ws!BtsGd+BEEYc&d]O7<GH3pO?P-XI?nWX#Vd!F>ZT..rYf8>2Jh<ggO]mp"X(&*rQ^UBuPF@BtN>W7Wq-49eLd<286-1M"B*U
%M-,82PVV>+Ml9C!B?030'Bj7h!_03c8tU"d1<)r4INTP6P!>8g;%LB,pC/hf"r[#X^C=8H[]u+j>kqQ1,-+o'3Jes*i\#KDA[?.L
%,,K9B*igJ>Jn*#56DT[riTR>Fl?*:pS8d0XS4%EW*Zo`gji`_Y+nh,f115H9pLpkEJqK[F!lMi\b&d$S)i8\8j:UP>c8V`Ep:`"J
%i/)Af<6$O+K/J6CKRL[fpT`H<!S^<2Cc,U#GgaK%'9.6?p;3WtKp+ZHY"tSa+\g=OJD#B#GGO?hX(r3>WbUPHkgUaF%+&>W&TpE-
%:?La,rmk3oSM$l(+9,FYDr`4jeN;D!YCj8MiVXBMp+Cg['"AI'XVc'AStGaeIhI@X-=WnARbHY5,51,tb:DguX;ojUjeN.V^2qoZ
%Qblb#_7F0HcAfkNIfA]Qm@'_a;t@@,-0ds`]3)Rl,3"W[h)E0S^E?b8O1[Li>jf9cZ1$r?4g2:D!"/h:^J+'5m,jB9LomMs[j'\<
%f2+4PaPC4+ilkEahc@&fiI610:[<(E(-ZSqYUJ:033Bbd]9fh/mV.$Ec2E5=PTXEaWtsjk>PGX$oOZk(^eKlP`SBfP77#:eaG'Vp
%n7_<]TYP*j_s.r"4>2_`Z2,X&gU'!OjR-s42FZ54QH'm@=BoXB;Ee:>RVQpX]9r*"b*oDt7d8O.9Pq"GPI")=-;a'ra">;'GaX*r
%U=.$4)Y'=NOl^Nj'1Pifc!cC3/Io&_fD>1lY$DdOgVq2uCThQ@h@J(Y)1H:@#JQn,"6+'`Q!@&Y10(RqV1[=iMLoT`ha/=pR5'T3
%b0%2Y3s/r36/e5nNPAiNCj)#,]_Y$49/OCYi+($u3+g,LZT(?YAD^Z1WcZmFp,9N5^JpG'c<P?H=n:'S?f;:`?pBHj[VTb0nRcP4
%p?Z@h<^2u=.]ao"ceT3RPhE-n7h:O:Yl(p^5nQF^&6/rW%NC;.+DqrM94pc>9693ED"FRGW]WVKb"GV(l6;J<]'cJQH,b-;K1_KS
%Q^[/ff*PEL4VMo5iH^85h)$?7s2+r7eKuBSa3XXT1\<tBk^KZaN\?Ne.WAWTj'o=.)ZG:Ih6#=Qa_R<ha8O>0*p)rlNAHN#<c=p'
%=2"20/?R'_&5q.1+GR*'H6(TV&./!pZ0G*/5p&'F:EO(8E7tXIQ%sn>dhlCc?ThCElePUu:NbEbW%3$Pa4\QYHC03=%q7W$XO_%[
%W[M4A6`NWAq<CP:A"i(Dn-euUPGZV`$3l;P9(ilqG4iUF^n/V:NL^#W(k!f1GjQ!cMlG*!h<cS:@Bpb4Zg[lo9dsGhrHJ\Vp!3\k
%CB%N].)L!.-l*p7"1Bk%s3_H6fcko0OF-UM%"mUr`]`uM`'7p]Ii^4A@$a<K4eaYH^.Z8930%=eJpn+uF5V]l,7,^&odu";ks^0-
%=QGk`-s=g5R:Me[K:(<8mN<]FCCGcW&JdMPXV4K9HlG*Y!N!9uD+[sLj$b"-Fm]B/7j1-iCB26@JP;_/K;ns8qlo8H0+Z:^$BnBd
%f0h.mde@aop0Skt-pGuXkT!TH%M3l]56Ru%Bp:=PHUBnL!2WpXrGl0m_;^qLeP=,%)uE0f3;7s6g_/'s@]pu&IF15"GAra%R(FB8
%<&&!&KSnMZr:o@`,WV<p"o7qCs&Q+gk.53al6.Wd@!a8*#'oW:AG2)k@N[ZEQS(,m+D0USS+u%&C^(.dqSNu5DJpS]I=QqepaISQ
%1[$C)N<.]'.u7nW7_>-V]>N#@C1L]-$A'6=8s6N*E"XIG82TBXZM@Wi`?3:CmQB@f,](<NF+#>Ag^bFnMg$<_q\aN2M$G_p[pjI8
%?:A\*1]nh<iuDHFJt5&H(='?2)`Nlr()_s73/H>31_4iL4`/%;%R'3!!#WP+UBZOOO;Pm9iW0BK@RB/:XkE83pd6:<e3r*3XHudI
%5T:*&4H8q(m05_K4H56jSpCmNAL$@NVN[[,k^sr'^YsVMR\5:!'@(9Q6Sa`,@@tN3-i.P4`$N@_N(Y,2LRf_S6#P.bP(>to@M)Rf
%7H_K>iWee/?Ri>aYc-SgUg7*)K4*LXVBO_d"45('Ca)@<R0,jK65"NPhY:qe0..o`-3DlgNLA24hLot;6SP"3p`sph0l#S?/ZKA:
%BX8AOFDrL$i::S0enRJ-:(^FR$@oceo&Y=G!aB%@YAm,r9XmdUnL,Z6Ir<,6<q)+O9_RrdiKo5-$Q5%IV3j(>oF@K"M.l8+K_:;g
%"?LHlqF"^lluNFhaE`*pJf%&`nR[qMEWGH3.==@#>s+L2NsaU#NMIG6iZ[>_mb>I#YQq]+_Z4Y"VZ&t?%m\p^!Ga@G2FYX,"22L!
%<I%tC.I%-.^d6M(nA#X%1Ph;uY<+l$U[_3bh132kNrYjW\H`+)&2UUtK=D9io^Yp)H@Q.35;WZ>,C(,KS7o0P1@cQmNE"1j+MQc^
%gW's0LAGFF*.l#R+;_Z/98,UfWINh_Q.Tn8ms/*$<GF!K`)\K2@:`XUpiX*4oLoQe)Yl%q=rH*$s5!_FDuSb2r8[8Grl78&rI=[!
%s6sCpoZR8ZOT#u@bT4R/r9I_hc+j;!s75pan9;YFX2"SU^\I?Z^OH-ns7DBP!MBAW?iGi@_uJurs)2QfZb]<0/-"Q-8Nf3/5\,sm
%BrQk:E7YE44VALYoo99fYYi3l+J1l62?.bu2\<G[N2YCU.#KelpV(bje_(41IJL=Xp(,*`U:Bfja/qT4Ti`aThsUP,k">h$;%X<_
%U)gpP7caW#@MhnM,"cUK^RZ`8Ch=d==@/NMKGt-7c$?7M93X:d6XdOe_8gJ9YYIo76l#QbOd(^>NrQij=In?(O7@qH&Ur0%&g6a7
%e)<>Jla&=V&m"tka-YJm%.Wq$#9=e4:!VeYl*WdX#!$FFI/1YX']eHYn9I7>:S$G>PL8j_Fb6#DH2]k^c[4]bJ)^HN4h5mq^7Hl.
%h=&[VYM5_6kAHBRaMB2&+]:5pM0M0uejCI<Oj=j73Pj<5IM8so5U5Jm0o\`g&$\4D5c!I2WB$)/=gS:T+U^!nU?DKTb07s3nj-kP
%6NW$1&#Cp%;9(afh%@2jK!atf!.d!?LU8BN:!N7)?NE6(g5uqLZle0Had9Q41O85Gb0VXDINtPU![R&F.nDk5Jd:E5CE;p!6%7Cq
%O"I>W$,pYOQ'&b2]?eXmgCYH<K@i#k\mc7;%P?t91PpBpoB?7_j^?K@GVd.u\&TXebo,Ckc]rY>f9Q<11Vc#3gopSOQcOTNFBQba
%a>nSom.V13khPd>O@Cn\H,;e[4d.PVqSsY5:D<V^M]U&[pMa*OniL0\p%@)%*B@]Ukr'ei0"QosYO_69'C"stnFKZcqai!F0YQN4
%aaP`+(d_[P4ct!ARcTn!06_P/+aNd-+hnR71ganbZW9RjWpJtZ86\Ba,LcAZ`F6:3X,ktm4LlOe")oFU:84:s]m>*6BCHT/%`oT`
%?[hK;jOqRr*hP+HkQUt]1<:E?#5O*gcF.jZN9%:)S.5"qMVoQr$#!Ci'%+_@`5b)t'<^(tJ,H.8p)a2nMFij%;h_r\aB8<PH.5t<
%*EBYV(JX\#=Q119R]=#HF\]Ia1*T^C?[RAJb(42DiB]jLE0I?)b&r2qO)*OOI(mY\3J4tlF[uk2U,@[\B##b8bE=[IL4UCn8:ibs
%a;=;!M7M<E)QDt0O(L4\lLN1h%LS#J=RQbakC[?Ehkg3E^>YGER`)Vo>f1+m`%m'qX*Yh>1[;@m)l7<N$,mj*j4`V=5o$9$%lL5q
%'s7OreRXeP?!EURIjTJ71N6[b!EG.-G9E?4d!s]L)J2t,d0i#McOODSW_*gIeaW8Dr?e*S^&j+O`^HQ?a5`**_q@-<SVr"2=-@lX
%-'"MHMt&XlDdl0%!"tg`AU2Api1WEq601_aD]Q4l@T-r*f:'kb?;AlJAX')g#EW970=MVi9pGE#8,BB)W$$#C"hRsm4F"n"Rr?&R
%I+Zp4?>o_a6,At$=A4XeS\T.f^)o9*_M>pfBp[q0hLGLq*mW29lupBL@OB&d,6V$Ii.-V/CdqDNndf3F=sV3uK.\2%WlKIJ>I=!X
%Dd2&j/_a1CQZH18>Y?gD!16L/24DmU(qh6Tn+3LTe#_!_Bc\cqIHi!@HAKq]5pH%3"JLm^K#N$X3Ik"Gc<q?Ba?Abt7?)Otcnp(+
%F]*R-]V>IaKeK-0[6^TKI=7bqpY[DKFA_'U09c!!gM.\*kkMgjpa9fik:^-P>""+oIYjf4c=G\A`F*0)Es8c9`r1b<M^i:P:.'Hg
%K&"s?qDm^=:jigP6K)#IpIN+2@RMcneU;+]]r]*p0pmdUq7,RRH2YB5GGnW=>f,g3k)Mp_&P52DTK)X.b%.d43>E#2@ako17+<B(
%4iDc4DlV,NJjhc>6W-<r&.r]Q3,&B"9d70Xdm5&!bmnb.H'=W:#'d,Aqqj\u<-Si`2)ZESr`Q2o*F=n$6aJZFE\iPlfh$#%?QOAm
%=p%0\9`/#Y1^5-A4iBYI?)IVEj'5%6!:[4JTFB&C?([-T6lY@[:1Ei3$t;%q2@D94!tK?TTuQ4[64_FAMTP)P)C[++iEcQ/bIf`6
%`dDN-Pt<E%a#N6+k7VELeKJsJ4ao#p$rE.+C0D@jZ8l*F@^m-KEAZHbT'tNF<0VsY2;];6HB5Y84OsL97RX5ec\K$?3_`o5(q#o]
%?45?[5RDk70p.GA\.HV,e*H9ih$Kh'["99GSV!Ao?:\N^SN=N63-?Vjg%p!Z8r[M5e=Xsf"#b<4cqosu1dE%GK34PH_u\/%!QNll
%#3\'":)&QS'fsZ]ZrgTi=Jm$BFXOSiL@2>GFt9\QaRE@TKp>LTTILW\EYQTVGeDme6tSc*e.bq!g*WKV/IWO_#DSi_b@Qb'K=Gng
%%UulFX7k7tjs9jI:M*La_J3Tm;9ofr*W!3&hBi6b+bP^.mR7?mhbq(FcL;5h7b[.;DA\59a<#N06HJH<rM@slHGE^K?`p$;PMjq&
%1kVJ^LiP/>5p2f-4EXtqMubIcg6h:IjrZ6j>gG;U=sp.W&h4.^(S6I0$d?AV7M(_Y-"E\J@BU;+716p(SJ#0>FoA!7#.:U$ng1OO
%XVgAf1dk!KE!LsXFpM/M6_L1#RGV$pQl".SQ[01q4Y4)qhk%\,/a"n(D3.`iQcH)6L#a-[4"f^f%+%jbdqn'5o3BGgJ[JrKI"n1r
%<S5h+6mVOsd[HL1,(,lMes-KM>aaFY@gMRAN]?Oe\S%H2'Ef$..An<X;h^#=SY&0mh8@ocID:m;PP"n[!XG'2c;qFq,W7!9KpS1p
%*d">pri(.e3<3<OXn06`g@SmcNB##l]ipRed_W)W+6#TY((N)SO^lm)+4LaK=^%-+a9YaH*aF(c;>N`9:NZjPDjnH%%$nm6%;JdL
%k^ocA@Zkfr<=AYK)A]@n`#]^m*FpRP71M%t^++(`6ZtZ?)AV+%SmRT@9peIc:&]=1ZL@^jgY`$fg1+KJ^i")A*j9+_E<p#lOTc&Q
%=1VY3i@ci1P4U&NHaJI_+&o-Je_=ObZm68qN#LZDIh*KAfC^G7>7eiJX=,Uh"T?Z7SLRe:6bct`[4G`DO;Q"iLj`)LF_Ld1f7/NJ
%NQ]JDV+45p'sH/_>(4+>n2GC<JELUJ&JN:`g;cT_njR/BfW9hnI6`_R3jlDHBDD8q6LId7JS6+<`+tRkj'ga09pYsugsPO`CZ`>@
%3$);I03dSrWP=W@n@['(`ZO:"_`E]_b1K@5U0PCK!(8Eef=QDA.hAmlg+-L#BI85D`*ktYl#b1'O/'(?QK,@"<r=Q()`!a:LMt2g
%T"eVF9UE'P)<=7]&T)Dg=!$F%XmE8[+c+Q]*f6`^dXT\CMo%PZkJ]FM\/sYZXA5[#5kK23WQJju_8LZZ=SB4V"l[cqjU+5>4lL36
%fd>/3T+6Oc[Sg2'_5NrEANQ+<bS!cXU%ik=oV]uSAMb._]pHci<=bI'V4Fd2>9Z9/G%PI6j"F\ui*`P&WDYqABa5DtpM&)G7</,J
%lVVD!a%MTf77ppCVhKMq?5lf<0upgpgVir1Vug#2ouAS5g+0,R+-3<TH?@^!7ol94X`V_W=@[(F4ql1(DIPf^,6ni[<5\m9Ud*0j
%d3!Q3:KhY'6i>La^?]B#n$0R]n/uQI:Q_E#I?;&WZ0m"H9^3sje7A;D:Df.nb^(@)O1R-P(*+aRp71"e9;j@<q%OsTK_YlA_[Zqh
%hG2uG[l)+tE9I%.hM)/,oo$Qe/sTJ<X>,/B:A"kL!PXLlW9'.D"-@>3M11@+6`V$WSUQ^VhFC/>ol`d6b,>6%^&95OJ%On#MG&g"
%+^\#;!3)SDe<ZVpo.\*%1<90Hfa:X^V`\fHS4)OjPfRL*j,E!(L*S6VkP56CNr%Ku%F=Viam6qAeT_YgH?9qBqu[l`2P,e/XqH.G
%Hgdb@3!iV/LUd'Im4Mc4l",*F_U$J+g!#3ZH`hEbbRM;bqPW`FT,@Ym`N/.qod!&`F7MU\T,q?eM4VT1&'$,*+5VhFgO)2V:G_dJ
%<*nfgT((>^3NZ12'//-$&(f@fL#^D`h3D^+1Olql:G_d&Vt6/=H>gL.0"9NOjK(6c[A/3I16dLu"mr&ASFYThkTM#XM%c=!%S;2s
%l'L%`qelBtp#\I&352q(WC6`5+\.C^kK=uda;X-K]&tsFG#?5nT!#i*rN+/<=61tFGO*?nHi1<#'R.-@?YAjA\+$Ek>up,,_'c'.
%qBA'tmRg0)1k*dU*u8<7p;"#4)>mN5bh#fEp,tXDF=cl8naJ77pH$AkXN'HYlX*D*!Rk$\`6.nm^/'k)j'[r/QU-)#%_(iYQIOd;
%M]s5F>55V1'0-ku/7pfl\EMi0SZg02jXTUZD53$&oCDcCn!]3#3/KsbUhP=8*5*:5lk"7R+&s'a@:KdVE<7*707/rgLA9CS%oLTF
%?GNHtK1*[g0$TB-ge)iIcUPHkQ,Hi+0[>e&Gb_78q.)ER)nW+IG?MJ[%/<C3L=j"p"P#!>/a'PT8sJXb$+TA;AJX.)DE$-Y(Z>p_
%/s":iB.jj#PJ5kQ@u/m8$Q>'!'R!;<.i,B;>kRUkZ.\"...'#)gAL'KjYd.36Q:/S.^`?sch2BJaJIHXHPh#EgD"kP=W=_(%I-es
%DX>/(:LK;pBj6&Z#?u]>Tj4d(Ah1hj(Y6bNr5AP>(Xo;Vlg][iT!eAn':ur;M'?\KRU[_VKn[2-&S?X4rH\G9Dl&&%%T(eDq'C(>
%/O-%=i%?^PEqOAQfV>:dU%8FBq/S`%(>nf=SYM)+!D`3aIN6`B,K\KK]ZTEV?#fQoV<U>pm`D^;PF[sRm@]bpaOJ.ESr9tp%-X[8
%[t`AHZoR9QqL^r4TG,*'n_s_H?s3Z&!bJG`3c]Zh1\/fh/=_X3Ye.*i%j:#6WGW-M70GM8#TiV@7U;GT8=#dYLq,I_D:Z+p['fGF
%_1th\oXrcN]?NoNpi>G8Obf&<R&e*eZMpor*T&X!LM(R1gZ#o0OF"VE2<Am`:@ds;DJ\NWrn-W*qMFlR3tP5lYPFO+C#aPh`\EKD
%@*\cDnfPe)eeMIB3)GUWp\[(fbE)VpDk]gu0I!@:f%Hj\7=a2ad?jgLZ8B4Wchg"WU*dQQB)gqYFlPC&irl!gSuR@Q)rrA1;s2gs
%p:2cI_g,'II_L:^:3PLNl,'_r#q#6+\*'s6lfXnP\UsG>'D"!:hoPO$WOM\,`,5$eZeW-H(gk&WM-G3g92AdULLmb;c\(e3h:M61
%]O(NfEIZi8OY,3:T?fNi#/t/"O$k"K;;Ca++oV"`g_]i0L2^>\_]50lpH#RORMfF)0:0d@1Yg-miq)Qh5I'Pp3BUk8ZiB!d0`)rK
%gX7cNq0rV$-Yb4a+adiU!*c@,q"ug\47/E%M>bqN1AY<0F+-a*J!<paYMYFOOPcqU7)EU67Eg.94SGm>+/Nq,>83;JF^GCLXc*a3
%kk1u!.#'+L=T,2?5ER&.phf^NYN0V*.:8gL>N=b=E;_cUc*(Y]3^;!q.o3I#ETp,<XMV2%[(YW^]dE;@]0+4h_u@U&H,.ria*ji8
%OR(,r=6dCt-$-Yhm5bb%*NL7@G2/^WXLZbLJ6.>-r\'E.kj$PWn?CS2"jN$pX4#O+R`*:9%q:sO8a4E0O%_F.b1(aaph=$eSnL2'
%:*Oi.AP.+M::iRT[T8pb=m%EsS1@f#Zd]7F^J\c]JB?uPW?NcL3.@qdg3A(]k*7"+W*80h$D89@BcU#JI:^2E5m-&4$q%dMnE9V'
%i-25AKTEA?=Gj[[GL+HBGB.0,G;N`g7i7)\b4>c`7kl)0q:?Z_2533W#69l[Z0Q6A+.c)^5.$*Qf5RB+j&"hHVi0+j7:JhkPD\du
%*^K8<4s%G741>G1P"1K=OPiAUp<d+l]+^>+OTW5,rnk!M-Z.1X-gQ7j:[@tOgXCIBV!RHdnuN(s$">U^]PpJ7rHtDM/!D\ScQV/,
%f,4PWcY.!?r%'NtZTra:Vsm@?#m!V<o[+[8qLBJH54&IXg]CGL?Nr@Ra#B0VB,Lqfld$$='KnMP6TZ8."9FZ4(Zb)V'/:n_a$K'=
%(:!"8FFLQHpQ?@Q)0>HL:V5r5N0@ZkZ*oA[H&tZVVS,%/K=6,HM26=Z]!<Z$_A:eR'UN@H$ubC9N._=[&W+UMaAM!qqq:,TVe$di
%-j_WrFoFUf2jmr1"Ec#`!V@F>1H$d>3Z9Au2]8/,X\AR</d+)qLB]`9CiFKTg1iN#H.9k@r7$.U-jNOTg?RDdZ$DCG-aG[e/brAD
%F#S60EIA+Ko13D]rn-1,?YO_r5&0YJ,f1RJ1@I]/MGA$'_H9)4CD2Mb'8(13C_baQlg"Mbi+urm&[/=*Z).=cch!A/0Pa)-^):,j
%)d'VR>;iip2J`;AH"dN@$#^Usc$<TN0OKY`JM,n*jooF*(U4U"19bR(FGr-TF#0h4+[@)0=!_A7*cEoS<5#$'pFb5LZn4qg0GVI;
%6&W<baNl0i;<6tU"f<UOkh_+\.O'<^H@!"CbbbBr"RuV+7Qdkrm8)bZ+_hASFjSfcGZKA/V(4^/<`#5.5d>)4!.F=bO&6XkD7e\\
%>`qt,4!!Ym)=D8"Au6:3G9BMRJ@ML,@a<M;:I`n9q>>[">N3]3]a:ki$AA0i9`o)6e(7fk%3QQ`(qHS^1DE]ZYhYeCT6<>j?PrJl
%ZEO2QUNCEH2XcKM7#H@(c=4YQqs4"k$.@Y8SJ[b;$H)VNAcio<$YM1:HHAZ*K?a1Y2)&6#N!`B):hg2iNk>VDGW:+0Da[krLss^#
%5nnMjZ%4aIk1(O(ku\$uaZH0fVP3,&4@BSX3jMBi[J4bmScR@-Tc)opZG+!pEt[3oL>P4<0B3n4&",#uJh.0aO9ok_U.!D%Uk,04
%X/e<]D6Z7P'1C>kKKCt+H\R)A"7F;6<0WP[JDE$&D,#q_ii;Fl':"pFKdTJX4>+*fJERD_a+L!4au_1_md`[d6fV97g7mDD4I/Pu
%@QG&FKGuUK"TJkBbUQJ]!nkCtX-M&Y.21N(lm;Gp5n$:nEMo?08F5BWd"7h,I16`&bTNpD3f.(,,Xm'%BrPk6:1>?4O=6@eKW;Os
%AD(Q?Y>j1C8)I3Z-.J6Yh*4AJUP.b1#(_d3<tCBs>NE>uDo_JbhG3(EUemY19G0+3I%K#\1l,^Rc*m!%%)t?<9"*\p];8=?n2f.N
%rU$8$"VtcHF0PI"5:d$1*W,>*U[&#;m,t,2IpSN7i>LK7rsK0O,!ok@ClbbuB^!Znn>$:CC0GA=43""^+L^8kQ?R+rpbr"gV-2'E
%F2'BH2`#-*=b_ZiFm\5R(qr3;gH('UJW,"+l00&9b;ilOM3sXUM\^UW?[F$/CI/o*/W"n^5*\0qGJ4J2LAP$SBN$r<d.rRtci?q'
%cS[#n'00)nX(N/J&A.AL+RUIeE;Ydb)2q=0\ca&*3\7m9">Lm-;N'/t(S7GC'sUo,B8.C_"T5Q;]EZ`H5<"Fmac7m?']JsTCjt$R
%:uIu+4I`Ze'=X(e:o#+R+nVY&b*hnhmK&D,@Wm+$q=H:5%Rm)l,/NX6)._Y@-N2R2(3SK$OiAJ1nFEdTD)=T/L/YTmjN&5BgrPF7
%&@q)LO!T6p5#iSFY&B*^<(q'nCnGBh)8;2,C*EI1OpB/OPN`kLno]d6qr?G#:N+:$s8+`r]j9/m%[aRY4Mma3O4djoj\ldfV8j$6
%JfLsoOJ@)_"s(n+1[$<55Co<k]%u#*6h%,]k36j`os],Mnb1&<3SkU^9`nVC[Q0XMdr+Q`D'p!PSHj]Fr#pIAZ";lZ'?TQJ+'Mok
%&SL8G<MR19L_4:t+o'#/oiHTV&19.I@Kp\#@^^BpYR^IJ"/(hjXV8)-&Wh'(%j-[]7`YKo*77eW%a)R1NrdV<B2Y#=S0EcQX\aUo
%W"D=K=f_:!*mS0QXSd'jQ3N;AFaorJ<7\/&Tlo+JW:oRHd)@_LrcT+k1ud`u_!o4Ubc?Eq+:i36[)*GUZB<bNZ(H:*qngkdJ7%?j
%iKm>nlQsh$jth\3bZ5F/a)&EJMLCV9&Ufi;[rnZ//c/Aj\e]sij-,*:#^,F8e\^I*#J'AZip7(XH*aFe`,WqC"tDT_2*Be\dn:&u
%Xl\U(qgCkXUB-R:Xkfr+gWR1p-#EhjQ\pU2>)1M2d92XaB;`-K`*sGh%E=?+]p8$;I.BDQodp?F)B1d=1&\b%oVDc=X42]VSSG>u
%g,t!Zj)\gE)#s)hOc+`J%IB)[:)L@::T><i,>h8IMpa3g[,GY/P(HeK'&%!T1alNs)Cg$)j&AqA)LsF;@^WNPK9-F[4i,M<=j7>o
%*#d7o(^o)N3(q\7\$@il5)L@@[%k@a-s.-%;XlN2r>Ts-<1>@mWGb"U.Q.emgnMEN/osqK!kOMS@*IoCT_,gH=eg<FlRg#kZ4rJh
%OB,<;AnsRL?!nqDB!2U527j%u,E,#^elD)N6qLGSQZfE4BTM#6aB!@95cOm+[1*@M?a9\Ok5jjcenk&"m2+RH/;3L%$%'Z5%o*#C
%\$t8/)>25_DJ+=.Y$2qi8KqqZbFd[Q!US,>GiJ2NjGOl[0j_g0q>P2tm-Fsb,5(\Y?-l<::eAU(p-*Bb8aHh[33%V"#:K^ChbLj'
%h>MN/0>lVJM/?N#N2>:t`-3QU&VYY@FUbY,m9L1!Jhc##odp^@Uao==>;'cBg2(^WR"ZiFA>;0?]io5EqPgUi^6mPs^N7lY#j]dm
%Lk0GSJ#.),Au3L^_WgJW.0e=RGPjWfBD[96hCAEhOu%^pmWNp:p=3)o""[_p!p&A<SO_di`p]PcXb!RS6^m?K@>8/?G#dU?);8*L
%`joPkn/b+*H>qJ85<2e4%jd7mi[%^]@=-[&%ZSkjp?>\YqrTgfZ6QaF9*da6iI+,lcXP3rN.VB.(Qn_$1%EBg'E5+Q>D?)6QT<-Z
%&*/W5&"N)as8=J0nu)MlU>QndY"Qpi-&i>Ln8S_t6deFLI/E$_ID\.S!Rj3cMNm/G_j=pbH]6B"U_g=olZ&8?JWZ%e)uf:2+6X47
%^Vb\\'!Ldt!f1!^_guEF4Z(DK8d[43]$9s<Oor$73[bud!pPWtK31D'MIAng^_BF+:/.Tu(4?`=L/I\[))S"VTJ+2K9_=G#Yo4W]
%%rss'.u+IQmJ=(9al%4i4XFFhEk]R,GYgD8[`F_*!W>^+W.9'uE<eYl0ONC0+t3d7"@dqD*%BMA<DE`ab#[C$Wk.i!Oe`c5jS7=R
%%/+WoJTNSRf55EL52em1I.0L<Br&]fZcWE=Vd?uVXX1WY1$8#P_u@QPof*Sl8Zn=F(YD$VdCB@djM+4&831VY@'@I8S_PD&J:F-V
%,A#'A=D<?L2<6g&lN^c?fQf8`oqBM5W[S1OX>LHmX^/=(c>hL`higng&>SK`-E82&/^/u7VM.26]5d3KN=UYbGb(e!=.FcOU6%!G
%[63pENHUE0!<DKB,*6bGN.G")-Ync!e?$R3M;TP"?.n/`Jam-q?V+2_-)>'nSu"q7*k-q-TV$).9oSRFAE"UtD"fj6n/U5n0s3VN
%""a^HYcAof9r*"<Jch\or_Q:ep!?MbX0$JJBG]1:<i-u`7l1]+bc+XgQr<_F%Ph:R$:R9ELeTFQqTF(OT-Jkecp(L0E_M`*0RC]:
%(I:kirW[aC-R!#YI&o:fI6-Z!&^EAW!LWj8Ei;,i'tklH]/>D"9cChj<%uS$bt=j?+S^NuffcboUEOkAD'5F7VLgaFY9nu?1.5He
%$RrE*,('MRYTaPq]^&:a(=[B[M9I(!rm,Mi$8U%r%WQhDm3.HF_U9)N%9++MFUmr4,^WrXKgD-RU9c7aF"B@@^.h0KbRVfJIQhqg
%bMQS:W/YFLH?Z9u]I=H:5&Nq>J%pc$YGa3;s(5m@9_ime>5F;:5]@#bE6\MHjS59[GCPB>7VC.h_)(1Bc]%\hg(i,Xq^0Ch^Oe8_
%s4ijnd-Y'eS^"cqLaP!t"EIcKhFdF-K23o>AtT^C-ei<^@N(aF5JI*N@iI0iUAaq5iXD,rV2Wc=Y[nK")&[(p0g@ai%tQqYU+^>=
%fTqtBEM-*De.[Rt.X9\:2NlHYk1mlBmQa"BD,f'R.`b=e=KtdJ\pJGB8C6AMpHn]89qArAa5;+&S3Vs0:$i6@e$3*g_pic)7\U'd
%OuOAA3k;RfEh20#C;B;3Ml\+$5%K.Q64a);f9:5N)&bUT8f;El1:>;P,9*ZN6r*V&^.P:mCZS55$YF=hLlR/%m_Fn\NVUJcF\5<0
%&Q2#u@]tZ=*g`nER1V+I;P"WP%5Dj)eTT2llf]H,3p->Eqca=B^7cFU0-B>)BurA5;`eR=Tk5^:,S+?mKN)cP?fB&b`<fcZqPGT"
%&ct06$ehl>Eeq:6c_>g4\1YB7!9U6"X;\c8E?spNaOP/?[%gZt&+E)RWf`=4]n3?q&Q?/_m1>@.C^QtZ1Q`,r^4dVahqo1DJF1_V
%+W?7:d%<sjXDJ9(+GSB4L::D>+BFAU8p.rPFF#Z/\_-jbAPs9f8)(CiNs#P`FXg1ip<AjqO9Q$-71Yb!)C&i*%l!W)GaMM_6fJB0
%h<;ZU:,=c69Ct'K&:<XjqQ!8U=Jm>6D;TbFqf"C^km7=!5M80iG]+I_XE]aQ5p>9*Njn0o8*=ApC6cJ'D(^2R_a\;6E^Sa_1m\Rt
%C3gE]0!o[\%pB*J1&"phUXp8B'<]j-D1grA[,=,,CL(t`,6BU*eaBkcC&6'rnt4t\W_D]U-3?b0"l'#n=9'pp;0Xh"M0qL[X7L0t
%=5?J3"9F=?;TIN13,-m1p1tBg+*N>BJCCae=^eBKb\!GK0KVmumrmX0rPi6cI]bR*97!gTrsWZY;3sW4;I:R2o]&mtVhk9H5_]jd
%DSFGP6/I\VK-88trUThM2pn,Wm6C.4^PFj;VOQ_X^,96F02ZrYKZ?fJ!%!Jqp.G>49A'AF:4cr`?1JZ4>)neNG5;214:Hk57)-<-
%%f*?G_Rmb]#fIJ^n1b_BODUC?'dke?Pu'qlmEF<fH37G]J6pkf"3<XZN)d$-4kl5XJBqim7RJ6FN.FRNVrM_XCs&,GUfMKbO[:^U
%+fT&hnaKbi-Zp5]LOUul<<K]d"t5"c$1"T@H^F2EZND"BbSm-6kZHuH%2@uCJX@E".jr4^5h_]DfgnR<U8,X1B;9-Y,FQKr5kmjK
%CFUM)&3G$Q4*j"1ZfrJZ.+rL&8s,RYGHb9R7^-KC_hRn,qT(s%VAXUi[/r(uEE]KV+J30\GqYD?a71$@2[Q-Eb12.#3s2\%Ir&-h
%.N72u@*N=P$:R^'PnOKsr"t9Q!#6FEfGp*pR:/'%2n"hpZ#<c-Yc3.od&GuG4sCu>3QWe4jU$TDZ%m,m@/V!O=D]LP`Om0u\k&Oq
%!cpCRG_h6Jmqru1GIRCg\%b%Y_XC?;H)P/lg`[IP._'*Sp%>g#d-!cUhnfSU"=n6Z9biMY>_Fni)ZB)gJ5Bd2k8r^je4u%Kq3+e(
%L(8a-HELi=Ks>[GTjRdjHog]+lu)aq5?JKd!9>;^(9Wk1#\Ot\.t?'XPqg\UD'TLK5kBdNG6ij"q"EU"'<n.0C-raFbf6,%e6fXk
%Ctp"c-h87ofbFPM?q!fn"cSX)i)HMDFQe1A#:XUUs.mi&)!QYIZSbk[7B@bTZ,sK#>ghQ-ZcA+%+'Y,C]P*OG^+#NbpB!PA5=bct
%qU'8YTu)p3*iQ4lNVFpT%,XC5o2;_7Gr[hIE3T*:W#O:9]$lO4_Afprkq<&dpdaSBF#9'qd10J0nM9[2Yp9!Ln@uWG^]47^r"&i'
%DuT;<J+F3NfC>I4a8bu0oRHnAs5iVqs6H<VoA;YEkoLW5:.'1Mp`o5WO7TXQ5/Itlkgnhq.+T?:-c6/hC<r+mZ=bm^0#%mH4MDq-
%!IkYBe0<ZGO_Z%*A*Y\>_N3*P#E^1GNNq[sJpC;<16o:aB@AJ;$cZ-`,*'O,eu45+o:&+&"UOID]QRoHL3T1"j==m<"SJKHB>5d[
%7"ehDSe,X+`/uZ*c_(.&YR9@2_Eq$16ADX>G_Zd'hGi;"G,Dmq@1+d<Ka=s2_r4a[R4\R`c=+nZ\/deU<@g)K$:r`[#6iuCXYg]O
%GQ,`c%hSC@6+35Bg/M8NLX[n[0sNIL"5^Jt13T+m3=`UgQ'N>GH_.TuUjTD`+p0u@SgoF,KCQfPq(6PtX2W>t9?ek2I#Z0D$Ie*l
%2B*j4VptjSKJ8\%5Pht;dGHO3Ff_[,N_1Q9+3q(T$m>+F>P>iQ)B*!D6h#bH6h8%L1u*kslY<9f#)q1KA@;*OWr9E#gJ28_6Y[^m
%q\rcMX_-K5M34EQL!aDd/rYGbp+P7;GZ7%ME(M('2(K>Z6-YX*JS&>T=A'PW?<t?L.o$Sl]'iNOPb\h!m?+#nHOZJhhr2jKUlq;D
%*dV#K#qWhi)@>38N-4,8Y>cL3>D<ATk@s)ko&&JTp/>lYnlJ=DgcA3.p1EkInPB.M?7t"VBs9J#a-n+2l0#)A[g$YIqpU:1^u.kZ
%^E9-sPccpg9QAd71%A<An&%("eBgrZUo+n:,QBg.'ccNt;o?^)<hlA;[QK&PD,@%ifR_UL_kc@OSIO+HX4gMQ:*8X)6U.d&&nn6o
%+2qjT>a@k6RB;H1XJDUH*;'Uk&X?%+lh$)IJ."TUX[>p0?=d-S3O[D;!(A.`pTn'\6YY3nUV]C9q\goFS8C6p]#&XfU?-7W%enKD
%BbaI!!IS/"Yj*L=8AQ:[fMTW0$cb420(JHbgcdj<@=[-=i^8a%#fo28@b=SL-:oF=q3NA%m&Gm!22BF'SLT_@c0!L5'9ZH=8Y/C1
%b0""L,_>FC7C3VtlY4SYM9@dtcijBj@g?_@7gq/'%RXn4W@X)TI0N4W*W>W?<=(d1qN5g&[&S[!df@ML144.-[&]I+ZFMYCW-,Kk
%S#2G+)5ct.`2<"c_-"RRYCqpf;R^N-L"VLSBPe;S]KD2\M'r^8[F=2SF4Yk$4U[]i/%XDB`;4N:5,C+b(`$^$_rl9$LMXAb;t/iH
%E;\[3I`5[l<6b![W5XP%=+23&M9#S<5$PVS6]1?HJr6"O_Jrh(ld\#uL"=fsUl=_iki6V9rBUr6O*9XF5iUp-+!B*Io4P?L!JS9Y
%U*@jYYe^3uo'p>3"*"b19hEr5qhE`U^MPT-352dF!$tA92R2i4O*:M[&_foP9&1AL+JL1I*u1iDSb'ORMt!9slS+S$X^(t>J3''L
%aY^U\Q.-5&?tupoRNh2!V!eKKOG=8Dj8FEV^2dI",mHX`Y?Km'q#V20I_eX$4X>Mg'_/Sub:Nc"r]sNF8&D+:CJ,9&@@BJKr$hGO
%\8F9HAMD)670AXO,_6Wk6?"Q_U7,^lI/p!DWn<o)k:S2.oT+#R*FcF<4I&8<U!2lN9slDI<fXHSRQKE:/;HkjLj[=/KGHs3(HJCG
%0+@J!HGbh3!fPal.T1_W_kf\&(lh"4>MJ0,EGX3D:o+US=B9=_n0*8::Mb,`c_+(u(9l:O/q"73;nOF'S1a9`Z7c__p\7.[>./P[
%<<Cj7?QqFpiBcj-Pj]<,:o0ggbG!;sEXJf@(?@&`O^fG`g3d#nBeHG%`RIG#3e+lh+]ft3Q7k>&Ap8icPkD8H,-qc.<Kn8f23,"=
%IdmBApDjU_/BPd/$h+Y#+rM^^J-dO&R'V5G&<&"CGj_1#oRBqtR@ZMC\@_Llh*&fR:",f9]"4oQK&*Y\@;m[bQ4BQa'etIcR*jSg
%nLlnI[DC^$e7f:Y/@5[b3-\lnF=Da3E)>di9d-5PjmYP=HPLr^!HWrGZ`Xp&=<PTrT3KqQ'16gLm7ND;Jsp8.BN#8;T&++H%Ik7R
%Xp(!R2B0.\kG_Al<buHE.T6QnSTklHRnY*7bpat",mm6iIhoH+e=f^d/I`KR&?q(c?is9!3FQ>ugf!XB%nL//B2W8F7mOk%=&C1R
%)XpE/Mh7m3!ib=;:)qO.Jk_`Q2@:61:to?!#TAOQli'*KE"WH\JcP9Zbt^Nr+%8oB"Z9N(d7)^?KEh4@Y(?El8O`2^@(Y:1B0IOO
%2c!B]m\L&0-*g$T(@hS=*Q2nMdnC(d4K4FXGB,8i;i>qR\Xa=;*P4kGEdS7D;G/+<X@VE"PJ.B\5X^$CncAo46)BkVAt-k5)Lh:R
%I)t1ggJ'L$D351\1@^0CR8.9"%kr>K2irY'!h!6,"jO=YCaLN+B..@LaV0/C]Nfj,rh;JT<Iq/o.Q-]tTgJg@PUbU$kSJ?kk6\+1
%*=C1'k2t;2'JeHQK/iumL-,XL5Q^Dr<e\207WKbM$bjIJ/4PPT!4'I58RP]!YNA8J"9]M@@WR_',hW)L`gmD<P6rT+W__S?r=NR+
%o/23df-ErjLod958!:m,J5[(cWQ[bhD2(H;K\tG'OsncG'a2Ck/:.RLrWLI4M"Q69@0cc9R\6H&"9=V-kLe<YA):ba8I;aZ/GdFU
%-"XfTU*)-?A:\o(fE4;c4A>bZEu;@P@)j0_pHoN!2j_'o6AbNUK4bZ%%50EQMF,WInO!l@CHL<,3Iukect@LjFNV]VfE,8+YW!nP
%1h;%9<.uUDAD!jr^LjEiQ::t'Rh47TL%bkMO+@b$R%SJGW&D0:W(#us,cF+.`V*c"EH%<s13Eq0l80.[Gok>V6GsTQ)gU]@AB#_]
%.79>U<.//_8;X.rO:7gj*&SFu:RM31+*07;UAka4r%B=S?u?=5UB`l0reDEkpJJgWkMsGm)[<f67#`lo:Wf%[^c4Ye28KttK<M'p
%M7"[ji35dbc(J3t^o*Ec!5Y4u3f5E*[*OsAL%q,!<%TL><!Mnk%<&?+D+j`*)=68k.NU=F.Stc-8A3;kRgrQNkj)93>e@E`,@\f#
%3:$SnONkR^rpRX:4Km4)1H#7%K]mt_p@^i>;]o/i%!C4ETKis="e*gC!a:CX"EH3c2"oG#9>\nF%fdh4,`)_sO:<!s">YFr'69Oi
%R)[2,=2c/#*23sIU@)Fk!t_q];<EIG'U&3_KQkgF5ntU:,TOUsC3$R_JAQXn'!in+bXdeig7X<=od5C:]`f#f<m^FkW%9D%h"GgU
%Kg8X?^a4XrdZ$S>!><P*rC2VU!XIA>h:"llSB=aaJa$+-8dLfjL`'PC?8T+#S"hD++0,+n727WJeGkWIrut@.P7V@]#-n4Q.U>EK
%#Ot.$jr70k^)RbABL#$&OtI]H7AX&+?;@RAE"=1TdCp6=s!81U1cZFUX!AHcL#[3@"\GN9_iTD'4=)L]rXp!'am:c>)]O&LZ0l@E
%'&<L5GYQFtrm(RYr+fF8(<!0S-YQ$r2*F;X(!/I(,:2st<?Mg&HDnTdV8,DB(lo!c_eYh0dq^_rMge,hm)@I[+@1n],cl]h"FL;_
%aYK&IZhF?1dlMN8rT#NfPfX;mGmb,,3IPOS4\HS$+==F.[q]4ql,V74,?M.k1)>c>D#s3cBR0)e!%>R$E6V$-pF1NMa2uG*`^iN4
%fc>m>iCV+m,Z7u;CGQ9pJN%/+,a)-s_MsqJP"]Z@%m;SOpJ%U!X$mHX74fTP:>6X[7f:7+$8e+p:\-T.UhVFcK2".)=H8&si+=i:
%;HlGD9800<c8!(La<!]"qs]#jV'IVu>388-ejTVC3\@\.bT-'oSQ;>IR(s4hjSL^m9mDF=,A'6ml;!-\Ud;mV]JI]4c6G(Qb9E,p
%0qY)&hr,AD\pQWR$GLaR\pU#hMD3Et#nk:$;-91rP_c#9M\Rh@81fqI$"Qi]QV/on"Bf8674'ZReiAHF[2-gs#!i4u*`D[d3)H?&
%KYOPkD?ZCu7%,"p5=H0I`P-o5&Z8VU'TZNXnGq3?MLebM%nS7qcU/VM=1)5]T#1q>MK`1'aSbjQmP.%_K'!UMM<`1\PSZ2CZ65=r
%"#o5h(i0T00cT]58]:T7YU9GZOPPK_joF7LM*`/nFV?#7&WfP>43gK`Vaq@,lkm!s$nB@157j=sP[tG+($9DMjgrE.gfi]/P*hmB
%+k-kBUmRL:fT#Y9oq:8!.HZ.4aE1S;J!;d!].7#76t<P(=<3No-MZWCj;^7fA-H"#IPPtC9_lo;0NTP!.N#\^.9[J.\KX#ZdI$'F
%&npqj#+@Zr%ZJM&Thm9I(gNH>Lp&/T3[2k(R(?6h?$Uu]O^dT"_FIoTI$@MF6!.H$_(V1e`1f/?W"q5T,)cmZpCQ4(9O0YQ,:P;H
%&E>=p!9N'P;0-VU,o-]_'3D?X;INtm@b,,+9O=C:$=sg">2mD^f+eZ'!=Hq/!PIUiA/`Q4dteCd_a"g-3DQe5#RodT*+Si25?+)a
%#gX;XWYNp=`.`Ct#u8eO^<WA+1`;\EFAD=fs$sss0uBhBJ+tGl%%13SMo=VY8]7?++L[]\mt./6HN9-IKm=l)@\3:-Ckd>1&=e<L
%6k#G0o5SGUK=(!c-7]K//BIKS'9)"nL&5S#2Mh*@-AdC_3&Is->4uHI.Ku%XUoF>-Y"V,&EpXV;Ag.VeC-"@qI2X&)P(JA/%BR**
%<b37NGDG6[5T?>_TM(2?EIB.9p4bK*hIp#BhTW*&+-kTI"U=VQeis/8(dnn&JA[fb)hp+lWi;tRX%Sj(,Hr/"*+5H'%@*maA^Nt'
%@(<rIB(\Ht2T,05X0tc?7".@d]i1SSX?k^B%7!buRP:HHU)'.1O>\!.`2uXMe^q!caDFnKh#J-WfgR2g0_JFJh?e'rXj&Q5hQ!\V
%)j0$=Aa^D-0P^PC/P@I#DHT"4F,`9oF3Q`XF//"gbcO,T@NuGp^,iX3;>!Dr$M7qJ[JHiW^+:s_11f.+YDe`&-'/Nb76iIc78UPl
%;K'\9XLXS5bH-;II4Mq0%-+TrMKh^3H)c,rJsG_%8W(_ZQ3GHq>60f+lBL4+3a,p9?E:+.c,Ak\aI7+SE0UTE'XdjdHo$^U![0fh
%L\Rj_rKPe@>pQT8"\Ad?cgKdEK"Ic$?#"U8U3>V-Ug4O';UcHbOa3glXj)SdN4E/s59SC^$K+l6K%g[7%S`TgGpB[(OFKOH,@q3-
%QS@)A^kEVD<S"5YSEhC^Fi]H:)2bgP>1Q^`\<),5&rPi6SA5aRJ[2>^BR4n^f1Q!\LpJXOH;rgjM#nt8jdLJR.li#iM$E6qG<fIc
%>+.$q=A^d^R26PnL#Yk.X<*^'iMsusV@98jf8V/*1UAq&`,1lTH=5a-:XiF:Y/.J7cG+p\RDd:V=MA]K7l4RBWQrR5F*T?k3$`<N
%Y&SbDn3r/ke-1/6$i=\^I`/ed9*A"Y$J)FXY$!$i9nijGgK8L*CX+Hk)XC>FXcgkC93+GQP*RPpV^l"hUhJ+lAQG6%(N,HEq@[MK
%2Q?NLo/W7#U)59QA@`>[\FL%0QR4!R&-\61UX*H^R['%Sk/J0.()q>$2YPX:0@*t,<>or!/BbCWJs")h1L$=XKDb.Wc'saZbQh/`
%m1-3CS'J(.JUPr6\DlX(DVs6SSVli8B&-DE`Bl.k)?gWCV9LP(&bfo#'<C;Eq`tM@9Z9MZ>!36n;u(*=)sue>>Ni3-Xsc`T^9)Vt
%K`Xb3EmChUUiO]&,SIJ&R=@]kQRUX-qC.sDnl/B)G'mmb:e6=E,OPpjM'HYr@4cTRQMkX%?V%J(Qn`Bh_.j8LA&(<#Ff^[F=,tN/
%)rhcX7o@67_2p=G#_Z>7>,.&9NdtKdaBB^=U-t8j*(JY[nq9Qk+9gd#bm4iX44(ti<ru*C8KPks?M4BZK%<ZT^\:E?%7MHU`pq0F
%LTa7Kne!CbG2)+]+pW?)&9S2F-`Is0#[1TY\9'oZ3RPjnm",e!8*5G:LB>'q,i[6Em/G_X@30u[N'jsmFN-G$OTKIjSBP<Z(a(*+
%Z:dBZ7l`(\-<)"CQ>p%5[f/fKi%-?]L>.*I6&t=8Ek]o7j=Q\*P16.Z<m/!(V67m;5>cb3X!l+k#CMK5=b-9/2R:,;,3\f#n-Ght
%W8WeQ"b/?pTduG9<q@6ng'!h]$,"u@ZGT'&$_:>o<h2&j9r_$#(t%KPN8(9(?V/$:'I7e5EX&\,;fEHt&H_?Aqeo5?oh71TLEf.u
%<MW!G^-tZ&73.o6OXWn[\7dj#$L,(iIa1clkiA`.,KPr\P$-hPm6TS9Z3Ii+(n)`)<Y9n7&@+ok]/#%9P#]'1-OOZ!OCOf_6.1c=
%R#otjPr1u$I?@E"#o7V_elU7Bbd3"nU`D0Y5;kNm\@ImdEZ3I!oIuEN7rQr/!4KO&X%0-0;@>BcqV<-<9uV%^H$2ARqHXMS2PErT
%1iI&]899K)+hD2T`/i_8#XT\oB]"8&6CWiX$J68J"S5mD4p+M#9--&C,0>2WBpPhi%e`EC*\%j.#Ap`I?=8>oEp/b1n5^eF^l3=j
%ngip/8QD.9Kh;^30uQqL!mf-L8BPmI%k)NPC<\M<*0@!d<(0LkJh5XXl^ZSZ4EjMNbG`9a-u`\t,77$.N9c>+XY=g=:1mYdbc7@>
%cmE;VoWe9bh]BdrS`_uRaikP-_S3BXmEA-!Q)C0AaN:2_*u[*^(k^8FUgHBQfbbHVF-B.1-YXb+Gl6"UR,^f#@S,`Tm!S#bOn(p]
%52^Ke@!,Rom\)oU4>A6e5f2Xbosp_u6V4W,(!G[,5sf$\>B(9sF*!J>:[d'+O34q#3EHn8`,q846K9sDj$gq/Lj^L726NXO.<j8t
%6`!A[#`Zs%O<D*p+CuE84dm]%&BR1n`h3go?sD(!YY<+@O.lhu8;FBFd`H3KCLO9tP`S+o$sjL$Ws:qPaqe+;j:k.%.C-E3D1+a5
%V*os2W3$S3WF10!lu[7!/L]V4U1e8dE?%ed(EIujU$`DA&tJ).Rno:%^,6fUoVYV+:[\_kH1L+E[g-32o*V9Dj'I`RgkjXTXU7,^
%"+-fP,^7;jAc@_=mWsTE^#<8-=9(Op!/)df0j1)%E@VeY3.X7`/duWs1:JZ#j+`H:Wo5G'Ya.;[*tjnQ8:g5n83%QK07@B6'c%p-
%@TnoYBK;)/.%7V"C=Tk5OhhY-Ok>'6.oGW6?bY<%Gt^N_8([k*P+ciA!m<1K.T@,4k('2?"T*Rb?KZ?B(.eiC`a:06_-p261f.T'
%k?AC2rJ`)l7K9gI4RjAs2;fU.JeZbP\i;R'kcIrS<CG\o@qhXoCtXihH,1I)';oP,"dC@]XpCt:b3X^N'rI#'30=b./[-Gi.^A'=
%B#I:iIhX/bF(:<ao+lKVB$GqCSjT<Jk*3]>P8D:\hm-NnMe8!:k*c<03Kf:-YmRSrCDntA$riDcS_XmbO:g7`$F=KI7FmuqM)`<G
%&l!EO*jgWkhHZ:dU5glRnE$HT_;(Jh3UFQZ$N?$$#UUKU_V[Ik[VSDl"(2p1,,M5sl[g`Y"V3>Of4?O6oD?_s!i_2UKiAd5c)QLX
%#TYDYenWZeII/U,IE8#D<Haj`=@\.?qCuK^D#7T\dpuR:QBdi$CgQ.Eg-NM5M5??H$!!*J2hFi%>0LdW26G0F7]*gc\?cXg<I;5`
%l3L.jc:jc9.IfjZ\BJUm?3S9[pAUj[H8@"&#0m@?OTE<!80Xro:"lfD(1d:6LQeR?Alb!r[n`pPgo%XFH7sG9B?c,M!uOegXF6]T
%)1n#DOR#jj>O!5'Zh+m/dlIm/:1RjUR,`'g1G"sQ8S<YQAHa,eZ9epVF0?6"R,htT@k>W^Ka95A%Os/ri\.*1/`;se-tEP8+'<SJ
%a%i_74Y]53.&&^W;_+7kcP!QgRp"k@U6_^<gCA_^>'EOaRm8l(:inQQ!H'ZbPji^^X[1?[MH6SZ<3n\3#Mt?7mi=o,'JrTn7LcB;
%Q6;eQa#]1&?n?mVo>]!+Va!g'Rf4UrAd3/(>MtgL6OFd11]rHgXE*s5l9$^i_XA@N17jimfW:NS]7^7J)CnceXk#S[_+!Jt@;(qY
%Afs&uPhBY">G'U6_!RMu3cN>hmV[`B-Ept%fHJ#K:8l+\4UgBeARVqM'BUj?hPuZpj8<,6W[5;:2cCR".blWQAcKW"6Z+N:\9\)P
%K`#87eB6IX/H#CVDjt)^VtNp+2'*0E93M^8bAtEIigO%!W;("Ck,Y#9+L<CKCI,d>TOgO1n2^d6PLGVGUmX1G>631F6&Q0OdpLGn
%V;N2-[UpEuRDY%b1qJ3lUO\Q66L0FA=H[W"WsYr822!_5m-9lD$cXNZ\IX+V-81(>f`J3]S"o[:gl1YH&rH`+'no\Ye<96&<aVQ%
%;]rJ'a9j'<j-)>6DM'GOZFDYi?rb(fc)*d?/0?pQ\B8ppdJt_"5bF_f-i9dH4%\lFmK>P5Hs%1eV&e,hTu'p'7%1H%*CnZY>=F?Y
%ViZOe+d/1\aE8D6U%L$<OVI,glp6\)0l="dm?lIaJGC=o[H:p`$?*3KCdK&<a*P5]#;NM>>-KMR->4OJ,4k`N[8C)N&I)6de/VI6
%)RtI$IH%slDa"/dUojcM'=,taN*Cfk.n[ZdF<cVJ_:Ds-=^rU^A;3AjQP,K%o*)8S0Si+ck4PEnP_tnK(toC+N=EZM/!B2GF>Atp
%QUM80_?j&m*_q*:M?pSf%LgJEYf`'^)G=1/1kn$k.kIq8(_F&p#&n^Ie&M.,&_.!Xbt0aN)f":b$Nps.XO)k\:U8)0E$!8Y!"Z+U
%))(^Nag!N[<=u0+M,.9..7+2CHB7N!AEO."%Z3QB`_25#+A@=,)^7/!kUX^^%";$FQ^5YRHHJX=X\dDuJVH(H7V[-!#[4&;Ye*cJ
%80m_8-"Lo5;8&cf$-P*aXEgp!&SN;4>,h]eIc+_ZDcUqu/EjX<Z)sAO5h)f?iRh;$iYL-u-@I>\#19$>>=C[m@O.*lM%(RBF%+OX
%RV3(iLl)u>JBOr+(G8`8!F+:b%M>pYM?%<8+quZFSnE$HT_)(/@YJg;hG<,I3=$>W.O4ciI\fYH/W\I7ArI;tP<*(oA'$2.5@ji6
%H_>57:)-[eQ$o9Ie`d2ANtue+d(sb0",()N#12D?Md!i5C`jOnECYpJ/@+7kH0SRNg,g.>ng)!^D!".ViKsr`!_M=1?--453qC3^
%a/-BOTf'jlak9BrQjLh%ZL9=9fahHe"9:E*4aCqCB+hF>67EeM,[V?jN=C[kV3(r:;KIflJSjK#CV>1EYs";i19rH;&2LH3/;@EX
%Y`F%"ArpF@LmndpW"^,\WFu=1>:(f6FRfGQ:Fd0u9dXTi>_,D%/1uY,LsZ&oTVQ=V=q^&HA'K+hUi]C=TK>Z\"tl6Ib\2B2LF3r7
%kp6GEJt,4KgIa40K#T(BaB5!O'h$&9:gZbsCSY86#+F#(%1j-QH]KMd!L66Dq5^N]R#UF4&h"\<F2W0/*^J+j&$XfN4O:%-1S,d@
%Ugb/@igm(;0R7C\D3/O[JQP4jM(325ND(f40ucSa<*]!_*]-E$6s^jD/Q*X3D\>!gc*o^Qq)!O)C)IJRat_CuE$,p!\cnNnLri\V
%F4._gWZEt?nfAY/0]:c?!AX,)h&TGp#GFtfM\XnS%P(r7@bULqHF!F3ac_fVJSL<I%tbZ:;.Lh)PTb\BVoHPPbbE_lZm`0R)n'$>
%,9j'1`N6ub\q?mbiPG$)7N&n.A(Mg8Ynco0TV?7*J0ooQ@EG09#m%4r)XaE_Ea][.U``iQ'1[lq=d1qkCTcg-@d9K=>9F*L1jPUU
%]79uU;`at=.D-%734RgIA:cUOAr/SPX`tp)f17qT0N1n26;sSYP5=b0][^g%P\+'eL,>+WA^XXQq4MR**cp;CAHPd%,Hp8[f@>O:
%9lsf]Pi5?!%DW`+CC$^$-I9('JOQc3,k6c>A;k&GMNf*=L6kk"Y8Mn*h+cHoOe'tVU*q5fSjYsMn/DJY:rPBoCGtegA:scZEN0*!
%nEe)uAkAI#k8DAVN/\!,]1&\t/A&0$?e4Sr=O=M70EAe4#ifOo;RCjl/"fMX'4mXiUF+%jLc-..//#fJlC=Zk&sVG"O.@+qga'3h
%gb!duF6'_eQMsQb<C,U[@,KRJ:l"j4'N(7=/(6V!fRH/`&hD6eDh*@`!S4unUH5NM5^[OT3/:lj1?k%aI4=CEGlbi/<!))306*MS
%74g#M5nj)@ncC@UQj"ba/I8e,aI6<VgYV!X?t-.7SJnY.iX\RW)cu)r(o,$DIR*NpQ!5)L)Y<e*qQVR7a%kU49^'U.+WFMAO#%_T
%59NuR;=SAmbX(:,_;OWmo_(.fqg(i38M`:%nK3DoL7CR!W;hL!*d6Ce:QnUk]0#6KW&\h3rRHA]N><!oh;0RJrn.AKYgVt6hd/e>
%iTo53m<LT,oWnqr_Jlf"1AL\1Ao5-!(Xct&^:t$Rli$Nf_61PHX!g5?4N-2cmCmdo$2R"je(AmNRkGo6ZGh0m"qQi%a9c\YXT.Mu
%`fsoe14nIdH_Ju*5BGZM&=1$XmI"3UCU.n?Boh&hD#Sgj^Bcgb]q4Q^p&<iFSZId]om7(DSlUg:I!mQ9%e5<lUI)HTBJ@XCN0'(S
%UWMI2e35[14mIGY]kR8IlU/KkH#8V6#&VtpBKn`;T!\eEK'u_\r=+[,+03fW\,YtWm6b8ihsp>Q2!F[B.gm0\d9F585hYFN]hDbc
%"Sdccde^6e!$0ecA<9:\=fAdLYIuPTnS%F>1OL4WM2/<_rNQ6/l"L=nT`=afDu>?FBRb;WU!dk?a)=a7`'%.@gAW(bET7EENBJ03
%b+..Ke):\R#VU_7%=c0WB5mqYVso`ui.!%^7!2`!F>N5f"]([r5dqf_UX24ZiGVH6o-UbS@6m1@(!+/)3OR/\.BIUEZj$(Dl1\f@
%fdiX3m8kT<<>>3upn_]t4,HYC:]P1(Iu="C+1n*,+gC'pTbugT5T>NYZNiZS]>4CVYBefT"m-@=c3,_S<DY#X>(jgI6@`ed?mts?
%[D9I`>"J1U$Oq-GR+<C;s4g&)gQjJOT_DeuK%>G>6Cb5QS&Ir=c/e*17LPIZ06!LqcKW?%F2tFW':R1fE#h/?fI-HO[JO']!C`/*
%#:-ira[n=/h-l>Fdj]2Vre/?9G%otf'KFh^ij(Qi38'jVXI9&EY\-p9i_M1W6NR#emmA@Srr*c@@<*?Nn6LmPi.;!PqXDpS7Sh!Q
%`YOB+ke?tbj!T-H1SX0UZ:'.G2M[(_Vf<3IWe=cq.=_OF[bE,J![iL\/_Wba:N-ld@iV4M#q]nP3[/`>.4h8&&BR7R&Pe<]gVk,^
%8!indTu+2bWL%lWLJT4Gc]3VVRk'ZXi:U^i3HFOD3@%g?A10:'(,MmF]L1XB5dZ2oU";E9K,&%#1R"s19L'?fb=BqI*X6F-!=JF)
%'N:mbTUVip_g]95_V21r!mDic@0pUIAHCXl#\[5R"/6G_5)BZI4Fb.eFp$b_EfA]370,+ZBus&6r`D^$69kp3AJOEs,r@;oEomf^
%`c].p"n7d"jcmVI8qAFR?XTS7<TbrTQV<:t'-pYM:B'\U`hDbUfAOEXn/i%=BR=(gFLPimd'=HcU$V$ukHNiRT45RGKbrXlHoTG?
%2j?I?UGXU(KbguEhD>#3c(#0)UAV@\]g]'jTDmosIGuB;7"a'In@9^i@7(m*L]V[?HIB`/]AGuO)hLYB3kcCL]0/I;*`#8makP_]
%5n([+^I./Wd*YeUW2qS'bnbsZ>A,u;3L3t1%au!(.$0Kbs8M?nqCp.nUWmHp;kq7gFKO*0e'D[qCJo"Fg7cSTQMleV#6&pq!bes'
%#&EtBX=e$ZHL:\uCtS0!j,!%G&*R%B,;-85qeV<X8<_,``l#X2e>qDT)j;Uj05#LU`3Jb"/OPs@g@@)aO%@IJ6>V!]@Ja[m=?(#U
%&`\37n"+5]['bTrH\cq#q!I[NO3sr/!tPW"g7q5PclR<Gd+Eu52?a#lJo7"D;6RZm2Z":25.`rr[E5R]m%P0O-H?(\#719k01tS4
%<RcJWj0-kFclkih"3:jl8(r>E"^S,8'tW(=),_sOYJ8fO;nG2N_SU@9=SWcepu#f5J,AL_9R?`+Qr%2U3?7_3^!U3#Ku%-0d1?Ro
%lu2)BepbX,UHeG/L'YT1M#OY56KC'"@c%_"D0L`<N%e;]J"^Xd0O!\IqsCR7]%`UNA.T/lnART"GNqEk4p0,"D_sp^TMI#^Y4c')
%K5T#$FqNO0n_*q/+/dNAUUSOpKPcL^okt?qL[ho]:Tn^8m\iXtSXh/%.K#S24_2oEq&2JVTDr\dK.#RJYBKr$FbTOo6U.;rV"BA"
%%=e=?Hl_r7]'eI&fAlkb;pWdu4_a:jLLjTh+%8J-I+i;<J,@(MhfCk[;sm,.S3@MLmBN.1pnH;gokrhWT"LM=m,l(>\s$2[4/*bq
%`AiH;$/gR)Z)cL5gWSp$caHs%J+:8**Tsf'c<rCFI("@IPJbceP-"Rtc2&I\XRgZ3hW`s2o[GD/Mj@]cpj3Bpric@T>SuA+J$hf,
%J)e`G?O.[J2>;IuVE]>%k]QhhL@tJrEf=,`mAl-\.f.d:,*(./j8a,8H[gG3ruJDr?hEmSJ%3!'r1L7mjnkuDf7,MD_tK[N`ot_E
%f5e1SUVkW%)q7kALS,mc0>IA9\Njs+2d4A=*%[_q8\9mW2![2[1Tk5e92,qGW1<14^O3ZNlb<=F/tDRRKDlCh7V9u]hO`(QfkB,%
%U:?j6jUgd.L=kmJ=A+[iHo"pPDZY`#b;l$%(;toe[WpZG,;-4./UVr>bB*//=a1enIYP"2hpAshP9(XKLG(]GgRQ&iIosO9Du?Wg
%lEE"'gG&Fm:/[m>o:dP<P[;[Sh\!KqA\kU2_k5$^mE0i'&i]AleG^?sgPAn%r^JD_lRn,R_jfg=F>/&NK\N#0?YskY!@(+YMKdYK
%a(1mpI@IT*DuI/eh\u?YWQdb&XnLAi:]$utE&8CeFKY`#Sd(s-Y=f]cJ&a*N%gE]ba!*`qmHAZNct#f1(Fq(Rmf4uE&b2)E+pq)Y
%c87&Ka$SEBZhhq/I33Pd#^Sb6k!O"R2?YCF"HK(97p3F>cJ&62H`ut[gT].FIso7@QT"+P=H.Y0loFKL>"0/>C,%6^0Ro:7KA5.L
%7QBlGZTIC;Hp%uU!4m/+8dQtPXMYb8(1_E5:>:9kp4)q&2fuBD)qQb6B)Ac_DMMPCqnf5j_>'"`c@KJGX:d2;KfrTfYlY^+$FN^&
%n.t;:c3+6d3O0I>10s#odfu+.H8e=\mMd.Pp/dUO5SL=Un0de'(-iE3#_*/QAb28$5sWfU'*b8=1D$X9D3$:[/(2[$YXnM]cm%B<
%#1jOt@lPH>LktAE*hcAr]]rA6/Sau3F$IquQS1Dnib_r*C@<&-XLljTH_EKHq[5B9gDPe8l[jk!2oUtp--i(VL"Lq]GJ[FVDuO6K
%RruOG..`;0mC'5r2_u;aA6]pHqbS;)'HDIZTA'5b)p>SF?S3kLSVI*@^RZg-oQg9O]7C[hR@rl7#uJ'0q==?D)8hrK7is"7osu2m
%T"p9(EQQO6P>&H(5`'?MnP=r-9!Xq#SEZflXm`Q]EMi=38(4lh=7;uf5JoO(H5_0*YS#!R:LAe@Ucl!P'2u[9CE$R!gs`-;06jc"
%lAa$sORMk'@E.ecBa8J(#9HI-(QLNbL/.o4%V(j-issn;+A.FRlg=up#o3dd5@74#(]s-]rq^)a!;>ChmcDEAT0>9T&Ne=/Aem"G
%*H[De=g,I,-['f]Gk<Atn<`4M+uIM_1jFIZ8'?p[;'.'Ho\O]GNUsZ")]MA?4a[>LmU+04j%5kK-s67Q_Oq,fiG5g8N[$dG)0Q%$
%r@d&d)KpN>:=,kd6S(4QH#K<Gi'pE"H/c$jKQ/TbNoJc6Uu,UB)9oQBH%PS!3sX*Xj5._TgT.<CXX)fkNSe'Vg/b?)<oi_r-Q'<)
%ECZ%B?2M%MS[Z^RgP+fU=41_lP,Fg&E5[6gQne^B*g`]i:JJPnb0cE2E^]>:O9sY_e"_rLLkWPQ7fQ3)_k@lI-2=_bU^4?EIXC91
%D:!_a&d#daHXC/<o65Z)oo'ECN_Maq5q&589f2d#/#F?;6W\B*6%V$fKD%qCNVErsL*#/?SE$-+kQ-Es:4"g@!Nn&qT[UjL#9TKo
%(?)%Wa<9\mp#aq\lIc'A4o-!7=7)ch[V?n4\Q/Ojc*,i%OYQ4mBABNtT$$Q#b:+e/iGeEOpi8I_==X1N%Pi2T$RB`b-:VuI(*!IF
%OdRA$A^[aEM]^LRdMLkI##@7GI`1Wu6PqSKGZt33a@oQ'+-2t*`ki$:mQH!tmD^gPNe>GhO*?r?loa%(4(me\ZYIIj2m1Og'Lj9A
%US)D/cU(cJk?C4#hEJ(.lkFKj*cN\J27]-%bU6%"SZIoImO+3pf80pN8]po"WiUVfXSml<=HcBjPB-?,f_B,4SSY[6cbf@Pp8O;3
%3)O&#n^0l6V_7C]6BQ5uOQqU2bI=`qCB(;rO^#eDEjH?a;9&1t0qM>n*Bn?Jc,\WQ/?+`d<"hpThPg?N9CB8AX*Zqe;taqu,Ej/2
%RVP,@(J8hLQeJEuDP-d!LapH"Z-(nJ:SZ9AIoEe]P=2hV\:<1%hq@rB\guB44B4"=M'%n7i`ul\janT^f;$K0j%jpsnG_de^0Xap
%fq)F.d7>1:_s+Ab41(>bj1?1(*QD#EG2kWdNHhO`V=?`U*o;f[0$"4h7fBu&:I!D8q+FlSlCSF.LL+OK.YWB!$@hcYS*JI2[^ggm
%=1tS?S;&5$n\SZdl^ic.;LLd"I**F`,<`:O:2e<-5XPqQEme3]__sF-?]G'(HO&s"G^DM0W$cAIQ,P8d+[htt[8a,tQ'<f+X7\4#
%<V,aZ1;g9KiT*^L(N?VsNcg$ad+E's!YJU>#cD"dcber;[/sQjnQSpi-h(>C9Pja^`nT,s2OE;q)]FM#U/`YR\QC_3#t5Ee'cKta
%WHjOC)L[J_I:[3SMp\/G@8FroV_OdI@G!mkE[>WEa("7JiYT(D3%q&=8n&1!N5?*q8piN6,4MDNi8jORC!un+h8AQX_k\64\aRI5
%0MRF:_:.8A2b/*rRn9)BrD*(+Ia[oYm<ImTqT+-6j,N9bC?9Ut'X?D.EpZG$GF2?8>.V4(aOs@h>i,h[Z?g2Q'[;6-?*(dWQG;Lg
%,J-O$qX[Y7ERGRn\ZRqeg(bNcd5@B3G-CT-F/a32JXn7m$Wa$pX)udbB[h]6H$#0s`KMKtm*tO#0FPkbmHC^!JH6b"@TBs;-COJ4
%rM7?nY2c>CJZuS93Boa12X/]S^*$b8:O5i1/:FQ`qf\0`Q\OV5Bi7&$-)Hds-/R9MWl2*)C]3i,gIW4Im@<446@J=4N)$5J?IblC
%Y)k.o9R?X[e-BW!p6.D#2ca+qf5lAg:kY=HEEp"m!cW3,*R7K_f)C'H%>SOM5)sNW`\;,D126@=1DF812*Wqd[C('p7jkuFa%SS>
%k;&GEqam'BZI&G1cKg[g]l;Hg/H->ef1uS)8It^3VW4J!RI=S,@FEmUU?'eSpQ,8ZpZ23P]j;'#:3sA?[c9@3l+VK;W)&:abV3m6
%\.J(dp62r595!(9`1$(h(\\kYa%8X\McfFVkd8riiA+[g4%rgN?>^KI(#);u;J5b#U^/WnC#9`Q>%NI\s/<e?q_;eLl,!2Ma(jZX
%AN)'TbPhCiKB$8C]i+49C!qFgZ.>r/:Kft!(U#1+4*XXkaX4/I3_1pO8NUtJFD-iV6qo"l[ML;#j%Zj@qN3909U[_2)N'Ii%l[tT
%pU.%R2!r<(I+,/,Y#BGjO(,s_C#o)5nJP+PQ*8.I,C;B^C'V3WQo#7/AnH`%Bm.s)->'@1C@<#qBdm(U)(*VA7_;77PN:iUb+:e2
%-j$KSQeWu/gqpF$l_J9+ET=X`7$I%n9p:=.o&2*iFS.V'g?JKBU\96d%7T@+H)kKZ0Uhh9Fb$YS.[b:nf&SV<XaYC455eUjbMCL<
%ku6sb;r[#fD!$';hcA_]6k&s2%\Fs0U:,MQ,G//BjdQ]995@1dnE3gVIo?t`-RHardqtf/h,Bk.XU+g_b6%Z"'X@JH-6,5:S2bro
%5rbuo9H6709aR^694?;I3lGnl_V*Lhbj!kBiB7%/Z2\o//<#%pH2=M*:GpNN(['`do""Rh.CZq+`Cmf'oP$t.>V9nUI<m#@WjN1d
%R.^%qiFXNgkOe.ciU5tXiUH*(]Q!WES2,Mm6gRTG\3F>aS\Dc`4K&cZLJK!]@OA@HF83*OHRV-Nq[T6BQGi@:IGO/:;fV8NES'0u
%Vh'*^+h]m&X;_tZhtL1<^R`":3a5g\gt7*+NK:s(pb%l2@Ru]>22r02`nTHGF)-teDWZAqU`WoEG2M[O<T8LkldEt]e#,`,:9LdK
%SoC<'dYSWCe__@d\nB.U@!k5LfB1(,_Pq.T5J=@tC5,]"&X;<(iqu?Db[2TCq>.1=;d7Rub$;-71Ja9.3P1VG?T]>aX$WTmX-(MO
%grrE3'W[usff:/JDfrd^h(O.E!Fd!L5?Q`-bk66e1P@;jh_mN8F937o8DRE31,/%AU(lEC8i(&AE1^Xkr1pmT6tAGCi9u(V/Y,kO
%^2ffeZ/3_d:+Fc>b/^ANYr%K=7=t'ggO@mkdRTWq)sJP*Bm4-"8Y:)]?;6HjHXAZ3=Li`pXg(G:I=BW;`>Ch=Ek8>J3r4+91T!`2
%&IuTAD%;aRD%c(CJ*\O_Y&>=.7H"-/%/7JUY?6!fS.p(#Y1'10e"iZC:J(l4=3d"]7,eJYO@L@^-9]@POqF`fX!tVqr#;L(<M06@
%m.q;7g!E[ne+,Aj&jIT=#e,n!WmU%O*F,8uq@D$(UULt1rU#e(QN%53@Be9Xr0E^2(K9%K>@,jXp7\1r&=NG?HTC&DTUSG%"'?Vc
%nu#\SCP(epF--b-!U.2W"_a[!$a$95H=NMg@g:C0YeA'P&c-Pp6@ZAG3-j7hUI1SjX((I6gu,Wa/U4T;_*7p/WVljK%[$Q]Q<1Eq
%7"H'T!-uYPZ`h&W"F_JF/."C]9;;8H?Bj$_@8X"-MYs.:,kd[:\h5&b5:2J-&2O;,s.K8,3k=YWNl'ZM_`pn`Ku=RU8BN7ablrS-
%57+cCU5#*1#I>PIdZEgS6%AZ69A7c@fZ+t_jYBpf&@!Gt`gPU$f>C`>9;a;IQY1=.H=k6.\2t=;-k[Bf6?(48mh[MGaUB`%k;kIW
%9VCe0PP#bLE<P_KCnnfUTe4s5HK$HB.d^YgSXPpH@l]gA\)SPEG'<=;!5$sWMm*lLFukmVnZ`WDC(p>F1N"cRekp?^$b`=Zb2tCl
%5."V:B&i+(I9.T)V%pWr#BIS_$,,lLjX_>PL`tJ,h@[%VLM?+WQt1=AR]9L\Y_42$!;#,r9+/GTH'V?g7`e'1Z)?YPB0>9`el*r*
%/&mE`;$?*)V!fbYST1cS0L5$h"5oLX,;('eU.Eki:MF&_k!0^L\od[FhXa&]\bG@JM&G&?mV%)>/nc(Q<K>HQn`re.hYZ]On6F)j
%3Y:Z:Z(2TkL(`TPB7sB6KggD(7ddq?0C(p9\f.'@-"c?7-St&_D4%l6q-#O]Q[_Z6ij[YRgWS",bgI0_jeE[d!nKggk"0ULL/bl9
%mQ00hg3W[QF<AIJa!KuK1Z8jdA6TIk/@u6)9>9p$!Zes]Hsk;A=@04iE:,\"I]j/8fR*'2pppa?Zjp]\:hJDAF7f?ED@glSl@M@h
%Gr9b$2i*k]>-L_!],%`j9K'Y:o,ABFWI/i,Aj]Kga"L0cRV.#l=d?5+TUYF3e+>(qT/`@`o$te?>Y\iD?;U?#C!<;"gH)ZKkfCq_
%HS%aj)Y+'&!,A..*#4>RkWEC'.go+!EG#WPLl\CJ6MtUN2@Bg[aARO!bQ8G[Luc&W?FKKVM8uk[CPJnIq?:GpqBh\Aa8=.g1W3(X
%\qqAi&,es90+",SF\1hG#B><<c2RnV7LeU"r+.d$E&*@mqf"S=mlOibLLEd,G2]s0ajOE2^^f9+Z%.*RJG1'S#2l<G477$MN!A7n
%EQ@q[d=J@"@&7$38\Pn>:;fQr]hW+]=c)Foq*<r'(pYPR%QZVuGoD1HK*)L"P(+>m^^>>)?%AanE::Ee$7t3LcfdlhXla]VGedl8
%LC%?oP*]5d(VMCG/'L=h:]6ot/p^h8PAEhG>Oc>LnM\L`XbfoqXb@srbrKZ9/mY"7:MJ[Yekp_'pas^)pXr!A>R]sWKHOlZ/]S<g
%mo5p&*s7Lf`8)L[8"[Zd"(95rg%rpo^nB'oU#Tsm0s^qu`sfB\UG,tW4dqa+Bt8=,nR5,P6ts^51>JAPAqj>27bD#2YTCOqiL]i`
%[%W;;c\lbPB=nMJ4"mH%NOW>ujL>cmji>(*pbpeLOZ\S@^>Ksi.2cehR?[g>=`-=hIL-,odm[om!"?07-='`IA!COFT]8\2NFEf1
%MK3#;kdLn6Mg:]%rMd#&Vq@#Ad.jIli\ul]IGB"iEog`5K#)ig>OB?=j1UKXS)s,O>""-8oYm#"BbdifNs28&Na%sl8^)L$n0mAn
%;R_W]4&3r=C-k,(8I)U#gY@/:hT(7[Af/a*(6?L1ng<Lb=(eBhL?W%^cqlXPNNTr!d^rmm/rr1kDgW$]"9;8=IYk?H5HPob4-`[=
%]&_itNeZ7gD$@I8*0&n<Hk%g48??poBY*<JVZe+G$d@!<mM?^V%NK?`+j]-6_aD'Y:?6QkXkjT;X9O"]YPI-#hQ(X.*kpN<nMjZA
%[6FIK88^+"ZH*):+*`[KUl1@oIlbg=;@5o]eBs0q(!q1<(>CgUqE]f/")J-hYVYj3`k<\)Wsc[9(46h0f^+;&WSX2fl9#pgS([\4
%EBU\XV7!d6T>qhRAoqeY_\B1/#3/B+g7(Se]o5WJN_b@t=@et&na_`^'?L\r*tL7g>BLWc]8`WN0#ZW2/[JJ6SU>qOGS^S2pculg
%d[I#G=;_@56,#8eL$q@R#!3QnM2Pu8b>brQHZ=Nf[hp%(O7;GJRQ5U(iGk_Pe8^p:*_2ak2RGbPg=;c7r&.f>V(?iLC5bN4nPqF0
%D28sJ47V8j'oML@(lnK#NL:MZ#>j[jdeWPF.1:4&<TBd[ZgGp2rLE;2OUk#BjG.^W`7.qS9:h:Y/hd-<WXb!`b0G+RHUE(jdi$9n
%_C%e=,L+*G`?^_PY1'8+al5>>D,5>fR',801d@RI#(7Sqm+'JpD#gDn_c=h"oCB>D_>IOioR:e0]n+"3,%;e8Xqt/kL_s_W6lqOm
%k?F93EJMHg)7qodne@cNamh4h0?R`@%dpC?>N(6OrP=ei.1SmdQG_<Ds.]Hg?0_F=lG_keqtf".;%:Rm\OY$*qdg6lFRB`_=@\rM
%%%V_J*I#9B'LS4/NM+ap"_WdfdjDJ^T[Vf:B8`I)O.bO."_W[cF.<q7coFQ'#)o6sO.bO."_W[cF,shk@RXpeTlZ9f,F\Do0m)gq
%FLDsJ.:VMr,Nu)n_UTg_-1&la(N<2s%6j:,O[.faH@Xm!@I4d]b0+dOJ)Dh>ctHn:]Nd96fs`:-[VF</S`/XHkrjn.ng/KL*B#X_
%qC25oPNegNqO-<KYH(n\_-k"TnMiMu6Q,P51mf)!qVE;92b20-H&$kCkEe"g,9P0k3E%Md7Qu-$Y$BoG-Y1NG:WX]phUgOg5sg$Z
%3b\&=NXE6;<tJ,YXj(Z?f!f8>BUufc4LXrr.?H'9SL5Zc]/_j'":7aAl:5c-9.pF[q)3JKQK0%Pjt--$HuM>Y!ETh&NsL)$`+:X3
%pad\MHOOMDBBVkgP7Z\i.e_&L4492Al#fpNGo[bSlG85`-$b#9]",/u:$g2FMZq]!_$2@a0U%kd<Eorf+R,b^As*>uVIh2N"Fm]A
%2I(,XIo0TY*8e\-SF@Q>GQ6^^"7JGabXqNVJ<_hb^cO3Lk84=8/@<d[#QF52-:H<#J)3BYro<bt_=?\*a(M\cc9_pUREuWuEuN9u
%`E`"cpHP$8]M1)93PSl'?C*KELrlthb\6bt#pp+aoe0$`=ZthI^i"H'mBXWI^#=h(dPG4TD$W1Q)oEh]O8*gTSu;I^)-kj9H53!8
%4=Pm(cM$U5;HiV5gu:?4k#h+DNM>B7K8:sg`%+g4(PYU:,Big>-IOl.\9T,s.kiMOBtisB:'>#B5\'HP1L+mZOpc(s$"=>tfu?ah
%r3>P.*#3fZI[L=81E@n^?(HPj(4O-\S0E]H>fSiKb"K\B/W[U69R5X"nectBq7o`3-_gp/AE,u:(J^Ra*>8`=q7s>h38^#+QR,oJ
%ft1>t]!Pb+lX@6Y@P3QGA<Cm(:,dpH"br5g,-s#O/M\6(M7]??SKEd6kH:@E-D6]o]Y#.e%W7E6omu"kRmlI\G7GZ^BPU5aLZ'Bj
%nH_LOfcgM8LGupbIJ=onc27ibU7@;UkFp_"/Mbr[&+Op2_fHfk@i(YF6cm'tpTdh.H+7LE6abD<r!:Jm;gP\f3R$cnVb,I3U*5lK
%o20-^9H^+USmTgs:rG4"/O#6bZ(k+TrA%qhSS-f`OKZ1*=^rRo^@@"4QP2$f\:fr_Oi#rb+qS#BC]nl@]hGjk\`t=Z))]1)U,ENk
%E4kC.q?r:=S'<L%NJFjFoDA6\o,eM+SUYGsnSmCkCQ4,Xm\/ne&*Mh;Fd@83hQK_9LmrTNgpGI\_;aF\XQK5/bpa]on1euPgq;\+
%X>\_1,s7N=3-1AcrpH4^4<3/RXt]oT`P\*NI9kjOB"h:'HHUWRMu!('7"]b=O,t64c9@A(0]s7C!8cssm8Mn65F`#Hgp\Z,pGhk\
%/HWWTic0p6J>_3<(#ik`j>qM8RnZ*9SfZ5G3IlO2'56jUg+f]-fh@co@I6k0*Io3V(Rere&2F&:I#cqD9]7d&qfbbpIeu/d#!V25
%RN2"K(]B#UJ7HL@dPumgc6F8^*[fl#[*r@O33s^E$V+J`:p(a"Nh>NSZX@^p@4j)[B"YED\Tp-,rRk-N5cp%rFV'6F,*5R>Zh(HF
%Gt+T9c8-[;EZPglJ%k(YOX_u\k7Wo7`gK1^.Z?-DLf>4(*YG@_^ZI0Y[!hS8_57>?`$K,t\&X[-(d<mPLChf&0Ug<BF:<jJHn8s<
%:=)fs/AXC"#Nlm17j0e"5ZdhZ3<+.p,K,1&&\7+jEt!bD^A$e.$4$=>VeA&2-sS1[6T!9pT3MLd[uBgb2tFB06"7F83k!.k71X[f
%YG2mBp?heU_c[\%(m&11M%;VoQOIqP:,4rnirTNqCHn>9B@CnEc3p^9lZ2)AMD0<u\h2'hlT9naCIkWDVi0nQSD1qn5/&.flsr*e
%[D>YV87$$sWUP[^@W+sLVlD,2:oXFNS9jCjKbJ+RC+'.u+$n4F35,'J'=([]H$UKJ$pOG41Q.GOfIc5`0((,<(d1h-EG+=qnpmps
%C(,9DFd>fe*.m#+J(u77(@1^/*jqkQ\$C>D0WDWo#`CH.f\O//fJUN+k=MAK[Pk*F(<\>qN/OsPEsVk/hE'UB2$LTXWG.,ZF0CG&
%bJ_aV_G7YUFpiJ?&KE/5l?>t3#eS/Jp7gS(C"m4IL9Tr&l"L"#]AsT5(]Lb:Siak'L/VtOh,uJkPk^69nH/2u//I]PC[,Wkmr58h
%UE?K/)tq[#o^hPaiN>r.ZUGF:#8_eI("9?b)NX6^<-c+2RO$O\Pu#j:&O)J\B!8L*VAq1pBBX#P1;$b/`_5JU<a5!kRVeC%j#qXo
%i`W%q?`9>ErAsd[9jL?9:,!+$VimQW/)4!DEB\?Ib9HB>f,(fMS?!BBqBBs/pI?tZ\Wn'%^H^oH$X?_R?U4@e1LdsAMcIS`rAagM
%C+4XkDg]:S?)K8>B=.<V,FZoE*G4GI3it1S9?//5^M#[?XbGmY9kUpHng6QHBKEa7q2Kdo+&1qbBg9pW3]jQRg\>$Kl+Ag*bTiS%
%kD_T61nA&H1mZG)C->!BSXl;tA6mlId<'Q:FS<F3ZUE9q$&0eaSiK3ffu;B"j].[3Ra-r$&t+6@d<'P)UA)hNUZq,Sl#]L2?I<k<
%_C;qcc8D'9hA^4dd<'P!:%Q6f*_g9+P^@f>1spEj&=[;hh)lkC*)5T(@P^O'ffc+_qS:Dk9kP88LHW93)GOi\9BV\KC[,Ro]3%,_
%pr]8WFERc5(LDk?VMV1VMl$$Dq)Cf"SXi=3nm4=f1n=pipu0_0()f\^pf%7\1E7;l'J,]udCTJr`DjY;'u8A)=TO3.+Hsk%oRV)g
%"je%Q#+mF/^aHn%[gpt/-=+j!?Ce]M0s>nGG)R;C'HQ,m;74gc:(0au=oWlnI;A7nBL@n)Mt/8rkI;e,l>gc2BS.j-nWq1C_TB.\
%XGOj)/4uIbAK(68:deVBIUnEVdB6UsZMG[=Z-;HDmUl!DnmCNSVdu,\GCfZ(>r[diTf^"nF"DBFXC(3,82l=jg!5<>!c?#]bafc`
%oSP=2?KTOB;7%iqkO+)aUWf86-2[7"oIb2t)uJd`nHdqY97D`63R?74gu9l>HUraZO,FY)g)ORIp3c[F37+Q=ot5Sj%dn[WVGDkd
%>E<B&YOiW%2i[:0l)o[V3bKfMs)n4OUXK'#OTBRpIS[.aKdfrSXdE*cL.JrW(S/a](msIK'%j%.cc[77bP^u&L;M@<1Xd1mpC)gQ
%O"W=QK^eh2^i;JHC@tFDUS#mme(&WLN.T@4*9ngGLh%%lF>nigV@'D92mPHJp:V9K"P1<]4Pl7VD/4mI7l6Sd=iaCkf6]/Zp/UUr
%],X+^qW.gDk'F5651CD"-XCEWp7O<Wif9]@B$ZV(,#ceM(U86LcO,EiJH?_E.cnoOW*5*49[['U*lgbnK@alr)/&Xo!G%^'X&Y@X
%FAA[?E(1lJTa^"4":es]IGmW#Qh;2i[_RG&p6AbQ)L&LkG-OEuj:UAN)#C4NkI5@%C_cC5aN)tpTi6ZWBe&3JO!etHPW+YJcBL?4
%fsKf7X`3H7)kTo[4%$\_Ri6KL3a10+5Ks3@ihBZ$8AN#EER@i=XAR3HcT;Jdc!2P8T\WhD9B;j\@',JP=*U7'X]\_-YFIsfmA7Fi
%';pb6O5hb)h9Mh8q2K/<gNPQ_:D(MJXu4/(M[s<TDOe=G?p941*_*=&Q#:#(p(:`)5tkPOFK[BqkXNUt31,KTDSZ]!m+$m'TW]K8
%kf/C];sC%_f9Hm&h61/\0_4>KkRb\NlsijTd75%;5J[m_a_:]0=VZP/\99DVY.2_)(trP<ne^=i^?Y\W;2I<Meb_h=A>]%+Z]iEj
%j11G%6phj:a%dC=5;B=3Z*2YV^1<U'`j^6AOa6/u"X![*:3&=df8`q(:"6LnN%8(p:Q")3UGg_VIXX4sqd6f';&ls_UQIB9VBL8t
%`G::s4+eVZiT*pL(W-"u&B@j8\]i-sij+<O(";a;DhcWGd9)?dq"&4$_mUtq(4"YgYn#NGA*i+:k:u!:KU5r1?CWOkKd&/"op"b]
%Q\okWGL:D.U&KFYC7m:[*B%p3iQ5f^Y$2pTngQMs0f1Hr))&\sbRnhUJ2b605II&Nio/nB6$N[J)j5dDS&=`QJlD$.]!QkU.G[&h
%iAlZ46<%-:X>oWJBVZ\&*%-a>@ej*'+M<Z<m[H3FY8)2MF>Q2=$p.3&hRZ@P)0":[;LP29:(\)AgiPdJHCF`es*T9@p/@<lmqZ![
%]UdrRBC;&5*PEdC7-;h(8a'\#RFnG!lE(#E>\ZLf=.Q,_A<^,3?A!-rphlZr'sjZKh8.%j?m0NhMWaA1jgZT(ID6]I[E:M`Wc$,%
%1Mp]hW`p&LM`I-^`Q=9b>7KXsjbPsZ/crRa\O<8?*0mRt;/%*E%P25\"K,C)#BTLc$F7Eg0^h<:&3!B</Ro6-QUQ22UUr*LInbG^
%q=E)+?BX!HQ%-'5l`jKZ0X<3uA=3*KG8mmWROPXIda;ebs)i)90#@CE7]QEt0^I/q)%M'C^pU_cnm&)@]@=>*Nh^d"=mTWp;:"-`
%[9HsQ*!J=&5nd]-c+]rO!lfGsR$ZB%ZfHuOOQ;1)hrlm@>2OKad^L$`qr9BtqRgq2NkB%/P!_-8+*$f;`I6XcY!S_`h?[5,amf7u
%m#\GbY`EXM'SbbU11gXK<3G(G7rGh.D?0j]m,U''bnT'/J0&tG!l\8aK&eq2Nbr!BnJh3GN>n2UlKG7_`Rh<c'aeX8pHCr)m3JNG
%_li:LFSHfChtLb&be$oEs1pgukh$DW'9<QSH0HdZf&[pqj*rcWQcjmjo;ni'"C`taBpN^H8*Q+n!S$S)BqbTENg+AhTMlmEIo1`F
%,Kr-HDi,r.#KCS:!M$ut*2'$tPAKJ:$IE]"TP"uq-^Y%:W94jFl7WLkD[`:?P`6nI!`daVj8AnO!<'n;qUUe"?JjOJ!"[BbIXTLm
%#P0@dk?*j`Y!r-f=Q*j?b""3,H:r=c($.5OAG`3tI%E!JF",7e.G:g)hHYs/g%\kN6;]q%C0>U1b%FejEi,RY`[1:)7]V,,H7%tJ
%$4Z.`qWSSoo>qGQ?e6rM,hH"<rG3Ub43-,Q['&;&hR7n!qRK,Pbp,.]Nk1]C2jBB7IXZ<)c!K"?e$Z1tp.h5I>sEP"7Gd'BQF_P5
%!k[-<B\L%Hr-#2BrG643:K?#mh4KNmEm7e>cZO$ng$P)Po;M`LX0/)lL<,;'lui9^X83!UYFMcjLNZbEUTU4pUq9s`cPSAnI9f)3
%Wd[l:V$/U^]4R]C:tO$!Nl&9X*:!C2=7lr%O3]g%3*8>XC$YU57kk6u:0We*>h@;M'`48[i-#"RX8;YOQ9OU1\QAHFNI2.2f?ZTB
%7J"-YZ*'_j;^C_d!AB#iqRJ[mj8:TPW9`W^4D7a0fqZtXp7,\/g#c/`ci'Q\aSDa;lXtaVV5iF;p%WpR4m8Y#f&N5_mX_G(2fh,G
%?UDCq1l(P2I_NI3B<LR`?Ib+]12C/[4grU1[$r6hbp+pr:7QNc(^aHucb6@9m*^-t7uClmp%SS06dmH04hfU1TlX5Ki:ZlBdA>+@
%)m"2\!gVbdW9S#2\XK7qT/G8QYNk9bq&$KAhb8FAG?mFW0o+-.lui9:FkLHY6*iI0eb':ipGu;[5J'd7CY"I;pjB*m?M4)*%u,j:
%\=/I:DoR?;Sm8;lq95Dt=k>=k>1Ls8!["qTT3][)]bQP4B$e,<mbqYf]Z^rYjAOOSQl"%Db`dH\5Q>n",K,2aolI>%(I50G?sHd9
%pM<+`6'&U+mXejq@OE&uYNt@((`M<,VQ];u"%o_rTA@]31j/cP2ee,OFaCCaW9`X7%r@6.SZ],f/]>"e!S=fV!-S7qDtB'38?<Sj
%kbkSUqrPU`ER%J6c[%VD\9CDjQJTRAfn8,h*_B%ZkO[6*3Nj-3'3ui;>TN9-@>fm'LnVqFKl'FP(&cc(9O>go*XF`!5RW-X07HnL
%4P=-7CCe,$BXE'U[[!Dbmr"&;b>YoX2A`F('?!g,P@mDQ;)n+o\Isps"brfHc.?oHj*a#"[eX3&Y-4C$-dUX5#"#HcSeZ#/kuFFk
%G?bmJK=@/n3%h(^f$;*ad/&-=&J"]O=5e7./u$%LmCZ^1kMt0,iBiq(Ko>hf+5nu'&JK%[kAfI`ZZmnRhd8MS%k$p9Ga,D+_W-+3
%GVg>hZD6r^_:n*Cr43aD4;;8bBRU*fJs-L/G"0r!h<&/;T_OIVbDX!%QZ-C[Ecn`o=R2:u8#M@&Q.M)<iaOWh&6nEa7<XpTb$jK3
%Wk+d0Tn)*oe5//M`$cd;DqjrkZ\Yj@l_:h_JVf#H]V0:ll$*U;V6+^JI'%?6+DDk4eZo:]<YYarT5W\.rB<C`*Menq:.#W:?Bt:c
%Ea=]C$2*jq=f=PLm0\ijK?s)9^"S%YeM*P4o=L=D-lh"Lg%n&Q@M4`Ug-tuAQh_<#LV8pL(IM_CPcbE`q]97>]"OB`RXY/'E1!_[
%j6HqB31Z%85f@Ls]Nd%!+hBSG[0<\EiT0Og!<h7#^dk5?H<]fl;u9Y@E8l3NmBlgtTJVXVZ<*hInBGN!;%_D0DsaV3]6`+5CP>7q
%3VAiJ?U2As%Y=5d]PO>"0>=\p04[9_1\f_qEq+2p#dI&=rs;@R7XodR-."T>EDit23Vo;"5Ek`ceQ<ah9[c418s\[MbJ4?0[AT)S
%U6*Xe#htu(ep)Q1o(!91JOttVF>G#j5N$ai\WPr:BJ3FFfE[ZurZDok+%bR`o+Lq6-`__%a^-XTm"7Z&qqrM=/CG??NK&VJ`m<G=
%V">1j5-d@r@jcoeSP#QUlq\7RZP8bo`pZ.UK+ejs.@8>tkg-"UII%1i,,2Ml$G%LEN86!o?36(iJ9Ye/J?(@G,1IYSB#1dC_A=m%
%o,J:1+NVYGh9+FLdgm=Eq[A%*Bmg:O9qhqLT0i7_Q.@:1A@"BB`2bi]C::g9[%u6=YNU7[]r&G`/<d<f`mlfI\2*H:h7g!8A"!7N
%G2q!%"<SjDY)5`.mhUqAKgpJ@g,lA'FD5G][&Y^>dI3KfXJR1+oiQ9J#P$l"s'^bIf6(<F[bg/gX)jX4&>]q7o3^_-o.23bcBTMq
%>!$`rgT="WhJD@]g+;Y_#ZmS*N.6JlZI;hC&/;Mo-[<Qd^;/-g='>CeO'@26G-=hK#Ml#S9tHdSY0;<5+-n#6&+NlFe,-ZT*Pm(W
%hR"$sC.2+FZPe`1pgc1:_]Wj&%_qJLNtUD/WUJf>4e"0-l-6BH`a_t`5o0RXmU7c"cTA_d:D<Lm?:mN5E$+YH6OhG5J;94ZQaJa.
%0JJh%0T?nukLgf(J0T1m6$\9rR$F]9gEbbt)_$Mii%R\M6#Dkqd?1VgcAm@lWAL3IBC/DIM#T/\"A9(XV]a9X`'@<fa#Xu?A_^`P
%JTluHAaR3YMjGul>"RXnH\B]g2S,$Qm]I''e@hI4\PD[i?g]Rre]%1Oc7<DA#B>\B,'u.MM]'+@``A6nYkrA`o'"S@TcH&VBu4,L
%)^jPB.:Noo[ASh?CPCQb$5UR>E]^]mVT!YQfT<SoKrT5RM<1RhS+gda0i>%,bIkbq5mtLQ_7*XFH*'eQ@sMY!>gL-$[VA_5l*,uH
%L[KohGklN>&S<8N94XH,h5:t+Ant168uZKUeMXUQs!#T9M,GSqG1>?7=4V72m*l6N:_NQ;qe>.eQn1/%kWV)]7cU=b<^8+*7si@]
%Mp72aYVguI!-SUNYZD98UdY"E"LK9d^fqPC&Tu^IEod:/$[<>],6Zl*P#Uh@Y7g>*GJ_;IhH#!r"(8M+("i<HVO2[3cCnBU/Yn&<
%Pbn0(eY=@6nZ/SnJ0cpmhqep9A+r[tDc(>,Q#6%?0B`:cf:5'ndVimnG!joQgt!(0?7j=SQc68C;VO:''"f@li,EcG[U'#$-\kf&
%]-Po>[DQ/2(VlLRP95&qNQWi=`ruTRFXR'0rSE^\/(*bnoIEK&o_kZ^F<Y5a.T5Wp*U]8/[p5GWIM)I(.3Tm1*$?#>/W3EiB2s6d
%f31rCAA@aeX6AIoD3TS:'G16"=2\)"I+o6K[*lGHYt/]KYhSqT+BA4Y*KZIufdV;7ZJ,-doL*sdZ$mr]g^8!'e6;RJF&a$KNmH=1
%hT,#L>V7WL@;[N;?Ht'7n\[Nf2'c:GpS@(eF4L,pes]hrr1$%^$]t4^qkDis"@PeM)lquIc0[Rk)PStbMb*]J#eQ(UWfJeoIa%j.
%qDGVrqF(Ko]Y><ICN*U-,(eMt>,jm:`@%R+A0g\66:9(aDB8[Va/:[9bL"U$r2BiYf(14jY&;V^IETF^S700`otg&en]%\:]4F;D
%AqiT16M$+[ql`;NRAmn;LgGU9:A)RkoE+aIWP7To2'Z5mf+>Eu,3"`B=HlZT=MDcPLFQgqK-si*4<luW03<ijESQ(pI8N\OL:=!_
%Gjc@(c(J2^eQ\%rIAT;NbMqE,Ybj[EkuTj'j_G&1'8/4HU)0B<"Ct6C3R!^%lCTfip\d@YWSI]:Tr]uG*BDPR0"WndX"Tu=eeEop
%c,a=@IVfi1j8Wo0^gV&nVK8,TX=4]jK)B*gX9j_c\*Hr)]@S7..32Q0,,,ttd)XH4N6)oFpKKD:?Oel]biF]"bUbQp_I<@l%F$XK
%CC8"I5_c8N1dU\=&&an<0d`i/2&0nqOi.*Ob[f]e^EbW2j"Rg^9HIBc'JbmIP`K],V6IM21F=Zj$sUPN;]s'_*+hZ_cH"Oe_p#()
%q4JNc%PrU&ai%V:8S2F8dPU7EHQA%rRuB)<)KPXj42urKCh?W/Hn_G.E>[<2!Jd(?Sb)A/YURhqcM@7(*J^&tbQQSmAke8?E(+T5
%%r6hU29rC+F`kt7@j6@<1T>H1_I9;b["'-.8j]!XL[k3Z]NNIWcM:jA+gX3W2T2Z%&(Y:/QujQjfb?r-?f.e(WS%@`*$<&@[JLqb
%$Q1$*dTdG5NAPB#r/f2S:PCrl&`U7g,W<Y^8S!W%b7I:?O\qS%T0bL-<?7&W"ps.<Mk+Y7e&6G<qpJ$?ijGlB\VYB!Uq@*r]BBf%
%/!_@$=`+MMIao!Ph]DV6^2Y12YET=ik;DT2OaTm)DIPg9eopQmglf$NO0W\Z?V,NgIJjaBq8oIkK0B10:%L(7_`<m]YC2ur+-QC6
%I'COO>0cg-fSm_0%H57Z>&NK@en(S8=A#lZ4qKMpU%j7bXE<4K!CHq60Fm1Ai<RVC/cCJZkp"@TSm6V'gkQ^!78%Z>QH9h.lmb-=
%eqe7jW-j$:gj4"EZ-Mp^+0iMX1rsEVj#^#XGVTRo@-i4]#h$o$#)!p:#\Z*.$Pmne+X#F#3=nU0_iG3/8f!%%'[bM'T`]kmZmu]N
%V:CV[#(f7]#_KDf!\u3RZ!t8hI/s@]m(g".'@oG\<lVU!Nc\[uKHqk"0k$F/HQ!HaGF?GEEs@:kg5ukY0K"F@Wi/9>'JY]4lO^QC
%Uicqb"45['Gd<B+3<XIEN.*,ocNChmH_(N4'1gES#*:E<A#\.i;9>WiO#;0]\Sn7>A7f&`q.`sjQI?GroDP!5@fVI9#QBsF^;g)B
%DS*5,VM$Th;A`ll%8iW@B&bRSWY.nW%cJ'?i$ac:#GCONefjg*=GAdOdpC[?Y92s1+A(h+0,F=+mdi4H'm=ON%6u*!Iu%N%n-#TL
%AFQjBi'SaK+i]G"Asj+%/gYC*ni,1(;>uU)ISc\)lPED.WfMPBemcK$NOeGVE?=_rFXY0Z6el<P1EDb#Mo$&37q98/]\"(("s]4+
%`&pG/Gq1u*2O`mARHkE?q;4Y?D2H*\@%ac:ksY)%D55@WW"%-R-COIJDLg#\`0T_^)qcki3\SV9P\ZpNZIg%PZOta:E^&k]&c.LR
%L5i,'7OA],19iFX?Iaq$n+bm'fL7kL`h`158-1sA4o<k*8Bq"[TcT>(MSR]QO2H1h.W\NO80p2RLA9kJQ2X7I'Nb>E;[$53E>GD_
%>@(=0^4DV^&h>0G`91k(?3*^:Aia),\8#Kn<pE>21_o;o3f.:g<UO9^>qsb+RH*6$8FoGKn/ei)4)).<T*4bj4j;hBUl!7uomC8W
%Z@0Hmp9h:T>V%7Zh`+)8Y2AKH<,_%\0cj(X2`a+\>b1X,NjC:iZOgIr#ZC[Z;G.bbpM=YoPh7A*GB%)3RBhc";OC\q9*SC`K_7'D
%aBU(7"*NY8O$.=Plj^':Dhg&lp4F!,Xsq\4Ep7C\W#k]!2mN+T<5+Ka3lLRomEu2m_pq7<8b>VEIb;:.U&Y\8QTQN7#7Z?`X0Lc=
%`83D.[W*`#7YX&\R0GB'$T`'e?AR"`$M@<?*\:k0nk-EjiW_.5;6NUBP@=Q9E,FA26teGV-9DD)+P6OkY6b(F^/iiK\oFP<-k6`,
%S'p-&#9N93W"f9eCXE.CX,dXSNTndAcSpMZk!mO6\($?\C%`R1_&oS.kL`cJs!FpS*ZPd\=/<ETZBt\>cL!fbb9ur<A&hnb2'J2O
%N<;O8[%Qq6Hc%MAMu5,\UVl\gE([/!PG!oRbM]==]K2I6Q`Kp?q%6DeV/Z:<F:sIadtMm,rV#lt\Wn1Zf.,n3k>S[b??S9Rn#l)<
%7FZ_S#j-sQhU7i?[MG!?ou0D)*L>rH7n`q&&($As+b:<fc&h@BeoqBEJKJ8L-b86tjgEepmg5D1IEj,-M6QN*cKIIffWc<R;t8e3
%5f?m<]`rKCA5.u-2t:_(PC`a]@pVS$bDet#WL@^+_"Un5!eIed%!SMcm*^,AH+l2r+s7(XE@4k:I6RhGf7`/cjqn:ijFZO:I\Zcg
%ni?*N/sM?ZDa',X,=)=[G"PFk,^,Bi0-8b>]X5)D*Q)o8EjXV;gtd)/bPf:U!P%7A`tDM5g>UOKpFMhLk;""l&\!0r'q1&VmK/8U
%-AZG#mqmqaio[&$jDX*d6%fORke-ft+tSlL^Oc_))Bb2Y5)@"bQjaJ?r*FgU&LK>RhAu2UKF&)I(\IV;@6t'8QmiVu6Ur..@6t&$
%Z.L$.@6t(<6S`jRR*_L/XlkTJ',j1Ls+pFu-N#()!jQ)uKF&*XCcP9ZR*^BPb5!:!KEeqn*"dac02.'*',p@Hk)Tc])F>#T7)W_-
%KF&)5`bOpt0VQ=U^UW,4JIl6V"2b%U+Mrd9^9T$;0S3t;)_ln$'I*dIq,@Vn=Od!3$@]qF<O:6D:$J+Y?[,"4gki1r,d[Oq&<Sb<
%`TJ(REY^fuWHa..WY4YE\!dGbA0#!$b=()OqFb!uWKirb*U7K_CE!LWK>8PQ^,9dI@!o\sNdY3OJWT^9Db>%Jh%WV`fN]nY)*qC/
%,YNH0/.3Fmdd+J:$1!@O"FFo]7,QU_BsBDj'Tc;/;\M71G6.>d/!A5RqK-u.oXr`]d*n;b\,%`I+BU+gSMon[UrW7q@b>3I:,P3a
%SdAK'8qMLK&lMFffRlDP>(GY,Y)Djm%TUsrio-1;:Fg..J(TQB]Jl9VGicak-+p#I3eo"L/@h-JBDq[h=5o!\LsJHOl:6_&O-eh.
%^-;aP_j^@B>:pcd[gne,<$8K\Jn-XS%\kp3?5-VHJD*D3llj_^ZT4P<JhG91PXGDT8W?[l\eb5lXj*#^<u6mX&Tbm;[(4$%_9ktN
%Wcj(GeK!hQ/=UTR0n+3a"n.Jlb7fnXiFGO-;PM"-eI\)fM4N3t*HaP%_'B@?(MdFAc8n:FPEaMP0W@%K`#U&SF4^sLNsY(0Zb.rX
%c5/930Hm:sK_SRg@`Us4FTnCh4frbp,^)nkhRI=C.i4h@'ROP45rba/4_W?Sd6\'#-D84N'hcoV\2u&5!$E9a!?5_!L.i;;o@KA'
%M\nd&Y*1PYS\5lh`:5^9=\:;`bkd*<Q$u6mX:,hr4D*_Y9?E@0]mm4r?_?piYajkbpcTX\UnP"MCdrr7Q\FUL.%%gkog/l\/fLjT
%oXI+:GTWC@PQX=uM[,(u&BGtE-,MSG#SF[gG6.dUe^j[7p]sGL,Q^tP;^3>1\^ckqBYEaM@=l;L\_fmSVj!u?OMnM)1FB4(U?-HV
%H,HEnr6S7\fcDKlcUkB=Bs"/\DTA8T_T8sdQ]u6AFXSWBQ]W?,6="4Kn="kd7h/7-=l-kDR7JThI7mSKV0K=!q;A9k<"AUVR\p1;
%NF`@C_WLAk,tmZc5GJ#MACa+oa)TZtdl#6K1:k6G^0S411_041amo@]Gh+?T^."AUk@I_@Pj[MWSF=6ZH=2N*I0VLo@<lFK.&"pV
%H&c5):Hq)cgClgG%3V[fF]6tHL\$`P&@E;n)&%g"!2>nRjp%RR!s6kM<S/<f;LJIS$]*)8RV:<BEHDM@GL5niJeUF@n'I;&pk!CR
%IK<m7P-gkknRPR7S>-IH-b2`8EpLsc^>[IGCeg,_%#HcI4ID05i@?#KUqD,[hJbVF7<Hbb<OAICR.,J8hEeUfL.NtEE5oekoDKoa
%U_a%-R]99p,Vdr9[msk0`uk(;2P`jR[c;T9OkdAMbg_%175?%FpE_)"7_+0coNl4_25rb,=-hmR,dT=_Um,F96H7;Dr1aed3@mPQ
%,21Do[[?ntQ6C=b]%D:BK?:Zag?q0o>r]eY5=o"'9.m`0S`h+u?:*a&k5$eblo&#^+qo:M9?JfaOQo%WMQ'?"Wn>eD:K@PMZ?<eD
%H4r#j\\=#\NL,t=7P`]Eh3$!*jmD>u-EuC",BhQh_lI\g;[HPsJ5."9pD`;t>8E2Rru$<jRGNYR9^G.^7mSF8R8m5>6$pnA`6S*t
%c;@C]R3srT($Suc7?u-K[T#Dmr8C$YrilfMo[eZ(!H6>!mc:%sD?5"JVNV+[ncDYs5RbI@C)D"^?l.(3KK-`I&?HfYV7U_;[,]G8
%-9[$"I.f"5[QK4g!nHeeAU4C;CN/U:#9/:^o;_:7(fYG=hg`)(lI4_Sq:Y!LEoCkU:L]0Id;cH?n$hhJ@]f,EeH\#f1eV\-fD#]n
%:6l+K\))"PoDJ#;#3goSpcIE:F0$bDoC3`pkP>9qMrMc1m+#6pig4WX6?Y1.03X0*HRpV,:&:RLe/.o?h.W41<j5%]0^sJ(H>BT8
%Q7A""PCV@1`Q%$UcLVe2'9b:3''QVf4;fk:#q,PB04.ei,D2]#2_q4Si[Pi`P<?)`!>ZRDS4Ht`YELha1i[F2c,goDJ\?Zt)iume
%#,>>16BV-<ETOX?[hCqoHul&C)JsA6Whne@=gc]UF/MAH?NeA*+aVT(Z5!?'/Xu?6Batd,I,ePY&@#$+1IQhk3cf:CT\^\F3%QHf
%mKFOSK1ECH6kG1M7"bjUi+r9!LbLDdhof7:@7!=01,hUWHt#mp?@Dtg-8b43(3;ls#n>sLGOC8@T`OUnreN8%!D+*BJHuo-BEaKC
%,Jo*<%'fUQ_M!Z*S`eJgLbPM'B))TuR*`W[U2WR):%^T]],^NAS3J2kBHSs/:5C#Q_h0+aK_?815k6>K*>'VTKIf\BV`PJKIZ#0a
%Gam,$&Re!.:Lg9FHB'`o@/h#S@6t(h\=5E$9P=]#IK^<1`ak$Wq?>gmUB*q&^FQsc@sI0nLj==$qS"*]H^Ps"9P?\9q-DrZhokp0
%@6t(h;4J41?8k8#ngfMMTn12Q9ns!p<AQG_\rAiT2Y;#\q3\h->1k_#FgH(Ud-Tj0V\mZMK+toD/8@3TJN5fG@18R>)3g,K)DkYF
%e3Lne.7hS&q-"jl?L.5mG]]9MfE;;#1O3%%$.e&.]iI>-33[];fX_\\/-KKW2jd,JEir?0M%gc3/(6ItcL+H`\iE]Z]3BJ!gKP![
%BXt#InJQ*N[8+QmA6!G./?8tJRL'U7J2<VZA%0'`PM6Bm^6PYM^(W_4hN9FfR9rSu0u#2%/J!&bY<3-UTfIjl070`HHfKK[XJl/N
%gQNsD84_nV,UmD![DZA`(/g8r7ZXU=4h4=.&/C?SBfdY)oNMK&P+4XBQ/O%OU^ZcH.IP`1s":0@nX\c&U=H$7Vg4[u5^8[O]8b_q
%GE]l!:lFr@]NYtkNt,rS9^^#`HqAVm2coB?m^/>eIF=&49Lh/jGecrk@'Z_e:\dD<Vg`9Gj@AVL+eFd\R:3tCPb_b-l[\q^*?lb9
%T*Zhj@;kg-ABtf?JdpE").BfPXs,0#p\cV^6f^p/LTkg/!Al_6aEYR4FmM[G/eGj&;IGkk%M?9&pN:sb!krXEp;((ON_X90)GC)+
%>]MWC-:/,ZdJirlH<?uKDlNZ7Y^=nd3jJdHab$bO&2tW%cj`g)8:H%b,lX,$TWJ%a#%DO]>:Ad,T2AXeeLH2Q:;Mr6)(98`!B%/T
%O?He++`dE26h9YTSZ]>dG?^GNrQIT23^ecNma$Hb;I;kWeZAu;5O^;fb^n=Ws1(=-a=@d2RJ4Wc(Q-j)ml(,hi]p49+$=fYr.jIW
%n5QV8oK)/H=-s-Q5K=*"lj?7V'%^hu]36pBWls.8c^R+ir,D34pEr1q9l$?W8N!llHR+S'Iu=(kDN.7u:OY<G(fn,Ba6J$.rlL4%
%Xs9)9m(NdK$<3c2gCh;q##_'8DA#_j4^AAa+,6]blap:4&P^H(Y-%oWLCG5fE;hSA/kZ#=+*fi2VC,*FY1N;0:X`@#kRg2PPW):5
%E)CZKlg"t@^it7>iTfama$iS#^lHadojpI9XBcbCDt[+cLn";4EcI98-4jf3[SULH2b+*\N&'tH>Q58:n1,N:\<Da</@N"6fY^un
%bU!;1;tFrC*0XEeV0M&+r#7^hqJ>"PP9(5UNtF2FP-EG+QCO,I'5;Qo0$fE(p^1OdnT#q+)SXFJBF]Cn&sk(`8Dr5og*m<;lCW!u
%a"uTPk5N&G.,sU/5VJ*RY(Qk>92Zj^8/J]u!Hq4T;nB=:`;Fjr^"f8<?F:n!6-@TONB1$_mP88:+hFT#$h[LB'[mqW2iL.BcaBmY
%n30E7+@6e=[.!<953`\jJAo2$g1AM*>9X9F<mX1jh*k\P0ru8r'T9jkIi0?AV;_8g@[[7WTH0K.*-iGH3$%BsI/2ZiMeO:42q0`L
%T0n6kFVK[/hogoAcsU/''_%+#cGtRt*V,]AkJ"<h%3$:o&dRFFQB3m^B\gXh<-u*,]`W[RYc2>BKhY7,q"+AlZ_dFp)LX;#pZl1i
%He3m4B(E,IIp==G(ThQa1=!hK6drQ[=qdB0jZS*Kk2YWs0>U8AM=_RHWJ\!fiIqoc7$P/r2<OLE$Hd$EN6nAM'V2WU]Q!a,\Qa45
%GPu7&.1aHpnr>i7CuR]+CH8q1N1]DJ#NTI7&"V?L8Qpn+fZ]+pV"i2+QD5);h?Mc`0EcB!Zhr%sEdM#Jhq$#8g/HSq_bd6]nm6#t
%=gqCjZ=6ueP<XNTl05$V8E!sZQc+cl@dEd^6$91(;le^@gqAC$UX9iFimmGOcLfm4!?KJf\Xe:.5*b/2+La-d00UB%)V7??j&mM6
%1P9mAG9n"$\+/l/l$rh^GEB;)s3][DJ;/P$mg`7"4P3jrO+r,hmg`pe,JfIWHD*<rnHDZAPSlGKTA$1Z_ERJW$&5Be%EFh#p*5@^
%%*[I(;*G<fNQf$?ak1Mr9up@7AG3@q+j7fN3i#b2!N8I4@!;QD=d,kp_EL[+`'c!o%\18JBkIVPQ"s#bKJ1[=4Pq;^>liofMGPKc
%-9,Uhar/]2R"jOh4d$C6T`ZY=G'$`<5gZ5KA;:L`$o#4O'p:7Y[W;a^RK^Ie3Bk-P%T;<8D)"OCm>Fk)T-h!ATf4u*)i]NZ8d-Kn
%(&Vg;j;*Xl8;ZQ$N0O6RSY.#Vji`a-;R"V26`*[0^t(ZOYc:emWOdQjOuK-Ic)W&aBWoBS/d_Y$/<-Ql']2bl=T!i.+e?!<I<r0:
%`0dJkS&LRdW%iPLh3;"%;C`<DKHbS]JgT=Met]/dkS$h&I(!pCa]etA7;CH&+@7i+kn'W@*YrB3oT$jI,VpLFqOfPb<b-H_YNsa\
%0r>Zep3ZQSj[AD>2DnBH_K38P*C-o_5>[I?OMj-NcaLTrA7".E!EcU9QQrR\I7n!37p%/@,CVqV()0ueTMZBA_@V]OpH5)??pkoW
%0%E(VoO'LRGjah4SsK!6H?q8O[f!i2@%kXpVn0ZM/p9*MkFWeH'Ua0j&\B#F-?#hi8e4Diq0tCfQuOdoPo^>hK?Xu?%QSdt?@Fmt
%)"pl)V*&TU)FBSDbL<>`J]1aiDL+"RPBB:k:3nVm<V/6!K4tl!Zc0,E#GX/dkE@UGkr_?_`-s^0=NE->daQt_(h*a[@($!94Dfh>
%pYS5h#n;F`hoaEFUB+hKkEr0,+i8m:,fBO`Si.SuS/l2W6mUR6"2`6bj_<2kT[B-IR[=9k6k]3&9VKPrj_<2k5l>&B,N:quD1>9)
%2832k-b&J-4h%Ot!m1Hk\S_<+/Monm=Y^e.i=35`$XN?>VNP,e!LL?.MTgd'o+l*?0N2O87$*Zh8aj<G`7B]U8[W<e/A<nVqTW6#
%V*:']mL0_cCl=jNDV!_H=Nb74Y4),#>ruoG>W@LD2a/u5ZFkm8$)r4`h'3F$jsT_tV+'ktONnH+T')$RP#UAW/tP[F..%JC@16Q\
%#V[4`;EPRmr:jlH=&MWfNpL3gSknJs/J!6hl8JN#:oXNpUa([t.#K0h'_hHBaW+<4kKn?r'ck"I9e\kT&6kD@CJE=a9RKsaTdJAR
%'9:n?JX(U%lsgp"Cg)L.9&bm_Qa:TXG2@US0:-[1,XY>"ed3=MU9H_)2`TbIQ(h[Nc#$FVpi/t#c=Z)]TjrNMq>01>a5\DrKT:^K
%&<@*@pBo.OVfdr9[ae)tqk.PA&C*Om\rs_3s.\45`*E<gMGMWI]_QYq0tb5';q,)`?_:i/NpeGeDa$J>4^'Gld0kDMh&.)np1aC_
%B"Hb^Mrgd==P`N1M8T3bZOH6mo+JJV'q"*oT9^P9C(hWI5KT>,KJeQNWn[,^W>9E1VT>!X.dU/i49!Ze`I6o:V/](JE#$).AKeHk
%M*CML+N!LC613@#Sg1ZeDJb<VjfrJY5%dG9ISr5R+l_qA(XMl1akZgj2EO]SH"F[tD[-qkWkNp_G[;C4i)__p9;8Wf_H0:\GcscJ
%[8/DY7G^cRGD+f<QE;sAV.L&e-0b*&2C\"tEWuu`]7W"4c"(oLLb?0DB7<@P,BNVO*i-5LLC/#=NXPPE<l&/<mED3gj28@j[?g[_
%r//6Cc!Yeo\H28ggcY*?]T`8lTW@2FfIl<.O(U))1UO=QHJNsMVJqcefQ^-OIJF8[P,WqO^:kp>M;AkDX7sn:\,l0nEDH4:CJ@KN
%LQ/$F<CB2c2XI/2Gn3p"'6Hus7HZ/u)kTJia-7uP\'ckCEBA>@43U(B(q5.EFL?tXd#0%PqpAshHu/h4Hf*MBb-Gm_$ht7,U4`_3
%O9N`t&2B(k+CJBmA[qK+0CNh/CK>SVNYKjAmG@_&q`3tU@lI\-euUUH*0W*SKk=0]YoO]Ae,o2*bDs#ShAoa9\03X3=>8jBd"q0B
%Sj'<f`k#hgb"QN$g3cU7FXF^OR45@>C*f'f5u'WXOeN2(R3o54fp3d;77=1o*Nd*!9q3Lc,llLQph)B]ILX[2,a1Z0RW*$(OniN,
%;R6k?,;[p9<"I76Dm).SRI7kQ\Y)/BK+`Jp$V;dM>opjQ'`#\&#L49L()NaVd5FCdKerOu/`s/?]lL$2p';L=2\K,tgc)Y*1u1=r
%\Hs"XM[@8eo3fB-ZqRNi\pIV0n"]JGXpF=F6'#s(N'X@Qn4:uEldKn96Bk9hB@E"&Z4.#ca6oT$Y"qH`TK>.@U5nc-15<,LoH2r#
%3+X^Abs6(.I%T;s2sk[TnG.cPZKO;[29@fM(6EZVkXn0(4U-U0+l1MnGa/+u_CD$k$-8/Ke<-.NL/g;Ea,?^E36IQH/9Vqhkg$?#
%TWlS?3+]EXeXf]O;-=Na`>4uLJ2\DKo%/G8Q,n3D:cld30%%(ZC[ZS[\?9haF;iuD<,b"@5UM!BH@D$R5hlic^^35Apa&j[cd/dK
%b?<]@'R!dR"8uD`-ieO#$hJo=/r`&n7:et!,Nls_T.KK9RgU\$gZ#FZ!HQS&)FPs/:Z@S20Y-OC+HmdG6!d:kRNp^F#23('3()fa
%gsL%R$X<S,A\tbjlWYt]`=RtPQkE'jVIdWNplr/._K'l<TZ:):=AJ!,/ffs].&-qn^6KJ"_s^4ESf-Lcq$4bj%'n3o@`!`;\)P8F
%GSp):kc+mr*oHm860G2>\@q3H(nuV&#/ol<?oV[A6H0WQ`'1pj/uUJAQ+.sYY-:d\&<s,d7a!_Z"nDSd`<??+6X11\8jUjt$K,S[
%6WB/e/JXLFG;(_9e$)%PjPf0!"<XMAK=%B-pffLRrb`QJ)OU!aa]RsJ?9&meNY.X48EGPF0$eOa(55`:4LD<s3qsu0CNNZG=1_+P
%C[D/T[lb(V_u=gb`p[Oc7)Y#q)[!k[)!jSG1NM3.^BP<2K,Nr6:b`1fK5SF2C".j=6d*E@8YV`:2D^I`-m(usBu>qc=Qr(#<f%cr
%FDpUf\b"Zc9m`+FI^+"^^NP+Q_@=L_6]]6%CFuL^(A9dqK,hJ#O`Zc!,82gJI<^\2E#'pXg>MlqK5DG$iY]`"@)G@.Pc^VTLa8G7
%[=Wj:&+*,C3&NTR.um<T\6(l"8;e_eYMj?);Xr^/5.aA7I$mFg)>WSqi9u?JU)r_,<305XGV.7g40S^pR2%u)2RaVupQ!Z\2c/uh
%=+R\>kAWn&X3Yn]B#*9A5Vp$U[t,1;95:1'U/XkNXlU:h^S&ZR.htRVK[-[TEVs,)U0q*?2O[q3:Bnc?a1V&4(0fb6c:BI+c:]g1
%)d6qi;A^_XgAS.=6c%;Od'pgj?)4'`?V@0mO*:>FDuWK[]+TL2c=LY5AB-n6_R]$7RI%F!kJFdrCaE'#^M/s`q/b4l20UoRBpE_s
%*oH7)fep7Vj'/',]@Jfdi`hNtqp2HWZ\St]l>#!_IVZj:?HZpu($Zl>bJj]GE#3<C366Y4e?Z>/)8S?F5Gj_Ua;OpCCYAV:[1eK<
%r)`:H03:5<BWM-#C*sAt`"/kZZaB)C:T.j2]^-')Z8X2Z)%oH2/NX%QluU7n(dr#$HnefJ7Z6RFfbl*=X#kGR_)NF9!neHNfO4L&
%a6s40DGaqWclmp2G35rh6RPRAV+6\(HJ#S?>+Tq(J!HU\5Aj8$$::EG?+?Odm[.JAR4l[t5/j2o5"/0RJ!LQ*b]01S5Y&jb;:["F
%"]Gg`Sif5+@*TGg5SP*"$oi_h,7aU?HMuoh?h-oTlU'6j[[4q/e`Z(XigG]]Tk8;M,oJ8$@N\`\egD>W-/WgN$?Ib.@KcGS*<S`\
%6&<Q^HZ5,<e@)Ca;![kBL+nJRh5(uI12o^-j3[:^l97[<.@-E0*&cZCic)KR;Mpl6;9*76=r"o$Bn=H$744CiXRu=X(Pe?L"`'r1
%TJ=l.F8INb(dDc8qXb,Yrp'4f.+M7A)ib2OrTnAJ&ici$>g_JX$<<_7WnPc3Q-nC3'p50qa3[U>nG;G;6'Tf/VfiWRkrP#[QE*iH
%[N7BVZ[#[-BK:72ZOhA*GZYjc5IcS7E^EA,,Vo'?Ksdk@An4c"`A/!MIsfQ-kcT\,^?+f"fa9j#=c02'HnH<M@6?LLrT%hU"<f-V
%PHs$3;^N#UVemHiau<74S+rNVL"U=6/pmVS^E&XKH;52g7#]l;e9g3XVJV_IVa/X@f;o>S@gh%V3dr`2mqH0D=0s@kaaA3-N9bT=
%L%Z!s<MgOrnQ6+/dPA;VR*"I!NRY$^PAAm55'Hfta>St$N+*NSr13k^+BP,^"hESrB\@7LJ/a`7>oDnjY4^tVcm\C+[_c%7Z-WSd
%G:Z=\T+r2m%L>m@.*M'>BDe`kgON,8^Frap`mMnZf;nY4`8O@`,=ee7Q?38CEipMp-T)+R.r<5u#]$M?dnsA)o6T;HI(rs3<,ct@
%MUqk`Ykd/*%q5Z9V#)pQijGH"a-;H:8C"RmVW^#$Xlsl/=]tF][+0gpD0U5GS6-NU(>De&?$%'gcT'GJ3k1n>s$1/-MVNViT"u/@
%C.%Y2h72u\&D=dMWp-0b\bMoCQ"T/o6%8)`l=#rAjse=dk'WMD9/C;c8;k\,lZftH5o&%Uq=*ETO<K0KLg95`'N6H5k[O,NEa&$g
%Dd0=Lmsk!s<)aT?e5Km`,fhIFV$0<=7=m(!G?@aRfa+m_0EXV,;<)OcJum-6G@10m!ZH88&S1oFNB;?Pb0+PTZ0<&B2==M_<;scR
%GH7Hss#H'#V8n%B`n`sTAOXAtVeFkjWBTSP_Pm;*\(%po&X*"62"'L#U0nOqqVrK<D@XU72=CJ")L&c$poh]n?`.o,ZpXas2""HS
%'9;Xb;P70$6S1>1h<f&R:S,FSiAH<s\UUTbaj<ga!@J$ahL!WR_7MjF&9WQaWXK@4.j&phE<qosKC1gtUU,B-)At_02gX@m4dI#i
%j=7/1B*PaH'naIq=?W6npsSJpiLWLWL5L$qFLFoX_N<Q7j!a/%)G\B^NP[Tl/Af,/K/J=bJ1Rr6J1REo$uT+A;Y7S/Tn$#EYoLj/
%&3#^^j83`6+]Tbj$`fV<+[<ICTb's,SO!66.?"KjjrA1rZj8:eE8VS-0$3olo;K]ChRkR^S///.6af,f*5C,#]-3eUeY`5m;4^oJ
%>]e%s,m5CPL5^'he$*_>;c0-udj\td[*$.PL-?3hm:Mg%*?Xf&I<,9H(B1OE?Oo!bb%MAVSFl[1Z7G-A!ca/-^Xl0q$pB4/@^@16
%I#0Zn"tOPfT>Y;Q$2lH7IF<m>>*u-&V2JiVDm>+/ki3M*#a6!r:6*%XF".N:P7iN?%E:"-h^^=EWCPod\@>eu'din!0hZqeEP#Kj
%-I$qlVRk(`-g+VDo*E>'`R4MF:u<WsICPd`8,Ma(L6s]6VtHe-9/:'q/[KI%B]\k]b7KdLAnlNL.MnOr$`dK@-3)X`1ZDG32[mpt
%WGLuW$M6&<mZmoG9B]SHZ1gM(Zg!h]8g4Q9/B0*#`8r4QAJu?Wnk'l9J=9>B<lN,E_iN>")JcGo>hr@/FujtFMrqCj[tIQl/Xek6
%mUfB%%5"Y_,$ocp0rc?3rSm=WSO0JVH;@CDCN2TcW1(WCjVl4"6s(iR.YeDcZ;U5JOMW*?:Tol5CR<#_G@,Ad4;WUg2cXi39ZQc;
%X86<oBLK`7Cs.TD=?^Wg><W8pC!4\dXd0K_-a'JP?%@Z(.r@.RB^QYdE6*p5oYlgtipch9@StTpP><l.STbS28Xntrn6@9?C!Mu(
%Xh9-!I2nmANJ3(sp*huEDl7[@2ZDAjn!3,a<8)b7c8I+6>$O!D@)ftlEnZ$D\f*JV^S9i@g?9%-_\<Q[9m*Bc3NYVa?$(io+DZ/2
%[KYP!J`WC9lL1.>_1JU_;.^bfp84n^NqV/\VfGU(gA9a(Xj1KZHbbS$msfm0lutRH]J/T#6+7GKrX5tMfRcA#4`*R/Am-a]WV6UD
%&F1(p@did7$J)Us=?6/pp[I8SiK;rK'h=F?gAf[XFcdH?W\ddCdei**UkgA8ju-CG_Mu(4Gb]R#dqPC+/`%lc)o(YVc,=*d1m)LW
%%q.3>0/\l]0Fh=8@];EWiV,C%87"H[*2NAh\I+bHHB2V3-.=Mo2cVP5SA%79=W%24f%<seY21"3Z<P<)A];(]PNm/a9kh!7]jHSE
%"Y7AB.:NcYC3#nP0AN+qX1P:]]aKlS_Y]h;E-cp\*VZH]QaP^P`C=<W!;D^/mdUB:,luOZGJ%2BBK*eHhh=Br4a=:[R0@?-ibTlu
%P;#](?=XsHD&=BPPah>//@6;FC1tIr)j2!ijP@_"J6sO#[bqo5i5%;jI2#\J+[/G6n9^d70K3/YFbHpF=#Jm_^/0`d/=-D"PlM+p
%jJ2B'Vk!O4?6X;/npV,oa_i$hBAUE@o<./-:ojl6U.du"6tr(^mUm_Y$#jqP>(3jcE"IB(9*m3CKVgg;E6snNAKkm,i:3p[+T@tt
%%8<2#Io*hprIG7Q@J'hp&3@RP_]gPXX&Er01NV_UDa:4Vd#V%B5[X@eRpWj[B[lqoo`g3Ei2#56`'Ci9hS:6Pn5!&&E,d!/_m"rC
%_u)S!mP4G@K)`aR%<r_=OF"f2U&jm?qul\IKa6TBWAcBh]K3-L^SuNHA/Y&pgt1FX]jZ<3Uu'JOaCW:^5B1)HoSrh=CV-j0cbLfh
%8:scs5XJG*RZRH=*gTu/U4s,;8C&%nhW\cfSW-a7^E)Kp"MW:DQ7aFb/,Bn+/Vfd"<Y_RqY!3(i0SM&SAto,mi^RW$@S$a;<DG;W
%e_@EMfnKNoV/kE//,aZ4&?FKJA*75(S<<!aaG"YjKbA"RkfY./b+LUHn2rCjrhI-r\]Q),?"9fp$&PG&@EYpmSMG9+f0O,oS*_+,
%N.KRciSsBUW2K@2+XlAo5fPNPkN-&@;IVLcmBD+tH"$/?K4L7WQt%#6AJ\5Jpg[7%/_!RGc,_?*/#-3`\>dK0*sA?_Tl:>H@gbu@
%`#8Yu-W_#6L5]Z9>+[)Sa-\C"!FQA+oe^C.'triFP;9d%`9CN(/D8jkY<o046I2"Yh\)B*#C.:&B?5*%ph-cRbEATE%2%I9]QRla
%bb77mQ6#!K8qJd$6YO/lJrQq@?28jTksRbA:f'$;!QkGVO?-Vt,B1Qi^?n88<<1^S?d0AEVGMP>.MkmLRh_teM7%Mp<k1na,KjUD
%Xm$%@MqrCcFP/7hXP0s3["X/r=C'W<9Jk?FV,Iq&"qCrh2^m=Bg/Ro>5`,4D3S9,\A3Y_5dZaf*=)Bo3&-O*;/sN'Mc!f!*$Z8("
%n<BM.cjg[NkrA6ua97'4&_[E\m.WY9mae1RO?kPMc%PWghmZA8U:nnAF_`itmfJ@ip8^HBP%[=<6Ortd_bA;pZaPS<5/aPLhS9;X
%">9Y\5ZMUM[kq$)[&3/F3>5.-8bj-sNWTTf"$bHr=2f?sW2^d8Dbask9?rflk9f?4%EI7$MD?7XeJRfOJ$Fg%0SpJd7n(\`Ei&Ec
%\32DG!AA&(<%tXOF&e#!?&Wr,9SXJ-<=q3aS3]@=jftD6&qr*d'o`VoilLgu'F#a="'Gq0BUCC<Y7Xqf?RaVXB9og*T56lcJgR)Z
%i:@m3lJpdZ@TC'r0A&kC]i.,9+d_TJSj'S85af56e4kqVmQQl]mq8:mRjJ!!;f$du,>[<l.Ps$k:;hK;SrQ<>p-WcG`b`DCcD:*h
%,#[sD25:d./];=G:DANV<KuF,MV7C&31M=!HJHr"*Ek]\N?pZNn9"#SKN,o_`!bmBEd5`B_ha8pTI:#5_&3AZV2K5(dqA+gXt!9<
%\)ZT\Is8?W1:V<r'slR%5eUqPeeSn**qa0\Wm>);MDBW9r0;e2P*)Oq]th$2%)bHm.;bi_h#(/alH7;0%0fft[n%u(K4kj[b&2K.
%LjkWC5VkFiLA0,_5UhQCZ:X7.cg'..`9SXqP1?g/@,G&\,U"t57&N#N31C'FR/c7q77J8]hX+h9E\-IQ6q.q91!mi-'-\ZCm=VqR
%iWhnAcse(q.43a^+b[`N)@l]kR8CE;@759KF1l(SqOH2DmqK\<$Q=g@G%k>cM-4Dh6MbH;>]rlF7n6u(pnJUlP`RL*/fp[$Z[kQO
%aFh@<9qO,n1Iaj<\^Jp+E>k%2KtNspn)CW.A4Fqk<4`N(JZ;NggdH8P\"Oo'@>d63Js7;Ir8-%"?&f1-@JK;6E'JF'olmC3@R5Na
%S>%ZRYPY^s7ebg<ON0;:K_J/oO-[!Jo\NMQo.!-W[k(femMK>iOuO'Z4Pc;R:t-'qKnN=Cd`*fs?<P6`%AhMZSkKkp@m"s$;Rs#a
%o7WV6@QA?EPZici"XLbj<WB;`#[t*<Ca^t5nS(@C/Ip/L=MVXsQl<`oV[V."2:e]N3f<(VJ\6,,$HqDB_3ssP$d8A7O,?i?;b\eK
%T?D%!ZZP'C$2=[HW3&e=(b#!2*gY(&%=Ng<F.F*&A!HN9iA!N^W@3T<1MX'I,S=!(,HD17BaFX\'f_7rSmbj?#RQgBqd0$n_kVEo
%\1#nFO10J^HEFia8Q\dfPC['-cI.DE^I@"kP=cV9er+o:^ikpOQ2@bj>Bt1G"XZ1UBY9\m&m]0D,_C9W@d]fZ#jh6*e7G,,c5$6Z
%3<7gDK8JG3INg[0%sO-Y%W`$._6f98)NNYc5AN\E^D./g"?iRiNc0\OAoBc+c=D'ejS7>kVZ!1Tk6uL\GWT&g+&VELdB^q[WnQnc
%)HoA-g94-O@2K4._lQ<p9,e'q^N)V?3ST*=%"lU03XmZX)!I>Hq`r@U<9*MN:.%ZY&,I9HGu`s.%?o"4?*SJbU[I?/MEsHnGLRr'
%VS?/Ue6V=9^IEFs9b"5dF[tVq#ESI-9GQO&1JMQ'oskRuE:<MX9S!QHD#kCU.djZN_V]BPOFik%5W*0\-ZlZH^D>7,V&?B#1K#sX
%-S90=--6]sS3K4&nX1Td^%8I)It-EiT1Uot5SjDf[ubYQ>[rYOZo.cOi0c,<89%*OJ,=A`Mt1[p\"f"tIMlU4MmE?C*SFR.ARV<!
%rS0%1]qmXVq40K_Es!80!#79+Uaa7l9M"+.N!BfcINRT_pBe1KKmQKaW8^edT'nb(0*"op]K`qT6J8BCLnSDoR-fQ/3SG0hZ_S6G
%8"K73%,'n/"_umE750PB-7d=Y$`);7X[?B<m6R#Po,gq7jH\riFBW!BcK<Ic\2jY)b8]#6&ci<MDS*h8lgP]ic)<isERg"e<P8=D
%jd%64dIaQ#a=c0UhWoor)(@eU9'[A"EnP!e'*bHfAO\@PA_B6JWba!]X(lE>$sGTKb"<W+%=YKb0'SW-"/,!]\"[eDXVVc(U[-._
%a"W!EnTNspn4jW"[/'9?9BbOJoIYbWgt40Rd+2BWL[q2.$hGu]/d;o[C@FRgF:^/t$&QQdm3VqQ%=<MS_!E[/'$cj"OiMBKJU?&+
%G:&&"`Qja.#BP5EqWLq>R_g>?UQl`WIr8>T'XDSaMH74[$6YQ<lR(^[R,gJ)@\k0J.*Q+de8tPuX>l^Sb9k6WDR5)[=EWe\7DNdY
%RDT1Y9AU)P%rXcU+E/+p/a(9>B5b._l&L?TlC_)%\`758<;usT+1]nhd+bhn>84`a(5"Ff,F.n6<1/%&Eal-[3;An-^`scSSA+?;
%5PPSNHmhh?A*?M%D2D"6JbI7OH0P%$E`mbQPt%>>8cAI\pcF_#(CIR6I-.^GrB.Sr])7MWb@=P&`l7L)fNMGpTF!2OIV+Ae`_'8;
%YuO0e]4p!&TX_de2=231J\!KB.3?9Rp1"dIXN31+M?f4iqK!>]**>m0M?eg(p-TN)(g'I4M?iRuad,ddaF,V6G[SL#EehX+#8Ibu
%(9_Z&qtK:H&N\TpH%#\m?6>sH.>Z^7McNQDX]Pb^4hk;'=A-P%/'nZ#@ht-_%@ph@lPHU.JAD-?DA\HE6R78RpNN`["e\=D3p[pL
%Xd,\T(V_c9$8Z5Dk@krN/0D)n/tn"-6/3]X#`9:(hh7dZnHE.Vp#f7AG77\>Q&&D+P@)ulHn]1_Om]?TG[8mAUO\lV5kppF<q7^4
%reG:?QSEDSi%k6Z6d>J*,aA5O&P0i#PmDKY+jhHF>r?i$`((o[Fqs.A_W0,,6@ZsN$P&6M180m?C?rnmX(RL^cmd?)D--gFZk<OP
%]#_E7Y#$X*UX#F5K_rb\8/u449p=T/1.Bt9!&(X9YsD]c2ate(X3JpE&u1NDAe),!,n,#a`>f6U)H?5=?7TS1'n_>Y,ZY%i8gBIo
%)"]_TX<=1V[pgN=OA=UGpW6::/9'uBhPj;8h;G`2.uM5n3!N:]\BfdU'jT,)'p<7DOJ^L3Q6=ODd7QS;(kQ`7SFS&n^YB5`j;T>7
%P_?IsDgWo8&_ALsGY_Ei/6q-p8?fMgU)%9_F]FOSGGO53eC?Sccf?-#eDK0.-'0ZHf6_ElkKC5MQnMX-B+`cuX>K?<6=]W#j;aYA
%N)Z_=*+<d'ck0KO(VY0NnA]QiKu5KQ_STS_,:i)qX1?SS[mMf*%V$_;^&bJL^@'VoH+oQS(Ed(m+DmZVG-$;)^pHnE1X]l)aPpn9
%m!uJ0TSP[6b02(-lXS.1QV,YES5p]G+63QB\7r^?l]im0:U=j"]XM-GU-P2AUVYiJ1HR/(h7?G.$KM#QLt2.62=10H]&_Id<igVr
%\lmP[LnYjWCM`hT;4])N>?N:6AXl-`*A.DoZ5L*3BBhm[/d##A]X)6VM<fH)$T66#J-=<BdZ*aC&Nn^_G!hn`aWnj*;!%Fh*k9l]
%3PZ2nJc,J#d\Z=\[iM5p4U"FUPI.LHmm9W3qF$)&L"cB?3eoTm.kbaN96H;X",0Yk+CR/Y'gE3$gKQT@Rn&C]-PWPa\Paf;0pQ1`
%k`![O@7t1)&fCc-C^@m/#MsDL>RNbk:6W)LHu2[uFg_d[+4m^:[IiV/'F/D95(0qq-(eWFC^/2eq$ck-1O+<=k;/L2);:c)kA5m&
%=1qZo9!c-2n'rjfA7+ejR7@4?lb0ka&?aQ1-(1lO5s&#+\P3tPWQHfNOG;p*g-Le%?m#lq+J8Cr<lA)I/=9H>hSfg+_CuCO7GoM>
%gPWU;Z3=/7ZaW/k!XAA,'mJEm@qT`'c406`hH$#M3psFSq.g1]],fm5f\?(>%=QD3h_oG_NHsO,Za\="fcN`/]s#S4+&Nh>*hRZq
%5n<if=lB5&MG:3\@uf_W.Z;@*N>I2loM]e-K;@)20T#;='PU\Z/`07<&MAhnB"],:+^Qhce.VI$;Y8maA5Qu^#7Y+IR:Lh>AuN2%
%EN,E;/D>JTJ<Dr#$&qLL=;E;^=/?9emW!SMLSI[>h]pnFL60<bp\Dd)_9kg&AHDpt*a)0^Z@3T*-A?QbR:%EbiOU71SubO3L[qFo
%/3/4kEQEksUs\_)o>9;)Je2l:SJT7f\qocU!PS6f8R%ff*K31Bh[a*ARh]iX,Or3Im]l:&UnZX$R;r=Sk5jMVhqo5%B+ZnV]Oj2!
%gMnbtQ(lU&qEBb/_d6kD*):5MM_^Zr18Ws6CG)@)A9r'W_/:kKl;S#Mk1M&kGJ]Hs:]kCb,(!jHKkmJf"?,Ps:o3ud,"jX?k@Vgp
%GptOi$RqI]rq'r+G?s"h^pcFIU;1=mMN1)L2QNSd^_40OQTSeeS>ck,AB#<L5rVgEA1hI0_!5:#o:f'ui?9,H3^"sc%_Oo47H(E+
%kL"o>$XhY0.U]J=&m,MJ?k$GDMQM/O9:&jmON6oC?Z(ih*m:m;\[@N%*\1VH[UuKt^&WZ#RD%SLXgkkTjtg.[H5GOY33tP+^=<sb
%deHL(h:2+K0FS%L'jMdc;rJ9n>ML/'__@a'=Y81P;XJ!P$pR,Yrdk5,MpI(J`8)L@__B/K=`>LbWdIsO#<d!Q<=D*ohQ*[Z@2K2S
%O0+B"8+mbmJQRk5Al+uc]kc-'H&6+GG?\OE"b4a$MT/=@e%B0W/5sKR%/qhu^J[H)*iNZ(!QeT(L*i5FR.tK,g&?,7#AQL\YU`:\
%WS*T30qS=3KQ\6HQ`R3&3r,7fd-1sV.#;+C7p\bBSTDD;bW1UHV6C"*`BF(Q=H!KQ@^#DS0:l:HYgg&<^$`Rd["@*'Db7#eV7PoU
%CO)j4V&IN^CM-NV6_??8)Wu)+Fd!!rd:o!fp#Bea=qUFr)H]rV&Pt5+,o&Le2GLlgh;<9fl?RJATLC^1._tU(""VTeIYb''c<GIG
%C,e(c;2F1ZV,::u1C!A.pZh;d%nPbc"P2qn&Y;u!cDOD`3.LAZn'9Fq5\7s!g]VsUEtF@*Ts+LKV8b/AHq20'q=>3A<.PB>=?57j
%M*]mqU?KL&3Gnfp06GqGbpR-s$ms=s6:S-6AJLQPCeQ-j'#mB8NhH)AcL`M[(ft.^8XM;.8mmCJ"5,3L.Mki9L'?1D$27E1^,7t:
%4CaoE$V2j]pm1rOg-78mi=7[b:0NUi_m#Sg(_3tI([@QhO0HEjD&t[3IZ0Q,$n0D8^F3rAc;/QRAJZU#/uhbI8hVh(HK,"-oRPn'
%#F8\T7WHSY1m#,4(>j$.fuoJn4Vrucl;VC)8'Tt87WD&U7_5&b(2IiTrhJc!FoBi0IdR,H"`=65Wog+?V(8S.J,ahu\0C\Yb'mfu
%JF$MQr$Q#>\Q,*sYKVH!87(/H2#CW^mreGW0FS&BrX&kH0F[OOZ;:^8LOo4.n79nTe@)d($L_krIXnO=\N\K"er7iF1>g"I)`)X\
%1q.[:B+G!L&tNAUhb#-N&5,o$nn#OWcqu)r;l&aDT5E*!a'*5kaD@.>6hK_9!BF*143f>O<g"h4[Ab"-Bb;+06?hNuU)&st)46Ai
%p%Wd55O<4hj.RVQI)3=Xm%0J\3DW&29m2S:849E0eZ_3\Mq;>8<%'C8r?/#)dU`Vp6P*JjBWMol8V*D!R\k!ZUF$dEc!;+1#5K$(
%L;IFg$uFd"SX&?=r,1k\40UW9?>)tI=Hq\tMP`X!2ck<qa(OKsZf=5cBe4;M#SnnA1#HW[I6p`sR_T43_.'FOFL[C=+`.BU/]6<"
%%7m>ZUhcg;BC:cgF(QDkS$5k9aIQ0laGIfK=E;Qf</*:8/;bDe^,V$lr.U/<h`k!W^)'WgOG)V_3N[ZL?78E?@ImBb:[t&?-LNF`
%L6ftTbu%<^rW!J[EomrTTT]_S<:mahMc:N(/rC&fLM3Y=<+L1_,AX,nqMj>_gSd1LPb!kiJS[)m2,:&<I]ls(lB`$-AZj^:![VhB
%%0Im.3$E,eciF3O-%<%!cEh,Yc<$=`rW)E&L2qj"OY6icYtbJTKBe$B>T&+*\)uBo*gK@tAl-,qlAuRT-,6bi$Z]!O05,NWHFFC\
%0itp:F&@>H(`t'NI$aBl/5#G$pMr;"l_T[&/"kGg0gZBa"/7bkI%om'1l[on&_tf34NR!A"_<fmI;!*11Bgm$GBRlcU#%-BG_Cbb
%K]^nFJ"A!+Dm"Zu@D_g=V5:'3PE;D&M4u3RVB[1#:d>4mP"39!6IAOjP6:G.JQ[6=(DrOV/791!gFW(8[".0'"r&"M6UW%,&nX`+
%0F%5+`-\Rj?k_/G(sa-ZhWni>^WRgFn0!KbRYA=l;5Gd*Ig=OR2*Wq%&."`5`6(^T3P!4r6Mjok!bC1FnA_*s"_?2^H]ZK&6/GlN
%Mi)96A*BM''jSh.+D5<^gTQN@d-o`lIV/]j(RQnj!FI.83HQWB78i[lZG>P6,f2N?><j$\jQ5"Z*+cgN9b1Q=MEOdTI_:h2)]-U6
%R9W>k<#ce2m;:D]/kl->;DIBpb_spA:."2IjAWQPa^;Ztma0]doBB58OP$(!<ERZJHtn!hKqf]eO,KE<@h[oV19c.D9\`LRAWMTQ
%pXn8e_orD5]E2OGr:`]!C_FQfJe)p(fi/%9G2*,JFJ/%/fX@U^PlOU,A/'<2gD/H!4.VU"OGOcu#iA,&rgfHLgBe.LAdN_K]ng,e
%6NV_hm%_%^T\BJB?mH\n8q3U]0jDb+1Nb,PM.NAH;9IC>CEurP:ZInMW0n(2kVa=grbh35=c"<ZZ7m1un2>X70XZ+$5CB(gNd1t0
%.!EGC4MY/93nPDdV60>i!^uSQYWb`u#Ai,0_V5Bt/W_YaY8D[FC<3C\WhgtDU`),]i`C85'o()OAJi*>Z=PGohQ/k"$Pan*4m$*i
%c<\\*34\[!jUO]IefiXe+[o7@96JeHE)!lN\UR3H8'hnbJ\J(/+un+Kc%EsnmH1P[D&W/kc:pJmmPZE^)`OubRR<Qs!k&/b_gp:C
%a,=9G9<ua)@X*R&CJ[&QCDo4H6.Mlh6SeJ?m"`@ghCe7(2*;V*2:TKT#1B`M0^Y@J$LIK3Gqm[E7Hn)OEUM<qc.sPT9:`\)g5O/b
%]/KP']enkDBd^XAWsune)9C9#h,tRcoQg)X0rLI$$tV9"TE8+hgt??HBNs=G8u8Xe"re#BahUD&fdEXZ@cRZdku6uF!JLpP'kB="
%Og/]_O9tO9'EFdUb$\FYn1.DG(urtH:^;r-0-hKb-S])L_Q]rMIg'GB")f';+W^taAS8Omno9$3.ju'#D*p<sJ$FtVjSdP#@I#^#
%$9+U5%6(!f/r84EI+pCejiW`]gr"ncrI/XUMtcsWZ@'mS*Ei#ZmB\HmKB7'Z)lD>sLS6"iG:gAa?]U^2.HHOWEh-JumAi<N9.e2`
%rdBktAFL45Dm[A:ePh'37d5!>/A46s=k:]g#"KEVR4M(gpc9[>jbk<@Fl:.K@tueVqeI3ak[65Tj$@9h,>o52ha_CUahZWpW^dKn
%Q0&_ug8s#lRaa;^X0!ukc=[,n^YfhM1ShAn@"snToP&Fj(I9'G8;CY@/e@7"6990g@rqotC`sg$0<<7M#0"#5mVS#'&Q!+:i2o6b
%>=_8f6F.r9A,?8fr8J'^@ghNd7]L6sN\.%/-O\Nk*Eu&>]F3=V*Eu')p0c\WF_i3A>drE=:ra@"+W3X"JNC6$%f$m,5TO'"B.c*l
%/5XA&d\4sORKGT8Vuo0TN@e@*L\StDJNC5__rE)B@ghP"hLuoAN\.&Zer+mJN\.&:e/qm%e?O^L!$?7ke?O^L851_'5TO'"8'ZL(
%#Lp#4FJ&hkCS6\>UpFls<1PVKKlfF@-W#R+c3<Ls+<<)5pFTYQF_i3AoI]K^3jqO7JmGkhlI\Ea(4?,#5oj0#8'\;[#Lp#4FFXt^
%)Q7-Rks-6A2,Irb$<)k53jt-1,6r[(:ra@"J_Y"l5TO'"8&d.66(RGo!pQKf[tdL[/.(Uo697++`@Xp,p1OXK7';)%[ZHO/_7B^5
%fKqWDhffIXZ%[9R]>H3s`tm)(5M7njB4f*)'i;pddNSO!QTuQq8B9b3&_+(>FEFOhMh*oSU<5IeFKG1.):TfbH1QPI[YP>7=0@*8
%[ZHMUD15&Q`tm*#E#;YA*Eu(Tj)Yg^Z%[;Llrl>5*Eu&>@]uqc3jt+[,G#<ZN5,nAX!6t7j?I`H_FDLradQ1KFca_fqT&oNYLjDL
%*Xea0RW;eO_W4g@rV7"Z]1G$aR]G`dKaES`1&;3^QEV7G^S8Fm]]&+/J!Ku)GTeX$n&m_qk\"TcRiRXZ\/Q.MQ%G8QqF*FDFejHt
%Ud$:)`p*dKrP>Hep%[$tBRsd`5'NoR^f)>.2k(=m^!$JUTil<;hl,-n[*8+a1;P&?$e#F2+2);P"g&G<;B7he.h:(G7/3#e%u'Ph
%V`su37/g`p0#5=e%'.ru'5+]2D`Nc<5FNk?n=2j0PkS6C5Z.[`.R+]N4+Wn_UV0hZ\psW'J\C5Wn^p6AWdLd`%hP@oI3)a\9*YY.
%`27BA7)O`@7;;ec^pL'!M,qrtlFnu8Ogj&B'"b'H:,.#WoujN*jfqnDaEr=I+-erPJ1sIHoKrQGoLWcn3Ajst8-3#T\XY3L\SMU`
%g/fU+EVZNq;c3PY]0@DRXW"\e.U7\-GTV]2`5s6YQN_WnAHX+1+]CeK(Q]jd5C4*S:hSOZ8A38]BDP:"J:NiZ/Ru1?Qa!kE%9r>G
%_R%;g-\$`62>X`TJS#3L9d,];$'D<%o`V^_'dbIWdmC@8g3\b!$bP?1Q<.ub_I6Z$7Fe/o(LIc;T)6T?6COja;B]-?LO95J<>/i^
%s'Pgo:'90D#1QW.CY:_U.X?@j5[.Dh=>.e&7X=W*S>%%b1b[Uoh)<U"a">s7>6;KM9>;-RQbGZiagH.\qZ=]p&uUHE"E+G(m,<7H
%JnHi6%K?9T]:NO_'jjVQ;ouH2dJ*8"a2,gVrT!2^kLoAnMbQJsI@\+&5&P:7DZB1+ni$;m\UFE[bH+-ja5pnh'sHCfhPRbt,i*%-
%NG_9?[k$-?>m.I5gnj=4NK'^g:$%E(m2E8.JCMYc_pRirNt8P-Zedt116)4D8+b3m0&d=gB9#:*^Z#^oq]\<JBT.glB*g8AR<Z9d
%L.AY\jLN3)%F2+]GdYW+GP2BGo]L+lOZecThC`;NeW6b(*Wu/E>VS1R@nIb8Q"*PB*nnL@$=;>uJR\<Alb^i9%BAXRcS)s1nBF#$
%Di^]sLPo%H[<cWH%6QiCHGcqA=5M:LOp3Sm-lNT,W@@1bC:W:;NN\0YMjGr':ptF.ffYKOL3RThAUB/,2^FSm?@&iKjIc?<fGe]+
%62?lK:uRtLc=*YC&^<_E8^;BYDN&>?/7$q:2s/^m#4aAD)<HKEOBOEh?GB]0hkGOpq-3]SphR6s#6eu#BHPT.?dIX>5<s^>]b$o3
%n::N+H7c4@/*aoK['o;fW,.jd#<_d4+_`b2nqDNU'sRd,*p?[/IK3Pgn0a)=Fgi7>8dg"Oje^CB8+7VBG[pK(8,gM15lXO:f*h.O
%85+r_YjZ0LT^8(@Ndrn+LY@m*e<#-lF#sZ_PogXH!uVm*U1.62>mL8TL5l=cO.o\$oCs)Ni[JdX/fU&tP-+K<8b)HnY9pO(%h<-=
%\/:T<4K?,GUe\**4hfr7V[h@=S-1r<_T%^*>>->.IKH/Ss!/s(@QAo(\mtX@D[H1dH"b7mEP,W=!8Z+<"FONAcDs8RW7tAj/\#gr
%I[d5S;14og[d,!,o$MkZfaTRo(*Pj&\=t_[-kt&`JfklO!(16Q1WXh;_4'eCh<]`qBm@0Rrku[tCbkA.,[I$f^Ktlg<g!S&pZi!,
%CYHWZm+2X5f#7ArhQM3)aCEe[cp_"eJ6g]TV:"AM!^J!fA7O>N^XXa^).+UjF6r)urqHp#nQf0;TFsHkoHUldWo4P`nn,Unh[IQL
%7";cqC"kDW[_BJFYOb]MCZXS$pD0PLDKn\N>d)\*g*?CIom#!ULl71/;16BX?O,)RWCuOE_"^p5G/Cbl"7"nR#DXLj;Ys;kh9]0/
%0:kVRea(PTK_IoH$:)[_lM6EVd_;f-Iu'E0`V7DC/8u%KB:XFS1HF*CF6Yf6d)19%96.'BH3b;3K/[HbXB.X#7l`OHmD%Wk!rdQh
%UgISRoDtD)F=7bG/S&,#^$qk)1'4`,4qu+peqRN+g'd[h6[kZjdge5p"OY7Q<XQ4<s+%`P3jSbN'_PD'L;#K2FHt@bH.Mg496A]O
%E[OgMO4@"8U-%>GJ"Uu%Kl-tZLSuihIn4(G$Sm=b"Wh$DHoW2qSUfRPmK?Y'2P$L_6#`%QJpdC':*0QY7WB6;R4Nh>klc9&Ap4:j
%&W;f*Q')AJEYjPhK%3!!!F9stW1=LM-ME/f/QsHkn58KD[8-4P2ik+XjoJ5H<I3&Zoo:^?DOO1XNsHRD_=.G.ClXk4al[u(rW+1C
%omk):F[ZGC"lDTr>D6Y,Q>/n-G$00>N6R/2o+!%2RU:59$-j&(":3%<Duk^DmBj=4TZ=P.,F5em*,"jKeeu;d.4+_Um3?`A@!k@q
%@5t+#U#1oJ1-FPCJ"V;0;NhG/TM6lb@uEK:@-C4"A`0t7I"\F\,-dgnYKulfX/u31BMeT<bu\VW/,roB7F_?CLhVl0[49=.FZ_k.
%7td5!kKsPm`thnL;<A1Zc8!cmpgop\=WNQAZ"Af5]`Xj9`j_%AYI6nO[uZRBp`2PAj-&g2U=&7>4#1SILtqps@+^U\ALE`[Z'l9%
%*SG-`6l+qi)_QcrdWT/`B:YBDGE=%N>D5i]\80J<ijqL!M4@mb`0ZdM/s1(?&RS^&\ti_^Nq&sBUJ!l1Sf(lB/K7t>Tq`LqV9lNq
%,oO16N\;t)?.($n\FDu1k`X!,&78U%\cc_<1ZM,$8!i`/c\aA-*F86;&?jO/.U9&s7<k)P<iP/X(#W(8's/['N"N7FkgGL3#=5.o
%olWk3O?>]K\oN2qp&,AM&0I3UmiPok2ugGen-Egj59Bb.s!H31Js]^Tj)O]a*3Q`j*^BYY2'K3T7L,&a[.s/kH(97F^:iBNr+@S`
%QS/!dVp3@fArZ`U&H2"ARNK3P5=C!\4pjR)C5C_cki(-Nk^OEKMn])prD<7XndD+Ks$=EdTc\`W9E2UNn8%o:rG-k!$9&rM">L[S
%,Vd"KPLAY".DGM-Y,*>!6t._p9(;lN[:bP^9LR=n2#J*bm9'6!+f=+](<E-;Jo[2+aHqPs^.[O4I$^'5i@]59.)a4Bo__*$$2:7c
%'@As_nmo8'ql9[I-RHit@PJpqK)Pn&NsOVf.A'0\j[G3W77hn7^A-]ME/R0__YCsnSld0_^T^,^.Z*rhi2trYd@E"`>Y2dOa'pd6
%<J'!1oR9,iFK:Ws.SWWontfGlr]<\DiieR,]=u[B&s!7g!tENV)U*O=qP*U#N%9ie>)Mh5>8)jLQpP0[U0^.!(Q1l3GS)e_cDMuS
%CW`3oVIr&=`["jtdi;(IIOtn(;i%$>Bnh,LH+@e+:2g.CrJnlRHMmI0nK6l0NlM7./%2l^VA5\J;bplI+'?-7pRHQXnk\.XbLEMK
%>DOXRBr30F&KqmMdgaj1C!Dgf?qE'rAUR9gR/)#K2HF"gZ#m<T)D3?\E?Q@C1KTgZ1c/IN(.0ZH9*-pU-<_&,4j.W`^!@J?S$V)5
%$:btM6\:Zg[]5[mAr/hWc.nQV26C#YVp3mm@>-9Jd&Zbm@F_Mpm1T4_6nf%MG"lb>q0@$>Q="35q.(b=8F,!0>gf&e`5G4%0W`tc
%Wi="9c.CD9+'Q1qW'l`45o(fl8(+XF1&(5rfNn\EJ_+QdP2c;%eKsn6B8`\4fBUimLGss2E&!JIcn/8$C!DO3KLdki8m,Go>%N0:
%HnA'qE[&QOXr`dK/QJugbn?k+ED4nU<3+5=S$/XpG@iVR>Y_(l4%',H5[mn":J&0Q4Mk3*`%tIc8'n._lYFYVcPFirYN>;>Nc>\K
%O>(a`[VFF$G)>->-5.ioCKe?oc^V,?X7WCp4tWs9WibPDX^+7uP]p30CK+M4c^V,?XuKDi/sV)p?P1&K6p+'&$8aCfMV&?2K7K>n
%\L-50CjOZ[m9QPA'bcZ2S4pr%Anm[22ShsWMP[DXWN@p=D,0h7d>"rVKnTV=qpZ<?:FU^I4&$D%o!p7oTBM<[k:Yh:-jMC[M;/X&
%L.KBSM5@JXWa88j>n)-qWC2D88TF&hjM#9UPNM48UG2o,!8Vd[6gn0*f@ii>[hqWIOb=_0=?I(#8aNtffAbMl2K^U+h!:2\YGq8"
%?.85LJM@""6pSffZkS&Brcih(?h9UV`Q@3<jll*t#6'k(0J5\`S[E/,mIfo;(&_k@k3IR,XUEH5b`4]0gpllP4e>&20dV$s(rIAP
%>]mOlf<2N\CG?n'S4Ke3pKCkOmemB7XO26e3]8S2*?jsqN"sbI\J(6DD<dRO:hHVKYLPMthLBLb)VonF@mq!?-V?lSac&Zd._$8G
%Y-k6EW"UI4410F;Y%dY0K0.Y/RaaB!9#OF[<_Dp:!U31R?IIu5G,NluJ&?XKNLRK0XT/imX[_X-=Bko[8b\3j8aA_1:9/11MJb;_
%@8s^.8U5dT.:qOs`C)I=PtPueP*@<LgX^8L\4#0J&+3Dl'2P"r$%-<4Vb0iZ%PXi0UKl5n:qb99d_DPUN@.$7'1aQF<pN]cG8"df
%>3Dj9Zp%H-[CGifmacQ<`#Gb\;]HM\LHRh.pZDJKjQ#Cmq=_^Is*=3#[qdq+YOJLFGP'#2rQ":QlJL@(c\K"0Ke)@&jj/@hl9W\d
%rrN%_]J]~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial eop end
%%Page: 40 40
TeXDict begin @landscape 40 39 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 145 796 5041 7 v 145 1100 7 305 v 204 991 a
Fn(An\210lush,)78 b(Egkur\354)-5 b(tht)f(a)77 b(kai)h(Mh-ikanopoi)l
(hsim\354)-5 b(tht)f(a)p 5179 1100 V 145 1107 5041 7
v 5183 1175 73 318 v 214 1175 5041 73 v -12 1612 a Fm(\017)86
b Fl(Pwc)58 b(mporo\324me)h(na)e(qrhsimopoi\240soume)i(an\210lush)f
(gia)f(na)h(apode\320xoume)h(\354)l(ti)e(h)160 1856 y(parak\210t)-5
b(w)58 b(pr\354)l(t)-5 b(ash)58 b(e\320)-10 b(nai)59
b Fj(\350gkurh)p Fl(?)590 2159 y Fh(H)14 b(appy)6 b Fk(\()p
Fh(J)17 b(ohn)p Fk(\))40 b Fm(_)e(:)p Fh(H)14 b(appy)6
b Fk(\()p Fh(J)17 b(ohn)p Fk(\))-12 2499 y Fm(\017)86
b Fl(Pwc)58 b(mporo\324me)h(na)e(qrhsimopoi\240soume)i(an\210lush)f
(gia)f(na)h(apode\320xoume)h(\354)l(ti)e(h)160 2743 y(parak\210t)-5
b(w)58 b(pr\354)l(t)-5 b(ash)58 b(e\320)-10 b(nai)59
b Fj(mh)66 b(ikanopoi\240simh)p Fl(?)590 3046 y Fh(H)14
b(appy)6 b Fk(\()p Fh(J)17 b(ohn)p Fk(\))40 b Fm(^)e(:)p
Fh(H)14 b(appy)6 b Fk(\()p Fh(J)17 b(ohn)p Fk(\))p eop
end
%%Page: 41 41
TeXDict begin @landscape 41 40 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 150 564 5034 7 v 150 868 7 305 v 209 759 a Fn(Qr\240sh)78
b(thc)g(An\210lushc)i(gia)d(Ap\210nthsh)j(Erwthm\210t)-6
b(wn)p 5177 868 V 150 875 5034 7 v 5181 944 73 318 v
219 944 5034 73 v 150 1358 a Fl(M\350qri)57 b(sti)-5
b(gm\240c)58 b(qrhsimopoi\240same)h(thn)f(an\210lush)g(gia)f(na)h
(apode\320xoume)h(\354)l(ti)150 1602 y(\350nac)f(t\324poc)h(\350pet)-5
b(ai)58 b(ap\354)g(mia)g(b\210sh)f(gn\270shc.)77 b(Mporo\324me)58
b(ep\320)-5 b(shc)59 b(na)150 1846 y(qrhsimopoi\240soume)g(an\210lush)f
(gia)f(na)h Fj(apant\240soume)66 b(erwt\240sei)-5 b(c)150
2090 y Fl(sqetik\210)57 b(me)h(gego)l(n\354)l(t)-5 b(a)57
b(pou)h(\350po)l(nt)-5 b(ai)59 b(lo)-5 b(gik\210)57 b(ap\354)g(mia)h
(b\210sh)g(gn\270shc.)150 2408 y Fj(Par\210dei)-5 b(gma:)78
b Fl(Poi)-5 b(oc)58 b(sk\354)l(t)-5 b(wse)57 b(thn)h
Fk(T)-14 b(una)p Fl(?)150 2726 y(Aut\354)54 b(t)-5 b(o)55
b(\350rwthma)g(mpore\320)h(na)f(ekfraste\320)g(qrhsimopoi\270nt)-5
b(ac)56 b(mia)f(ele\324jerh)150 2970 y(met)-5 b(ablht\240:)580
3310 y Fh(K)12 b(il)s(l)s(s)p Fk(\()p Fh(x;)29 b(T)24
b(una)p Fk(\))p eop end
%%Page: 42 42
TeXDict begin @landscape 42 41 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1620 607 2092 7 v 1620 911 7 305 v 1678 802 a
Fn(Lektik\210)77 b(Ap\210nthshc)p 3704 911 V 1620 918
2092 7 v 3708 987 73 318 v 1689 987 2092 73 v 150 1401
a Fj(Ori)-5 b(sm\354c.)77 b Fl('Ena)58 b Fj(lektik\354)67
b(ap\210nthshc)f Fi(\(answ)-6 b(er)66 b(literal\))57
b Fl(gia)g(\350na)150 1645 y(er\270thma)h Fh(\036)f Fl(e\320)-10
b(nai)58 b(\350nac)h(at)-5 b(omik\354c)58 b(t\324poc)g(thc)g(morf\240c)
h Fh(Ans)p Fk(\()p Fh(v)4250 1671 y Fg(1)4328 1645 y
Fh(;)29 b(:)g(:)g(:)e(;)i(v)4794 1671 y Ff(n)4888 1645
y Fk(\))150 1889 y Fl(\354pou)58 b Fh(v)647 1915 y Fg(1)724
1889 y Fh(;)29 b(:)g(:)g(:)e(;)i(v)1190 1915 y Ff(n)1342
1889 y Fl(e\320)-10 b(nai)58 b(oi)f(ele\324jerec)i(met)-5
b(ablht\350c)59 b(t)-5 b(ou)57 b Fh(\036)p Fl(.)150 2207
y(Gia)d(na)h(apant\240soume)h(t)-5 b(o)54 b(er\270thma)h
Fh(\036)f Fl(me)h(qr\240sh)g(an\210lushc,)h(sqhmat\320zoume)150
2451 y(th)h(di\210zeuxh)i Fh(Ans)p Fk(\()p Fh(v)1512
2477 y Fg(1)1590 2451 y Fh(;)29 b(:)g(:)g(:)e(;)i(v)2056
2477 y Ff(n)2150 2451 y Fk(\))38 b Fm(_)g(:)p Fh(\036)57
b Fl(kai)g(th)g(met)-5 b(atr\350poume)60 b(se)d Fk(CNF)p
Fl(.)150 2769 y(Met\210)g(qrhsimopoi)-5 b(o\324me)59
b(an\210lush)f(kai)f(termat\320zoume)i(thn)f(anazhths\240)g(mac)150
3013 y(\354)l(t)-5 b(an)58 b(ft\210soume)g(se)g(mia)g(fr\210sh)g(pou)g
(peri\350qei)g(m\354)l(no)g(t)-5 b(o)57 b(lektik\354)150
3256 y(ap\210nthshc)i(\(ant\320)e(thn)h(ken\240)g(fr\210sh)g(\354pwc)g
(ja)g(k\210name)g(kano)l(nik\210\).)p eop end
%%Page: 43 43
TeXDict begin @landscape 43 42 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 150 114 5034 7 v 150 418 7 305 v 209 309 a Fn(Qr\240sh)78
b(thc)g(An\210lushc)i(gia)d(Ap\210nthsh)j(Erwthm\210t)-6
b(wn)p 5177 418 V 150 425 5034 7 v 5181 494 73 318 v
219 494 5034 73 v 150 908 a Fl(Mporo\324me)58 b(na)g(diakr\320)-10
b(noume)59 b(ti)-5 b(c)58 b(ex\240c)h(peript\270sei)-5
b(c:)288 1248 y Fm(\017)86 b Fj(Termati)-5 b(sm\354c)66
b(me)h(mo)l(nadik\354)h(lektik\354)g(ap\210nthshc)460
1492 y Fh(Ans)p Fk(\()p Fh(c)915 1518 y Fg(1)992 1492
y Fh(;)29 b(:)g(:)g(:)e(;)i(c)1450 1518 y Ff(n)1543 1492
y Fk(\))p Fl(.)460 1773 y(Se)58 b(aut\240)f(thn)h(per\320pt)-5
b(wsh,)58 b(oi)g(st)-5 b(ajer\350c)58 b Fh(c)3253 1799
y Fg(1)3330 1773 y Fh(;)29 b(:)g(:)g(:)e(;)i(c)3788 1799
y Ff(n)3938 1773 y Fl(mac)59 b(d\320)-10 b(noun)58 b(mia)460
2017 y(ap\210nthsh)g(st)-5 b(o)58 b(er\270thma.)77 b(Mpore\320)58
b(na)f(up\210rqoun)h(peri)-5 b(ss\354)l(terec)460 2260
y(apant\240sei)g(c)59 b(an)f(up\210rqoun)g(peri)-5 b(ss\354)l(terec)59
b(diaye\324sei)-5 b(c)60 b(an\210lushc)e(t)-5 b(ou)460
2504 y(t\324pou)58 b Fh(Ans)p Fk(\()p Fh(v)1411 2530
y Fg(1)1488 2504 y Fh(;)29 b(:)g(:)g(:)f(;)h(v)1955 2530
y Ff(n)2048 2504 y Fk(\))39 b Fm(_)f(:)p Fh(\036)p Fl(.)460
2785 y(Mporo\324me)55 b(na)f(suneq\320zoume)h(na)g(y\210qnoume)g(peri)
-5 b(ss\354)l(terec)56 b(apant\240sei)-5 b(c)460 3029
y(all\210)58 b(den)g(mporo\324me)g(po)l(t\350)g(na)g(e\320maste)g
(b\350bai)-5 b(oi)58 b(\354)l(ti)f(ti)-5 b(c)58 b(\350qoume)g(brei)460
3273 y(\354)-5 b(lec)56 b(\(den)g(mporo\324me)h(na)f(egguhjo\324me)f
(\354)l(ti)g(h)h(an\210lush)g(ja)f(brei)h(\354)-5 b(la)56
b(t)-5 b(a)460 3517 y(lo)g(gik\210)57 b(epak\354)-5 b(louja)58
b(en\354c)g(sun\354)-5 b(lou)58 b(pro)l(t\210sewn)g(thc)g(lo)-5
b(gik\240c)460 3760 y(pr\270thc)58 b(t\210xhc\).)p eop
end
%%Page: 44 44
TeXDict begin @landscape 44 43 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 150 1145 5034 7 v 150 1449 7 305 v 209 1340 a
Fn(Qr\240sh)78 b(thc)g(An\210lushc)i(gia)d(Ap\210nthsh)j(Erwthm\210t)-6
b(wn)p 5177 1449 V 150 1456 5034 7 v 5181 1524 73 318
v 219 1524 5034 73 v 288 1961 a Fm(\017)86 b Fj(Termati)-5
b(sm\354c)66 b(me)h(mia)f(di\210zeuxh)i(lektik\270n)g(ap\210nthshc.)460
2242 y Fl(Se)58 b(aut\240)f(thn)h(per\320pt)-5 b(wsh,)58
b(ap\354)g(th)g(b\210sh)f(gn\270sewn)g(\350pet)-5 b(ai)59
b(lo)-5 b(gik\210)57 b(mia)460 2486 y(di\210zeuxh)h(h)g(opo\320a)g(den)
g(mac)g(d\320)-10 b(nei)59 b(mia)f(ori)-5 b(stik\240)57
b(ap\210nthsh)i(gia)e(t)-5 b(o)460 2729 y(er\270thma)58
b(mac.)p eop end
%%Page: 45 45
TeXDict begin @landscape 45 44 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -205
y Fo(')p -344 3836 14 3705 v -344 4188 a(&)5730 -205
y($)p 5730 3836 V 5730 4188 a(\045)p 9 4188 5385 14 v
9 -205 V 2019 -18 1293 7 v 2019 286 7 305 v 2078 177
a Fn(Par\210dei)-6 b(gma)p 3305 286 V 2019 293 1293 7
v 3308 362 73 318 v 2088 362 1293 73 v -150 674 a Fj(KB:)280
986 y Fh(F)24 b(ather)5 b Fk(\()p Fh(Ar)g(t;)29 b(J)17
b(ohn)p Fk(\))280 1297 y Fh(F)24 b(ather)5 b Fk(\()p
Fh(B)k(ob;)29 b(K)12 b(im)p Fk(\))280 1609 y(\()p Fm(8)p
Fh(x)p Fk(\)\()p Fm(8)p Fh(y)6 b Fk(\)\()p Fh(F)24 b(ather)5
b Fk(\()p Fh(x;)29 b(y)6 b Fk(\))49 b Fm(\))f Fh(P)24
b(ar)5 b(ent)p Fk(\()p Fh(x;)29 b(y)6 b Fk(\)\))-150
1920 y Fj(Er\270thma:)77 b Fl(Poi)-5 b(oc)58 b(e\320)-10
b(nai)58 b(go)l(ni\354c)g(t)-5 b(ou)57 b Fk(John)p Fl(?)-150
2454 y(Gia)g(na)h(apant\240soume)h(st)-5 b(o)57 b(er\270thma,)h
(qrhsimopoi)-5 b(o\324me)59 b(an\210lush)f(st)-5 b(o)57
b(parak\210t)-5 b(w)-150 2691 y(s\324no)g(lo)58 b(pro)l(t\210sewn:)280
3002 y Fh(F)24 b(ather)5 b Fk(\()p Fh(Ar)g(t;)29 b(J)17
b(ohn)p Fk(\))280 3314 y Fh(F)24 b(ather)5 b Fk(\()p
Fh(B)k(ob;)29 b(K)12 b(im)p Fk(\))280 3625 y Fm(:)p Fh(F)24
b(ather)5 b Fk(\()p Fh(x;)29 b(y)6 b Fk(\))39 b Fm(_)f
Fh(P)24 b(ar)5 b(ent)p Fk(\()p Fh(x;)29 b(y)6 b Fk(\))280
3937 y Fh(Ans)p Fk(\()p Fh(z)i Fk(\))39 b Fm(_)f(:)p
Fh(P)24 b(ar)5 b(ent)p Fk(\()p Fh(z)j(;)29 b(J)17 b(ohn)p
Fk(\))p eop end
%%Page: 46 46
TeXDict begin @landscape 46 45 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 67 1293 7 v 2019 371 7 305 v 2078 262 a Fn(Par\210dei)-6
b(gma)p 3305 371 V 2019 378 1293 7 v 3308 447 73 318
v 2088 447 1293 73 v 150 758 a Fl(Ap\354)580 1069 y Fh(F)24
b(ather)5 b Fk(\()p Fh(Ar)g(t;)29 b(J)17 b(ohn)p Fk(\))150
1380 y Fl(kai)580 1691 y Fm(:)p Fh(F)24 b(ather)5 b Fk(\()p
Fh(x;)29 b(y)6 b Fk(\))39 b Fm(_)f Fh(P)24 b(ar)5 b(ent)p
Fk(\()p Fh(x;)29 b(y)6 b Fk(\))150 2002 y Fl(me)58 b
Fk(MGU)f Fm(f)p Fh(x=)-10 b(Ar)5 b(t;)29 b(y)6 b(=J)17
b(ohn)p Fm(g)p Fl(,)60 b(\350qoume)580 2313 y Fh(P)24
b(ar)5 b(ent)p Fk(\()p Fh(Ar)g(t;)29 b(J)17 b(ohn)p Fk(\))p
Fh(:)150 2624 y Fl(Ap\354)58 b(t)-5 b(o)l(n)58 b(prohgo\324meno)g
(t\324po)g(kai)f(t)-5 b(o)l(n)580 2934 y Fh(Ans)p Fk(\()p
Fh(z)8 b Fk(\))39 b Fm(_)f(:)p Fh(P)24 b(ar)5 b(ent)p
Fk(\()p Fh(z)j(;)29 b(J)17 b(ohn)p Fk(\))150 3245 y Fl(me)58
b Fk(MGU)f Fm(f)p Fh(z)8 b(=)-10 b(Ar)5 b(t)p Fm(g)p
Fl(,)58 b(\350qoume)580 3556 y Fh(Ans)p Fk(\()p Fh(Ar)5
b(t)p Fk(\))p Fh(:)150 3867 y Fl(Dhlad\240,)58 b(o)f
Fk(Art)h Fl(e\320)-10 b(nai)59 b(go)l(ni\354c)f(t)-5
b(ou)57 b Fk(John)p Fl(.)p eop end
%%Page: 47 47
TeXDict begin @landscape 47 46 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 222 1293 7 v 2019 526 7 305 v 2078 417 a
Fn(Par\210dei)-6 b(gma)p 3305 526 V 2019 533 1293 7 v
3308 602 73 318 v 2088 602 1293 73 v 150 1016 a Fj(KB:)580
1357 y Fh(F)24 b(ather)5 b Fk(\()p Fh(Ar)g(t;)29 b(J)17
b(ohn)p Fk(\))39 b Fm(_)f Fh(F)24 b(ather)5 b Fk(\()p
Fh(B)k(ob;)29 b(J)17 b(ohn)p Fk(\))580 1697 y(\()p Fm(8)p
Fh(x)p Fk(\)\()p Fm(8)p Fh(y)6 b Fk(\)\()p Fh(F)24 b(ather)5
b Fk(\()p Fh(x;)29 b(y)6 b Fk(\))49 b Fm(\))f Fh(P)24
b(ar)5 b(ent)p Fk(\()p Fh(x;)29 b(y)6 b Fk(\)\))150 2037
y Fj(Er\270thma:)77 b Fl(Poi\354c)58 b(e\320)-10 b(nai)58
b(go)l(ni\354c)g(t)-5 b(ou)57 b Fk(John)p Fl(?)150 2355
y(Gia)g(na)h(apant\240soume)h(st)-5 b(o)57 b(er\270thma,)h(qrhsimopoi)
-5 b(o\324me)59 b(an\210lush)f(st)-5 b(o)150 2599 y(parak\210t)g(w)58
b(s\324no)-5 b(lo)58 b(pro)l(t\210sewn:)580 2939 y Fh(F)24
b(ather)5 b Fk(\()p Fh(Ar)g(t;)29 b(J)17 b(ohn)p Fk(\))39
b Fm(_)f Fh(F)24 b(ather)5 b Fk(\()p Fh(B)k(ob;)29 b(J)17
b(ohn)p Fk(\))580 3279 y Fm(:)p Fh(F)24 b(ather)5 b Fk(\()p
Fh(x;)29 b(y)6 b Fk(\))39 b Fm(_)f Fh(P)24 b(ar)5 b(ent)p
Fk(\()p Fh(x;)29 b(y)6 b Fk(\))580 3619 y Fh(Ans)p Fk(\()p
Fh(z)i Fk(\))39 b Fm(_)f(:)p Fh(P)24 b(ar)5 b(ent)p Fk(\()p
Fh(z)j(;)29 b(J)17 b(ohn)p Fk(\))p eop end
%%Page: 48 48
TeXDict begin @landscape 48 47 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 67 1293 7 v 2019 371 7 305 v 2078 262 a Fn(Par\210dei)-6
b(gma)p 3305 371 V 2019 378 1293 7 v 3308 447 73 318
v 2088 447 1293 73 v 150 820 a Fl(Ap\354)580 1149 y Fh(F)24
b(ather)5 b Fk(\()p Fh(Ar)g(t;)29 b(J)17 b(ohn)p Fk(\))39
b Fm(_)f Fh(F)24 b(ather)5 b Fk(\()p Fh(B)k(ob;)29 b(J)17
b(ohn)p Fk(\))150 1477 y Fl(kai)580 1806 y Fm(:)p Fh(F)24
b(ather)5 b Fk(\()p Fh(x;)29 b(y)6 b Fk(\))39 b Fm(_)f
Fh(P)24 b(ar)5 b(ent)p Fk(\()p Fh(x;)29 b(y)6 b Fk(\))150
2135 y Fl(me)58 b Fk(MGU)f Fm(f)p Fh(x=)-10 b(Ar)5 b(t;)29
b(y)6 b(=J)17 b(ohn)p Fm(g)p Fl(,)60 b(\350qoume)580
2463 y Fh(P)24 b(ar)5 b(ent)p Fk(\()p Fh(Ar)g(t;)29 b(J)17
b(ohn)p Fk(\))39 b Fm(_)f Fh(F)24 b(ather)5 b Fk(\()p
Fh(B)k(ob;)29 b(J)17 b(ohn)p Fk(\))150 2792 y Fl(Ap\354)58
b(t)-5 b(o)l(n)58 b(parap\210nw)g(t\324po)g(kai)g(t)-5
b(o)l(n)580 3120 y Fm(:)p Fh(F)24 b(ather)5 b Fk(\()p
Fh(x;)29 b(y)6 b Fk(\))39 b Fm(_)f Fh(P)24 b(ar)5 b(ent)p
Fk(\()p Fh(x;)29 b(y)6 b Fk(\))150 3449 y Fl(me)58 b
Fk(MGU)f Fm(f)p Fh(x=B)9 b(ob;)29 b(y)6 b(=J)17 b(ohn)p
Fm(g)p Fl(,)59 b(\350qoume)580 3778 y Fh(P)24 b(ar)5
b(ent)p Fk(\()p Fh(Ar)g(t;)29 b(J)17 b(ohn)p Fk(\))39
b Fm(_)f Fh(P)24 b(ar)5 b(ent)p Fk(\()p Fh(B)k(ob;)29
b(J)17 b(ohn)p Fk(\))p Fh(:)p eop end
%%Page: 49 49
TeXDict begin @landscape 49 48 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 67 1293 7 v 2019 371 7 305 v 2078 262 a Fn(Par\210dei)-6
b(gma)p 3305 371 V 2019 378 1293 7 v 3308 447 73 318
v 2088 447 1293 73 v 150 758 a Fl(Ap\354)580 1069 y Fh(P)24
b(ar)5 b(ent)p Fk(\()p Fh(Ar)g(t;)29 b(J)17 b(ohn)p Fk(\))39
b Fm(_)f Fh(P)24 b(ar)5 b(ent)p Fk(\()p Fh(B)k(ob;)29
b(J)17 b(ohn)p Fk(\))150 1380 y Fl(kai)580 1691 y Fh(Ans)p
Fk(\()p Fh(z)8 b Fk(\))39 b Fm(_)f(:)p Fh(P)24 b(ar)5
b(ent)p Fk(\()p Fh(z)j(;)29 b(J)17 b(ohn)p Fk(\))150
2002 y Fl(me)58 b Fk(MGU)f Fm(f)p Fh(z)8 b(=)-10 b(Ar)5
b(t)p Fm(g)p Fl(,)58 b(\350qoume)580 2313 y Fh(Ans)p
Fk(\()p Fh(Ar)5 b(t)p Fk(\))39 b Fm(_)f Fh(P)24 b(ar)5
b(ent)p Fk(\()p Fh(B)k(ob;)29 b(J)17 b(ohn)p Fk(\))150
2624 y Fl(t)-5 b(o)57 b(opo\320)-5 b(o)58 b(sth)f(sun\350qeia)h
(anal\324et)-5 b(ai)58 b(me)580 2934 y Fh(Ans)p Fk(\()p
Fh(z)8 b Fk(\))39 b Fm(_)f(:)p Fh(P)24 b(ar)5 b(ent)p
Fk(\()p Fh(z)j(;)29 b(J)17 b(ohn)p Fk(\))150 3245 y Fl(me)58
b Fk(MGU)f Fm(f)p Fh(z)8 b(=B)h(ob)p Fm(g)p Fl(,)57 b(mac)i(d\320)-10
b(nei)580 3556 y Fh(Ans)p Fk(\()p Fh(Ar)5 b(t)p Fk(\))39
b Fm(_)f Fh(Ans)p Fk(\()p Fh(B)9 b(ob)p Fk(\))p Fh(:)150
3867 y Fl(Dhlad\240,)58 b Fj(o)67 b Fi(Art)e Fj(\240)h(o)g
Fi(Bob)58 b Fl(e\320)-10 b(nai)58 b(go)l(ni\354c)g(t)-5
b(ou)57 b Fk(John)p Fl(.)p eop end
%%Page: 50 50
TeXDict begin @landscape 50 49 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 850 548 3632 7 v 850 852 7 305 v 908 743 a Fn(H)77
b(An\210lush)i(gia)f(T\324pouc)g(me)f(Is\354)-5 b(tht)f(a)p
4475 852 V 850 859 3632 7 v 4478 928 73 318 v 918 928
3632 73 v 150 1342 a Fl(Pros\350xte)58 b(\354)l(ti)f(o)h(kan\354)l(nac)
g(thc)g(an\210lushc)h(\354pwc)f(parousi\210sthke,)g(kaj\270c)150
1586 y(kai)f(t)-5 b(a)58 b(jewr\240mat)-5 b(a)58 b(orj\354)l(tht)-5
b(ac)59 b(kai)e(plhr\354)l(tht)-5 b(ac)59 b(di\210yeushc,)g(den)f(i)-5
b(sq\324oun)150 1830 y(gia)57 b(fr\210sei)-5 b(c)59 b(pou)f
(perilamb\210noun)h Fj(i)-5 b(s\354)l(tht)g(a)p Fl(.)150
2392 y Fj(Par\210dei)g(gma:)78 b Fl(Den)58 b(mporo\324me)h(na)f
(qrhsimopoi\240soume)g(an\210lush)g(gia)f(na)150 2635
y(sumper\210noume)j Fh(P)24 b Fk(\()p Fh(B)9 b Fk(\))56
b Fl(ap\354)h(th)h(b\210sh)f(gn\270shc)580 2976 y Fh(P)24
b Fk(\()p Fh(A)p Fk(\))p Fh(;)86 b(A)48 b Fk(=)g Fh(B)150
3316 y Fl(Ti)58 b(mporo\324me)h(na)e(k\210noume?)p eop
end
%%Page: 51 51
TeXDict begin @landscape 51 50 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 850 67 3632 7 v 850 371 7 305 v 908 262 a Fn(H)77
b(An\210lush)i(gia)f(T\324pouc)g(me)f(Is\354)-5 b(tht)f(a)p
4475 371 V 850 378 3632 7 v 4478 447 73 318 v 918 447
3632 73 v 150 758 a Fl(An)58 b(oi)f(t\324poi)h(thc)g
Fh(K)12 b(B)66 b Fl(peri\350qoun)58 b(t)-5 b(o)57 b(s\324mbo)-5
b(lo)58 b Fk(=)p Fl(,)g(t\354)l(te)f(mporo\324me)i(na)150
995 y(k\210noume)f(an\210lush)g(me)g(d\324o)g(tr\354pouc:)288
1306 y Fm(\017)86 b Fl(Prosj\350t)-5 b(oume)58 b(sth)g(b\210sh)f
(gn\270shc)h(kat\210llhla)g Fj(axi\270mat)-5 b(a)57 b
Fl(gia)g(thn)460 1542 y(sq\350sh)g(i)-5 b(s\354)l(tht)g(ac.)288
1853 y Fm(\017)86 b Fl(Qrhsimopoi)-5 b(o\324me,)59 b(ekt\354c)f(ap\354)
f(thn)h(an\210lush,)g Fj(eidiko\324c)68 b(kan\354)l(nec)460
2090 y(sumperasmo\324)58 b Fl(pou)g(lamb\210noun)g(up\354yh)g(t)-5
b(ouc)58 b(thn)g(i)-5 b(s\354)l(tht)g(a.)288 2401 y Fm(\017)86
b Fl(Qrhsimopoi)-5 b(o\324me)59 b Fj(enopo\320)m(hsh)67
b(i)-5 b(s\354)l(tht)g(ac)65 b Fi(\(equational)460 2638
y(uni\014cation\))p Fl(.)77 b(H)57 b(enopo\320)m(hsh)h(i)-5
b(s\354)l(tht)g(ac)59 b(e\320)-10 b(nai)58 b(\350na)g(e\320doc)g
(enopo\320)m(hshc)460 2875 y(pou)g(lamb\210nei)g(up\354yh)g(t)-5
b(ou)58 b(ti)-5 b(c)58 b(sq\350sei)-5 b(c)58 b(i)-5 b(s\354)l(tht)g(ac)
58 b(an\210mesa)h(st)-5 b(ouc)460 3112 y(\354rouc)58
b(pou)g(enopoi)-5 b(o\324nt)g(ai)58 b(\(den)g(e\320)-10
b(nai)59 b(dhlad\240)f(apl\210)g(sunt)-5 b(aktik\240)460
3349 y(enopo\320)m(hsh\).)150 3660 y(To)58 b(\320di)-5
b(o)57 b(i)-5 b(sq\324ei)58 b(kai)f(gia)g(\210lla)h(eidik\210)g
(kathgor\240mat)-5 b(a)58 b(\354pwc)g(t)-5 b(a)57 b(ari)m(jmhtik\210)
150 3896 y Fh(<)p Fl(,)g Fm(\024)g Fl(klp.)p eop end
%%Page: 52 52
TeXDict begin @landscape 52 51 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -205
y Fo(')p -344 3836 14 3705 v -344 4188 a(&)5730 -205
y($)p 5730 3836 V 5730 4188 a(\045)p 9 4188 5385 14 v
9 -205 V 1258 -18 2815 7 v 1258 286 7 305 v 1317 177
a Fn(Ta)77 b(Axi\270mat)-6 b(a)78 b(thc)h(Is\354)-5 b(tht)f(ac)p
4066 286 V 1258 293 2815 7 v 4069 362 73 318 v 1327 362
2815 73 v -12 721 a Fm(\017)86 b Fl(Anaklastik\240)58
b(idi\354)l(tht)-5 b(a:)76 b Fk(\()p Fm(8)p Fh(x)p Fk(\))58
b Fh(x)48 b Fk(=)g Fh(x)-12 1041 y Fm(\017)86 b Fl(Summetrik\240)59
b(idi\354)l(tht)-5 b(a:)77 b Fk(\()p Fm(8)p Fh(x)p Fk(\)\()p
Fm(8)p Fh(y)6 b Fk(\)\()p Fh(x)48 b Fk(=)g Fh(y)54 b
Fm(\))48 b Fh(y)55 b Fk(=)47 b Fh(x)p Fk(\))-12 1360
y Fm(\017)86 b Fl(Met)-5 b(abatik\240)57 b(idi\354)l(tht)-5
b(a:)77 b Fk(\()p Fm(8)p Fh(x)p Fk(\)\()p Fm(8)p Fh(y)6
b Fk(\)\()p Fm(8)p Fh(z)i Fk(\)\()p Fh(x)48 b Fk(=)g
Fh(y)c Fm(^)39 b Fh(y)54 b Fk(=)48 b Fh(z)55 b Fm(\))48
b Fh(x)g Fk(=)g Fh(z)8 b Fk(\))-12 1680 y Fm(\017)86
b Fl(Idi\354)l(tht)-5 b(a)58 b(thc)g(antikat\210st)-5
b(ashc)58 b(\320)-5 b(swn:)590 1968 y Fk(\()p Fm(8)p
Fh(x)p Fk(\)\()p Fm(8)p Fh(y)6 b Fk(\)\()p Fh(x)49 b
Fk(=)e Fh(y)55 b Fm(\))48 b Fk(\()p Fh(P)2170 1994 y
Fg(1)2247 1968 y Fk(\()p Fh(x)p Fk(\))g Fm(,)g Fh(P)2858
1994 y Fg(1)2935 1968 y Fk(\()p Fh(y)6 b Fk(\)\)\))590
2256 y(\()p Fm(8)p Fh(x)p Fk(\)\()p Fm(8)p Fh(y)g Fk(\)\()p
Fh(x)49 b Fk(=)e Fh(y)55 b Fm(\))48 b Fk(\()p Fh(P)2170
2282 y Fg(2)2247 2256 y Fk(\()p Fh(x)p Fk(\))g Fm(,)g
Fh(P)2858 2282 y Fg(2)2935 2256 y Fk(\()p Fh(y)6 b Fk(\)\)\))590
2544 y Fm(\001)29 b(\001)g(\001)590 2832 y Fk(\()p Fm(8)p
Fh(w)5 b Fk(\)\()p Fm(8)p Fh(x)p Fk(\)\()p Fm(8)p Fh(y)h
Fk(\)\()p Fm(8)p Fh(z)i Fk(\)\()p Fh(w)52 b Fk(=)c Fh(y)d
Fm(^)38 b Fh(x)48 b Fk(=)g Fh(z)55 b Fm(\))48 b Fk(\()p
Fh(F)3481 2858 y Fg(1)3558 2832 y Fk(\()p Fh(w)5 b(;)29
b(x)p Fk(\))48 b(=)f Fh(F)4335 2858 y Fg(1)4412 2832
y Fk(\()p Fh(y)6 b(;)29 b(z)8 b Fk(\)\)\))590 3120 y(\()p
Fm(8)p Fh(w)d Fk(\)\()p Fm(8)p Fh(x)p Fk(\)\()p Fm(8)p
Fh(y)h Fk(\)\()p Fm(8)p Fh(z)i Fk(\)\()p Fh(w)52 b Fk(=)c
Fh(y)d Fm(^)38 b Fh(x)48 b Fk(=)g Fh(z)55 b Fm(\))48
b Fk(\()p Fh(F)3481 3146 y Fg(2)3558 3120 y Fk(\()p Fh(w)5
b(;)29 b(x)p Fk(\))48 b(=)f Fh(F)4335 3146 y Fg(2)4412
3120 y Fk(\()p Fh(y)6 b(;)29 b(z)8 b Fk(\)\)\))590 3408
y Fm(\001)29 b(\001)g(\001)160 3696 y Fl('Eqoume)57 b(\350na)h
(ax\320wma)g(antikat\210st)-5 b(ashc)59 b(\320)-5 b(swn)57
b(gia)g Fj(k\210je)67 b(s\324mbo)-5 b(lo)160 3934 y(kathgor\240mat)g
(oc)67 b(kai)g(k\210je)f(s\324mbo)-5 b(lo)66 b(sun\210rthshc.)p
eop end
%%Page: 53 53
TeXDict begin @landscape 53 52 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 105 7 5122 7 v 105 323 7 316 v 163 214 a Fn(O)77
b(Kan\354)-5 b(nac)78 b(thc)g(Apodiam\354rfwshc)g Fd(\(Demo)6
b(dulation\))p 5219 323 V 105 330 5122 7 v 5223 398 73
330 v 174 398 5122 73 v -150 723 a Fl(O)57 b(kan\354)l(nac)i
(sumperasmo\324)g(thc)f(apodiam\354rfwshc)h(gia)f(thn)f(i)-5
b(s\354)l(tht)g(a)58 b(e\320)-10 b(nai)58 b(o)-150 960
y(parak\210t)-5 b(w.)-150 1259 y(Gia)56 b(opoi)-5 b(ousd\240po)l(te)58
b(\354rouc)f Fh(x;)29 b(y)63 b Fl(kai)56 b Fh(z)64 b
Fl(pou)57 b(e\320)-10 b(nai)57 b(t\350t)-5 b(oi)g(oi)57
b(\270ste)f Fh(U)19 b(N)g(I)14 b(F)24 b(Y)37 b Fk(\()p
Fh(x;)29 b(z)8 b Fk(\))47 b(=)h Fh(\022)-150 1497 y Fl(kai)57
b(opoi)-5 b(od\240po)l(te)59 b(lektik\354)e Fh(m)1843
1523 y Ff(n)1937 1497 y Fk([)p Fh(z)8 b Fk(])57 b Fl(pou)g(peri\350qei)
i(t)-5 b(o)l(n)57 b(\354ro)h Fh(z)8 b Fl(:)461 1768 y
Fh(x)49 b Fk(=)e Fh(y)6 b(;)144 b(m)1222 1794 y Fg(1)1338
1768 y Fm(_)38 b(\001)29 b(\001)g(\001)37 b(_)h Fh(m)2034
1794 y Ff(n)2128 1768 y Fk([)p Fh(z)8 b Fk(])p 301 1845
2171 7 v 301 2003 a Fh(m)452 2029 y Fg(1)568 2003 y Fm(_)38
b(\001)29 b(\001)g(\001)37 b(_)h Fh(m)1264 2029 y Ff(n)1358
2003 y Fk([)p Fh(S)10 b(U)19 b(B)9 b(S)h(T)24 b Fk(\()p
Fh(\022)5 b(;)29 b(y)6 b Fk(\)])-150 2736 y Fj(Parade\320)-5
b(gmat)g(a:)-12 3051 y Fm(\017)86 b Fl(Ap\354)58 b Fh(T)24
b(heT)g(hief)66 b Fk(=)48 b Fh(J)17 b(ohn)59 b Fl(kai)e
Fh(Ar)5 b(r)g(ested)p Fk(\()p Fh(T)24 b(heT)g(hief)19
b Fk(\))56 b Fl(me)i Fk(MGU)g Fm(fg)p Fl(,)160 3289 y(mporo\324me)h(na)
e(sumper\210noume)j Fh(Ar)5 b(r)g(ested)p Fk(\()p Fh(J)17
b(ohn)p Fk(\))p Fl(.)-12 3603 y Fm(\017)86 b Fl(Ap\354)58
b Fh(S)10 b Fk(\()p Fh(S)g Fk(\(0\)\))46 b(=)i(2)58 b
Fl(kai)f Fh(P)24 b Fk(\(2\))38 b Fm(_)g Fh(Q)p Fk(\()p
Fh(S)10 b Fk(\()p Fh(S)g Fk(\()p Fh(w)5 b Fk(\)\)\))56
b Fl(me)i Fk(MGU)f Fm(f)p Fh(w)5 b(=)p Fk(0)p Fm(g)p
Fl(,)58 b(mporo\324me)h(na)160 3841 y(sumper\210noume)g
Fh(P)24 b Fk(\(2\))38 b Fm(_)g Fh(Q)p Fk(\(2\))p Fl(.)p
eop end
%%Page: 54 54
TeXDict begin @landscape 54 53 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-404 -180
y Fo(')p -404 3741 14 3585 v -404 4094 a(&)5790 -180
y($)p 5790 3741 V 5790 4094 a(\045)p -51 4094 5505 14
v -51 -180 V -49 7 5430 7 v -49 323 7 316 v 9 214 a Fn(O)77
b(Kan\354)-5 b(nac)77 b(thc)i(Paradiam\354rfwshc)e Fd(\(P)-6
b(aramo)6 b(dulation\))p 5373 323 V -49 330 5430 7 v
5377 398 73 330 v 20 398 5430 73 v -210 724 a Fl('Enac)58
b(\210lloc)g(kan\354)l(nac)h(sumperasmo\324)g(gia)e(thn)h(i)-5
b(s\354)l(tht)g(a)57 b(e\320)-10 b(nai)59 b(o)e(kan\354)l(nac)i(thc)
-210 961 y(paradiam\354rfwshc.)-210 1261 y(Gia)e(opoi)-5
b(ousd\240po)l(te)59 b(\354rouc)f Fh(x;)29 b(y)64 b Fl(kai)57
b Fh(z)65 b Fl(pou)58 b(e\320)-10 b(nai)58 b(t\350t)-5
b(oi)g(oi)58 b(\270ste)f Fh(U)19 b(N)g(I)14 b(F)24 b(Y)36
b Fk(\()p Fh(x;)29 b(z)8 b Fk(\))48 b(=)f Fh(\022)-210
1498 y Fl(kai)57 b(opoi)-5 b(od\240po)l(te)59 b(lektik\354)e
Fh(m)1783 1524 y Ff(n)1877 1498 y Fk([)p Fh(z)8 b Fk(])57
b Fl(pou)g(peri\350qei)i(t)-5 b(o)l(n)57 b(\354ro)h Fh(z)8
b Fl(:)483 1770 y Fh(l)534 1795 y Fg(1)649 1770 y Fm(_)39
b(\001)29 b(\001)g(\001)e Fh(l)1083 1795 y Ff(k)1206
1770 y Fm(_)39 b Fh(x)48 b Fk(=)g Fh(y)6 b(;)143 b(m)2120
1795 y Fg(1)2236 1770 y Fm(_)38 b(\001)29 b(\001)g(\001)37
b(_)h Fh(m)2932 1795 y Ff(n)3026 1770 y Fk([)p Fh(z)8
b Fk(])p 241 1847 3210 7 v 241 2004 a Fh(S)i(U)19 b(B)9
b(S)h(T)24 b Fk(\()p Fh(\022)5 b(;)29 b(l)1156 2030 y
Fg(1)1268 2004 y Fm(_)38 b(\001)29 b(\001)g(\001)37 b(_)i
Fh(l)1865 2030 y Ff(k)1988 2004 y Fm(_)f Fh(m)2292 2030
y Fg(1)2408 2004 y Fm(_)g(\001)29 b(\001)g(\001)37 b(_)h
Fh(m)3104 2030 y Ff(n)3198 2004 y Fk([)p Fh(y)6 b Fk(]\))-210
2266 y Fj(Par\210dei)-5 b(gma:)78 b Fl(Ap\354)57 b(t)-5
b(o)l(n)58 b(t\324po)220 2581 y Fh(P)24 b Fk(\()p Fh(v)6
b Fk(\))39 b Fm(_)f Fk(\()p Fh(F)24 b Fk(\()p Fh(A;)29
b(v)6 b Fk(\))47 b(=)h Fh(F)24 b Fk(\()p Fh(B)9 b(;)29
b(v)6 b Fk(\)\))-210 2896 y Fl(kai)57 b(t)-5 b(o)l(n)220
3211 y Fh(Q)p Fk(\()p Fh(B)9 b Fk(\))38 b Fm(_)g Fh(R)q
Fk(\()p Fh(F)24 b Fk(\()p Fh(A;)29 b(C)12 b Fk(\)\))-210
3526 y Fl(me)58 b Fk(MGU)f Fm(f)p Fh(v)6 b(=C)12 b Fm(g)p
Fl(,)59 b(mporo\324me)g(na)f(sumper\210noume)220 3841
y Fh(P)24 b Fk(\()p Fh(C)12 b Fk(\))39 b Fm(_)f Fh(Q)p
Fk(\()p Fh(B)9 b Fk(\))37 b Fm(_)h Fh(R)q Fk(\()p Fh(F)24
b Fk(\()p Fh(B)9 b(;)29 b(C)12 b Fk(\)\))p Fh(:)p eop
end
%%Page: 55 55
TeXDict begin @landscape 55 54 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 280 1047 4771 7 v 280 1351 7 305 v 339 1242 a
Fn(Plhr\354)-5 b(tht)f(a)78 b(t)-6 b(ou)77 b(Kan\354)-5
b(na)77 b(thc)h(Paradiam\354rfwshc)p 5044 1351 V 280
1358 4771 7 v 5047 1427 73 318 v 349 1427 4771 73 v 150
1841 a Fl(O)57 b(kan\354)l(nac)i(thc)f(paradiam\354rfwshc)i(e\320)-10
b(nai)58 b(pi)-5 b(o)58 b(genik\354c)g(ap\354)f(t)-5
b(o)l(n)58 b(kan\354)l(na)150 2085 y(thc)g(apodiam\354rfwshc)h(kai,)f
(maz\320)g(me)g(t)-5 b(o)l(n)57 b(kan\354)l(na)h(thc)g(an\210lushc,)h
(\350qei)e(wc)150 2329 y(apo)l(t\350lesma)i(mia)f(apodeiktik\240)g
(diadikas\320a)g(pou)f(e\320)-10 b(nai)59 b Fj(pl\240rhc)66
b(wc)g(proc)150 2573 y(th)g(di\210yeush)h Fi(\(refutation)e(complete\))
57 b Fl(gia)g(fr\210sei)-5 b(c)59 b(me)f(i)-5 b(s\354)l(tht)g(a)58
b(thc)150 2817 y(lo)-5 b(gik\240c)58 b(pr\270thc)g(t\210xhc.)p
eop end
%%Page: 56 56
TeXDict begin @landscape 56 55 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1706 1300 1919 7 v 1706 1587 7 287 v 1765 1495
a Fn(H)77 b(Gl\270ssa)h Fd(Prolog)p 3618 1587 V 1706
1594 1919 7 v 3621 1662 73 301 v 1775 1662 1919 73 v
150 2077 a Fl(H)57 b Fk(Prolog)i Fl(e\320)-10 b(nai)58
b(mia)g(gl\270ssa)f(lo)-5 b(giko\324)57 b(pro)-5 b(grammati)g(smo\324.)
78 b(Ta)150 2320 y(pro)-5 b(gr\210mmat)g(a)59 b(thc)f
Fk(Prolog)g Fl(sthn)g(aplo\324sterh)g(t)-5 b(ouc)58 b(morf\240)h(apo)l
(telo\324nt)-5 b(ai)150 2564 y(ap\354)58 b Fj(gego)l(n\354)l(t)-5
b(a)57 b Fl(\240)h Fj(kan\354)l(nec)h Fl(\(dhlad\240)f
Fj(ori)-5 b(stik\350c)68 b(fr\210sei)-5 b(c)66 b Fi(Horn)p
Fl(\).)p eop end
%%Page: 57 57
TeXDict begin @landscape 57 56 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 1706 440 1919 7 v 1706 727 7 287 v 1765 636
a Fn(H)77 b(Gl\270ssa)h Fd(Prolog)p 3618 727 V 1706 734
1919 7 v 3621 803 73 301 v 1775 803 1919 73 v -150 1217
a Fl(Jum\320zoume)59 b(\354)l(ti)e(\350na)h Fj(gego)l(n\354c)g
Fl(e\320)-10 b(nai)59 b(mia)f(fr\210sh)g(thc)g(morf\240c)280
1558 y Fh(q)-150 1898 y Fl(en\270)g(\350nac)g Fj(kan\354)l(nac)h
Fl(e\320)-10 b(nai)58 b(mia)g(fr\210sh)g(thc)g(morf\240c)280
2238 y Fm(:)p Fh(p)482 2264 y Fg(1)597 2238 y Fm(_)38
b(:)p Fh(p)952 2264 y Fg(2)1067 2238 y Fm(_)g Fh(:)29
b(:)g(:)38 b Fm(_)g(:)p Fh(p)1815 2264 y Ff(n)1946 2238
y Fm(_)g Fh(q)178 b Fk(\()p Fl(i)-5 b(sod\324nama)69
b Fh(p)3313 2264 y Fg(1)3428 2238 y Fm(^)38 b Fh(p)3668
2264 y Fg(2)3783 2238 y Fm(^)g Fh(:)29 b(:)g(:)37 b Fm(^)h
Fh(p)4415 2264 y Ff(n)4556 2238 y Fm(\))48 b Fh(q)6 b
Fk(\))p Fh(:)-150 2578 y Fl(Sthn)58 b Fk(Prolog)g Fl(t)-5
b(a)58 b(gego)l(n\354)l(t)-5 b(a)57 b(kai)g(oi)h(kan\354)l(nec)g
(gr\210fo)l(nt)-5 b(ai)58 b(wc)g(ex\240c:)160 2918 y
Fc(q.)160 3406 y(q:-)91 b(p1,)h(p2,)g(...,)g(pn.)p eop
end
%%Page: 58 58
TeXDict begin @landscape 58 57 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2273 338 785 7 v 2273 625 7 287 v 2332 533 a Fd(Prolog)p
3051 625 V 2273 632 785 7 v 3054 701 73 301 v 2342 701
785 73 v 150 1115 a Fl(Sthn)58 b Fk(Prolog)p Fl(,)g(mporo\324me)h
(ep\320)-5 b(shc)59 b(na)e(diatup\270noume)i Fj(erwt\240mat)-5
b(a)150 1359 y Fi(\(queries\))56 b Fl(qrhsimopoi\270nt)-5
b(ac)59 b(t)-5 b(o)57 b(ex\240c)i(sunt)-5 b(aktik\354:)460
1699 y Fc(?-p1,)92 b(p2,)g(...,)g(pn.)150 2040 y Fl(Sthn)58
b Fk(Prolog)g Fl(qrhsimopoie\320)-5 b(t)g(ai)59 b(o)e(\354roc)h
Fj(st\354)-5 b(qoc)66 b(\()p Fi(goal)p Fj(\))57 b Fl(gia)h(na)150
2283 y(anaferjo\324me)h(se)f(\350na)g(lektik\354)f(pou)g(peri\350qet)-5
b(ai)59 b(se)e(\350na)h(er\270thma.)150 2601 y(Ta)g(erwt\240mat)-5
b(a)58 b(thc)g Fk(Prolog)g Fl(anti)-5 b(st)g(oi)g(qo\324n)58
b(se)g(fr\210sei)-5 b(c)59 b Fk(Horn)e Fl(thc)h(morf\240c)580
2941 y Fm(:)p Fh(p)782 2967 y Fg(1)897 2941 y Fm(_)38
b(:)p Fh(p)1252 2967 y Fg(2)1367 2941 y Fm(_)g Fh(:)29
b(:)g(:)38 b Fm(_)g(:)p Fh(p)2115 2967 y Ff(n)150 3282
y Fl(dhlad\240)58 b(aut\350c)f(pou)h(apo)l(telo\324nt)-5
b(ai)58 b Fj(m\354)l(no)66 b(ap\354)g(arnhtik\210)h(lektik\210)58
b Fl(\354pwc)150 3525 y(ja)f(exhg\240soume)i(parak\210t)-5
b(w.)p eop end
%%Page: 59 59
TeXDict begin @landscape 59 58 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2019 540 1293 7 v 2019 844 7 305 v 2078 735 a
Fn(Par\210dei)-6 b(gma)p 3305 844 V 2019 851 1293 7 v
3308 920 73 318 v 2088 920 1293 73 v 460 1356 a Fc(predecessor\(X,)96
b(Z\))91 b(:-)362 b(\045pr1)641 1600 y(parent\(X,)94
b(Z\).)460 1844 y(predecessor\(X,)i(Z\))91 b(:-)362 b(\045pr2)641
2088 y(parent\(X,)94 b(Y\),)641 2331 y(predecessor\(Y,)i(Z\).)460
2819 y(parent\(pam,)f(bob\).)273 b(parent\(bob,)95 b(ann\).)460
3063 y(parent\(tom,)g(bob\).)273 b(parent\(bob,)95 b(pat\).)460
3307 y(parent\(tom,)g(liz\).)273 b(parent\(pat,)95 b(jim\).)p
eop end
%%Page: 60 60
TeXDict begin @landscape 60 59 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 667 367 3997 7 v 667 671 7 305 v 726 562 a Fn(O)77
b(Kan\354)-5 b(nac)77 b(thc)h(An\210lushc)i(sthn)e Fd(Prolog)p
4657 671 V 667 678 3997 7 v 4660 747 73 318 v 736 747
3997 73 v 288 1184 a Fm(\017)86 b Fl(H)57 b Fk(Prolog)h
Fl(bas\320zet)-5 b(ai)59 b(se)e(mia)h(eidik\240)g(morf\240)g
(an\210lushc)h(pou)f(l\350get)-5 b(ai)460 1427 y Fi(SLD)p
Fj(-an\210lush)66 b(\()p Fi(SLD-resolution)p Fj(\))57
b Fk(\(Linear)f(resolution)h(with)g(a)460 1671 y Fi(S)p
Fk(election)e(function)h(for)h Fi(D)p Fk(e\014nite)f(clauses\))p
Fl(.)288 2011 y Fm(\017)86 b Fl(Se)58 b(k\210je)f(b\240ma)h(t)-5
b(ou)58 b(diermhn\350a)h(thc)f Fk(Prolog)p Fl(,)f(efarm\354zet)-5
b(ai)60 b(o)d(kan\354)l(nac)460 2255 y(thc)h(an\210lushc)g(an\210mesa)h
(se)e(\350na)h(st\354)-5 b(qo)57 b(pou)h(j\350loume)g(na)460
2499 y(apode\320xoume)h(kai)e(\350na)h(gego)l(n\354c)g(\240)f(\350na)h
(kan\354)l(na)g(t)-5 b(ou)57 b(pro)-5 b(gr\210mmat)g(oc.)460
2743 y('Etsi)57 b Fj(apodeikn\324et)-5 b(ai)68 b(o)f(st\354)-5
b(qoc)57 b Fl(\(sthn)h(per\320pt)-5 b(wsh)58 b(t)-5 b(ou)460
2987 y(gego)l(n\354)l(t)g(oc\))57 b(\240)h Fj(par\210get)-5
b(ai)66 b(\350na)h(n\350o)g(s\324no)-5 b(lo)66 b(st\354)-5
b(qwn)58 b Fl(\(sthn)460 3231 y(per\320pt)-5 b(wsh)59
b(t)-5 b(ou)57 b(kan\354)l(na\))h(pou)g(prost\320)m(jent)-5
b(ai)58 b(st)-5 b(ouc)58 b(st\354)-5 b(qouc)58 b(pou)460
3474 y(\350qoume)f(na)h(apode\320xoume.)p eop end
%%Page: 61 61
TeXDict begin @landscape 61 60 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 233 363 4866 7 v 233 668 7 305 v 291 559 a Fn(D\350ndro)77
b(Ap\354deixhc)h(gia)g Fb(?-)107 b(predecessor\(pam,bob\))p
5091 668 V 233 675 4866 7 v 5095 743 73 318 v 302 743
4866 73 v 1127 3418 a @beginspecial 0 @llx 0 @lly 182
@urx 136 @ury 1820 @rwi @setspecial
%%BeginDocument: figure19.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: D:\Lessons\Ai_autumn2002\misc\tutorials\figure19.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 182 136
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 182 136
%AI3_TileBox: 0 0 182 136
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
  0.000 0.000 0.000 0.000 K
1 j
  1.8030 14.7846 m
  179.6995 14.7846 L
  179.6995 133.5426 L
  1.8030 133.5426 L
  1.8030 14.7846 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  3.6060 16.9482 m
  145.4424 16.9482 L
  145.4424 131.4992 L
  3.6060 131.4992 L
  3.6060 16.9482 L
F
U
u
  0.000 0.000 0.000 0.000 K
1 J
  3.6060 16.9482 m
  145.4424 16.9482 L
  145.4424 131.4992 L
  3.6060 131.4992 L
  3.6060 16.9482 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  5.4090 18.9917 m
  143.1586 18.9917 L
  143.1586 129.3356 L
  5.4090 129.3356 L
  5.4090 18.9917 L
F
U
u
  0.000 0.000 0.000 0.000 K
  5.4090 18.9917 m
  143.1586 18.9917 L
  143.1586 129.3356 L
  5.4090 129.3356 L
  5.4090 18.9917 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  6.7312 96.7613 m
  141.3556 96.7613 L
  141.3556 127.8932 L
  6.7312 127.8932 L
  6.7312 96.7613 L
F
U
u
  0.000 0.000 0.000 1.000 K
  6.7312 96.7613 m
  141.3556 96.7613 L
  141.3556 127.8932 L
  6.7312 127.8932 L
  6.7312 96.7613 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 22.7179 109.3823 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(predecessor\(pam, bob\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  6.7312 20.5543 m
  141.3556 20.5543 L
  141.3556 51.8063 L
  6.7312 51.8063 L
  6.7312 20.5543 L
F
U
u
  0.000 0.000 0.000 1.000 K
  6.7312 20.5543 m
  141.3556 20.5543 L
  141.3556 51.8063 L
  6.7312 51.8063 L
  6.7312 20.5543 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 37.9833 33.1753 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(parent\(pam, bob\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  74.1636 96.7613 m
  69.5960 92.1937 L
  72.6010 92.1937 L
  72.6010 51.8063 L
  75.4858 51.8063 L
  75.4858 92.1937 L
  78.4908 92.1937 L
  74.1636 96.7613 L
F
U
u
  0.000 0.000 0.000 1.000 K
  74.1636 96.7613 m
  69.5960 92.1937 L
  72.6010 92.1937 L
  72.6010 51.8063 L
  75.4858 51.8063 L
  75.4858 92.1937 L
  78.4908 92.1937 L
  74.1636 96.7613 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 81.6160 77.8898 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by rule\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 114.0701 77.8898 0 Tp
TP
/_Helvetica-Oblique 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(pr1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.2554 62.7446 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(MGU{X/pam, Y/bob}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 66.8314 6.4908 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(yes\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial eop end
%%Page: 62 62
TeXDict begin @landscape 62 61 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-194 -205
y Fo(')p -194 3836 14 3705 v -194 4188 a(&)5580 -205
y($)p 5580 3836 V 5580 4188 a(\045)p 159 4188 5085 14
v 159 -205 V 951 -18 3430 7 v 951 286 7 305 v 1009 177
a Fn(Sq\354)-6 b(lia)77 b(gia)h(t)-6 b(o)77 b(D\350ndro)f(Ap\354deixhc)
p 4374 286 V 951 293 3430 7 v 4377 362 73 318 v 1019
362 3430 73 v 0 735 a Fl(Sthn)58 b(prohgo\324menh)h(diaf\210neia,)f
(j\350loume)g(na)g(apode\320xoume)h(t)-5 b(o)57 b(st\354)-5
b(qo)430 1063 y Fk(?)39 b Fm(\000)96 b Fh(pr)5 b(edecessor)g
Fk(\()p Fh(pam;)29 b(bob)p Fk(\))p Fh(:)0 1392 y Fl(H)57
b(qr\240sh)h(t)-5 b(ou)57 b(kan\354)l(na)h Fc(pr1)h Fl(ap\354)f(thn)f
Fk(Prolog)i Fl(e\320)-10 b(nai)58 b(i)-5 b(sod\324namh)59
b(me)f(thn)f(qr\240sh)0 1633 y(t)-5 b(ou)57 b(kan\354)l(na)h(thc)g
(an\210lushc)h(sthn)f(\210rnhsh)g(t)-5 b(ou)57 b(up\354)h(ap\354deixh)h
(st\354)-5 b(qou)430 1961 y Fm(:)p Fh(pr)5 b(edecessor)g
Fk(\()p Fh(pam;)29 b(bob)p Fk(\))0 2290 y Fl(kai)57 b(thc)h(fr\210shc)h
Fk(Horn)f Fl(ap\354)f(t)-5 b(o)58 b(pr\354)-5 b(gramma)430
2618 y Fm(:)p Fh(par)5 b(ent)p Fk(\()p Fh(X)t(;)29 b(Y)37
b Fk(\))i Fm(_)f Fh(pr)5 b(edecessor)g Fk(\()p Fh(X)t(;)29
b(Y)35 b Fk(\))0 2947 y Fl(\270ste)57 b(telik\210)h(na)f(paraqje\320)h
(t)-5 b(o)58 b(lektik\354)430 3275 y Fm(:)p Fh(par)5
b(ent)p Fk(\()p Fh(pam;)29 b(bob)p Fk(\))0 3604 y Fl(pou)58
b(e\320)-10 b(nai)58 b(h)g(\210rnhsh)g(t)-5 b(ou)57 b(ep\354menou)i
(up\354)f(ap\354deixh)g(st\354)-5 b(qou)430 3932 y Fk(?)39
b Fm(\000)96 b Fh(par)5 b(ent)p Fk(\()p Fh(pam;)29 b(bob)p
Fk(\))p eop end
%%Page: 63 63
TeXDict begin @landscape 63 62 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-194 -205
y Fo(')p -194 3836 14 3705 v -194 4188 a(&)5580 -205
y($)p 5580 3836 V 5580 4188 a(\045)p 159 4188 5085 14
v 159 -205 V 951 -18 3430 7 v 951 286 7 305 v 1009 177
a Fn(Sq\354)-6 b(lia)77 b(gia)h(t)-6 b(o)77 b(D\350ndro)f(Ap\354deixhc)
p 4374 286 V 951 293 3430 7 v 4377 362 73 318 v 1019
362 3430 73 v 0 745 a Fl(St)-5 b(o)58 b(ep\354meno)g(b\240ma,)g(o)f
(st\354)-5 b(qoc)430 1077 y Fk(?)39 b Fm(\000)96 b Fh(par)5
b(ent)p Fk(\()p Fh(pam;)29 b(bob)p Fk(\))0 1409 y Fl(enopoie\320)-5
b(t)g(ai)59 b(me)f(t)-5 b(o)57 b(gego)l(n\354c)430 1740
y Fh(par)5 b(ent)p Fk(\()p Fh(pam;)29 b(bob)p Fk(\))0
2072 y Fl(t)-5 b(ou)57 b(pro)-5 b(gr\210mmat)g(oc)60
b(kai)d(h)h Fk(Prolog)g Fl(apant\210ei)g Fj(nai)h Fl(st)-5
b(o)57 b(arqik\354)g(er\270thma.)0 2383 y(Aut\354)g(t)-5
b(o)58 b(b\240ma)g(e\320)-10 b(nai)58 b(i)-5 b(sod\324namo)59
b(me)f(th)f(qr\240sh)g(an\210lushc)i(st)-5 b(o)57 b(arnhtik\354)0
2625 y(lektik\354)430 2957 y Fm(:)p Fh(par)5 b(ent)p
Fk(\()p Fh(pam;)29 b(bob)p Fk(\))0 3288 y Fl(pou)58 b(e\320)-10
b(nai)58 b(h)g(\210rnhsh)g(t)-5 b(ou)57 b(up\354)h(ap\354deixh)h
(st\354)-5 b(qou)57 b(kai)g(st)-5 b(o)57 b(jetik\354)g(lektik\354)430
3620 y Fh(par)5 b(ent)p Fk(\()p Fh(pam;)29 b(bob)p Fk(\))0
3952 y Fl(gia)57 b(na)h(ft\210soume)g(sthn)g Fj(ken\240)67
b(fr\210sh)58 b Fl(kai)f(t)-5 b(o)58 b(t\350loc)g(thc)f(ap\354deixhc.)p
eop end
%%Page: 64 64
TeXDict begin @landscape 64 63 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 951 1047 3430 7 v 951 1351 7 305 v 1009 1242 a
Fn(Sq\354)-6 b(lia)77 b(gia)h(t)-6 b(o)77 b(D\350ndro)f(Ap\354deixhc)p
4374 1351 V 951 1358 3430 7 v 4377 1427 73 318 v 1019
1427 3430 73 v 150 1841 a Fl('Etsi)57 b(me)h(b\210sh)g(thn)f(orj\354)l
(tht)-5 b(a)58 b(t)-5 b(ou)58 b(kan\354)l(na)g(thc)f(an\210lushc,)i
(bl\350poume)f(\354)l(ti)150 2085 y(o)f(st\354)-5 b(qoc)58
b Fh(pr)5 b(edecessor)g Fk(\()p Fh(pam;)29 b(bob)p Fk(\))55
b Fj(\350pet)-5 b(ai)66 b(lo)-5 b(gik\210)58 b Fl(ap\354)g(t)-5
b(o)57 b(dosm\350no)150 2329 y(pr\354)-5 b(gramma)59
b Fk(Prolog)f Fl(\354)l(t)-5 b(an)58 b(aut\354)f(jewrhje\320)h(san)g
(mia)g(b\210sh)g(gn\270shc)f(thc)150 2573 y(lo)-5 b(gik\240c)55
b(pr\270thc)i(t\210xhc)e(kai)h(h)f Fk(Prolog)j Fj(orj\210)e
Fl(d\320)-10 b(nei)56 b(thn)g(ap\210nthsh)g Fj(nai)g
Fl(st)-5 b(o)150 2817 y(er\270thma.)p eop end
%%Page: 65 65
TeXDict begin @landscape 65 64 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1116 134 3100 7 v 1116 438 7 305 v 1174 329 a
Fn(J\350mat)-6 b(a)78 b(El\350gqou)f(sthn)i Fd(Prolog)p
4208 438 V 1116 445 3100 7 v 4212 514 73 318 v 1185 514
3100 73 v 150 928 a Fl(Den)58 b(j\350same)g(t)-5 b(o)58
b(pr\354blhma)g(t)-5 b(ou)58 b(el\350gqou)f(\()p Fk(con)-5
b(trol)p Fl(\))57 b(pou)h(prok\324ptei)g(sthn)150 1172
y(lei)-5 b(t)g(ourg\320a)58 b(t)-5 b(ou)57 b(diermhn\350a)i(thc)f
Fk(Prolog)p Fl(:)288 1512 y Fm(\017)86 b Fl(Me)57 b(poi\210)h(seir\210)
g(dial\350goume)g(t)-5 b(o)l(n)58 b(st\354)-5 b(qo)57
b(pou)g(j\350loume)i(na)460 1756 y(apode\320xoume)g(\354)l(t)-5
b(an)58 b(\350qoume)f(peri)-5 b(ss\354)l(terouc)60 b(t)-5
b(ou)57 b(en\354c)h(st\354)-5 b(qouc?)288 2096 y Fm(\017)86
b Fl(Me)57 b(poi\210)h(seir\210)g(dial\350goume)g(t)-5
b(a)58 b(gego)l(n\354)l(t)-5 b(a)57 b(pou)h(enopoi)-5
b(o\324nt)g(ai)58 b(me)g(\350na)460 2340 y(up\354)g(ap\354deixh)g
(st\354)-5 b(qo)57 b(\354)l(t)-5 b(an)58 b(up\210rqoun)g(peri)-5
b(ss\354)l(tera)59 b(t)-5 b(ou)58 b(en\354c)460 2584
y(gego)l(n\354)l(t)-5 b(a?)76 b(\(omo\320wc)58 b(gia)f(kan\354)l(nec\))
150 3486 y Fj(')-22 b(Askhsh:)76 b Fl(Exhge\320)-5 b(ste)58
b(t)-5 b(o)57 b(d\350ndro)i(ap\354deixhc)g(t)-5 b(wn)58
b(ep\354menwn)g(diafanei\270n)150 3730 y(qrhsimopoi\270nt)-5
b(ac)59 b(an\210lush.)p eop end
%%Page: 66 66
TeXDict begin @landscape 66 65 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 218 341 4895 7 v 218 645 7 305 v 277 536 a Fn(D\350ndro)76
b(Ap\354deixhc)i(t)-6 b(ou)78 b Fb(?-)107 b(predecessor\(pam,ann\))p
5106 645 V 218 652 4895 7 v 5109 721 73 318 v 287 721
4895 73 v 150 3440 a @beginspecial 0 @llx 0 @lly 304
@urx 137 @ury 3040 @rwi @setspecial
%%BeginDocument: figure110.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: D:\Lessons\Ai_autumn2002\misc\tutorials\figure110.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 304 137
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 304 137
%AI3_TileBox: 0 0 304 137
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
  0.000 0.000 0.000 0.000 K
1 j
  1.8030 2.0434 m
  301.5826 2.0434 L
  301.5826 134.6244 L
  1.8030 134.6244 L
  1.8030 2.0434 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  83.8998 101.0885 m
  219.0050 101.0885 L
  219.0050 132.4608 L
  83.8998 132.4608 L
  83.8998 101.0885 L
F
U
u
  0.000 0.000 0.000 1.000 K
1 J
  83.8998 101.0885 m
  219.0050 101.0885 L
  219.0050 132.4608 L
  83.8998 132.4608 L
  83.8998 101.0885 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 100.2471 113.5893 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(predecessor\(pam, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  3.1252 24.8815 m
  137.8698 24.8815 L
  137.8698 56.3740 L
  3.1252 56.3740 L
  3.1252 24.8815 L
F
U
u
  0.000 0.000 0.000 1.000 K
  3.1252 24.8815 m
  137.8698 24.8815 L
  137.8698 56.3740 L
  3.1252 56.3740 L
  3.1252 24.8815 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 32.5743 37.6227 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(parent\(pam, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  120.0801 101.0885 m
  115.6327 96.6411 L
  118.6377 96.6411 L
  118.6377 56.3740 L
  121.6427 56.3740 L
  121.6427 96.6411 L
  124.6477 96.6411 L
  120.0801 101.0885 L
F
U
u
  0.000 0.000 0.000 1.000 K
  120.0801 101.0885 m
  115.6327 96.6411 L
  118.6377 96.6411 L
  118.6377 56.3740 L
  121.6427 56.3740 L
  121.6427 96.6411 L
  124.6477 96.6411 L
  120.0801 101.0885 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 54.0902 73.4424 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by rule\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.1836 73.4424 0 Tp
TP
/_Helvetica-Oblique 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(pr1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  165.0351 24.8815 m
  299.7796 24.8815 L
  299.7796 56.3740 L
  165.0351 56.3740 L
  165.0351 24.8815 L
F
U
u
  165.0351 24.8815 m
  299.7796 24.8815 L
  299.7796 56.3740 L
  165.0351 56.3740 L
  165.0351 24.8815 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 199.5326 43.6327 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(parent\(pam, Y\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.5125 31.6127 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(predecessor\(Y, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  182.8247 101.0885 m
  178.2571 96.6411 L
  181.2621 96.6411 L
  181.2621 56.3740 L
  184.2671 56.3740 L
  184.2671 96.6411 L
  187.2721 96.6411 L
  182.8247 101.0885 L
F
U
u
  0.000 0.000 0.000 1.000 K
  182.8247 101.0885 m
  178.2571 96.6411 L
  181.2621 96.6411 L
  181.2621 56.3740 L
  184.2671 56.3740 L
  184.2671 96.6411 L
  187.2721 96.6411 L
  182.8247 101.0885 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 202.2972 84.0200 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by rule\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 234.3907 84.0200 0 Tp
TP
/_Helvetica-Oblique 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(pr2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.5476 8.5342 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(no\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.3356 70.0768 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(MGU{X/pam, Z/ann}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.8831 43.3923 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial eop end
%%Page: 67 67
TeXDict begin @landscape 67 66 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 220 67 4891 7 v 220 371 7 305 v 279 262 a Fn(D\350ntro)76
b(Ap\354deixhc)j(t)-6 b(ou)77 b Fb(?-)107 b(predecessor\(pam,ann\))p
5104 371 V 220 378 4891 7 v 5108 447 73 318 v 289 447
4891 73 v 707 3881 a @beginspecial 0 @llx 0 @lly 360
@urx 292 @ury 1870 @rhi @setspecial
%%BeginDocument: figure111.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: D:\Lessons\Ai_autumn2002\misc\tutorials\figure111.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 360 292
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 360 292
%AI3_TileBox: 0 0 360 292
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
  0.000 0.000 0.000 0.000 K
1 j
  1.8030 2.6444 m
  357.7162 2.6444 L
  357.7162 289.2020 L
  1.8030 289.2020 L
  1.8030 2.6444 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 238.7179 160.2270 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by fact\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 270.8114 160.2270 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(parent\(pam, bob\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  84.0200 256.1469 m
  219.0050 256.1469 L
  219.0050 287.3990 L
  84.0200 287.3990 L
  84.0200 256.1469 L
F
U
u
  0.000 0.000 0.000 1.000 K
1 J
  84.0200 256.1469 m
  219.0050 256.1469 L
  219.0050 287.3990 L
  84.0200 287.3990 L
  84.0200 256.1469 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 100.2471 268.6477 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(predecessor\(pam, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  3.1252 179.5793 m
  137.8698 179.5793 L
  137.8698 211.3122 L
  3.1252 211.3122 L
  3.1252 179.5793 L
F
U
u
  0.000 0.000 0.000 1.000 K
  3.1252 179.5793 m
  137.8698 179.5793 L
  137.8698 211.3122 L
  3.1252 211.3122 L
  3.1252 179.5793 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 32.5743 192.5609 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(parent\(pam, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  120.0801 256.1469 m
  115.6327 251.5793 L
  118.5175 251.5793 L
  118.5175 211.3122 L
  121.6427 211.3122 L
  121.6427 251.5793 L
  124.6477 251.5793 L
  120.0801 256.1469 L
F
U
u
  0.000 0.000 0.000 1.000 K
  120.0801 256.1469 m
  115.6327 251.5793 L
  118.5175 251.5793 L
  118.5175 211.3122 L
  121.6427 211.3122 L
  121.6427 251.5793 L
  124.6477 251.5793 L
  120.0801 256.1469 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 53.9699 228.3806 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by rule\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.1836 228.3806 0 Tp
TP
/_Helvetica-Oblique 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(pr1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  165.0351 179.5793 m
  299.7796 179.5793 L
  299.7796 211.3122 L
  165.0351 211.3122 L
  165.0351 179.5793 L
F
U
u
  0.000 0.000 0.000 1.000 K
  165.0351 179.5793 m
  299.7796 179.5793 L
  299.7796 211.3122 L
  165.0351 211.3122 L
  165.0351 179.5793 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 199.5326 198.5710 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(parent\(pam, Y\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.6327 186.4307 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(predecessor\(Y, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  182.8247 256.1469 m
  178.6177 251.5793 L
  181.2621 251.5793 L
  181.2621 211.3122 L
  184.3873 211.3122 L
  184.3873 251.5793 L
  187.3923 251.5793 L
  182.8247 256.1469 L
F
U
u
  0.000 0.000 0.000 1.000 K
  182.8247 256.1469 m
  178.6177 251.5793 L
  181.2621 251.5793 L
  181.2621 211.3122 L
  184.3873 211.3122 L
  184.3873 251.5793 L
  187.3923 251.5793 L
  182.8247 256.1469 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 200.6144 238.8381 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by rule\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 232.8280 238.8381 0 Tp
TP
/_Helvetica-Oblique 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(pr2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.4274 163.1119 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(no\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  165.0351 103.4925 m
  299.7796 103.4925 L
  299.7796 134.7446 L
  165.0351 134.7446 L
  165.0351 103.4925 L
F
U
u
  0.000 0.000 0.000 1.000 K
  165.0351 103.4925 m
  299.7796 103.4925 L
  299.7796 134.7446 L
  165.0351 134.7446 L
  165.0351 103.4925 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 182.5843 115.9933 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(predecessor\(bob, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  232.3472 179.5793 m
  228.0200 175.1319 L
  230.9048 175.1319 L
  230.9048 134.7446 L
  233.7896 134.7446 L
  233.7896 175.1319 L
  236.7947 175.1319 L
  232.3472 179.5793 L
F
U
u
  0.000 0.000 0.000 1.000 K
  232.3472 179.5793 m
  228.0200 175.1319 L
  230.9048 175.1319 L
  230.9048 134.7446 L
  233.7896 134.7446 L
  233.7896 175.1319 L
  236.7947 175.1319 L
  232.3472 179.5793 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 238.4775 147.4858 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(MGU{X/bob}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  165.0351 26.9249 m
  299.7796 26.9249 L
  299.7796 58.5376 L
  165.0351 58.5376 L
  165.0351 26.9249 L
F
U
u
  0.000 0.000 0.000 1.000 K
  165.0351 26.9249 m
  299.7796 26.9249 L
  299.7796 58.5376 L
  165.0351 58.5376 L
  165.0351 26.9249 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 195.9265 39.6661 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(parent\(bob, ann\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  232.3472 103.4925 m
  228.0200 98.9249 L
  230.9048 98.9249 L
  230.9048 58.5376 L
  233.7896 58.5376 L
  233.7896 98.9249 L
  236.7947 98.9249 L
  232.3472 103.4925 L
F
U
u
  0.000 0.000 0.000 1.000 K
  232.3472 103.4925 m
  228.0200 98.9249 L
  230.9048 98.9249 L
  230.9048 58.5376 L
  233.7896 58.5376 L
  233.7896 98.9249 L
  236.7947 98.9249 L
  232.3472 103.4925 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 243.8865 83.6594 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(by rule\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.3406 83.6594 0 Tp
TP
/_Helvetica-Oblique 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(pr1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.2938 9.2554 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(yes\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.2855 70.1970 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(MGU{X/bob, Z/ann}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.0134 224.5342 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(MGU{X/pam, Z/ann}\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial eop end
%%Page: 68 68
TeXDict begin @landscape 68 67 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 362 522 4608 7 v 362 827 7 305 v 420 718 a Fn(Upo)-6
b(lo)g(gi)g(stik\240)77 b(Po)-6 b(luplok\354)h(tht)f(a)77
b(thc)i(An\210lushc)p 4962 827 V 362 834 4608 7 v 4966
902 73 318 v 431 902 4608 73 v 150 1317 a Fl(Sth)58 b(genik\240)f
(per\320pt)-5 b(wsh,)59 b(oi)e(apode\320xei)-5 b(c)59
b(me)f(qr\240sh)g(t)-5 b(ou)57 b(kan\354)l(na)h(thc)150
1560 y(an\210lushc)h(mporo\324n)f(na)g(megal\270noun)g
Fj(ekjetik\210)h Fl(s\324mfwna)f(me)g(t)-5 b(o)150 1804
y(parak\210t)g(w)58 b(je\270rhma)g(\(ak\354ma)g(kai)f(sthn)h
(aplo\324sterh)g(per\320pt)-5 b(wsh)59 b(thc)150 2048
y(pro)l(t)-5 b(asiak\240c)59 b(lo)-5 b(gik\240c\).)150
2366 y Fj(Je\270rhma)67 b(\()p Fi(Hak)-6 b(en)p Fj(,)66
b(1985\).)76 b Fl(Up\210rqei)58 b(mia)g(ako)-5 b(louj\320a)57
b(t)-5 b(aut)g(o)g(lo)g(gi\270n)150 2610 y Fh(p)237 2636
y Fg(1)314 2610 y Fh(;)29 b(p)478 2636 y Fg(2)554 2610
y Fh(;)g(p)718 2636 y Fg(3)795 2610 y Fh(;)g(:)g(:)g(:)55
b Fl(thc)j(pro)l(t)-5 b(asiak\240c)59 b(lo)-5 b(gik\240c)58
b(oi)f(opo\320ec,)h(\354)l(t)-5 b(an)58 b(met)-5 b(atrapo\324n)150
2854 y(se)58 b(morf\240)g Fk(CNF)p Fl(,)g(o)f(ari)m(jm\354c)i(sumb\354)
-5 b(lwn)58 b(kajen\354c)g Fm(:)p Fh(p)3766 2879 y Ff(n)3917
2854 y Fl(e\320)-10 b(nai)58 b Fh(O)5 b Fk(\()p Fh(n)4598
2791 y Fg(3)4676 2854 y Fk(\))p Fl(,)57 b(all\210)150
3097 y(h)g(mikr\354)l(terh)i(di\210yeush)f(an\210lushc)h(t)-5
b(ou)57 b(peri\350qei)i(t)-5 b(oul\210qi)g(st)g(o)l(n)57
b Fh(c)4488 3035 y Ff(n)150 3341 y Fl(s\324mbo)-5 b(la)58
b(\(gia)f(\350na)h(st)-5 b(ajer\354)58 b Fh(c)47 b(>)h
Fk(1)p Fl(\).)p eop end
%%Page: 69 69
TeXDict begin @landscape 69 68 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V -35 1132 5401 7 v -35 1436 7 305 v 24 1327 a
Fn(Efarm\354zo)-5 b(nt)f(ac)75 b(t)-6 b(o)h(n)77 b(Kan\354)-5
b(na)77 b(thc)h(An\210lushc)h(Apodo)-5 b(tik\210)p 5359
1436 V -35 1443 5401 7 v 5362 1512 73 318 v 34 1512 5401
73 v -150 1926 a Fl(Up\210rqoun)58 b(poik\320lec)g(strathgik\350c)g
(pou)g(mporo\324n)g(na)g(efarmost)-5 b(o\324n)59 b(gia)e(na)-150
2170 y(k\210noume)h(thn)g(an\210lush)g(pi)-5 b(o)58 b(apodo)l(tik\240)g
(sthn)f(pr\210xh:)78 b Fk(unit)56 b(preference,)f(set)i(of)-150
2414 y(supp)5 b(ort,)56 b(input)h(resolution,)f(subsumption)p
Fl(.)-150 2732 y(Lept)-5 b(om\350reiec)59 b(mpore\320)-5
b(te)59 b(na)f(bre\320)-5 b(te)58 b(st)-5 b(o)57 b(bibl\320)-5
b(o.)p eop end
%%Page: 70 70
TeXDict begin @landscape 70 69 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-494 -205
y Fo(')p -494 3836 14 3705 v -494 4188 a(&)5880 -205
y($)p 5880 3836 V 5880 4188 a(\045)p -141 4188 5685 14
v -141 -205 V 1467 -18 2398 7 v 1467 286 7 305 v 1525
177 a Fn(H)77 b(Ist)-6 b(or\320a)78 b(thc)g(Lo)-6 b(gik\240c)p
3857 286 V 1467 293 2398 7 v 3861 362 73 318 v 1536 362
2398 73 v -197 688 a Fl(450)58 b(p.Q.)207 b(St)-5 b(w\360k\240)57
b(kai)h(Megar\320)-5 b(tikh)216 b(pro)l(t)-5 b(asiak\240)58
b(lo)-5 b(gik\240,)57 b(p\320)-10 b(nakec)59 b(alhje\320ac,)639
981 y(sqo)-5 b(l\240)1464 b(sumperasm\354c)60 b(\(Kan\354)l(nac)e(t)-5
b(ou)57 b(J\350tei)-10 b(n\))-197 1274 y(322)58 b(p.Q.)207
b(Ari)-5 b(st)g(o)l(t\350lhc)1008 b(sullo)-5 b(gi)g(smo\320)2555
1566 y(\(kan\354)l(nec)58 b(sumperasmo\324,)h(posode\320ktec\))-197
1859 y(1847)492 b Fk(Bo)5 b(ole)1492 b Fl(pro)l(t)-5
b(asiak\240)58 b(lo)-5 b(gik\240)-197 2151 y(1879)492
b Fk(F)-14 b(rege)1511 b Fl(lo)-5 b(gik\240)57 b(pr\270thc)h(t\210xhc)
-197 2444 y(1910/13)234 b Fk(Whitehead/Russel)526 b(Principia)56
b(Mathematica)-197 2737 y Fl(1920)492 b Fk(Hilb)5 b(ert)1379
b Fl(\034Pr\354)-5 b(gramma\035)58 b(gia)f(thn)h(jemel\320wsh)g(t)-5
b(wn)2555 3029 y(Majhmatik\270n)58 b(\(dhmi)-5 b(ourg\320a)58
b(en\354c)g(tupiko\324,)2555 3322 y(axiwmatiko\324)g(sust\240mat)-5
b(oc)58 b(gia)f(\354)-5 b(la)58 b(t)-5 b(a)2555 3614
y(Majhmatik\210)58 b(\000)f(ap\354deixh)i(\354)l(ti)e(t)-5
b(o)57 b(s\324sthma)2555 3907 y(aut\354)g(e\320)-10 b(nai)59
b(sunep\350c,)f(pl\240rec)h(kai)f(apofas\320)-5 b(simo\))p
eop end
%%Page: 71 71
TeXDict begin @landscape 71 70 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-494 -180
y Fo(')p -494 3741 14 3585 v -494 4094 a(&)5880 -180
y($)p 5880 3741 V 5880 4094 a(\045)p -141 4094 5685 14
v -141 -180 V 1467 348 2398 7 v 1467 652 7 305 v 1525
543 a Fn(H)77 b(Ist)-6 b(or\320a)78 b(thc)g(Lo)-6 b(gik\240c)p
3857 652 V 1467 659 2398 7 v 3861 728 73 318 v 1536 728
2398 73 v -197 1131 a Fl(1921-22)208 b Fk(P)-5 b(ost/Wittgenstein)205
b Fl(apode\320xei)-5 b(c)59 b(me)f(p\320)-10 b(nakec)59
b(alhje\320ac)-197 1423 y(1930)437 b Fk(G\177)-86 b(odel)1156
b Fm(9)57 b Fl(pl\240rhc)i(m\350jodoc)f(sumperasmo\324)h(gia)e
(apode\320xei)-5 b(c)2182 1716 y(thc)58 b(lo)-5 b(gik\240c)57
b(pr\270thc)i(t\210xhc)-197 2008 y(1930)437 b Fk(Herbrand)884
b Fl(pl\240rhc)59 b(m\350jodoc)f(sumperasmo\324)h(gia)e(apode\320xei)-5
b(c)2182 2301 y(thc)58 b(lo)-5 b(gik\240c)57 b(pr\270thc)i(t\210xhc)f
(me)g(anagwg\240)2182 2594 y(se)f(pro)l(t)-5 b(asiak\240)59
b(lo)-5 b(gik\240)-197 2886 y(1931)437 b Fk(G\177)-86
b(odel)1156 b Fm(:9)57 b Fl(pl\240rhc)h(m\350jodoc)h(sumperasmo\324)g
(gia)e(lo)-5 b(gik\210)2182 3179 y(sust\240mat)g(a)58
b(pou)g(peri\350qoun)g(thn)g(arq\240)f(thc)2182 3471
y(epagwg\240c)g(\(p.q.,)g(ari)m(jmhtik\240\))p eop end
%%Page: 72 72
TeXDict begin @landscape 72 71 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-494 -180
y Fo(')p -494 3741 14 3585 v -494 4094 a(&)5880 -180
y($)p 5880 3741 V 5880 4094 a(\045)p -141 4094 5685 14
v -141 -180 V 1467 933 2398 7 v 1467 1237 7 305 v 1525
1128 a Fn(H)77 b(Ist)-6 b(or\320a)78 b(thc)g(Lo)-6 b(gik\240c)p
3857 1237 V 1467 1244 2398 7 v 3861 1313 73 318 v 1536
1313 2398 73 v -197 1716 a Fl(1936)207 b Fk(T)-14 b(uring/Ch)-5
b(urc)g(h)206 b Fl(Hmi-apofasi)-5 b(sim\354)l(tht)g(a)61
b(t)-5 b(ou)57 b(probl\240mat)-5 b(oc)1695 2008 y(egkur\354)l(tht)g(ac)
58 b(gia)g(t\324pouc)g(thc)g(lo)-5 b(gik\240c)57 b(pr\270thc)i
(t\210xhc)-197 2301 y(1960)207 b Fk(Da)-5 b(vis/Putnam)230
b Fl(apodo)l(tiko\320)58 b(alg\354ri)m(jmoi)g(me)g(qr\240sh)f
(an\210lushc)i(sthn)1695 2594 y(pro)l(t)-5 b(asiak\240)59
b(lo)-5 b(gik\240)-197 2886 y(1965)207 b Fk(Robinson)638
b Fl(h)58 b(m\350jodoc)g(thc)g(an\210lushc)h(gia)e(th)g(lo)-5
b(gik\240)57 b(pr\270thc)i(t\210xhc)p eop end
%%Page: 73 73
TeXDict begin @landscape 73 72 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V -69 768 5470 7 v -69 1072 7 305 v -11 963 a
Fn(Plhr\354)-5 b(tht)f(a)78 b(Sumperasmo\324)g(thc)g(Lo)-6
b(gik\240c)77 b(Pr\270thc)g(T\210xhc)p 5394 1072 V -69
1079 5470 7 v 5397 1148 73 318 v -1 1148 5470 73 v -150
1803 a Fj(Je\270rhma.)173 b Fl(\(Je\270rhma)58 b(Plhr\354)l(tht)-5
b(ac)58 b(t)-5 b(ou)58 b Fk(G\177)-86 b(odel)p Fl(,)56
b(1930\))-150 2047 y Fh(K)12 b(B)57 b Fm(j)-29 b Fk(=)48
b Fh(\036)56 b Fl(ann)j Fh(K)12 b(B)56 b Fm(`)48 b Fh(\036:)-150
2608 y Fl(H)57 b(sq\350sh)h(ap\354deixhc)h Fm(`)e Fl(mpore\320)i(na)f
(ori)-5 b(ste\320)58 b(me)g(di\210forouc)g(tr\354pouc.)78
b(Gia)-150 2852 y(par\210dei)-5 b(gma)59 b(t)-5 b(o)57
b(bibl\320)-5 b(o)58 b(t)-5 b(ou)58 b Fk(Enderton)e Fl(upoj\350tei)i
(th)g(qr\240sh)f(en\354c)h(\210peirou)g(sun\354)-5 b(lou)-150
3096 y(axiwm\210t)g(wn)58 b(kai)g(m\354)l(no)g(t)-5 b(o)l(n)57
b Fk(mo)5 b(dus-p)g(onens)56 b Fl(san)i(kan\354)l(na)g(sumperasmo\324.)
p eop end
%%Page: 74 74
TeXDict begin @landscape 74 73 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1274 890 2784 7 v 1274 1194 7 305 v 1332 1085
a Fn(Isq\324ei)78 b(h)g(Upo)-6 b(lo)g(gi)g(sim\354)h(tht)f(a?)p
4050 1194 V 1274 1201 2784 7 v 4054 1270 73 318 v 1342
1270 2784 73 v 150 1925 a Fj(Je\270rhma.)173 b Fl(\()p
Fk(T)-14 b(uring/Ch)-5 b(urc)g(h,)57 b(1936)p Fl(\))g(To)h(pr\354blhma)
h(thc)e(lo)-5 b(gik\240c)150 2169 y(k\210luyhc)58 b(\(i)-5
b(sod\324nama)59 b(thc)f(egkur\354)l(tht)-5 b(ac)58 b(\240)g(thc)f(mh)h
(ikanopoi)m(hsim\354)l(tht)-5 b(ac\))150 2412 y(gia)57
b(th)g(lo)-5 b(gik\240)58 b(pr\270thc)g(t\210xhc)g(e\320)-10
b(nai)59 b Fj(anadromik\210)69 b(ari)m(jm\240simo)150
2656 y Fi(\(recursiv)-6 b(ely)64 b(en)-6 b(umerable\))p
Fl(.)150 2974 y(Ti)58 b(shma\320)-10 b(nei)59 b(\354mwc)f
(anadromik\210)g(ari)m(jm\240simo?)p eop end
%%Page: 75 75
TeXDict begin @landscape 75 74 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1505 401 2322 7 v 1505 705 7 305 v 1563 596 a
Fn(Diai)-6 b(sjhtiko\320)78 b(Ori)-6 b(smo\320)p 3819
705 V 1505 712 2322 7 v 3823 780 73 318 v 1573 780 2322
73 v 150 1195 a Fl('Ena)56 b(pr\354blhma)g(ap\354fashc)h(\()p
Fk(decision)d(problem)p Fl(\))h Fh(P)79 b Fl(l\350get)-5
b(ai)55 b Fj(anadromik\354)150 1439 y Fi(\(recursiv)-6
b(e\))56 b Fl(\240)i Fj(apofas\320)-5 b(simo)67 b Fi(\(decidable\))57
b Fl(an)h(up\210rqei)g(\350nac)150 1682 y(alg\354ri)m(jmoc)g(t\350t)-5
b(oi)g(oc)58 b(\270ste,)f(me)h(e\320)-5 b(sodo)58 b Fh(x)p
Fl(,)g(par\210gei)g(\034nai\035)f(kai)g(termat\320zei)150
1926 y(\354)l(t)-5 b(an)58 b Fh(x)48 b Fm(2)g Fh(P)24
b Fl(,)56 b(kai)i(\034\354)-5 b(qi\035)57 b(kai)g(termat\320zei)h(\354)
l(t)-5 b(an)58 b Fh(x)49 b Fm(62)e Fh(P)24 b Fl(.)150
2488 y('Ena)58 b(pr\354blhma)g(ap\354fashc)h Fh(P)81
b Fl(l\350get)-5 b(ai)58 b Fj(anadromik\210)69 b(ari)m(jm\240simo)150
2732 y Fi(\(recursiv)-6 b(ely)64 b(en)-6 b(umerable\))57
b Fl(\240)h Fj(hmiapofas\320)-5 b(simo)150 2976 y Fi
(\(semi-decidable\))57 b Fl(an)h(up\210rqei)g(\350nac)g(alg\354ri)m
(jmoc)h(t\350t)-5 b(oi)g(oc)58 b(\270ste,)f(me)150 3219
y(e\320)-5 b(sodo)58 b Fh(x)p Fl(,)f(par\210gei)h(\034nai\035)g(kai)f
(termat\320zei)i(\354)l(t)-5 b(an)58 b Fh(x)48 b Fm(2)g
Fh(P)80 b Fl(all\210)58 b(p\350ftei)g(se)150 3463 y(\210peiro)g(br\354)
-5 b(gqo)57 b(\354)l(t)-5 b(an)58 b Fh(x)48 b Fm(62)g
Fh(P)24 b Fl(.)p eop end
%%Page: 76 76
TeXDict begin @landscape 76 75 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2151 490 1029 7 v 2151 794 7 305 v 2210 685 a
Fn(Ap\354deixh)p 3173 794 V 2151 801 1029 7 v 3176 870
73 318 v 2220 870 1029 73 v 150 1284 a Fl(Up\210rqoun)58
b(di\210forec)h(apode\320xei)-5 b(c)59 b(sth)f(bibli)-5
b(o)g(graf\320a)58 b(sqetik\210)f(me)h(thn)150 1528 y(hmiapofasi)-5
b(sim\354)l(tht)g(a)60 b(t)-5 b(ou)57 b(probl\240mat)-5
b(oc)59 b(thc)f(lo)-5 b(gik\240c)58 b(k\210luyhc)g(gia)f(th)150
1772 y(lo)-5 b(gik\240)57 b(pr\270thc)i(t\210xhc.)150
2090 y(Aut\354)e(pou)h(ax\320zei)g(na)g(parathr\240soume)h(e\320)-10
b(nai)59 b(\354)l(ti)e(qreiaz\354maste)h(el\210qi)-5
b(sth)150 2334 y(ap\354)58 b(thn)f(ekfrastik\240)h(ikan\354)l(tht)-5
b(a)58 b(thc)g(lo)-5 b(gik\240c)58 b(pr\270thc)g(t\210xhc)g(gia)g(na)
150 2578 y(ft\210soume)g(se)g(hmiapofasi)-5 b(sim\354)l(tht)g(a)60
b(p.q.,)c Fj(m\354)l(no)68 b(\350na)e(dimel\350c)150
2821 y(kathg\354rhma)h(kai)g(kaj\354)-5 b(lou)67 b(s\324mbo)-5
b(la)66 b(sunart\240sewn.)150 3139 y Fl(To)58 b(apo)l(t\350lesma)g
(aut\354)g(e\320)-10 b(nai)58 b(ap\354)g(\350na)g(\210rjro)f(t)-5
b(wn)58 b Fk(Kalmar)g(and)f(Suran)-5 b(yi)150 3383 y
Fl(st)g(o)57 b Fk(Journal)h(of)f(Sym)-5 b(b)5 b(olic)57
b(Logic,)f(V)-14 b(ol.)76 b(15,)57 b(1950,)h(pp.)76 b(161-173.)p
eop end
%%Page: 77 77
TeXDict begin @landscape 77 76 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 765 143 3802 7 v 765 447 7 305 v 823 338 a Fn(Je\270rhma)77
b(Mh-Plhr\354)-5 b(tht)f(ac)80 b(t)-6 b(ou)77 b Fd(G\177)-116
b(odel)p 4559 447 V 765 454 3802 7 v 4563 523 73 318
v 834 523 3802 73 v 150 1178 a Fj(Je\270rhma.)173 b Fl(\()p
Fk(G\177)-86 b(odel)p Fl(,)56 b(1930\))150 1422 y(Gia)h(\350na)h
(s\324no)-5 b(lo)58 b(alhj\270n)f(pro)l(t\210sewn)i Fh(A)e
Fl(thc)h(jewr\320ac)g(ari)m(jm\270n)h(kai)150 1665 y(sugkekrim\350na)f
(opoi)-5 b(od\240po)l(te)59 b(s\324no)-5 b(lo)57 b(ap\354)h
Fj(basik\210)67 b(axi\270mat)-5 b(a)58 b Fl(thc)150 1909
y(jewr\320ac)g(ari)m(jm\270n,)g Fj(up\210rqoun)68 b(\210llec)e
(alhje\320)-5 b(c)66 b(pro)l(t\210sei)-5 b(c)66 b(thc)150
2153 y(jewr\320ac)h(ari)m(jm\270n)g(pou)f(den)h(mporo\324n)h(na)e
(apodei)-5 b(qt)g(o\324n)67 b(ap\354)g(t)-5 b(o)150 2397
y Fh(A)p Fl(.)150 2959 y Fj(Shmantik\354)68 b(sump\350rasma:)76
b Fl(Opoi)-5 b(od\240po)l(te)59 b(majhmatik\354)f(s\324sthma)g(pou)150
3202 y(peri\350qei)g(thn)g(ari)m(jmhtik\240,)g(den)g(mpore\320)h(na)e
(e\320)-10 b(nai)59 b(pl\240rec.)150 3520 y(De\320)-5
b(te)58 b(thn)g(per\320lhyh)h(thc)f(eufuo\324c)g(ap\354deixhc)h(t)-5
b(ou)58 b Fk(G\177)-86 b(odel)56 b Fl(st)-5 b(o)58 b(bibl\320)-5
b(o)150 3764 y(AIMA!)p eop end
%%Page: 78 78
TeXDict begin @landscape 78 77 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 1411 67 2509 7 v 1411 371 7 305 v 1470 262 a Fn(Ne\270tera)77
b(Apo)-5 b(tel\350smat)f(a)p 3913 371 V 1411 378 2509
7 v 3917 447 73 318 v 1480 447 2509 73 v 150 1035 a Fj(Je\270rhma.)173
b Fl(\()p Fk(Herbrand)p Fl(,)57 b(1930\))150 1274 y(An)h(\350na)g
(s\324no)-5 b(lo)57 b(fr\210sewn)i Fk(\001)f Fl(e\320)-10
b(nai)58 b(mh)g(ikanopoi\240simo,)g(t\354)l(te)f(up\210rqei)h(\350na)
150 1514 y(peperasm\350no)i(upos\324no)-5 b(lo)58 b(thc)g(b\210shc)g
Fk(Herbrand)f Fl(t)-5 b(ou)57 b Fk(\001)h Fl(pou)g(e\320)-10
b(nai)58 b(mh)150 1754 y(ikanopoi\240simo.)150 2292 y
Fj(Je\270rhma.)173 b Fl(\()p Fk(Robinson,)56 b(1965)p
Fl(\))150 2532 y Fj(Orj\354)l(tht)-5 b(a)65 b(thc)h(An\210lushc.)76
b Fl(An)58 b(up\210rqei)g(di\210yeush)g(miac)h(fr\210shc)f
Fh(\036)150 2772 y Fl(ap\354)g(\350na)g(s\324no)-5 b(lo)57
b(fr\210sewn)i Fh(K)12 b(B)66 b Fl(qrhsimopoi\270nt)-5
b(ac)59 b(an\210lush,)f(t\354)l(te)150 3012 y Fh(K)12
b(B)57 b Fm(j)-29 b Fk(=)48 b Fh(\036)p Fl(.)150 3317
y Fj(Plhr\354)l(tht)-5 b(a)65 b(Di\210yeushc)i(thc)f(An\210lushc.)76
b Fl(An)58 b(\350na)g(s\324no)-5 b(lo)58 b(fr\210sewn)150
3557 y Fh(K)12 b(B)66 b Fl(e\320)-10 b(nai)59 b(mh)e(ikanopoi\240simo,)
i(t\354)l(te)e(up\210rqei)h(mia)g(ap\354deixh)g(thc)g(ken\240c)150
3797 y(fr\210shc)h(ap\354)f(thn)f Fh(K)12 b(B)66 b Fl(qrhsimopoi\270nt)
-5 b(ac)59 b(an\210lush.)p eop end
%%Page: 79 79
TeXDict begin @landscape 79 78 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 900 120 3532 7 v 900 424 7 305 v 958 315 a Fn(Ta)78
b(')-13 b(Oria)76 b(t)-6 b(wn)78 b(Mej\354dwn)f(Ap\354deixhc)p
4424 424 V 900 431 3532 7 v 4428 500 73 318 v 969 500
3532 73 v 150 914 a Fj(Er\270thsh:)f Fl(Pwc)58 b(mporo\324me)h(na)f
(qrhsimopoi\240soume)g(mia)g(diadikas\320a)150 1158 y(ap\354deixhc)h
(po\324)f(e\320)-10 b(nai)58 b(pl\240rhc)h(wc)f(proc)g(th)g
(di\210yeush)g(\(p.q.)76 b(thn)58 b(an\210lush\))150
1401 y(gia)f(na)h(apofas\320)-5 b(soume)59 b(an)f(mia)g(pr\354)l(t)-5
b(ash)58 b Fh(\036)f Fl(\350pet)-5 b(ai)58 b(lo)-5 b(gik\210)57
b(ap\354)h(\350na)150 1645 y(s\324no)-5 b(lo)58 b(pro)l(t\210sewn)g
Fh(K)12 b(B)d Fl(?)150 2207 y Fj(Ap\210nthsh:)76 b Fl(Mporo\324me)58
b(na)g(p\210roume)g(thn)g(\210rnhsh)g(thc)g Fh(\036)p
Fl(,)f(na)h(thn)150 2451 y(prosj\350soume)h(sthn)e Fh(K)12
b(B)67 b Fl(kai)57 b(na)h(qrhsimopoi\240soume)g(thn)g(apodeiktik\240)
150 2695 y(diadikas\320a.)77 b(All\210)58 b(de)g(ja)f(x\350roume)i(an)e
(i)-5 b(sq\324ei)58 b Fh(K)12 b(B)57 b Fm(j)-29 b Fk(=)47
b Fh(\036)57 b Fl(m\350qri)h(h)g(m\350jodoc)150 2939
y(na)g(brei)g(mia)g(ant\320fash)g(kai)f(na)h(epi)-5 b(str\350yei.)150
3256 y(')-10 b(Oso)57 b(h)h(m\350jodoc)g(den)g(\350qei)g(epi)-5
b(str\350yei,)59 b(den)f(mporo\324me)g(na)g(x\350roume)h(an)f(h)150
3500 y(ap\354deixh)h(\350qei)e(p\350sei)h(se)g(\210peiro)g(br\354)-5
b(gqo)57 b(\240)g(\354)l(ti)h(h)f(ap\354deixh)i(pr\354kei)-5
b(t)g(ai)58 b(na)150 3744 y(bgei)f(ap\354)h(sti)-5 b(gm\240)58
b(se)f(sti)-5 b(gm\240!)p eop end
%%Page: 80 80
TeXDict begin @landscape 80 79 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 1689 145 1954 7 v 1689 449 7 305 v 1747 340
a Fn(Merik\210)78 b(Kal\210)g(N\350a)p 3635 449 V 1689
456 1954 7 v 3639 524 73 318 v 1758 524 1954 73 v -150
939 a Fl(Up\210rqoun)58 b(arket\210)g(upos\324no)-5 b(la)58
b(thc)g(lo)-5 b(gik\240c)58 b(pr\270thc)g(t\210xhc)g(pou)g(e\320)-10
b(nai)-150 1183 y(apofas\320)-5 b(sima:)-12 1523 y Fm(\017)86
b Fl(H)57 b(mo)l(nadia\320a)i(lo)-5 b(gik\240)57 b(\()p
Fk(monadic)g(logic)p Fl(\))g(\(t)-5 b(o)57 b(upos\324no)-5
b(lo)58 b(thc)g(lo)-5 b(gik\240c)58 b(pr\270thc)160 1767
y(t\210xhc)g(st)-5 b(o)57 b(opo\320)-5 b(o)58 b(den)g(\350qoume)g
(s\324mbo)-5 b(la)58 b(sunart\240sewn)g(kai)g(\350qoume)f(m\354)l(no)
160 2010 y(mo)l(nadia\320a)i(kathgor\240mat)-5 b(a\).)-12
2350 y Fm(\017)86 b Fl(H)57 b Fk(Datalog)p Fl(.)-12 2691
y Fm(\017)86 b Fl(K\210poiec)58 b(lo)-5 b(gik\350c)58
b(peri)-5 b(graf\270n)59 b(\()p Fk(description)c(logics)p
Fl(\))i(sti)-5 b(c)58 b(opo\320ec)g(bas\320zo)l(nt)-5
b(ai)160 2934 y(oi)57 b(mo)l(nt\350rnec)i(gl\270ssec)f(o)l(nt)-5
b(o)g(lo)g(gi\270n)58 b(\354pwc)g(h)f Fk(O)-5 b(WL)57
b(2)p Fl(.)77 b(De\320)-5 b(te)58 b(thn)g(i)-5 b(st)g(osel\320da)160
3178 y Fc(http://www.w3.org)q(/TR)q(/2)q(009)q(/R)q(EC-)10
b(owl)q(2-)f(ov)q(er)q(vie)q(w-)h(2009)q(10)q(27/)q Fk(.)-150
3518 y Fl(Po)-5 b(ll\210)58 b(praktik\210)g(probl\240mat)-5
b(a)59 b(mporo\324n)f(na)g(kwdikopoi)m(hjo\324n)g(me)g(aut\210)f(t)-5
b(a)-150 3762 y(upos\324no)g(la!)p eop end
%%Page: 81 81
TeXDict begin @landscape 81 80 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 890 120 3551 7 v 890 424 7 305 v 949 315 a Fn(Pr\210kt)-6
b(orec)76 b(Basi)-6 b(sm\350noi)78 b(sth)g(Gn\270sh)p
4434 424 V 890 431 3551 7 v 4437 500 73 318 v 959 500
3551 73 v 150 914 a Fi(function)57 b Fa(KB-A)-5 b(gent)p
Fk(\()p Fh(per)5 b(cept)p Fk(\))56 b Fi(returns)g Fk(an)h
Fh(action)372 1158 y Fi(static)h Fh(K)12 b(B)d Fk(,)57
b(a)h(kno)-5 b(wledge-base)1040 1401 y Fh(t)p Fk(,)57
b(a)h(coun)-5 b(ter,)56 b(initially)g(0,)h(indicating)f(time)372
1719 y Fa(Tell)p Fk(\()p Fh(K)12 b(B)d(;)p Fa(Make-Per)l(cept-Sentence)
p Fk(\()p Fh(per)c(cept;)29 b(t)p Fk(\)\))372 1963 y
Fh(action)49 b Fm( )58 b Fa(Ask)p Fk(\()p Fh(K)12 b(B)d(;)p
Fa(Make-A)-5 b(ction-Quer)-11 b(y)p Fk(\()p Fh(t)p Fk(\)\))372
2207 y Fa(Tell)p Fk(\()p Fh(K)12 b(B)d(;)p Fa(Make-A)-5
b(ction-Sentence)p Fk(\()p Fh(action;)29 b(t)p Fk(\)\))372
2451 y Fh(t)48 b Fm( )g Fh(t)39 b Fk(+)f(1)372 2695 y
Fi(return)57 b Fh(action)150 3256 y Fl(Pwc)h(mporo\324me)h
Fj(e\324ko)-5 b(la)p Fl(,)57 b(qrhsimopoi\270nt)-5 b(ac)59
b(t)-5 b(ouc)58 b(mhqani)-5 b(smo\324c)150 3500 y(sumperasmo\324)59
b(thc)f(lo)-5 b(gik\240c)58 b(pr\270thc)g(t\210xhc)g(pou)g
(parousi\210same,)h(na)150 3744 y(ulopoi\240soume)f(pr\210kt)-5
b(orec)59 b(basi)-5 b(sm\350nouc)59 b(sth)f(gn\270sh?)p
eop end
%%Page: 82 82
TeXDict begin @landscape 82 81 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 874 370 3582 7 v 874 674 7 305 v 933 565 a Fn(Sust\240mat)-6
b(a)79 b(Basi)-6 b(sm\350na)78 b(sth)g(Lo)-6 b(gik\240)p
4450 674 V 874 681 3582 7 v 4453 750 73 318 v 943 750
3582 73 v -12 1187 a Fm(\017)86 b Fl(Gl\270ssec)57 b
Fj(lo)-5 b(giko\324)68 b(pro)-5 b(grammati)g(smo\324)67
b Fi(\(logic)f(programming\))56 b Fl(p.q.)160 1430 y
Fk(Prolog)p Fl(.)160 1711 y(H)h Fk(Prolog)h Fl(anapt\324qjhke)g(t)-5
b(o)58 b(1972)f(ap\354)h(t)-5 b(o)l(n)58 b Fk(Alain)f(Colmerauer)h
Fl(kai)f(bas\320zet)-5 b(ai)160 1955 y(sthn)58 b(m\350jodo)f(t)-5
b(ou)58 b Fk(bac)-5 b(kw)g(ard)57 b(c)-5 b(haning)p Fl(.)76
b(H)57 b(filosof\320a)h(thc)g Fk(Prolog)g Fl(\(s\324mfwna)160
2199 y(me)g(t)-5 b(o)l(n)58 b Fk(Ko)-5 b(w)g(alski)p
Fl(,)57 b(t)-5 b(o)l(n)58 b(meg\210lo)g(jemeliwt\240)f(t)-5
b(ou)58 b(lo)-5 b(giko\324)57 b(pro)-5 b(grammati)g(smo\324\))160
2443 y(e\320)-10 b(nai:)401 2735 y(Alg\354ri)m(jmoc)58
b(=)f(Lo)-5 b(gik\240)57 b(+)g('Elegqoc)160 3027 y(O)g(lo)-5
b(gik\354c)58 b(pro)-5 b(grammati)g(sm\354c)60 b(se)d
Fk(Prolog)h Fl(apo)l(t\350lese)h(th)e(b\210sh)h(gia)f(perai)-5
b(t\350rw)160 3271 y(\350reuna)58 b(kai)g(an\210ptuxh)g(st)-5
b(o)58 b(lo)-5 b(gik\354)56 b(pro)-5 b(grammati)g(sm\354)60
b(sti)-5 b(c)58 b(dekaet\320ec)h(t)-5 b(ou)57 b(70)160
3514 y(kai)g(t)-5 b(ou)58 b(80.)p eop end
%%Page: 83 83
TeXDict begin @landscape 83 82 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 874 256 3582 7 v 874 561 7 305 v 933 452 a Fn(Sust\240mat)-6
b(a)79 b(Basi)-6 b(sm\350na)78 b(sth)g(Lo)-6 b(gik\240)p
4450 561 V 874 568 3582 7 v 4453 636 73 318 v 943 636
3582 73 v -12 1073 a Fm(\017)86 b Fl(Gl\270ssec)57 b
Fj(lo)-5 b(giko\324)68 b(pro)-5 b(grammati)g(smo\324)67
b Fi(\(logic)f(programming\))56 b Fl(p.q.)160 1317 y
Fk(Prolog)p Fl(.)160 1598 y(O)h(lo)-5 b(gik\354c)58 b(pro)-5
b(grammati)g(sm\354c)60 b(kai)d(oi)g(proekt\210sei)-5
b(c)59 b(t)-5 b(ou)58 b(exako)-5 b(loujo\324n)58 b(na)160
1841 y(e\320)-10 b(nai)58 b(qr\240simec)h(kai)e(s\240mera)h(sthn)g
(\350reuna)g(st)-5 b(o)58 b(Shmasi)-5 b(o)g(lo)g(gik\354)58
b(Ist\354,)f(sti)-5 b(c)160 2085 y(B\210sei)g(c)58 b(Dedom\350nwn,)h
(sti)-5 b(c)58 b(Gl\270ssec)g(Pro)-5 b(grammati)g(smo\324)59
b(klp.)160 2366 y(Anaf\350roume)g(ep\320)f(th)f(eukair\320a)h(t)-5
b(o)58 b Fj(lo)-5 b(gik\354)67 b(pro)-5 b(grammati)g(sm\354)67
b(me)160 2610 y(peri)-5 b(ori)g(smo\324c)68 b Fi(\(constrain)-6
b(t)66 b(logic)g(programming,)f(CLP\))58 b Fl(pou)g(enopoie\320)160
2854 y(t)-5 b(o)l(n)58 b(klassik\354)f(lo)-5 b(gik\354)57
b(pro)-5 b(grammati)g(sm\354)59 b(me)f(t)-5 b(a)58 b(probl\240mat)-5
b(a)59 b(ikanopo\320)m(hshc)160 3097 y(peri)-5 b(ori)g(sm\270n)59
b Fk(CSP)p Fl(.)f(Ta)f(sust\240mat)-5 b(a)59 b Fk(CLP)e
Fl(\350qoun)h(qrhsimopoi)m(hje\320)g(me)g(epi)-5 b(tuq\320a)160
3341 y(se)57 b(po)-5 b(ll\350c)59 b(efarmo)-5 b(g\350c)59
b(sunduastik\240c)g(belti)-5 b(st)g(opo\320)m(hshc)59
b(\(p.q.)160 3585 y(qro)l(nopro)-5 b(grammati)g(smo\324,)59
b(sqed\320ashc)g(pl\210nwn)f(ktl.\))p eop end
%%Page: 84 84
TeXDict begin @landscape 84 83 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 874 644 3582 7 v 874 948 7 305 v 933 839 a Fn(Sust\240mat)-6
b(a)79 b(Basi)-6 b(sm\350na)78 b(sth)g(Lo)-6 b(gik\240)p
4450 948 V 874 955 3582 7 v 4453 1024 73 318 v 943 1024
3582 73 v -12 1460 a Fm(\017)86 b Fj(Sust\240mat)-5 b(a)65
b(paragwg\240c)h(\()p Fi(pro)6 b(duction)65 b(systems)p
Fj(\))57 b Fl(pou)h(bas\320zo)l(nt)-5 b(ai)160 1704 y(sthn)58
b(m\350jodo)f Fk(forw)-5 b(ard-c)g(haining)58 b Fl(\(\354pou)f(t)-5
b(o)58 b(sump\350rasma)h(en\354c)160 1948 y(kan\354)l(na/paragwg\240c)f
(e\320)-10 b(nai)59 b(mia)f(en\350rgeia)g(pou)g(pr\350pei)g(na)g
(ekteleste\320\).)160 2229 y(Ta)g(sust\240mat)-5 b(a)58
b(paragwg\240c)g(\350qoun)f(qrhsimopoi)m(hje\320)i(arket\210)e(se)160
2472 y(prohgo\324menec)i(efarmof\350c)h(thc)d(Teqnht\240)h
(Nohmos\324nh)g(\(idia\320)-5 b(tera)59 b(se)e Fk(exp)5
b(ert)160 2716 y(systems)57 b Fl(pou)h(bas\320zo)l(nt)-5
b(ai)58 b(se)g(kan\354)l(nec\).)160 2997 y(Up\210rqoun)g(di\210fora)g
(ulopopoi)m(hm\350na)h(sust\240mat)-5 b(a)59 b(paragwg\240c)e(\354pwc)h
(t)-5 b(o)160 3241 y Fk(OPS-5)58 b Fl(kai)f(t)-5 b(o)57
b Fk(CLIPS)p Fl(.)p eop end
%%Page: 85 85
TeXDict begin @landscape 85 84 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-344 -180
y Fo(')p -344 3741 14 3585 v -344 4094 a(&)5730 -180
y($)p 5730 3741 V 5730 4094 a(\045)p 9 4094 5385 14 v
9 -180 V 874 604 3582 7 v 874 908 7 305 v 933 799 a Fn(Sust\240mat)-6
b(a)79 b(Basi)-6 b(sm\350na)78 b(sth)g(Lo)-6 b(gik\240)p
4450 908 V 874 915 3582 7 v 4453 984 73 318 v 943 984
3582 73 v -12 1420 a Fm(\017)86 b Fl(Ta)58 b(sust\240mat)-5
b(a)58 b Fj(ap\354deixhc)68 b(jewrhm\210t)-5 b(wn)66
b Fi(\(theorem)f(pro)-6 b(v)g(ers\))57 b Fl(e\320)-10
b(nai)58 b(pi)-5 b(o)160 1664 y(i)g(squr\210)58 b(ergale\320a)f(ap\354)
h(thn)g Fk(Prolog)g Fl(afo\324)g(mporo\324n)g(na)g(k\210noun)g
(apode\320xei)-5 b(c)59 b(me)160 1908 y(opoi)-5 b(ousd\240po)l(te)59
b(t\324pouc)f(thc)g(lo)-5 b(gik\240c)57 b(pr\270thc)i(t\210xhc.)160
2189 y Fj(Gnwst\210)66 b(sust\240mat)-5 b(a:)75 b Fk(OTTER,)58
b(PTTP)-14 b(,)58 b(Pro)-5 b(v)g(er9)58 b Fl(klp.)160
2469 y(H)f(qr\240sh)h(t)-5 b(wn)57 b(susthm\210t)-5 b(wn)59
b(ap\354deixhc)g(jewrhm\210t)-5 b(wn)58 b(\350qei)f(odhg\240sei)h(se)
160 2713 y(k\210poiec)g(peript\270sei)-5 b(c)59 b Fj(n\350a)67
b(majhmatik\210)g(apo)l(tel\350smat)-5 b(a)p Fl(.)160
2994 y(Ep\320)g(shc)59 b(t\350t)-5 b(oia)57 b(sust\240mat)-5
b(a)58 b(\350qoun)g(qrhsimopoi)m(hje\320)g(kai)g(se)f(\210llec)h
(efarmo)-5 b(g\350c)160 3238 y(p.q.,)57 b(sthn)g(epal\240jeush)i(kai)e
(th)h(s\324njesh)g(susthm\210t)-5 b(wn)58 b(lo)-5 b(gi)g(smiko\324)58
b(\240)f(uliko\324.)p eop end
%%Page: 86 86
TeXDict begin @landscape 86 85 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2227 958 877 7 v 2227 1262 7 305 v 2286 1153 a
Fn(Mel\350th)p 3097 1262 V 2227 1269 877 7 v 3100 1338
73 318 v 2296 1338 877 73 v 288 1775 a Fm(\017)86 b Fl(AIMA,)57
b(Kef\210lai)-5 b(o)58 b(9.)288 2115 y Fm(\017)86 b Fk(M.)57
b(Genesereth)e(and)i(N.)g(Nilsson.)76 b(\\Logical)57
b(F)-14 b(oundations)56 b(of)460 2359 y(Arti\014cial)h(In)-5
b(telligence")p Fl(,)54 b(Kef\210lai)-5 b(o)58 b(4.)460
2639 y(Aut\354)f(t)-5 b(o)58 b(bibl\320)-5 b(o)57 b(\350qei)h(mia)f(pi)
-5 b(o)58 b(lept)-5 b(omer\240)59 b(kai)f(tupik\240)f(antimet\270pi)-5
b(sh)460 2883 y(t)g(wn)57 b(jem\210t)-5 b(wn)59 b(pou)e
(parousi\210same.)p eop end
%%Page: 87 87
TeXDict begin @landscape 87 86 bop -240 -281 a Fp(Teqnht\240)55
b(Nohmos\324nh)3283 b(M.)53 b(Koumpar\210khc)-44 -120
y Fo(')p -44 3681 14 3465 v -44 4034 a(&)5430 -120 y($)p
5430 3681 V 5430 4034 a(\045)p 309 4034 4785 14 v 309
-120 V 2227 574 877 7 v 2227 878 7 305 v 2286 769 a Fn(Mel\350th)p
3097 878 V 2227 885 877 7 v 3100 954 73 318 v 2296 954
877 73 v 288 1390 a Fm(\017)86 b Fk(Donald)56 b(MacKenzie.)74
b(Mec)-5 b(hanizing)55 b(Pro)5 b(of:)76 b(Computing,)57
b(Risk)g(and)460 1634 y(T)-14 b(rust.)76 b(MIT)58 b(Press,)f(2001.)460
1915 y Fl(Mia)g(i)-5 b(st)g(orik\240)58 b(kai)f(koi)-10
b(nwni)-5 b(o)g(lo)g(gik\240)58 b(mel\350th)g(t)-5 b(ou)58
b(probl\240mat)-5 b(oc)59 b(thc)460 2159 y(aut)-5 b(omat)g(opoi)m
(hm\350nhc)60 b(ap\354deixhc)f(jewrhm\210t)-5 b(wn.)77
b(Diab\210ste)58 b(t)-5 b(o)58 b(an)460 2403 y(\350qete)f(qr\354)l(no!)
288 2743 y Fm(\017)86 b Fl(A.)57 b(Doxi\210dhc,)i(Q.)e(Papadhmhtr\320)
-5 b(ou,)59 b(A.)f(Papad\210t)-5 b(oc)59 b(kai)e Fk(A.)g(Di)460
2987 y(Donna.)75 b(Logicomix.)h Fl(Ekd\354sei)-5 b(c)58
b('Ikaroc)g(2008.)460 3268 y(H)f(i)-5 b(st)g(or\320a)58
b(thc)g(lo)-5 b(gik\240c)58 b(se)f(k\354mix.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
